Starting experiment 21_yeast_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.172
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20902612808196822;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.17064893509951237;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.12926053859387232;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17698981268902;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15077763563714724;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19497695163155254;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.1513060534722366;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10466245759507001;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13862390331928595;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.23999227853731395;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.15474456356794952;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.05262877675877436;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.19897481628671262;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17183717239517;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03945597920141165;  // std dev = 4.846, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015363788150280408;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025515861904238615;  // std dev = 3.110, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2862724766351423;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.10004957470851225;  // std dev = 4.566, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021336589090488935;  // std dev = 4.738, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.307', 'seconds']
Parameter learned model CLL:-0.367218 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.603, 37, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [3.211, 33, 15], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.746, 47, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.144, 29, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.636, 39, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.038, 24, 15]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.568, 35, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.179, 31, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.529, 33, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 6, 0], 'false,false,false,false': [3.013, 23, 15]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.695, 43, 20], 'false,false,true,true': [0.0, 14, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.895, 19, 15]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.846, 73, 35]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.746, 47, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.11, 33, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.49e-08, 15, 0], 'false,false,false,false': [4.566, 54, 35]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.738, 74, 35]}]
{'': [0.22776238842720795, 0.21484374999999947], 'true': [nan, 0.22776238842720795], 'true,false': [nan, 0.22776238842720795], 'false': [nan, 0.21484374999999947], 'false,false': [0.21484374999999947, nan]}
{'': [0.20940075740699515, 0.22469008264462767], 'false': [nan, 0.22469008264462767], 'false,false': [nan, 0.22469008264462767], 'false,false,false': [nan, 0.22469008264462767]}
{'': [nan, 0.22956099452966994], 'false': [nan, 0.22956099452966994], 'false,false': [0.22407354208560795, 0.23668639053254475], 'false,false,false': [nan, 0.23668639053254475], 'false,false,true': [nan, 0.22407354208560795]}
{'': [nan, 0.2266382842531204], 'false': [nan, 0.22663828425312046], 'false,false': [0.23140495867768548, 0.21975425330812892], 'false,false,false': [nan, 0.21975425330812892]}
{'': [nan, 0.23065336340180345], 'false': [0.23495906016375903, 0.22469008264462847], 'false,true': [nan, 0.23495906016375903], 'false,true,false': [nan, 0.23495906016375903], 'false,false': [nan, 0.22469008264462847], 'false,false,false': [0.0, 0.238919667590028]}
{'': [nan, 0.21081110683651144], 'false': [0.2166792642983116, 0.20303978728679362], 'false,false': [-2.3790493384824782e-17, 0.24653979238754348], 'false,false,false': [nan, 0.24653979238754348], 'false,false,true': [-2.3790493384824782e-17, nan]}
{'': [nan, 0.21747714396274276], 'false': [nan, 0.21747714396274276], 'false,false': [nan, 0.2174771439627428], 'false,false,false': [nan, 0.21747714396274276]}
{'': [0.20940075740699507, 0.20156431242051487], 'true': [nan, 0.20940075740699507], 'true,false': [nan, 0.20940075740699507], 'true,false,false': [nan, 0.20940075740699501], 'false': [nan, 0.20156431242051487], 'false,false': [nan, 0.20156431242051487], 'false,false,false': [nan, 0.20156431242051487]}
{'': [nan, 0.2188907923120952], 'false': [nan, 0.21889079231209432], 'false,false': [nan, 0.2188907923120952], 'false,false,false': [1.4802973661668754e-17, 0.2342568170515914]}
{'': [nan, 0.20597992022753617], 'false': [nan, 0.20597992022753567], 'false,false': [nan, 0.20597992022753567], 'false,false,false': [nan, 0.20597992022753617]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 7.128
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.14185106490048768;  // std dev = 5.37e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( ta(D, A, E) )
%   | | | then return 0.5443356231566908;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.8146197929547555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11461979295475547;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return 0.4360813174799924;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.776005925175819;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.12544463852839155;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then return 0.6468124224328232;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(E, G, H), publication(I, G) )
%   | | | then return 0.5614698846678178;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.42965688968699556;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.5245126494478535;  // std dev = 0.813, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.23171509655533604;  // std dev = 2.522, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   else return -0.11231637819360639;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.424644593532648;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5334897474172569;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.4268083118029511;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2329794785944509;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | then return -0.05024845183010834;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(M, A), publication(N, B) )
%   | | | then return 0.13186149366429317;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3408852701726563;  // std dev = 1.905, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else return -0.10159632948783634;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), professor(B) )
%   | then if ( publication(D, A), student(A) )
%   | | then return 0.36467205768002187;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.1513027010366911;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15439653286569505;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( student(B) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.025542970975113842;  // std dev = 0.407, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( professor(B) )
%   | | then if ( publication(H, B), tempadvisedby(I, B) )
%   | | | then return 0.18411633139530198;  // std dev = 1.271, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.44697476956018223;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.3179629261927228;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18916969025820152;  // std dev = 0.887, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.0309301272709253;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.18826295208960497;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.0857642220855975;  // std dev = 0.023, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.08518475138839683;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.0018290624409363538;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25759782464535835;  // std dev = 1.204, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return -0.08518475138839683;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.36925947792992125;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( inphase(A, E), inphase(C, E) )
%   | | | then return -0.3664907547237696;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11969593706776627;  // std dev = 1.678, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | else if ( publication(F, A) )
%   | | then return 0.37446997657234277;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1738524903714578;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07895183277517275;  // std dev = 0.009, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.2157246463851384;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2940453955830711;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(C, F), tempadvisedby(F, G) )
%   | | | then return 0.1577119060990449;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3543359978867008;  // std dev = 0.309, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.2942652281595222;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.10303789999720159;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.23536635449933963;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07350001371799819;  // std dev = 0.019, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06951907437255943;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( professor(B) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.1814051829464307;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.0015430906801547884;  // std dev = 1.392, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.15779451283686577;  // std dev = 1.325, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.068378880103694;  // std dev = 0.000104, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then if ( student(A), publication(C, B) )
%   | then return 0.15609733272023232;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.14626017094788873;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B), student(A) )
%   | | | then return -0.3829983924273217;  // std dev = 0.434, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10801802719199279;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | then return -0.3603902872175135;  // std dev = 0.481, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( publication(J, B) )
%   | | then if ( student(A), tempadvisedby(K, B) )
%   | | | then return 0.04263117234907554;  // std dev = 0.963, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.070495365682268;  // std dev = 1.200, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( professor(B) )
%   | | | then return -0.14648411851582716;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.06413446551687879;  // std dev = 0.000223, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.422', 'seconds']
Refined model CLL: -0.220933


******************************************
Best model found
******************************************
Results 

CLL : -0.228737 

AUC ROC : 0.952389 

AUC PR : 0.348861 

Precision : 0.202941 

Recall : 0.884615 

F1 : 0.330144 

Total Learning Time : 7.128 

Total Inference Time : 1.4838383197784424 

Total revision time: 11.07238154411316
Best scored revision CLL: -0.220933


Results 

CLL : -0.228737 

AUC ROC : 0.952389 

AUC PR : 0.348861 

Precision : 0.202941 

Recall : 0.884615 

F1 : 0.330144 

Total Learning Time : 11.198571252822877 

Total Inference Time : 1.4838383197784424 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.935
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14703782398840126;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.1281798840811021;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17201894921731714;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14624161819948509;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1638664742670974;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.07535226847066287;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3059530945926579;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11137109738062405;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.291471543854367;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17519512281229957;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.1494188719052618;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.23510265534803518;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10857534769526112;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01682113153863695;  // std dev = 3.717, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10748613751223476;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008731124927560499;  // std dev = 2.091, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2853469917938814;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06878166532333882;  // std dev = 3.527, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035866263665016225;  // std dev = 3.547, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.570', 'seconds']
Parameter learned model CLL:-0.409529 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.04, 32, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [2.029, 10, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.04, 32, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.962, 27, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.067, 34, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.797, 6, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.962, 27, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-09, 5, 0], 'false,false,false,false': [1.932, 8, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [2.834, 21, 13], 'false,false,true,true': [0.0, 3, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.717, 46, 20]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.859, 22, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.091, 13, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.49e-08, 7, 0], 'false,false,false,false': [3.527, 33, 20]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.547, 38, 20]}]
{'': [0.20543209876543156, 0.24221453287197234], 'false': [nan, 0.24221453287197234], 'false,false': [0.24221453287197234, nan], 'true': [nan, 0.20543209876543156], 'true,false': [nan, 0.20543209876543156]}
{'': [0.2054320987654321, 0.2274999999999998], 'false': [nan, 0.2274999999999998], 'false,false': [nan, 0.2274999999999998], 'false,false,false': [nan, 0.2274999999999998]}
{'': [nan, 0.22372972946918304], 'false': [nan, 0.22372972946918304], 'false,false': [0.21937500000000024, 0.23268698060941825], 'false,false,false': [nan, 0.23268698060941825], 'false,false,true': [nan, 0.21937500000000024]}
{'': [nan, 0.21960901715307396], 'false': [nan, 0.21960901715307413], 'false,false': [0.20009053870529625, 0.24852071005917167], 'false,false,false': [nan, 0.24852071005917167]}
{'': [nan, 0.22270385438504184], 'false': [0.21937499999999957, 0.2275000000000001], 'false,false': [nan, 0.2275000000000001], 'false,false,false': [1.1102230246251566e-17, 0.24888888888888902], 'false,true': [nan, 0.21937499999999957], 'false,true,false': [nan, 0.21937499999999957]}
{'': [nan, 0.23350114426067536], 'false': [0.23615916955017333, 0.2229418264521877], 'false,false': [-9.25185853854297e-18, 0.24609375000000003], 'false,false,false': [nan, 0.24609375000000003], 'false,false,true': [-9.25185853854297e-18, nan]}
{'': [nan, 0.2093579395957006], 'false': [nan, 0.20935793959570095], 'false,false': [nan, 0.20935793959570062], 'false,false,false': [nan, 0.2093579395957006]}
{'': [0.23346938775510204, 0.21864366499108961], 'true': [nan, 0.23346938775510204], 'true,false': [nan, 0.23346938775510204], 'true,false,false': [nan, 0.23346938775510204], 'false': [nan, 0.21864366499108961], 'false,false': [nan, 0.21864366499108961], 'false,false,false': [nan, 0.21864366499108961]}
{'': [nan, 0.22022502724164722], 'false': [nan, 0.2202250272416471], 'false,false': [nan, 0.22022502724164722], 'false,false,false': [3.172065784643304e-17, 0.2346805225852921]}
{'': [nan, 0.21689332951709497], 'false': [nan, 0.216893329517095], 'false,false': [nan, 0.216893329517095], 'false,false,false': [nan, 0.21689332951709497]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 4.019
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( student(A), publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( professor(A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), publication(E, F) )
%   | | | then return -0.18559104792087505;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4181682599096096;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7580193346218546;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4748101056949838;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.6455607279622692;  // std dev = 0.213, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return 0.037879506860390134;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3741594707596572;  // std dev = 1.125, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.11231637819360643;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.4944038171139455;  // std dev = 0.242, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, B) )
%   | | then if ( tempadvisedby(G, B), publication(F, G) )
%   | | | then return 0.11248173811506157;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2874541370213682;  // std dev = 1.347, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.014588958669153477;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.34707256925229035;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.30544226566838395;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.057843682979721;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | then return 0.3950576987801154;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.24271734017213986;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.21028135000611492;  // std dev = 0.443, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.13377009552841426;  // std dev = 0.616, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.4179360611916423;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17504754701659572;  // std dev = 0.853, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.08518475138839682;  // std dev = 1.67e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( hasposition(A, I), sameperson(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | then return 0.1520583409684198;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( professor(B) )
%   | | | then return -0.0069035308519665994;  // std dev = 0.895, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0909932619261439;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A) )
%   | | then return -0.30029526293244424;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.033456202863181295;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.2745434809031019;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11569036071660894;  // std dev = 0.709, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A), publication(H, B) )
%   | | | then return 0.23350705280276401;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5046959030372098;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07949850652891549;  // std dev = 0.046, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then if ( student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.05047264932492823;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.24415727278287003;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2674657007241551;  // std dev = 0.294, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07319724746147226;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( tempadvisedby(J, B), ta(K, A, L) )
%   | then return 0.22081079128427236;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.06568320213587253;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3440008284815013;  // std dev = 0.752, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.07300205490850468;  // std dev = 0.043, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06839239541157643;  // std dev = 1.44e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( publication(E, B), publication(E, A) )
%   | then return 0.17325967524599348;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.24350632585357657;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, A), ta(J, A, K) )
%   | | | then return 0.010145683924105553;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.17075793826706534;  // std dev = 1.451, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15011457643865858;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.5048194194827192;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07674452899595305;  // std dev = 0.957, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.24157652191975912;  // std dev = 0.249, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11313279149184957;  // std dev = 1.291, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.06522363684757211;  // std dev = 0.059, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.461', 'seconds']
Refined model CLL: -0.162144


******************************************
Best model found
******************************************
Results 

CLL : -0.230637 

AUC ROC : 0.943487 

AUC PR : 0.239813 

Precision : 0.158242 

Recall : 0.774194 

F1 : 0.262774 

Total Learning Time : 4.019 

Total Inference Time : 0.8254895210266113 

Total revision time: 6.566272500991822
Best scored revision CLL: -0.162144


Results 

CLL : -0.230637 

AUC ROC : 0.943487 

AUC PR : 0.239813 

Precision : 0.158242 

Recall : 0.774194 

F1 : 0.262774 

Total Learning Time : 6.692462209701539 

Total Inference Time : 0.8254895210266113 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.811
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.044467437835755574;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3667335724779828;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12425141225313054;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2363805669108378;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return -0.02515459400003742;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016849120144448337;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15799948938834932;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05514516861443484;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return -0.04551573805482964;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), publication(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14810446556289764;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08551404425007604;  // std dev = 2.353, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07989116002253073;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0720807820689973;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.21918915378698553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.004493523806278996;  // std dev = 2.461, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02730042800838108;  // std dev = 2.403, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.573', 'seconds']
Parameter learned model CLL:-0.427532 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.225, 6, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [2.103, 12, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.265, 8, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.797, 6, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.932, 8, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.301, 11, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.227, 17, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.155, 4, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.16, 14, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,false': 'publication(A, G), publication(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.301, 11, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.353, 16, 9]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.195, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 10, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [2.461, 19, 9]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.403, 18, 9]}]
{'': [0.18750000000000003, 0.23268698060941836], 'false': [nan, 0.23268698060941836], 'false,false': [0.23268698060941836, nan], 'true': [nan, 0.18750000000000003], 'true,false': [nan, 0.18750000000000003]}
{'': [0.15999999999999998, 0.24852071005917167], 'false': [nan, 0.24852071005917167], 'false,false': [nan, 0.24852071005917167], 'false,false,false': [nan, 0.24852071005917167]}
{'': [nan, 0.2373596368408082], 'false': [nan, 0.2373596368408082], 'false,false': [0.2040816326530613, 0.2488888888888889], 'false,false,false': [nan, 0.2488888888888889], 'false,false,true': [nan, 0.2040816326530613]}
{'': [nan, 0.18014914776721758], 'false': [nan, 0.18014914776721747], 'false,false': [0.13017751479289935, 0.20659722222222232], 'false,false,false': [nan, 0.20659722222222232]}
{'': [nan, 0.22405069331143304], 'false': [0.22222222222222224, 0.2222222222222221], 'false,true': [nan, 0.22222222222222224], 'false,true,false': [nan, 0.22222222222222224], 'false,false': [nan, 0.2222222222222221], 'false,false,false': [nan, 0.2222222222222221]}
{'': [nan, 0.20340319856445765], 'false': [0.13017751479289938, 0.24609375000000008], 'false,false': [nan, 0.24609375000000008], 'false,false,false': [nan, 0.24609375000000008]}
{'': [nan, 0.2214541094757464], 'false': [nan, 0.2214541094757463], 'false,false': [nan, 0.22145410947574637], 'false,false,false': [nan, 0.2214541094757464]}
{'': [0.20408163265306117, 0.24221453287197228], 'false': [nan, 0.24221453287197228], 'false,false': [nan, 0.24221453287197228], 'false,false,false': [nan, 0.24221453287197228], 'true': [nan, 0.20408163265306117], 'true,false': [nan, 0.20408163265306117], 'true,false,false': [nan, 0.2040816326530612]}
{'': [nan, 0.2105539920106076], 'false': [nan, 0.2105539920106076], 'false,false': [nan, 0.2105539920106076], 'false,false,false': [0.0, 0.21634846915489264]}
{'': [nan, 0.2138280860428058], 'false': [nan, 0.21382808604280587], 'false,false': [nan, 0.21382808604280587], 'false,false,false': [nan, 0.2138280860428058]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 2.177
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5770044919914997;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( professor(A) )
%   | then return -0.2068602317797313;  // std dev = 0.232, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.46142012821707734;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17455068911594412;  // std dev = 0.426, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( publication(F, B) )
%   | then return -0.16013873006953416;  // std dev = 0.262, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09840008460113613;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.024023605609922376;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.38025514083541795;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08942107635587362;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.09523058641568083;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.30721833854396136;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(F, B), publication(G, A) )
%   | then return -0.18477003933210556;  // std dev = 0.263, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0820475968649064;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.07403250416512952;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.24617289361654615;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07821250091667505;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( ta(C, A, D), tempadvisedby(E, B) )
%   then return 0.3080325060959963;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then return -0.31170677779465095;  // std dev = 0.313, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06578617422107882;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then return -0.19093607314618466;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.032186583306940464;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.07362268246916423;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.16845298620847038;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( professor(B), ta(E, A, F) )
%   | then return 0.2563360642303325;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return 0.02711589512226194;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.0675807200240425;  // std dev = 0.013, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then return -0.2274239639996339;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( tempadvisedby(D, B) )
%   | then return -0.19460069327274834;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( professor(B) )
%   | | then return 0.19348522070895688;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.061367508156621495;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.305', 'seconds']
Refined model CLL: -0.181823


******************************************
Best model found
******************************************
Results 

CLL : -0.362771 

AUC ROC : 0.905249 

AUC PR : 0.119056 

Precision : 0.115684 

Recall : 1.0 

F1 : 0.207378 

Total Learning Time : 2.177 

Total Inference Time : 0.5628688335418701 

Total revision time: 4.213789546966552
Best scored revision CLL: -0.181823


Results 

CLL : -0.362771 

AUC ROC : 0.905249 

AUC PR : 0.119056 

Precision : 0.115684 

Recall : 1.0 

F1 : 0.207378 

Total Learning Time : 4.339979255676269 

Total Inference Time : 0.5628688335418701 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.069
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.20814893509951235;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.16955442658899617;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26837637556697486;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15094396169239738;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3497592233994824;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.03749261744441371;  // std dev = 3.775, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09428050182923853;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.120436401542846;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.29329488190798136;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.1309475423344428;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.04344868197883432;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.23636190628065157;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14551569333256353;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1434225079644981;  // std dev = 4.306, 77.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.008257201888821675;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04580261153091677;  // std dev = 3.027, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2742164126038433;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.06826427150850747;  // std dev = 4.503, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0024557228459301575;  // std dev = 4.645, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.301', 'seconds']
Parameter learned model CLL:-0.373622 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.617, 42, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [3.017, 26, 14], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.559, 38, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.806, 18, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.543, 37, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.482, 11, 14]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.775, 57, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.974, 24, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.543, 37, 19], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.839, 19, 14]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.689, 48, 19], 'false,false,true,true': [0.0, 3, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.733, 16, 14]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.306, 44, 33]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73, 52, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.027, 28, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 21, 0], 'false,false,false,false': [4.503, 54, 33]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.645, 74, 33]}]
{'': [0.21445847890352004, 0.2274999999999995], 'false': [nan, 0.2274999999999995], 'false,false': [0.2274999999999995, nan], 'true': [nan, 0.21445847890352004], 'true,false': [nan, 0.21445847890352004]}
{'': [0.222222222222222, 0.24609374999999983], 'false': [nan, 0.24609374999999983], 'false,false': [nan, 0.24609374999999983], 'false,false,false': [nan, 0.24609374999999983]}
{'': [nan, 0.23946620901036525], 'false': [nan, 0.23946620901036525], 'false,false': [0.22417091836734712, 0.24640000000000023], 'false,false,false': [nan, 0.24640000000000023], 'false,false,true': [nan, 0.22417091836734712]}
{'': [nan, 0.20327896327267367], 'false': [nan, 0.2032789632726741], 'false,false': [0.18750000000000053, 0.23268698060941845], 'false,false,false': [nan, 0.23268698060941845]}
{'': [nan, 0.23030365346752876], 'false': [0.22417091836734748, 0.23999999999999996], 'false,false': [nan, 0.23999999999999996], 'false,false,false': [0.0, 0.24426078971533516], 'false,true': [nan, 0.22417091836734748], 'false,true,false': [nan, 0.22417091836734748]}
{'': [nan, 0.2157662055002341], 'false': [0.20316328803742462, 0.238314733790424], 'false,false': [-9.25185853854297e-18, 0.24888888888888905], 'false,false,false': [nan, 0.24888888888888905], 'false,false,true': [-9.25185853854297e-18, nan]}
{'': [nan, 0.2407771369076939], 'false': [nan, 0.2407771369076943], 'false,false': [nan, 0.2407771369076938], 'false,false,false': [nan, 0.2407771369076939]}
{'': [0.1959928585598092, 0.2181838945920937], 'false': [nan, 0.2181838945920937], 'false,false': [nan, 0.2181838945920937], 'false,false,false': [nan, 0.2181838945920937], 'true': [nan, 0.1959928585598092], 'true,false': [nan, 0.1959928585598092], 'true,false,false': [nan, 0.19599285855980927]}
{'': [nan, 0.20610219032019633], 'false': [nan, 0.20610219032019558], 'false,false': [nan, 0.20610219032019633], 'false,false,false': [-4.229421046191072e-17, 0.23304401896550814]}
{'': [nan, 0.20166229623335985], 'false': [nan, 0.20166229623336004], 'false,false': [nan, 0.20166229623336004], 'false,false,false': [nan, 0.20166229623335985]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 7.949
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5724346493852265;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.14185106490048768;  // std dev = 5.37e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), ta(J, I, K) )
%   | | | then return 0.45984445506500515;  // std dev = 1.116, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.005508998465865426;  // std dev = 0.941, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.7302571636950733;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5752728944695353;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839155;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.6367366183035574;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, F), ta(G, F, H) )
%   | | | then return 0.42005451663064847;  // std dev = 1.778, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.5428236231540718;  // std dev = 0.778, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.11032329337624451;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.11231637819360643;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.453055024971415;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.27904541394795074;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.09755440800728343;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.09484040413277972;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.351783732423393;  // std dev = 1.314, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.003747688343684441;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783633;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.2308352017940249;  // std dev = 0.973, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.08871489462833335;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.37731314089666207;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2378832750637022;  // std dev = 1.130, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.092691276189261;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( professor(B), publication(I, B) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.20308290957491337;  // std dev = 1.217, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.029430516350104872;  // std dev = 1.598, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.1088484759481553;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, H, E), publication(F, H) )
%   | | | then return 0.18771501700780574;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.3440996514795691;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(I, A), publication(I, B) )
%   | | | then return 0.2871140279087174;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.21969924929604795;  // std dev = 1.165, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.08518475138839682;  // std dev = 1.49e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( hasposition(A, J), sameperson(A, K) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(L, B) )
%   | | | then return 0.19987031946584777;  // std dev = 0.928, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05685012612724619;  // std dev = 1.600, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return -0.08393405779749626;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( publication(C, A) )
%   | | then return 0.27659165840623173;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, D) )
%   | | | then return -0.31406601241750315;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10676602814583354;  // std dev = 1.392, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( student(A) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.003588907179576546;  // std dev = 1.524, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.29203269544545385;  // std dev = 1.305, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( professor(B) )
%   | then return -0.21170034169889834;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.07850175220656087;  // std dev = 0.003, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(F, C, G), publication(H, A) )
%   | | then return 0.3494205861737469;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, J, E), publication(K, J) )
%   | | | then return -0.09236529736122895;  // std dev = 1.105, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.054406417551248115;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(L, A) )
%   | | then if ( publication(L, B) )
%   | | | then return 0.23434966273668492;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.07362803029003909;  // std dev = 1.213, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.2961633806902322;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07284829981482854;  // std dev = 0.009, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.0684646245262137;  // std dev = 2.54e-05, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( publication(E, B), publication(E, A) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return -0.1127374301728273;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.11131821470629977;  // std dev = 0.324, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1912213223064972;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(J, B), professor(B) )
%   | | then if ( publication(J, K), tempadvisedby(L, K) )
%   | | | then return 0.06066649943480864;  // std dev = 2.148, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return -0.4997499117536249;  // std dev = 0.316, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return -0.15910400786991205;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06805003304206893;  // std dev = 0.002, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return -0.053947387966672256;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18045232258481783;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.5036225089084252;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19193495720598058;  // std dev = 0.519, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(H, A), ta(I, A, J) )
%   | | then return -0.012350610511540933;  // std dev = 0.806, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.2181090264606865;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07895309830491261;  // std dev = 1.133, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06459537970478096;  // std dev = 0.021, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.620', 'seconds']
Refined model CLL: -0.247677


******************************************
Best model found
******************************************
Results 

CLL : -0.238775 

AUC ROC : 0.943955 

AUC PR : 0.38867 

Precision : 0.187135 

Recall : 0.8 

F1 : 0.303318 

Total Learning Time : 7.949 

Total Inference Time : 1.3795959949493408 

Total revision time: 11.568950288772584
Best scored revision CLL: -0.247677


Results 

CLL : -0.238775 

AUC ROC : 0.943955 

AUC PR : 0.38867 

Precision : 0.187135 

Recall : 0.8 

F1 : 0.303318 

Total Learning Time : 11.6951399974823 

Total Inference Time : 1.3795959949493408 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.915
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.25814893509951237;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.09446743783575551;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2523050830555341;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03165239320886167;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2640703319804873;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.07717421013905391;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1498309199306175;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015861590950340655;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2940811101308959;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.11971199331738;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.12115904055951895;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.23690454354526994;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.080470036278587;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06496511144598896;  // std dev = 3.136, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0057884997054775435;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02923119271603498;  // std dev = 2.700, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2174170063837881;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08425974315688738;  // std dev = 3.087, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04552808290669324;  // std dev = 3.117, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.424', 'seconds']
Parameter learned model CLL:-0.399849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.732, 12, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [2.683, 18, 12], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.732, 12, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.619, 16, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.789, 16, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.498, 13, 12]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.732, 12, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.652, 17, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.789, 16, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.652, 17, 12]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [1.664, 9, 4], 'false,false,true,true': [0.0, 3, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.683, 18, 12]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.136, 31, 16]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.764, 14, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.7, 21, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 8, 0], 'false,false,false,false': [3.087, 24, 16]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.117, 28, 16]}]
{'': [0.18749999999999983, 0.23999999999999952], 'false': [nan, 0.23999999999999952], 'false,false': [0.23999999999999952, nan], 'true': [nan, 0.18749999999999983], 'true,false': [nan, 0.18749999999999983]}
{'': [0.1875000000000001, 0.24489795918367382], 'false': [nan, 0.24489795918367382], 'false,false': [nan, 0.24489795918367382], 'false,false,false': [nan, 0.24489795918367382]}
{'': [nan, 0.22311557981798838], 'false': [nan, 0.22311557981798838], 'false,false': [0.16000000000000014, 0.24960000000000016], 'false,false,false': [nan, 0.24960000000000016], 'false,false,true': [nan, 0.16000000000000014]}
{'': [nan, 0.22419811307041965], 'false': [nan, 0.22419811307041973], 'false,false': [0.18749999999999992, 0.2425683709869201], 'false,false,false': [nan, 0.2425683709869201]}
{'': [nan, 0.20837657816693453], 'false': [0.1600000000000001, 0.2372528616024972], 'false,false': [nan, 0.2372528616024972], 'false,false,false': [0.0, 0.2425683709869201], 'false,true': [nan, 0.1600000000000001], 'false,true,false': [nan, 0.1600000000000001]}
{'': [nan, 0.22367479456263767], 'false': [0.2130177514792898, 0.22650633255523736], 'false,false': [0.0, 0.24000000000000024], 'false,false,false': [nan, 0.24000000000000024], 'false,false,true': [0.0, nan]}
{'': [nan, 0.20920273156691532], 'false': [nan, 0.2092027315669149], 'false,false': [nan, 0.20920273156691524], 'false,false,false': [nan, 0.20920273156691532]}
{'': [0.17283950617283944, 0.22087881914430174], 'false': [nan, 0.22087881914430174], 'false,false': [nan, 0.22087881914430174], 'false,false,false': [nan, 0.22087881914430174], 'true': [nan, 0.17283950617283944], 'true,false': [nan, 0.17283950617283944], 'true,false,false': [nan, 0.17283950617283947]}
{'': [nan, 0.21115715533267707], 'false': [nan, 0.21115715533267707], 'false,false': [nan, 0.21115715533267707], 'false,false,false': [-1.3877787807814457e-17, 0.23822044286364125]}
{'': [nan, 0.22077077740292317], 'false': [nan, 0.22077077740292309], 'false,false': [nan, 0.22077077740292309], 'false,false,false': [nan, 0.22077077740292317]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 4.91
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, E) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.14898473676445526;  // std dev = 0.854, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7835509963605696;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.1941966392273874;  // std dev = 1.074, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7580193346218546;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.24699511486875578;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), inphase(H, I) )
%   | | | then return 0.6540009737627115;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3698465699331529;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6388531616001395;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360638;  // std dev = 1.49e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then if ( ta(G, H, E), publication(I, H) )
%   | | then return 0.34993997118778664;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5730966529904079;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.4567630969590389;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.2754342115399538;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04709949483967797;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( professor(B), publication(M, A) )
%   | then return -0.17856561756027714;  // std dev = 0.422, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( ta(N, B, P) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( publication(Q, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08250419370515874;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then return 0.24072973841752499;  // std dev = 0.408, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(G, B), student(A) )
%   | | then return -0.23368666686601056;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(A) )
%   | | | then return -0.08920609861856746;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07443641826275295;  // std dev = 0.409, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.09350036392199246;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.08339494454202165;  // std dev = 1.600, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.5133783504145693;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09350036392199247;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( professor(A) )
%   | | then return -0.08157229785127618;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.38872577475848924;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(E, B), student(A) )
%   | | then return -0.3745403119187378;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0924133703482379;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.08662036625399665;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | then if ( ta(K, L, I), publication(M, L) )
%   | | | then return 0.13193048346931233;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41731228213080795;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(N, B), tempadvisedby(P, B) )
%   | | | then return -0.2603400473239889;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07009279947077815;  // std dev = 0.987, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return -0.2857570978889643;  // std dev = 0.665, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), projectmember(I, H) )
%   | | | then return 0.05544925533677225;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3342965109089941;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3349473287212057;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08264617427846363;  // std dev = 0.031, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.2616465342742815;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(C, D), inphase(D, E) )
%   | | then if ( inphase(A, E), professor(B) )
%   | | | then return 0.09786105094855413;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.05722147924187075;  // std dev = 1.133, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.3622495021240328;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(F, A, G) )
%   | then return -0.16986610559223292;  // std dev = 0.468, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( publication(H, A) )
%   | | then if ( ta(I, B, J) )
%   | | | then return -0.07273113143938036;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2710617208370136;  // std dev = 0.492, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.238104807964036;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08841538637788043;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.05997250682401859;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return -0.04529101907048547;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1699511221983438;  // std dev = 0.860, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.2420381734287854;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07431507209704359;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), ta(D, A, E) )
%   then if ( ta(D, F, G), publication(H, F) )
%   | then if ( sameperson(A, F) )
%   | | then return -0.04733054870090514;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0016968302212120867;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2712509708030988;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( projectmember(I, B), publication(J, A) )
%   | then return -0.2190023375052869;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.2024923307123335;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, A), student(A) )
%   | | | then return 0.04147944345417447;  // std dev = 0.306, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09769299137386901;  // std dev = 0.828, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.714', 'seconds']
Refined model CLL: -0.26274


******************************************
Best model found
******************************************
Results 

CLL : -0.246824 

AUC ROC : 0.941822 

AUC PR : 0.215085 

Precision : 0.142096 

Recall : 0.824742 

F1 : 0.242424 

Total Learning Time : 4.91 

Total Inference Time : 0.9176723957061768 

Total revision time: 7.554413509368897
Best scored revision CLL: -0.26274


Results 

CLL : -0.246824 

AUC ROC : 0.941822 

AUC PR : 0.215085 

Precision : 0.142096 

Recall : 0.824742 

F1 : 0.242424 

Total Learning Time : 7.6806032180786135 

Total Inference Time : 0.9176723957061768 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.009
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2902477005316098;  // std dev = 4.458, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13627140878798838;  // std dev = 4.857, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11009683882181118;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12974205561773147;  // std dev = 4.716, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09880290594702507;  // std dev = 4.752, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11871072876063139;  // std dev = 4.591, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0455756846548148;  // std dev = 4.809, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029019322605678872;  // std dev = 4.815, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03498641903489504;  // std dev = 4.768, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036610406663403865;  // std dev = 4.743, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.198', 'seconds']
Parameter learned model CLL:-0.359507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.83e-08, 25, 0], 'false,false,true': [4.458, 46, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.857, 79, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.867, 82, 35]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.716, 70, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.752, 72, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.591, 62, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.809, 74, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.815, 79, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.768, 75, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.743, 71, 35]}]
{'': [nan, 0.22116411534354005], 'false': [1.3322676295501878e-17, 0.24538942234415645], 'false,false': [0.24538942234415645, nan], 'false,true': [nan, 1.3322676295501878e-17]}
{'': [nan, 0.2069399851800077], 'false': [nan, 0.2069399851800077], 'false,false': [nan, 0.2069399851800077], 'false,false,false': [nan, 0.2069399851800077]}
{'': [nan, 0.2024967177138889], 'false': [nan, 0.2024967177138889], 'false,false': [nan, 0.2024967177138889], 'false,false,false': [nan, 0.20249671771388922]}
{'': [nan, 0.21183722968618565], 'false': [nan, 0.21183722968618565], 'false,false': [nan, 0.21183722968618565], 'false,false,false': [nan, 0.21183722968618565]}
{'': [nan, 0.21101202115740794], 'false': [nan, 0.21101202115740794], 'false,false': [nan, 0.21101202115740794], 'false,false,false': [nan, 0.21101202115740794]}
{'': [nan, 0.21726935375784145], 'false': [nan, 0.21726935375784145], 'false,false': [nan, 0.21726935375784145], 'false,false,false': [nan, 0.21726935375784145]}
{'': [nan, 0.21213946941661402], 'false': [nan, 0.21213946941661402], 'false,false': [nan, 0.21213946941661402], 'false,false,false': [nan, 0.21213946941661402]}
{'': [nan, 0.20333435299051403], 'false': [nan, 0.20333435299051403], 'false,false': [nan, 0.20333435299051403], 'false,false,false': [nan, 0.20333435299051403]}
{'': [nan, 0.2066402119698791], 'false': [nan, 0.2066402119698791], 'false,false': [nan, 0.2066402119698791], 'false,false,false': [nan, 0.2066402119698791]}
{'': [nan, 0.21226334310348646], 'false': [nan, 0.21226334310348657], 'false,false': [nan, 0.21226334310348646], 'false,false,false': [nan, 0.21226334310348646]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 8.6
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.6081489350995123;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.8064280457661688;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return -0.18045325972401552;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3659451845220611;  // std dev = 2.633, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else return -0.12544463852839122;  // std dev = 5.87e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.5771596904645176;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6911379502167557;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.37770343792516886;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.6510739277928974;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.3621552211558503;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.1673617778881314;  // std dev = 1.640, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.1123163781936063;  // std dev = 3.80e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43629648734623;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.21147964667759625;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.012111493665385198;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.4939493763095735;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1946816356060107;  // std dev = 2.560, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   else return -0.10159632948783627;  // std dev = 2.79e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.13140228760908523;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.26328417144131255;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(G, C, H) )
%   | | | then return 0.3369232699670354;  // std dev = 0.610, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.14047819961083644;  // std dev = 1.798, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( publication(I, A) )
%   | | then return 0.5483239293756628;  // std dev = 0.307, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.4001976706936614;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.28059672637785077;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926105;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.35924330776085894;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2481912952438245;  // std dev = 0.503, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.4240939008229926;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( inphase(A, G), inphase(F, G) )
%   | | | then return 0.0203705607083368;  // std dev = 0.906, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28184967681273715;  // std dev = 1.267, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.18155044523411115;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.212355297192815;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0851847513883968;  // std dev = 2.36e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A) )
%   | then if ( publication(E, C), publication(E, B) )
%   | | then return -0.05098268345372743;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(D, B) )
%   | | | then return 0.23165438624819554;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.03132609851135082;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(F, B) )
%   | | then return 0.30649884402479366;  // std dev = 0.817, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4352102390991841;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(G, A) )
%   | then return -0.09928364495565462;  // std dev = 0.217, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.04746093788750416;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15939479027772155;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A), ta(D, A, E) )
%   | | then return 0.236902673919922;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.07240012665963894;  // std dev = 1.535, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1809713143581883;  // std dev = 1.242, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( ta(G, A, H), publication(I, A) )
%   | | then return -0.32395813485440733;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.25167298652142633;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05805376543324755;  // std dev = 1.302, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.07254093936417444;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, C) )
%   | | then return 0.17352546183876494;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(D, G, H), publication(I, G) )
%   | | | then return 0.02293350464108283;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17609675889399265;  // std dev = 0.449, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then if ( publication(L, A), publication(L, B) )
%   | | | then return -0.012454287300716571;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18178167768615183;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(M, B), publication(N, B) )
%   | | | then return 0.2718628086548065;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.035004025009379866;  // std dev = 2.282, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   else return -0.06776197065778729;  // std dev = 0.004, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, B) )
%   then if ( publication(F, A) )
%   | then if ( publication(E, A) )
%   | | then return -0.01716441680453888;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.14264963365768596;  // std dev = 0.728, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.32348903369666315;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(G, A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.16409332587254633;  // std dev = 0.109, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.029121488803934448;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.17060490178501853;  // std dev = 1.231, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.35672513397843864;  // std dev = 0.223, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06357912496273369;  // std dev = 0.004, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.219', 'seconds']
Refined model CLL: -0.231483


******************************************
Best model found
******************************************
Results 

CLL : -0.209731 

AUC ROC : 0.945769 

AUC PR : 0.331756 

Precision : 0.201954 

Recall : 0.794872 

F1 : 0.322078 

Total Learning Time : 8.6 

Total Inference Time : 1.2626748085021973 

Total revision time: 11.968582662582397
Best scored revision CLL: -0.231483


Results 

CLL : -0.209731 

AUC ROC : 0.945769 

AUC PR : 0.331756 

Precision : 0.201954 

Recall : 0.794872 

F1 : 0.322078 

Total Learning Time : 12.104538711547852 

Total Inference Time : 1.2626748085021973 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.895
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( inphase(A, G) )
%   | | then return 0.32326521416927945;  // std dev = 3.271, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18634085956403054;  // std dev = 3.506, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14829734108698336;  // std dev = 3.535, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09576399976258541;  // std dev = 3.618, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10711361493267813;  // std dev = 3.535, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09936404172941882;  // std dev = 3.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07971818085381929;  // std dev = 3.477, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03609084533201691;  // std dev = 3.545, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01815359893678011;  // std dev = 3.585, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014775390429679059;  // std dev = 3.569, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.285', 'seconds']
Parameter learned model CLL:-0.409548 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 10, 0], 'false,false,true': [3.271, 23, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.506, 36, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.535, 37, 20]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.618, 41, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.535, 36, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.481, 35, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.477, 35, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.545, 40, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.585, 41, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.569, 42, 20]}]
{'': [nan, 0.23495906016375898], 'false': [-1.1102230246251566e-17, 0.24878312601406138], 'false,false': [0.24878312601406138, nan], 'false,true': [nan, -1.1102230246251566e-17]}
{'': [nan, 0.21947822887221907], 'false': [nan, 0.21947822887221907], 'false,false': [nan, 0.21947822887221907], 'false,false,false': [nan, 0.21947822887221907]}
{'': [nan, 0.2192241509116423], 'false': [nan, 0.2192241509116423], 'false,false': [nan, 0.2192241509116423], 'false,false,false': [nan, 0.21922415091164216]}
{'': [nan, 0.21456472260939685], 'false': [nan, 0.21456472260939685], 'false,false': [nan, 0.21456472260939685], 'false,false,false': [nan, 0.21456472260939685]}
{'': [nan, 0.22320606108718316], 'false': [nan, 0.22320606108718316], 'false,false': [nan, 0.22320606108718316], 'false,false,false': [nan, 0.22320606108718316]}
{'': [nan, 0.2203241493470716], 'false': [nan, 0.2203241493470716], 'false,false': [nan, 0.2203241493470716], 'false,false,false': [nan, 0.2203241493470716]}
{'': [nan, 0.21981635199608582], 'false': [nan, 0.21981635199608582], 'false,false': [nan, 0.21981635199608582], 'false,false,false': [nan, 0.21981635199608582]}
{'': [nan, 0.20947391338759036], 'false': [nan, 0.20947391338759036], 'false,false': [nan, 0.20947391338759036], 'false,false,false': [nan, 0.20947391338759036]}
{'': [nan, 0.21064371377139884], 'false': [nan, 0.21064371377139884], 'false,false': [nan, 0.21064371377139884], 'false,false,false': [nan, 0.21064371377139884]}
{'': [nan, 0.20549084580193508], 'false': [nan, 0.20549084580193508], 'false,false': [nan, 0.20549084580193508], 'false,false,false': [nan, 0.20549084580193508]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 5.114
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( professor(B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.7582810109290459;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.435847322988542;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7408331590336212;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1792014042292405;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.12544463852839136;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.5457640726034623;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6509640030164349;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.5500859330824607;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3325333239165063;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.08736441218727263;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.41042855984786186;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4816823639979392;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.41360844028421184;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.2394273040029596;  // std dev = 1.249, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.10286316014198973;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, D), student(D) )
%   | then if ( publication(C, A) )
%   | | then return 0.3171083938355454;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F), tempadvisedby(D, G) )
%   | | | then return 0.4406649067599188;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3812455330549599;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14885540189671698;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( professor(B) )
%   | then return 0.06577966992521422;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(F, C, G) )
%   | | then if ( publication(H, C) )
%   | | | then return -0.4423488701682489;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2609650582629802;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1807533266514821;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A), ta(J, A, K) )
%   | | then return -0.02562565772185547;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.2904227432401437;  // std dev = 0.210, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.07803218628644264;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08810785342186506;  // std dev = 0.049, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), tempadvisedby(G, H) )
%   | | then return 0.3693521112347783;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3079477341316496;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then return 0.20189973827400173;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.012836462329571668;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.17279774881471124;  // std dev = 0.959, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.08175732066353003;  // std dev = 0.052, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.18860970708571514;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1554636996845063;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.17831256128093004;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2682211497028712;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.02195613054586818;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.07576566283736663;  // std dev = 0.050, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, B) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.1925968996512704;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.26117441221916654;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06789199723320162;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( tempadvisedby(I, B), publication(J, I) )
%   | then return -0.2791257596695265;  // std dev = 1.021, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | then return -0.16551898907872978;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.0776094472568796;  // std dev = 0.993, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.06925687482595627;  // std dev = 0.036, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, C) )
%   then return 0.20114651706686573;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.15123070960183177;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return -0.24599624763494812;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.060366800236223164;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.06364708265864855;  // std dev = 0.000172, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.482', 'seconds']
Refined model CLL: -0.187762


******************************************
Best model found
******************************************
Results 

CLL : -0.246819 

AUC ROC : 0.938465 

AUC PR : 0.230297 

Precision : 0.142857 

Recall : 0.731183 

F1 : 0.239016 

Total Learning Time : 5.114 

Total Inference Time : 0.8430647850036621 

Total revision time: 7.628684219360352
Best scored revision CLL: -0.187762


Results 

CLL : -0.246819 

AUC ROC : 0.938465 

AUC PR : 0.230297 

Precision : 0.142857 

Recall : 0.731183 

F1 : 0.239016 

Total Learning Time : 7.764640268325806 

Total Inference Time : 0.8430647850036621 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.769
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( inphase(A, G) )
%   | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24071797760478988;  // std dev = 2.290, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13175322818767923;  // std dev = 2.421, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09325003328359885;  // std dev = 2.457, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14453763501280878;  // std dev = 2.331, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06859283257949879;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08939920957747115;  // std dev = 2.351, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024339278168930997;  // std dev = 2.427, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08877823219364854;  // std dev = 2.294, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056174077884546425;  // std dev = 2.315, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.435', 'seconds']
Parameter learned model CLL:-0.460819 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false,true': [2.372, 15, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.29, 13, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.421, 18, 9]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.457, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.331, 14, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.426, 17, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.351, 15, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.427, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.294, 14, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.315, 15, 9]}]
{'': [nan, 0.22633136094674564], 'false': [0.0, 0.23437500000000003], 'false,false': [0.23437500000000003, nan], 'false,true': [nan, 0.0]}
{'': [nan, 0.23840750614534967], 'false': [nan, 0.23840750614534967], 'false,false': [nan, 0.23840750614534967], 'false,false,false': [nan, 0.23840750614534967]}
{'': [nan, 0.2171309624284021], 'false': [nan, 0.2171309624284021], 'false,false': [nan, 0.2171309624284021], 'false,false,false': [nan, 0.21713096242840205]}
{'': [nan, 0.21558940268903362], 'false': [nan, 0.21558940268903362], 'false,false': [nan, 0.21558940268903362], 'false,false,false': [nan, 0.21558940268903362]}
{'': [nan, 0.23619182020130913], 'false': [nan, 0.23619182020130913], 'false,false': [nan, 0.23619182020130913], 'false,false,false': [nan, 0.23619182020130913]}
{'': [nan, 0.22633136094674547], 'false': [nan, 0.22633136094674547], 'false,false': [nan, 0.22633136094674547], 'false,false,false': [nan, 0.22633136094674547]}
{'': [nan, 0.2303192264800632], 'false': [nan, 0.2303192264800632], 'false,false': [nan, 0.2303192264800632], 'false,false,false': [nan, 0.2303192264800632]}
{'': [nan, 0.21040940139495884], 'false': [nan, 0.21040940139495884], 'false,false': [nan, 0.21040940139495884], 'false,false,false': [nan, 0.21040940139495884]}
{'': [nan, 0.22879300531013316], 'false': [nan, 0.22879300531013316], 'false,false': [nan, 0.22879300531013316], 'false,false,false': [nan, 0.22879300531013316]}
{'': [nan, 0.22321424040730134], 'false': [nan, 0.2232142404073013], 'false,false': [nan, 0.22321424040730134], 'false,false,false': [nan, 0.22321424040730134]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 2.208
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.7512057788947994;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.24463179980706787;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.6084127787386356;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.16450331603377008;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.47921218173851887;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( publication(D, B), professor(A) )
%   | then return -0.1872039048972927;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.4037014650101036;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1893401031874993;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( publication(D, B), publication(D, A) )
%   | then return -0.21762004735149118;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return -0.12443846869099387;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3010026617121441;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return -0.06747905874124115;  // std dev = 1.193, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2746482187684829;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07846134084463371;  // std dev = 0.006, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return -0.08395950286161191;  // std dev = 1.222, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.24214621903752215;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07257960861815106;  // std dev = 0.013, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then return 0.2892616094393663;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(D, A, E) )
%   | then if ( publication(F, B) )
%   | | then return -0.2165041787306944;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06848960368070595;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( professor(B) )
%   | | then return 0.19196218265383116;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06635338909352247;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(D, B) )
%   then return 0.11901564123121314;  // std dev = 0.363, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return -0.05429191834601027;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.019163629930888694;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06282329410221521;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.240', 'seconds']
Refined model CLL: -0.185693


******************************************
Best model found
******************************************
Results 

CLL : -0.361432 

AUC ROC : 0.902396 

AUC PR : 0.114227 

Precision : 0.115044 

Recall : 1.0 

F1 : 0.206349 

Total Learning Time : 2.208 

Total Inference Time : 0.5710148811340332 

Total revision time: 4.117936851501465
Best scored revision CLL: -0.185693


Results 

CLL : -0.361432 

AUC ROC : 0.902396 

AUC PR : 0.114227 

Precision : 0.115044 

Recall : 1.0 

F1 : 0.206349 

Total Learning Time : 4.253892900466919 

Total Inference Time : 0.5710148811340332 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.993
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( inphase(A, G) )
%   | | then return 0.304094881045457;  // std dev = 4.276, 74.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15738094481261758;  // std dev = 4.623, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13020810694987112;  // std dev = 4.631, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1319935727374326;  // std dev = 4.544, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06595086356594854;  // std dev = 4.696, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11187357345613545;  // std dev = 4.491, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060015099753557365;  // std dev = 4.598, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012301077916665857;  // std dev = 4.712, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03417519929809255;  // std dev = 4.630, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07808227941311252;  // std dev = 4.443, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.375347 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 15, 0], 'false,false,true': [4.276, 41, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.623, 68, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.631, 69, 33]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.544, 62, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.696, 75, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.491, 57, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.598, 65, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.712, 78, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.63, 69, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.443, 55, 33]}]
{'': [nan, 0.23330387577326242], 'false': [-1.4802973661668754e-17, 0.24707815924032298], 'false,false': [0.24707815924032298, nan], 'false,true': [nan, -1.4802973661668754e-17]}
{'': [nan, 0.21163642958408746], 'false': [nan, 0.21163642958408746], 'false,false': [nan, 0.21163642958408746], 'false,false,false': [nan, 0.21163642958408746]}
{'': [nan, 0.21023542651736735], 'false': [nan, 0.21023542651736735], 'false,false': [nan, 0.21023542651736735], 'false,false,false': [nan, 0.21023542651736737]}
{'': [nan, 0.2173455795809359], 'false': [nan, 0.2173455795809359], 'false,false': [nan, 0.2173455795809359], 'false,false,false': [nan, 0.2173455795809359]}
{'': [nan, 0.2041532618879759], 'false': [nan, 0.2041532618879759], 'false,false': [nan, 0.2041532618879759], 'false,false,false': [nan, 0.2041532618879759]}
{'': [nan, 0.22413523851412076], 'false': [nan, 0.22413523851412076], 'false,false': [nan, 0.22413523851412076], 'false,false,false': [nan, 0.22413523851412076]}
{'': [nan, 0.21571603160530783], 'false': [nan, 0.21571603160530783], 'false,false': [nan, 0.21571603160530783], 'false,false,false': [nan, 0.21571603160530783]}
{'': [nan, 0.20003754840771376], 'false': [nan, 0.20003754840771376], 'false,false': [nan, 0.20003754840771376], 'false,false,false': [nan, 0.20003754840771376]}
{'': [nan, 0.21015220543420488], 'false': [nan, 0.21015220543420488], 'false,false': [nan, 0.21015220543420488], 'false,false,false': [nan, 0.21015220543420488]}
{'': [nan, 0.22432873344498214], 'false': [nan, 0.22432873344498214], 'false,false': [nan, 0.22432873344498214], 'false,false,false': [nan, 0.22432873344498214]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 12.992
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7290358010362374;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.46666685038260997;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.050000183715943385;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.520372402190864;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.7425946244130862;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.2992959627707938;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.521906634005734;  // std dev = 0.948, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( publication(C, H), professor(H) )
%   | | | then return -0.11196255578523566;  // std dev = 0.971, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.3816331030300324;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(I, B) )
%   | | then return 0.6316090148550421;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.43571228354221775;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.24523609306602726;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360629;  // std dev = 4.08e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A) )
%   | then return 0.44453352561325754;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G), student(A) )
%   | | | then return 0.3725476032059804;  // std dev = 1.571, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.03222161243886395;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.35173958914054143;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( publication(H, A), ta(I, A, J) )
%   | then if ( ta(K, B, L) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.029284833019279824;  // std dev = 0.191, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( publication(M, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( ta(N, B, P) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.2420990055716857;  // std dev = 0.487, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.03694703401348679;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3339256070330403;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), publication(G, H) )
%   | | | then return -0.1641048563629251;  // std dev = 1.127, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2225807057656552;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.14520734720444053;  // std dev = 1.373, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.07636322991012427;  // std dev = 1.548, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.09321612632750684;  // std dev = 0.064, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.29644252829601225;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A), ta(F, C, G) )
%   | | | then return -0.4219590089934979;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05627617287060702;  // std dev = 1.605, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( ta(H, A, I) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.4332664670906531;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3617631775747893;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.341908498082254;  // std dev = 0.402, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09320807934813935;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08557082302901341;  // std dev = 0.062, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(F, G, D), publication(E, G) )
%   | | then if ( sameperson(A, G) )
%   | | | then return 0.22447664917654547;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36689905768270137;  // std dev = 0.233, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(C, H, D), publication(I, H) )
%   | | | then return -0.5040642062660252;  // std dev = 0.326, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04153472634697343;  // std dev = 1.463, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), tempadvisedby(M, L) )
%   | | | then return 0.30317304346636137;  // std dev = 0.368, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0049823485622153;  // std dev = 0.961, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.37647072178908975;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0797417334624888;  // std dev = 0.075, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return -0.1553925856795011;  // std dev = 1.191, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(F, G, D), publication(H, G) )
%   | | | then return 0.24399031465044185;  // std dev = 0.587, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.03412560484753439;  // std dev = 1.231, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then return 0.1902959619950185;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.15964504536450386;  // std dev = 1.154, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.03273315357212538;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07409190803651322;  // std dev = 0.054, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( ta(E, C, F) )
%   | | then return 0.25649467806183773;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, C) )
%   | | | then return 0.09597694803769509;  // std dev = 0.521, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0731298419037246;  // std dev = 1.807, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.1655216225257526;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.01715243716421677;  // std dev = 1.029, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.21568709280658313;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3055460869022335;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07063218834940611;  // std dev = 0.077, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, B) )
%   | | then return 0.16358205504119178;  // std dev = 0.095, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(C, D), tempadvisedby(E, D) )
%   | | | then return 0.05554708870428863;  // std dev = 1.014, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19487742739042027;  // std dev = 0.518, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06817376928679625;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( tempadvisedby(F, B), student(A) )
%   | then if ( ta(G, A, H), publication(I, B) )
%   | | then if ( ta(J, K, H), publication(L, K) )
%   | | | then return -0.3328081893734972;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.011285248250177338;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.3458679723685489;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( professor(B), ta(M, A, N) )
%   | | then return -0.11236760081745967;  // std dev = 0.419, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.06350143413854285;  // std dev = 0.116, 50.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.561', 'seconds']
Refined model CLL: -0.225129


******************************************
Best model found
******************************************
Results 

CLL : -0.235216 

AUC ROC : 0.95191 

AUC PR : 0.363867 

Precision : 0.181384 

Recall : 0.95 

F1 : 0.304609 

Total Learning Time : 12.992 

Total Inference Time : 1.3813579082489014 

Total revision time: 16.39156304359436
Best scored revision CLL: -0.225129


Results 

CLL : -0.235216 

AUC ROC : 0.95191 

AUC PR : 0.363867 

Precision : 0.181384 

Recall : 0.95 

F1 : 0.304609 

Total Learning Time : 16.527519092559814 

Total Inference Time : 1.3813579082489014 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.847
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( inphase(A, G) )
%   | | then return 0.39148226843284567;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12898018234866088;  // std dev = 3.249, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15511270051179696;  // std dev = 3.132, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10942396064608555;  // std dev = 3.170, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11205967287907495;  // std dev = 3.125, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05274472526487041;  // std dev = 3.206, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11257276230809111;  // std dev = 3.022, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -1.531107956408963E-4;  // std dev = 3.241, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025042748014159222;  // std dev = 3.161, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0226890198256315;  // std dev = 3.160, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.337', 'seconds']
Parameter learned model CLL:-0.382344 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,false,true': [2.733, 14, 16], 'false,false,false': [0.0, 2, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.249, 36, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.132, 29, 16]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.17, 32, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.125, 28, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.206, 34, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.022, 25, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.241, 38, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.161, 35, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.16, 34, 16]}]
{'': [nan, 0.23363980530016176], 'false': [-1.0092936587501423e-17, 0.24999999999999953], 'false,false': [0.24888888888888844, 0.0], 'false,true': [nan, -1.0092936587501423e-17]}
{'': [nan, 0.2030368959010573], 'false': [nan, 0.2030368959010573], 'false,false': [nan, 0.2030368959010573], 'false,false,false': [nan, 0.2030368959010573]}
{'': [nan, 0.2179483440001775], 'false': [nan, 0.2179483440001775], 'false,false': [nan, 0.2179483440001775], 'false,false,false': [nan, 0.21794834400017749]}
{'': [nan, 0.20939295528739535], 'false': [nan, 0.20939295528739535], 'false,false': [nan, 0.20939295528739535], 'false,false,false': [nan, 0.20939295528739535]}
{'': [nan, 0.22201354834158743], 'false': [nan, 0.22201354834158743], 'false,false': [nan, 0.22201354834158743], 'false,false,false': [nan, 0.22201354834158743]}
{'': [nan, 0.20562978963661824], 'false': [nan, 0.20562978963661824], 'false,false': [nan, 0.20562978963661824], 'false,false,false': [nan, 0.20562978963661824]}
{'': [nan, 0.2226784536244869], 'false': [nan, 0.2226784536244869], 'false,false': [nan, 0.2226784536244869], 'false,false,false': [nan, 0.2226784536244869]}
{'': [nan, 0.19455498502479565], 'false': [nan, 0.19455498502479565], 'false,false': [nan, 0.19455498502479565], 'false,false,false': [nan, 0.19455498502479565]}
{'': [nan, 0.1958848154123055], 'false': [nan, 0.1958848154123055], 'false,false': [nan, 0.1958848154123055], 'false,false,false': [nan, 0.1958848154123055]}
{'': [nan, 0.1996646132116884], 'false': [nan, 0.19966461321168832], 'false,false': [nan, 0.1996646132116884], 'false,false,false': [nan, 0.1996646132116884]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true
0;false;inphase(A, G).;true;true


Refining candidate
***************************
Model training time 4.019
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( inphase(A, D) )
%   | then if ( professor(B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.7483828540191295;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5503101501396745;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), projectmember(D, B) )
%   | then return 0.09711732091927938;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5965914972175741;  // std dev = 0.117, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then return 0.020094524567680506;  // std dev = 1.042, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.5114716393115963;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.1636787727775831;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.23628207206328813;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( ta(H, A, I) )
%   | then if ( ta(J, B, K) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( ta(H, L, M), publication(N, L) )
%   | | | then return -0.36804053844940743;  // std dev = 0.326, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B) )
%   | | then return 0.04848709215157453;  // std dev = 0.520, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( projectmember(D, B), ta(E, A, F) )
%   | then return -0.17950643471031238;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(A) )
%   | | then return -0.10610823993931996;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(C, G), projectmember(H, G) )
%   | | | then return 0.4118085661466223;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21229703072305067;  // std dev = 1.271, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( ta(I, A, J), professor(B) )
%   | then return -0.5108120703864986;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.14705338441376556;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.09001084539677992;  // std dev = 0.040, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, F), tempadvisedby(E, B) )
%   | | then return 0.321435519348512;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, H, D), publication(I, H) )
%   | | | then return 0.3689259873559994;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3883387025787417;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(J, B) )
%   | | then return 0.32211460323909136;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06022996538640383;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08596383915912616;  // std dev = 0.027, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.265225305333313;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3027898550170861;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2562956967209641;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.31169612395811325;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( student(A) )
%   | then if ( ta(J, B, K) )
%   | | then return -0.07891484760860515;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06754613427818716;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0820063708242549;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then return 0.1597943135679108;  // std dev = 0.277, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( projectmember(G, B) )
%   | | then return -0.3785636098463622;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(H, I, F), publication(J, I) )
%   | | | then return -0.025184994773157665;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.12486038989675315;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.2045330787066374;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.22384881756843886;  // std dev = 1.242, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07309179721231948;  // std dev = 0.033, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then if ( projectmember(D, B), ta(E, A, F) )
%   | then return -0.29869125137409397;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.17331220464892425;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.1810637028132879;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23149404682694374;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( student(A), publication(I, A) )
%   | then return 0.0144112717159402;  // std dev = 0.254, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( hasposition(B, J), student(A) )
%   | | then return -0.19731246538776911;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.11255018880271803;  // std dev = 0.284, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04257620367405059;  // std dev = 0.567, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), student(A) )
%   then if ( publication(C, B) )
%   | then return 0.17471447205372576;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.7563401318343924;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then if ( projectmember(G, B) )
%   | | then return -0.27619528104668056;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(H, I, E), publication(J, I) )
%   | | | then return -0.06072996666658889;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1418876959539884;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.05205086081034523;  // std dev = 0.269, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( hasposition(B, L), student(A) )
%   | | | then return -0.15538385291251772;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06844360258258426;  // std dev = 0.752, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.470', 'seconds']
Refined model CLL: -0.245419


******************************************
Best model found
******************************************
Results 

CLL : -0.237074 

AUC ROC : 0.949282 

AUC PR : 0.286562 

Precision : 0.136571 

Recall : 0.927835 

F1 : 0.238095 

Total Learning Time : 4.019 

Total Inference Time : 0.8183398246765137 

Total revision time: 6.43124109840393
Best scored revision CLL: -0.245419


Results 

CLL : -0.237074 

AUC ROC : 0.949282 

AUC PR : 0.286562 

Precision : 0.136571 

Recall : 0.927835 

F1 : 0.238095 

Total Learning Time : 6.567197147369384 

Total Inference Time : 0.8183398246765137 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.002
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.17924985253070358;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.15599947576370785;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.16579355603382273;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.1189927483315441;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08312321503804102;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.12601185093133135;  // std dev = 4.672, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2503322350901746;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.093705816912128;  // std dev = 4.702, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.2063328725805137;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.056586799014165724;  // std dev = 4.725, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03685045483561744;  // std dev = 4.743, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18845677113411638;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.12397403672461853;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.055', 'seconds']
Parameter learned model CLL:-0.356416 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.875, 74, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.875, 74, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.757, 64, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.83, 70, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.885, 75, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.672, 58, 35], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.702, 60, 35], 'true,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 24, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.725, 70, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.743, 74, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.437, 45, 35], 'false,false,false': [0.0, 0, 0]}]
{'': [0.21799511825604045, nan], 'true': [0.21799511825604045, nan]}
{'': [0.2179951182560394, nan]}
{'': [0.22854810733598563, nan], 'true': [0.22854810733598563, nan], 'true,true': [0.22854810733598563, nan]}
{'': [nan, 0.2222222222222219], 'false': [nan, 0.2222222222222219], 'false,false': [0.2222222222222219, nan]}
{'': [0.2169421487603315, nan], 'true': [nan, 0.2169421487603315]}
{'': [0.22116411534353797, nan], 'true': [0.23470921493814245, -2.5620531337503614e-17], 'true,false': [-2.5620531337503614e-17, nan]}
{'': [0.23268698060941764, 9.25185853854297e-18], 'true': [0.23268698060941764, nan], 'false': [9.25185853854297e-18, nan], 'false,true': [9.25185853854297e-18, nan]}
{'': [0.21261008515886723, nan], 'true': [0.21261008515886723, nan]}
{'': [0.20642159709081168, nan], 'true': [nan, 0.2064215970908115]}
{'': [-2.2204460492503132e-17, 0.2460937500000006], 'false': [nan, 0.2460937500000006], 'false,false': [0.2460937500000006, nan], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 8.348
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( projectmember(J, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.14185106490048777;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.7254232309641753;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.50517232473028;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | then return 0.7711080304712916;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4866033132790481;  // std dev = 1.905, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.12544463852839133;  // std dev = 2.79e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(E, C), publication(E, B) )
%   | | | then return 0.3342173329682264;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5708278061852734;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(D, C) )
%   | | | then return -0.14541245619802423;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07880891282334643;  // std dev = 1.437, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( ta(F, A, G) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.3749036481901688;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16944162768142634;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.2713544419199227;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5678090668256899;  // std dev = 0.866, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.11231637819360628;  // std dev = 4.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E), publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.4128567691290752;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1744659356381657;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.6141635992819782;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4128283586320274;  // std dev = 1.312, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( ta(H, A, I) )
%   | | then return 0.026787367198786428;  // std dev = 1.057, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.3501761936974499;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1385560118827054;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.10159632948783635;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.35334229321736643;  // std dev = 0.174, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.16304141517975;  // std dev = 0.822, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3846955449179523;  // std dev = 0.979, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.06370908612992265;  // std dev = 2.104, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else return -0.09269127618926104;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.12177389993609837;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2589349547092113;  // std dev = 0.767, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return -0.19401699738289438;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1163686943290934;  // std dev = 2.096, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( student(B) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return 0.14146221614402676;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5301208548877965;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.22889052324827713;  // std dev = 0.133, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.0745139076365222;  // std dev = 2.248, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( professor(B) )
%   | then return 0.2024164802186097;  // std dev = 0.139, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( publication(D, A) )
%   | then if ( professor(B), student(A) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.04853468456854912;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.23436702164175693;  // std dev = 1.490, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.12968104315994447;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09497405449713137;  // std dev = 1.906, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.16834650540760004;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.29462049951163705;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return -0.2128480402640471;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05450306392332758;  // std dev = 1.281, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( student(B) )
%   | then return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then return 0.2017008506460739;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(J, A), student(A) )
%   | | | then return -0.28134096542474807;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02329809729473653;  // std dev = 1.454, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.07372932602356479;  // std dev = 0.057, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( professor(B) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return -0.015949514212435772;  // std dev = 1.135, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.34214082313170424;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.029765699142735705;  // std dev = 1.036, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.24582673239764657;  // std dev = 1.416, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.889', 'seconds']
Refined model CLL: -0.228877


******************************************
Best model found
******************************************
Results 

CLL : -0.213522 

AUC ROC : 0.949343 

AUC PR : 0.421636 

Precision : 0.204204 

Recall : 0.871795 

F1 : 0.3309 

Total Learning Time : 8.348 

Total Inference Time : 1.532041072845459 

Total revision time: 11.96658811569214
Best scored revision CLL: -0.228877


Results 

CLL : -0.213522 

AUC ROC : 0.949343 

AUC PR : 0.421636 

Precision : 0.204204 

Recall : 0.871795 

F1 : 0.3309 

Total Learning Time : 12.057636356353761 

Total Inference Time : 1.532041072845459 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.839
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.20902612808196822;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.19438943954366883;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.1789998206629208;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.1420085770214463;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0581558764014148;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.07345282389219586;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2655302269552619;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.1120572061824305;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21704842126841714;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.05828231262258823;  // std dev = 3.516, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.011138244646537385;  // std dev = 3.635, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19300860229257574;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.07405086512494524;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.094', 'seconds']
Parameter learned model CLL:-0.385425 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.603, 37, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.568, 35, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.529, 33, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.549, 34, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.708, 44, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.636, 39, 20], 'true,false,true': [2.11e-08, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [3.487, 31, 20], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.516, 40, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.635, 45, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [7.45e-09, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.487, 31, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22776238842720795, nan], 'true': [0.22776238842720795, nan]}
{'': [0.2314049586776863, nan]}
{'': [0.23495906016375892, nan], 'true': [0.23495906016375892, nan], 'true,true': [0.23495906016375892, nan]}
{'': [nan, 0.23319615912208475], 'false': [nan, 0.23319615912208475], 'false,false': [0.23319615912208475, nan]}
{'': [0.21484374999999983, nan], 'true': [nan, 0.21484374999999983]}
{'': [0.2040816326530617, nan], 'true': [0.224073542085608, 4.0371746350005693e-17], 'true,false': [4.0371746350005693e-17, nan]}
{'': [0.23836985774702033, -1.708035422500241e-17], 'true': [0.23836985774702033, nan], 'false': [-1.708035422500241e-17, nan], 'false,true': [-1.708035422500241e-17, nan]}
{'': [0.20603981612264635, nan], 'true': [0.20603981612264635, nan]}
{'': [0.2032538351443192, nan], 'true': [nan, 0.2032538351443193]}
{'': [5.046468293750712e-18, 0.23836985774702055], 'false': [nan, 0.23836985774702055], 'false,false': [0.23836985774702055, nan], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 5.993
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1.83e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.24553847277924223;  // std dev = 0.951, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7968845985500872;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.49553847277924223;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.01173963952532917;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.12544463852839133;  // std dev = 2.11e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A) )
%   | then if ( publication(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.20638998216467916;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.34576449832726147;  // std dev = 1.341, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B), publication(E, A) )
%   | then return 0.023071665590964498;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.12039287272053505;  // std dev = 0.133, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(E, F, D), tempadvisedby(F, G) )
%   | | then return 0.5606118994008098;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5322357290048856;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(H, A) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37944192815635674;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5251158670642448;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10087784886472555;  // std dev = 0.000727, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.41884078020528154;  // std dev = 0.200, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( professor(B), publication(F, B) )
%   | then if ( tempadvisedby(G, B) )
%   | | then if ( student(A), ta(H, G, I) )
%   | | | then return 0.05206710166389535;  // std dev = 1.318, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.22356666610071974;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.4026227965801905;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2031227244456341;  // std dev = 0.563, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( professor(B), publication(L, A) )
%   | | then return 0.11049245582989255;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return -0.2667590867309269;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09207432192245987;  // std dev = 1.18e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.2863218684497316;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05425489945652344;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.2726170182917099;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.39098123585958766;  // std dev = 0.368, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0853236037723182;  // std dev = 0.032, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.20851060082286477;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24088262651090647;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | then return -0.11135989368849634;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15651455977163126;  // std dev = 0.953, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( publication(K, A), ta(L, A, M) )
%   | | then return -0.1455444448700772;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( publication(N, A) )
%   | | | then return -0.04380265183331283;  // std dev = 0.756, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.1083549128449419;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07574275057790023;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.17639043116179579;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19962646340722381;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(G, B), student(A) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.03153800407417455;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.26422357731065094;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( professor(A) )
%   | | | then return -0.06506301004526908;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13361269464004447;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then return -0.1447900201886584;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.07205065249543444;  // std dev = 0.018, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then if ( publication(C, D), professor(D) )
%   | then if ( tempadvisedby(E, D), publication(F, E) )
%   | | then return -0.07738458388493269;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15428330323842726;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2761910960401531;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | then return 0.2227182917026977;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( professor(B) )
%   | | then return -0.2973586149262225;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.06792350066968306;  // std dev = 0.011, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06472724451276426;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(H, I, G), publication(E, I) )
%   | | | then return 0.15105730214299484;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26931048259275087;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.16977276299571978;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.112838567069887;  // std dev = 0.752, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( ta(J, A, K), publication(L, A) )
%   | | then if ( publication(M, B) )
%   | | | then return -0.0600029534144448;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14608361548181165;  // std dev = 0.298, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return -0.0644115258664563;  // std dev = 0.008, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.010213718678011446;  // std dev = 0.662, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.178', 'seconds']
Refined model CLL: -0.167524


******************************************
Best model found
******************************************
Results 

CLL : -0.230557 

AUC ROC : 0.942122 

AUC PR : 0.310422 

Precision : 0.167476 

Recall : 0.741935 

F1 : 0.273267 

Total Learning Time : 5.993 

Total Inference Time : 0.8908729553222656 

Total revision time: 8.438695652008057
Best scored revision CLL: -0.167524


Results 

CLL : -0.230557 

AUC ROC : 0.942122 

AUC PR : 0.310422 

Precision : 0.167476 

Recall : 0.741935 

F1 : 0.273267 

Total Learning Time : 8.529743892669678 

Total Inference Time : 0.8908729553222656 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.761
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.11978909482177633;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.13327641659379116;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.1997305892301042;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11566445393178566;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.1427740622127313;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2663168468781776;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.06487395183556809;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21760004197309052;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.06642559773103938;  // std dev = 2.331, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04302987974152706;  // std dev = 2.363, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19975090675061155;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.013517889137716906;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.152', 'seconds']
Parameter learned model CLL:-0.425797 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [2.4, 16, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [2.527, 22, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [2.471, 19, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.306, 13, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.4, 16, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.306, 13, 9], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.4, 16, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 5, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [2.331, 17, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.363, 17, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.426, 17, 9], 'false,false,false': [0.0, 0, 0]}]
{'': [0.23040000000000005, nan], 'true': [0.23040000000000005, nan]}
{'': [0.20603537981269487, nan]}
{'': [0.21811224489795933, nan], 'true': [0.21811224489795933, nan], 'true,true': [0.21811224489795933, nan]}
{'': [nan, 0.2417355371900827], 'false': [nan, 0.2417355371900827], 'false,false': [0.2417355371900827, nan]}
{'': [0.23039999999999988, nan], 'true': [nan, 0.23039999999999988]}
{'': [0.234375, nan], 'true': [0.24173553719008264, 0.0], 'true,false': [0.0, nan]}
{'': [0.23039999999999985, 5.551115123125783e-18], 'true': [0.23039999999999985, nan], 'false': [5.551115123125783e-18, nan], 'false,true': [5.551115123125783e-18, nan]}
{'': [0.2090227412893299, nan], 'true': [0.2090227412893299, nan]}
{'': [0.21467124535282592, nan], 'true': [nan, 0.21467124535282595]}
{'': [0.0, 0.22633136094674539], 'false': [nan, 0.22633136094674539], 'false,false': [0.22633136094674539, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 2.265
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.5319045176838226;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.3702344611144839;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.08761184788893311;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5781068421464478;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.546473406403819;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2723947448366002;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.13387881278605634;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3738526640239304;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( publication(E, A) )
%   | | then return -0.06427410413505269;  // std dev = 0.945, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return -0.04028277090539719;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2908917426425492;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.332180195020741;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09070208410251966;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then return 0.2662562015408596;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return -0.377280009724915;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2451388764808937;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return -0.08874292138772356;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.20081236208630693;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06307538704443258;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.2615799099996446;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0300478115768546;  // std dev = 0.784, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.197', 'seconds']
Refined model CLL: -0.173868


******************************************
Best model found
******************************************
Results 

CLL : -0.314425 

AUC ROC : 0.906038 

AUC PR : 0.120401 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.265 

Total Inference Time : 0.6186878681182861 

Total revision time: 4.21678516960144
Best scored revision CLL: -0.173868


Results 

CLL : -0.314425 

AUC ROC : 0.906038 

AUC PR : 0.120401 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.307833410263061 

Total Inference Time : 0.6186878681182861 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.011
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.20551735615214253;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.20624584528872666;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.1440606088911137;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.15129010388240619;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10376351037253734;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.1363219871400209;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.27108542026738713;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.12423122266096676;  // std dev = 4.363, 78.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.22093808900010037;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.047427299801366216;  // std dev = 4.506, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03501021334572743;  // std dev = 4.462, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.1980211216117486;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.09613825582845802;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.057', 'seconds']
Parameter learned model CLL:-0.384029 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.641, 62, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.541, 55, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.654, 63, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.541, 55, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.614, 60, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.422, 48, 33], 'true,false,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.363, 45, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 24, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.506, 60, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.462, 66, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.49e-08, 23, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.299, 42, 33], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22670360110803467, nan], 'true': [0.22670360110803467, nan]}
{'': [0.2343750000000002, nan]}
{'': [0.22558593749999997, nan], 'true': [0.22558593749999997, nan], 'true,true': [0.22558593749999997, nan]}
{'': [nan, 0.2343749999999999], 'false': [nan, 0.2343749999999999], 'false,false': [0.2343749999999999, nan]}
{'': [0.22892819979188322, nan], 'true': [nan, 0.22892819979188322]}
{'': [0.2110933423112532, nan], 'true': [0.24142661179698202, -7.930164461608261e-17], 'true,false': [-7.930164461608261e-17, nan]}
{'': [0.24408284023668658, -9.25185853854297e-18], 'true': [0.24408284023668658, nan], 'false': [-9.25185853854297e-18, nan], 'false,true': [-9.25185853854297e-18, nan]}
{'': [0.2182956443376442, nan], 'true': [0.2182956443376442, nan]}
{'': [0.20108701758155467, nan], 'true': [nan, 0.20108701758155448]}
{'': [9.654113257610057e-18, 0.24639999999999954], 'false': [nan, 0.24639999999999954], 'false,false': [0.24639999999999954, nan], 'true': [9.654113257610057e-18, nan], 'true,true': [9.654113257610057e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 11.448
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(C, G), tempadvisedby(H, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048777;  // std dev = 1.49e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then return 0.7432043875779946;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5670719622367217;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(F, A, G), publication(H, B) )
%   | | then if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.611027790007118;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return 0.032697902317564156;  // std dev = 1.235, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.358928133115042;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.12544463852839124;  // std dev = 4.59e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6023069292209295;  // std dev = 0.179, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), ta(E, A, F) )
%   | | then return 0.49237037096258174;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.32761244716835425;  // std dev = 1.706, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.20854641569785418;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, F) )
%   | | | then return 0.21180205771843638;  // std dev = 1.096, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.523878470584395;  // std dev = 0.330, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.054472665537537414;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.43661119030541934;  // std dev = 0.888, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.0974483892238508;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return -0.502147794287784;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(G, A, H), ta(G, I, E) )
%   | | | then return -0.06341428527951713;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.33550121939170285;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(J, B), ta(K, A, L) )
%   | | then return 0.45469146952729395;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(M, B), publication(M, A) )
%   | | | then return 0.37879685509166217;  // std dev = 0.153, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.15921700296730634;  // std dev = 1.852, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.09269127618926104;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2871823879120935;  // std dev = 0.161, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3173599812841571;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.03856923529020852;  // std dev = 1.730, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18301679770727042;  // std dev = 1.642, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( publication(E, F), ta(G, F, H) )
%   | | then if ( professor(B), ta(G, A, H) )
%   | | | then return 0.251805684369672;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.003778669966286341;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.23309571368901322;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25533155864901813;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then return 0.24174307973135628;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.008190012878813602;  // std dev = 2.504, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109179;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.21019074177493877;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18892169592344324;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.05242670230383288;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1415283639957871;  // std dev = 1.209, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( ta(I, A, J), publication(K, A) )
%   | | then return 0.32878950565000564;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.1574469665288;  // std dev = 0.932, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2632887974132693;  // std dev = 0.745, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07400178845344021;  // std dev = 0.027, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(C, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.17799951104124098;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16168743226002105;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(C, H), tempadvisedby(I, H) )
%   | | | then return -0.08019384311879471;  // std dev = 1.444, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.16345969704859448;  // std dev = 0.729, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | then if ( publication(K, L), ta(M, L, N) )
%   | | | then return 0.30829827732376786;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1329776774930119;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(P, A, Q), publication(R, B) )
%   | | | then return 0.2691262560496735;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35123590316081116;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06848569610073553;  // std dev = 0.005, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06414294256452123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( publication(E, B), publication(E, A) )
%   | then if ( publication(E, F), tempadvisedby(G, F) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.17857641256329174;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13253444453875554;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10122422697727713;  // std dev = 0.218, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then if ( ta(M, A, N), ta(M, P, L) )
%   | | | then return -0.48407163884463067;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13560515457663647;  // std dev = 0.570, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(Q, A, R), tempadvisedby(S, B) )
%   | | | then return 0.05874398837068685;  // std dev = 1.163, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.06567587771379195;  // std dev = 2.095, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.573', 'seconds']
Refined model CLL: -0.230644


******************************************
Best model found
******************************************
Results 

CLL : -0.223848 

AUC ROC : 0.956245 

AUC PR : 0.429665 

Precision : 0.179426 

Recall : 0.9375 

F1 : 0.301205 

Total Learning Time : 11.448 

Total Inference Time : 1.4708502292633057 

Total revision time: 14.920116790771484
Best scored revision CLL: -0.230644


Results 

CLL : -0.223848 

AUC ROC : 0.956245 

AUC PR : 0.429665 

Precision : 0.179426 

Recall : 0.9375 

F1 : 0.301205 

Total Learning Time : 15.011165031433105 

Total Inference Time : 1.4708502292633057 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.776
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.221785298735876;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.15548213976391706;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.18671881940662832;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.08256169396785264;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10796696961720435;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.1301508707338491;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.26009303170517567;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.2140904652806253;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.213227727006085;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.042936140709362684;  // std dev = 3.093, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028999478176663766;  // std dev = 3.127, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.190483709848131;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.055739763637874556;  // std dev = 3.052, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.241', 'seconds']
Parameter learned model CLL:-0.375512 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.191, 28, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.283, 33, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.147, 26, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.328, 36, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.23, 30, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.123, 25, 16], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.828, 16, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 20, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.093, 32, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.127, 31, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.05e-08, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.052, 26, 16], 'false,false,false': [0.0, 0, 0]}]
{'': [0.23140495867768546, nan], 'true': [0.23140495867768546, nan]}
{'': [0.21990837151187073, nan]}
{'': [0.23582766439909264, nan], 'true': [0.23582766439909264, nan], 'true,true': [0.23582766439909264, nan]}
{'': [nan, 0.2130177514792894], 'false': [nan, 0.2130177514792894], 'false,false': [0.2130177514792894, nan]}
{'': [0.22684310018903572, nan], 'true': [nan, 0.22684310018903572]}
{'': [0.2130177514792902, nan], 'true': [0.23795359904818578, -5.0464682937507114e-17], 'true,false': [-5.0464682937507114e-17, nan]}
{'': [0.24999999999999983, 0.0], 'true': [0.24999999999999983, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.1993525794034254, nan], 'true': [0.1993525794034254, nan]}
{'': [0.2080417443952223, nan], 'true': [nan, 0.20804174439522236]}
{'': [6.938893903907228e-18, 0.22174454478946382], 'false': [nan, 0.22174454478946382], 'false,false': [0.22174454478946382, nan], 'true': [6.938893903907228e-18, nan], 'true,true': [6.938893903907228e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 6.579
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 2.11e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), hasposition(B, E) )
%   | then if ( ta(C, F, D), tempadvisedby(F, G) )
%   | | then return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7321103098799092;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.4099393538905048;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13851283222126132;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, B), tempadvisedby(F, B) )
%   | | then if ( projectmember(G, B) )
%   | | | then return -0.04392280216801332;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4467999452202925;  // std dev = 0.967, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.0164663717186876;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.2422567801409176;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.6773575416623158;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.4692946197004362;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.3514312330331658;  // std dev = 0.942, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.12407342189106602;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.536297492301805;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( ta(H, A, I) )
%   | then return -0.11352380033096338;  // std dev = 0.152, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( ta(J, B, K) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( professor(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.004346499801245983;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( ta(F, D, G), ta(F, A, H) )
%   | | then return 0.3571651499970446;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.2866870440882087;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1177527656096206;  // std dev = 1.520, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return 0.333830633262779;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( publication(J, A), student(A) )
%   | then return -0.17569968503583638;  // std dev = 0.273, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then return 0.014266820951617664;  // std dev = 0.641, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.09276734498986779;  // std dev = 0.009, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( projectmember(F, B) )
%   | | then return 0.41986376461341346;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.19076098451040088;  // std dev = 1.166, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4071886451118323;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(H, A, I) )
%   | | then return -0.10527545130549006;  // std dev = 0.148, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( professor(A) )
%   | | | then return -0.09144176125345498;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.012971342391725729;  // std dev = 0.624, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then if ( ta(F, A, G), ta(F, E, H) )
%   | | then return 0.004576312379284131;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.405192470284538;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1387148764319645;  // std dev = 0.697, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( hasposition(B, K) )
%   | | then return -0.19641301589400406;  // std dev = 0.447, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( ta(L, B, M) )
%   | | | then return -0.07769706422153946;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.05275202664673308;  // std dev = 0.598, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08671068909096798;  // std dev = 0.096, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( ta(C, E, F), publication(G, E) )
%   | then if ( sameperson(A, E) )
%   | | then return -0.0555021152058632;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1126017373531831;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3187946043872348;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(H, B), student(A) )
%   | then if ( tempadvisedby(I, B) )
%   | | then return -0.22677302307148683;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.05042907413106754;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08340813307706406;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.15848815584597206;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.07179599910237829;  // std dev = 0.035, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), student(A) )
%   then if ( ta(D, A, E), professor(B) )
%   | then if ( tempadvisedby(F, B), ta(D, F, G) )
%   | | then return 0.2291715341495534;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(D, H, I), publication(J, H) )
%   | | | then return 0.3246784312380455;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26236489230196747;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08780696868849289;  // std dev = 0.693, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( ta(K, A, L), professor(B) )
%   | then return -0.3567751815651408;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.3214941592060248;  // std dev = 0.262, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06900139720819706;  // std dev = 0.074, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.07939702774708687;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( ta(E, A, F), publication(G, A) )
%   | then return -0.19164534529384109;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( hasposition(B, H) )
%   | | then if ( projectmember(I, B) )
%   | | | then return 0.21768510264388663;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02938045981199931;  // std dev = 1.526, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.08295686528115094;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.062409865764069365;  // std dev = 0.708, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.812', 'seconds']
Refined model CLL: -0.252367


******************************************
Best model found
******************************************
Results 

CLL : -0.229684 

AUC ROC : 0.935936 

AUC PR : 0.177592 

Precision : 0.17402 

Recall : 0.731959 

F1 : 0.281188 

Total Learning Time : 6.579 

Total Inference Time : 0.8897686004638672 

Total revision time: 9.002670984268189
Best scored revision CLL: -0.252367


Results 

CLL : -0.229684 

AUC ROC : 0.935936 

AUC PR : 0.177592 

Precision : 0.17402 

Recall : 0.731959 

F1 : 0.281188 

Total Learning Time : 9.09371922492981 

Total Inference Time : 0.8897686004638672 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.143
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17064893509951212;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.17064893509951237;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.20645109215029947;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14220317075952094;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18315112869236327;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09342757891067875;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.1528787844824989;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08420437408003004;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05082217837028424;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2125678559569675;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.20409881070969918;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.06595557503735222;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.1791548746228795;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11712739456077575;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07097174902779438;  // std dev = 4.772, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018461051016810073;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1396376183635693;  // std dev = 2.898, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2930411316781203;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.09465910642108757;  // std dev = 4.572, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03840326141723851;  // std dev = 4.656, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.252', 'seconds']
Parameter learned model CLL:-0.374537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.708, 44, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [3.211, 33, 15], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.549, 34, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.226, 34, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.529, 33, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.291, 39, 15]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.529, 33, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.279, 38, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.734, 46, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 9, 0], 'false,false,false,false': [2.958, 21, 15]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.666, 41, 20], 'false,false,true,true': [0.0, 7, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.084, 26, 15]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.772, 69, 35]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.721, 45, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.898, 22, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 8, 0], 'false,false,false,false': [4.572, 55, 35]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.656, 69, 35]}]
{'': [0.21484374999999956, 0.21484374999999947], 'true': [nan, 0.21484374999999956], 'true,false': [nan, 0.21484374999999956], 'false': [nan, 0.21484374999999947], 'false,false': [0.21484374999999947, nan]}
{'': [0.23319615912208458, 0.2124114952103286], 'false': [nan, 0.2124114952103286], 'false,false': [nan, 0.2124114952103286], 'false,false,false': [nan, 0.2124114952103286]}
{'': [nan, 0.21964009952733357], 'false': [nan, 0.21964009952733357], 'false,false': [0.23495906016375898, 0.200617283950617], 'false,false,true': [nan, 0.23495906016375898], 'false,false,false': [nan, 0.200617283950617]}
{'': [nan, 0.22011816790453534], 'false': [nan, 0.22011816790453467], 'false,false': [0.2349590601637595, 0.2029191883232464], 'false,false,false': [nan, 0.2029191883232464]}
{'': [nan, 0.2168494570690694], 'false': [0.211202938475666, 0.22222222222222188], 'false,false': [nan, 0.22222222222222188], 'false,false,false': [-6.1679056923619804e-18, 0.24305555555555525], 'false,true': [nan, 0.211202938475666], 'false,true,false': [nan, 0.211202938475666]}
{'': [nan, 0.21542561563776466], 'false': [0.22037086804622416, 0.2091055292465359], 'false,false': [0.0, 0.23200475907198065], 'false,false,false': [nan, 0.23200475907198065], 'false,false,true': [0.0, nan]}
{'': [nan, 0.21896189505424585], 'false': [nan, 0.21896189505424532], 'false,false': [nan, 0.21896189505424582], 'false,false,false': [nan, 0.21896189505424585]}
{'': [0.21301775147928967, 0.22706162051322004], 'false': [nan, 0.22706162051322004], 'false,false': [nan, 0.22706162051322004], 'false,false,false': [nan, 0.22706162051322004], 'true': [nan, 0.21301775147928967], 'true,false': [nan, 0.21301775147928967], 'true,false,false': [nan, 0.21301775147928975]}
{'': [nan, 0.22460302639634735], 'false': [nan, 0.22460302639634805], 'false,false': [nan, 0.22460302639634735], 'false,false,false': [-1.3877787807814457e-17, 0.2322974153948475]}
{'': [nan, 0.20848448973018024], 'false': [nan, 0.2084844897301801], 'false,false': [nan, 0.2084844897301801], 'false,false,false': [nan, 0.20848448973018024]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 7.457
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(D, F), sameperson(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048768;  // std dev = 5.77e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.47910989281367944;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(J, B), tempadvisedby(K, B) )
%   | | | then return -0.24177578627053567;  // std dev = 0.162, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3579199627007236;  // std dev = 1.471, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5336229886378556;  // std dev = 1.691, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else return -0.12544463852839155;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.5771395517245969;  // std dev = 0.124, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | | then return -0.23440070549232;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3455180561362693;  // std dev = 1.349, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.3021262322605522;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6401371109589997;  // std dev = 0.158, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.669232922487687;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1123163781936064;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.40987827190731946;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.46738023147432467;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.528271077026518;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return -0.07474060831264016;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1912107822843501;  // std dev = 2.281, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.1015963294878363;  // std dev = 7.45e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.4025616848773155;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.2301034495725648;  // std dev = 0.975, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.031990624633433176;  // std dev = 1.262, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.33420145053623146;  // std dev = 0.843, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15307673281439863;  // std dev = 1.725, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( tempadvisedby(D, B), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then return 0.27098442340521384;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.07945914905899465;  // std dev = 0.767, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( professor(B), publication(F, B) )
%   | | then if ( professor(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05747295673840569;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.10724383757779596;  // std dev = 0.172, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( projectmember(I, B) )
%   | | then return -0.38624130458982986;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.24393658429550655;  // std dev = 1.035, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.03800624105384068;  // std dev = 1.620, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.22624591342125466;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.003592427275937604;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.34863843046405496;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2337023140171414;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( projectmember(F, B) )
%   | then return 0.03326463568578827;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return -0.12610250523511218;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(H, A), professor(B) )
%   | | | then return 0.055510546203463136;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08460619484081647;  // std dev = 1.105, 64.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=2 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.1844831478317182;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(D, C) )
%   | | | then return -0.2377901978086896;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.042100541313827636;  // std dev = 0.939, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return 0.36499878705944466;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.2715072159584143;  // std dev = 0.801, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.07614593458482641;  // std dev = 1.538, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.0729742732158378;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06794095546990414;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( projectmember(E, B) )
%   | then return 0.2991410093658784;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.15361679566746594;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.02582824406920389;  // std dev = 0.949, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(J, A), professor(B) )
%   | | | then return -0.2114810591238641;  // std dev = 1.448, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.015351164605724556;  // std dev = 1.999, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.14534319485337135;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(D, C) )
%   | | | then return -0.17250772806205972;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.046516472004561084;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3044081317750123;  // std dev = 0.235, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(E, B), professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.06488430820774768;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( publication(E, F), tempadvisedby(F, G) )
%   | | | then return 0.01373430834876784;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13531141102287267;  // std dev = 0.767, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(H, A) )
%   | | then return -0.036813103720997845;  // std dev = 0.138, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return -0.133450993644598;  // std dev = 0.275, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.333', 'seconds']
Refined model CLL: -0.216816


******************************************
Best model found
******************************************
Results 

CLL : -0.227099 

AUC ROC : 0.95212 

AUC PR : 0.378617 

Precision : 0.19888 

Recall : 0.910256 

F1 : 0.326437 

Total Learning Time : 7.457 

Total Inference Time : 1.5070838928222656 

Total revision time: 11.334725952148437
Best scored revision CLL: -0.216816


Results 

CLL : -0.227099 

AUC ROC : 0.95212 

AUC PR : 0.378617 

Precision : 0.19888 

Recall : 0.910256 

F1 : 0.326437 

Total Learning Time : 11.375753021240234 

Total Inference Time : 1.5070838928222656 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.964
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.14497681572905669;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14154274242296555;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11686811429587073;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2058601143952916;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.06706930108672422;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1959288852693593;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1674909624539078;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2508335725498461;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09916642745015393;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.07261163247346655;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), publication(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0984964355923036;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08769056665806692;  // std dev = 3.572, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08584585190961418;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037577472510063395;  // std dev = 2.124, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.29271698906271876;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.111738149040325;  // std dev = 3.417, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.008372112331040269;  // std dev = 3.661, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.591', 'seconds']
Parameter learned model CLL:-0.400002 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.98, 28, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [2.207, 16, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [2.996, 29, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.207, 16, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.012, 30, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 11, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.079, 35, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 10, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.834, 21, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 4, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,false': 'publication(A, G), publication(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [2.98, 28, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.572, 37, 20]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.882, 23, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.124, 14, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 6, 0], 'false,false,false,false': [3.417, 29, 20]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.661, 47, 20]}]
{'': [0.2165377751338484, 0.21172022684310027], 'true': [nan, 0.2165377751338484], 'true,false': [nan, 0.2165377751338484], 'false': [nan, 0.21172022684310027], 'false,false': [0.21172022684310027, nan]}
{'': [0.2137188208616781, 0.21172022684310024], 'false': [nan, 0.21172022684310024], 'false,false': [nan, 0.21172022684310024], 'false,false,false': [nan, 0.21172022684310024]}
{'': [nan, 0.2204595566474515], 'false': [nan, 0.2204595566474515], 'false,false': [0.2109248242293138, 0.2376543209876542], 'false,false,false': [nan, 0.2376543209876542], 'false,false,true': [nan, 0.2109248242293138]}
{'': [nan, 0.21238873438684294], 'false': [nan, 0.21238873438684316], 'false,false': [0.19748263888888914, 0.2422145328719724], 'false,false,false': [nan, 0.2422145328719724]}
{'': [nan, 0.22781797372931523], 'false': [0.2361591695501728, 0.20659722222222243], 'false,true': [nan, 0.2361591695501728], 'false,true,false': [nan, 0.2361591695501728], 'false,false': [nan, 0.20659722222222243], 'false,false,false': [0.0, 0.2275000000000002]}
{'': [nan, 0.22179667574064518], 'false': [0.21653777513384861, 0.2326869806094183], 'false,false': [nan, 0.2326869806094183], 'false,false,false': [nan, 0.2326869806094183]}
{'': [nan, 0.223904004113277], 'false': [nan, 0.22390400411327713], 'false,false': [nan, 0.2239040041132771], 'false,false,false': [nan, 0.223904004113277]}
{'': [0.23070987654320982, 0.21488507946155486], 'true': [nan, 0.23070987654320982], 'true,false': [nan, 0.23070987654320982], 'true,false,false': [nan, 0.23070987654320996], 'false': [nan, 0.21488507946155486], 'false,false': [nan, 0.21488507946155486], 'false,false,false': [nan, 0.21488507946155486]}
{'': [nan, 0.22820556687835938], 'false': [nan, 0.22820556687835958], 'false,false': [nan, 0.22820556687835938], 'false,false,false': [-1.850371707708594e-17, 0.23830358290837841]}
{'': [nan, 0.19999421243952728], 'false': [nan, 0.19999421243952742], 'false,false': [nan, 0.19999421243952742], 'false,false,false': [nan, 0.19999421243952728]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 5.091
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.5403254606655847;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.754703569200004;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(H, B), student(A) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.032198858462289454;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( professor(B), student(A) )
%   | then return -0.007205816422951206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.12826398949027276;  // std dev = 0.080, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5699411736894228;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.6723824702575909;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.34589840058446314;  // std dev = 1.030, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.03362178312552268;  // std dev = 1.436, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else return -0.12286274167157747;  // std dev = 0.196, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.4288053050230561;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then return 0.07970423386362831;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35184886471387816;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then return 0.4951224630685503;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5941266236434547;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10742402351962065;  // std dev = 0.169, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B) )
%   | then if ( student(A), publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.2309004432810229;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4164935826267241;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.021828294004483828;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09108968795810783;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.16671062700645345;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( ta(I, A, J) )
%   | | then return 0.22768712331070878;  // std dev = 1.014, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.3851732301539597;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20649333608742437;  // std dev = 0.425, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( publication(E, A), tempadvisedby(F, B) )
%   | then return -0.011613828926291415;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.36353933896165663;  // std dev = 0.284, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(G, B), publication(G, A) )
%   | then if ( professor(A) )
%   | | then return -0.1353313152981808;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.03514800456576578;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2606680159124084;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( professor(B), student(A) )
%   | | | then return -0.4599600943439972;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09079551950705385;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( professor(B), publication(K, A) )
%   | | | then return 0.061514588159863846;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08435132475177654;  // std dev = 0.903, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E) )
%   | | then return 0.27710575049756936;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3689049703454157;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return -0.11663006662874882;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.19606921653869577;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09109350550710399;  // std dev = 0.214, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( publication(E, A) )
%   | then return 0.27324085234277484;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.01900086262481167;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( publication(F, B), publication(F, A) )
%   | then if ( professor(B), student(A) )
%   | | then return 0.19886617320944597;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11221786799799113;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then return -0.358806256815316;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( student(B) )
%   | | | then return -0.07512712533951198;  // std dev = 0.063, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.019975008511498502;  // std dev = 1.123, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06413600927285121;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( publication(E, F), tempadvisedby(F, G) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.17619246305976;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.33327925322066737;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A), ta(J, A, K) )
%   | | | then return 0.2359747078564083;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0711999880202913;  // std dev = 1.268, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( ta(L, A, M), publication(N, A) )
%   | | then if ( ta(L, P, Q), tempadvisedby(P, R) )
%   | | | then return -0.06608104878736387;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.19104040376149414;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return 0.003260511376669791;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07039250233183347;  // std dev = 0.049, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.17557173460671643;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.27125823165431656;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.13632841836274023;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24883445713925928;  // std dev = 0.265, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07598499817629839;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( student(B) )
%   | then return -0.06355006698175855;  // std dev = 0.053, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.15766881848514747;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.704', 'seconds']
Refined model CLL: -0.178962


******************************************
Best model found
******************************************
Results 

CLL : -0.242818 

AUC ROC : 0.938325 

AUC PR : 0.225957 

Precision : 0.139073 

Recall : 0.677419 

F1 : 0.230769 

Total Learning Time : 5.091 

Total Inference Time : 0.9048619270324707 

Total revision time: 7.789636306762695
Best scored revision CLL: -0.178962


Results 

CLL : -0.242818 

AUC ROC : 0.938325 

AUC PR : 0.225957 

Precision : 0.139073 

Recall : 0.677419 

F1 : 0.230769 

Total Learning Time : 7.830663375854492 

Total Inference Time : 0.9048619270324707 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.826
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.10321377852455527;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2920078170619877;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12552482914341093;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11252368494253531;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.04441782545903074;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2592241564209558;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.017724351457720635;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20872639851338887;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 7.78488802285936E-5;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), publication(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03226689921294686;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.011356068170236195;  // std dev = 2.537, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042153065881300224;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048052517234968055;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.186376947661641;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19714981820155195;  // std dev = 2.144, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017436006110870015;  // std dev = 2.331, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.580', 'seconds']
Parameter learned model CLL:-0.446869 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.279, 9, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [2.068, 11, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.225, 6, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.932, 8, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.16, 14, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.247, 7, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.871, 7, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.291, 10, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.871, 7, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,false': 'publication(A, G), publication(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.279, 9, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.537, 22, 9]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.247, 7, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 11, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 5, 0], 'false,false,false,false': [2.144, 8, 9]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.331, 19, 9]}]
{'': [0.14876033057851243, 0.23765432098765438], 'false': [nan, 0.23765432098765438], 'false,false': [0.23765432098765438, nan], 'true': [nan, 0.14876033057851243], 'true,false': [nan, 0.14876033057851243]}
{'': [0.18750000000000006, 0.24888888888888902], 'false': [nan, 0.24888888888888902], 'false,false': [nan, 0.24888888888888902], 'false,false,false': [nan, 0.24888888888888902]}
{'': [nan, 0.21771876790815678], 'false': [nan, 0.21771876790815678], 'false,false': [0.20408163265306117, 0.22222222222222238], 'false,false,false': [nan, 0.22222222222222238], 'false,false,true': [nan, 0.20408163265306117]}
{'': [nan, 0.23079705012337332], 'false': [nan, 0.2307970501233734], 'false,false': [0.17283950617283947, 0.24999999999999975], 'false,false,false': [nan, 0.24999999999999975]}
{'': [nan, 0.211462076355961], 'false': [0.13888888888888898, 0.25000000000000006], 'false,false': [nan, 0.25000000000000006], 'false,false,false': [nan, 0.25000000000000006], 'false,true': [nan, 0.13888888888888898], 'false,true,false': [nan, 0.13888888888888898]}
{'': [nan, 0.2021544891613266], 'false': [0.14876033057851237, 0.2326869806094184], 'false,false': [nan, 0.2326869806094184], 'false,false,false': [nan, 0.2326869806094184]}
{'': [nan, 0.2076739577109237], 'false': [nan, 0.2076739577109237], 'false,false': [nan, 0.2076739577109237], 'false,false,false': [nan, 0.2076739577109237]}
{'': [0.17283950617283955, 0.23765432098765438], 'false': [nan, 0.23765432098765438], 'false,false': [nan, 0.23765432098765438], 'false,false,false': [nan, 0.23765432098765438], 'true': [nan, 0.17283950617283955], 'true,false': [nan, 0.17283950617283955], 'true,false,false': [nan, 0.17283950617283952]}
{'': [nan, 0.234684938357947], 'false': [nan, 0.23468493835794693], 'false,false': [nan, 0.234684938357947], 'false,false,false': [-5.551115123125783e-18, 0.27027974292486756]}
{'': [nan, 0.1939837910068592], 'false': [nan, 0.1939837910068592], 'false,false': [nan, 0.1939837910068592], 'false,false,false': [nan, 0.1939837910068592]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 2.341
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( tempadvisedby(C, B) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.7816289395752953;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5735252546657348;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.3034809404114535;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.614582081495497;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(D, B), professor(A) )
%   | then return -0.21119279436140762;  // std dev = 0.242, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.23100067876173366;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.46463374708697075;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( sameperson(A, B) )
%   | then return -0.16320308540095488;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.5027517438411199;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20380143551916638;  // std dev = 0.830, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09233036775632239;  // std dev = 0.007, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.37972055539746014;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3093848770626561;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08458871465874482;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.2842659410531392;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(F, A) )
%   | then if ( publication(G, B) )
%   | | then return -0.17210250989822282;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0788462291760756;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( ta(H, A, I) )
%   | | then return -0.10887476064776623;  // std dev = 0.715, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.2525224022549293;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0788462291760756;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.2614876504706552;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06121716363548383;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( professor(A) )
%   | then return -0.18638160141413718;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07209324087016908;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.13547924934944588;  // std dev = 0.256, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then return 0.1870715322106118;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(H, A, I) )
%   | | then if ( ta(J, K, I), tempadvisedby(K, L) )
%   | | | then return -0.2783822392068603;  // std dev = 0.519, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.006172077046786219;  // std dev = 0.333, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.15598171882119757;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05054172841584573;  // std dev = 0.404, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then return -0.19832968324664277;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( student(A), professor(B) )
%   | then if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then return -0.1730637458174765;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22322398724817782;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( professor(A) )
%   | | then return -0.1522949102455173;  // std dev = 0.240, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06542887002242649;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.255', 'seconds']
Refined model CLL: -0.174709


******************************************
Best model found
******************************************
Results 

CLL : -0.352719 

AUC ROC : 0.905369 

AUC PR : 0.119173 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.341 

Total Inference Time : 0.6550264358520508 

Total revision time: 4.40790838432312
Best scored revision CLL: -0.174709


Results 

CLL : -0.352719 

AUC ROC : 0.905369 

AUC PR : 0.119173 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.448935453414917 

Total Inference Time : 0.6550264358520508 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.136
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2265699877310913;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.09732193514067396;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3467905525349633;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10244875448902967;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.255988480646819;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.1339743908337425;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1036276110916626;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043957894724977284;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2958740544577236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1416259455422767;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.12870947056713408;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.23814120710528583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06268334603755009;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05879054007146129;  // std dev = 4.649, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017347549882978062;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02493181403716652;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.25352706752810467;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.17926843628277284;  // std dev = 4.150, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -6.850004213150264E-4;  // std dev = 4.639, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.296', 'seconds']
Parameter learned model CLL:-0.372468 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.7, 49, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [2.974, 24, 14], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.758, 55, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.596, 13, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.711, 50, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.691, 15, 14]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.589, 40, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.95, 23, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.767, 56, 19], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [2.806, 18, 14]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.527, 36, 19], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.925, 22, 14]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.649, 67, 33]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73, 52, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.95, 23, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 24, 0], 'false,false,false,false': [4.15, 37, 33]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.639, 74, 33]}]
{'': [0.20134083044982648, 0.23268698060941778], 'false': [nan, 0.23268698060941778], 'false,false': [0.23268698060941778, nan], 'true': [nan, 0.20134083044982648], 'true,false': [nan, 0.20134083044982648]}
{'': [0.19083272461650833, 0.24965706447187946], 'false': [nan, 0.24965706447187946], 'false,false': [nan, 0.24965706447187946], 'false,false,false': [nan, 0.24965706447187946]}
{'': [nan, 0.21929435695515945], 'false': [nan, 0.21929435695515945], 'false,false': [0.19953791220331854, 0.24970273483947666], 'false,false,false': [nan, 0.24970273483947666], 'false,false,true': [nan, 0.19953791220331854]}
{'': [nan, 0.22505208470929502], 'false': [nan, 0.22505208470929525], 'false,false': [0.21832806664751533, 0.23520818115412692], 'false,false,false': [nan, 0.23520818115412692]}
{'': [nan, 0.20750515664330252], 'false': [0.18915555555555563, 0.24426078971533505], 'false,false': [nan, 0.24426078971533505], 'false,false,false': [0.0, 0.24609374999999986], 'false,true': [nan, 0.18915555555555563], 'false,true,false': [nan, 0.18915555555555563]}
{'': [nan, 0.23045226581081982], 'false': [0.226115702479339, 0.23361094987538686], 'false,false': [0.0, 0.23765432098765427], 'false,false,false': [nan, 0.23765432098765427], 'false,false,true': [0.0, nan]}
{'': [nan, 0.2161460889019954], 'false': [nan, 0.2161460889019959], 'false,false': [nan, 0.21614608890199566], 'false,false,false': [nan, 0.2161460889019954]}
{'': [0.1959928585598096, 0.23520818115412698], 'false': [nan, 0.23520818115412698], 'false,false': [nan, 0.23520818115412698], 'false,false,false': [nan, 0.23520818115412698], 'true': [nan, 0.1959928585598096], 'true,false': [nan, 0.1959928585598096], 'true,false,false': [nan, 0.1959928585598096]}
{'': [nan, 0.21882917537338578], 'false': [nan, 0.21882917537338506], 'false,false': [nan, 0.21882917537338578], 'false,false,false': [-5.551115123125783e-17, 0.24603199403639217]}
{'': [nan, 0.20112656698441828], 'false': [nan, 0.20112656698441891], 'false,false': [nan, 0.20112656698441891], 'false,false,false': [nan, 0.20112656698441828]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 6.996
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05814893509951221;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.6581489350995122;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.6581403934333488;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.42468600128852124;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.09648083165274686;  // std dev = 1.643, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.5656553863479211;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5580193346218546;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5880213513245809;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.5105488975929112;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.21225665698692164;  // std dev = 1.012, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.704579559061653;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.26445230601260095;  // std dev = 1.926, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.11231637819360642;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E), publication(F, B) )
%   | | then return 0.48021887461765034;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.129547525056759;  // std dev = 1.739, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.04695612562569449;  // std dev = 1.507, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( publication(H, A) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.33540102432959595;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5135160325064466;  // std dev = 0.296, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.24583967231305032;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.24583967231305018;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783621;  // std dev = 4.21e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(F, E) )
%   | | | then return 0.3873570173799792;  // std dev = 0.187, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.326217789353457;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.33119219314687115;  // std dev = 0.687, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.030284462775871334;  // std dev = 1.500, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( hasposition(A, J), sameperson(A, K) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(L, B) )
%   | | | then return 0.06605301179943958;  // std dev = 1.566, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.24564938411501933;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.24509133570424568;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3014634135502929;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return -0.1551873353931877;  // std dev = 1.108, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.20219076712029274;  // std dev = 1.121, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( hasposition(A, J), sameperson(A, K) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B) )
%   | | then if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.17590522161712677;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4494562836517355;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then return 0.23337219274592985;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return -0.15090758333609888;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2939678760103902;  // std dev = 1.115, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(F, A), ta(G, A, H) )
%   | | | then return 0.19249058636056246;  // std dev = 0.634, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0034392294057505276;  // std dev = 1.840, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( ta(I, A, J) )
%   | then if ( publication(K, A) )
%   | | then if ( publication(L, B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07234053360414872;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.10848963438201142;  // std dev = 0.105, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( ta(D, A, E), publication(C, B) )
%   | | then return -0.015342672864907647;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.44071953112087425;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08108955859510929;  // std dev = 1.334, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( ta(H, A, I), publication(J, B) )
%   | | then if ( ta(H, K, L), tempadvisedby(K, M) )
%   | | | then return 0.24178332706328629;  // std dev = 1.108, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.21073070473370661;  // std dev = 1.295, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return -0.016109295526228824;  // std dev = 0.665, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2364525196365795;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07512085297895667;  // std dev = 0.060, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06821210905871743;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( professor(B) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(E, F), tempadvisedby(G, F) )
%   | | | then return 0.1991888382444209;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1587598272299655;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return -0.04015169520048035;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.11325709676556162;  // std dev = 1.744, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else return -0.06830755003536479;  // std dev = 0.022, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, A) )
%   then if ( professor(A) )
%   | then return -0.07870174477908669;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.1460151207923199;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17688960475117604;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2503343308676417;  // std dev = 0.599, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( ta(H, A, I), publication(J, A) )
%   | then if ( professor(B) )
%   | | then return -0.17470915390136063;  // std dev = 1.089, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.06731427988430586;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return -0.23107993849821823;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07521109509364778;  // std dev = 2.017, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else return -0.0641290167401408;  // std dev = 0.040, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.440', 'seconds']
Refined model CLL: -0.227426


******************************************
Best model found
******************************************
Results 

CLL : -0.216512 

AUC ROC : 0.95598 

AUC PR : 0.511638 

Precision : 0.17037 

Recall : 0.8625 

F1 : 0.284536 

Total Learning Time : 6.996 

Total Inference Time : 1.3101532459259033 

Total revision time: 10.677119047164918
Best scored revision CLL: -0.227426


Results 

CLL : -0.216512 

AUC ROC : 0.95598 

AUC PR : 0.511638 

Precision : 0.17037 

Recall : 0.8625 

F1 : 0.284536 

Total Learning Time : 10.718146116256715 

Total Inference Time : 1.3101532459259033 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.982
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0399671169176941;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2719420385477882;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.35321377852455527;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20881876728175758;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06993041476455991;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20284820385797897;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.0025041377752018164;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11695503237544852;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041564966268102466;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.26905233322226735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1447407702260086;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.09231635864404887;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.2195161415362723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16308959834988343;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028967454384660828;  // std dev = 3.239, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.054759316511600147;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08409638580862791;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2268305295227244;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1233538005550967;  // std dev = 2.977, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03920124835652986;  // std dev = 3.045, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.433', 'seconds']
Parameter learned model CLL:-0.410071 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.809, 18, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [2.652, 17, 12], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.414, 4, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.712, 19, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.713, 11, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.652, 17, 12]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.777, 15, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.763, 21, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.732, 12, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [2.652, 17, 12]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [1.664, 9, 4], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.542, 14, 12]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.239, 34, 16]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.809, 18, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.613, 17, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 7, 0], 'false,false,false,false': [2.977, 20, 16]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.045, 31, 16]}]
{'': [0.14876033057851223, 0.24256837098691986], 'false': [nan, 0.24256837098691986], 'false,false': [0.24256837098691986, nan], 'true': [nan, 0.14876033057851223], 'true,false': [nan, 0.14876033057851223]}
{'': [0.2499999999999999, 0.23725286160249753], 'false': [nan, 0.23725286160249753], 'false,false': [nan, 0.23725286160249753], 'false,false,false': [nan, 0.23725286160249753]}
{'': [nan, 0.23051090566218083], 'false': [nan, 0.23051090566218083], 'false,false': [0.19555555555555548, 0.24256837098692044], 'false,false,false': [nan, 0.24256837098692044], 'false,false,true': [nan, 0.19555555555555548]}
{'': [nan, 0.21061927254733587], 'false': [nan, 0.21061927254733587], 'false,false': [0.16620498614958445, 0.23140495867768596], 'false,false,false': [nan, 0.23140495867768596]}
{'': [nan, 0.22355144056341625], 'false': [0.1874999999999999, 0.23999999999999974], 'false,false': [nan, 0.23999999999999974], 'false,false,false': [0.0, 0.24256837098692005], 'false,true': [nan, 0.1874999999999999], 'false,true,false': [nan, 0.1874999999999999]}
{'': [nan, 0.23499621286685093], 'false': [0.21301775147928997, 0.24453718027239799], 'false,false': [0.0, 0.24852071005917165], 'false,false,false': [nan, 0.24852071005917165], 'false,false,true': [0.0, nan]}
{'': [nan, 0.20978209763594918], 'false': [nan, 0.2097820976359494], 'false,false': [nan, 0.20978209763594913], 'false,false,false': [nan, 0.20978209763594918]}
{'': [0.14876033057851232, 0.23539404377385192], 'false': [nan, 0.23539404377385192], 'false,false': [nan, 0.23539404377385192], 'false,false,false': [nan, 0.23539404377385192], 'true': [nan, 0.14876033057851232], 'true,false': [nan, 0.14876033057851232], 'true,false,false': [nan, 0.14876033057851237]}
{'': [nan, 0.22285573824650587], 'false': [nan, 0.22285573824650587], 'false,false': [nan, 0.22285573824650587], 'false,false,false': [0.0, 0.2462259274093748]}
{'': [nan, 0.19725736256981632], 'false': [nan, 0.19725736256981613], 'false,false': [nan, 0.19725736256981613], 'false,false,false': [nan, 0.19725736256981632]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 5.119
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(C, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7816289395752953;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F), publication(G, B) )
%   | | | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4022836643523287;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2726157723201772;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.11097726363835375;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.7244417592013263;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.6209436491414324;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3142140601379965;  // std dev = 1.530, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, F), tempadvisedby(E, B) )
%   | | then return 0.48304810572516804;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, H, D), publication(I, H) )
%   | | | then return -0.0088942207766849;  // std dev = 1.265, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3694091074727265;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.5454017618595047;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.34491604242042545;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( hasposition(A, D), sameperson(A, E) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( ta(F, A, G), hasposition(B, H) )
%   | | then if ( ta(I, J, G), publication(K, J) )
%   | | | then return 0.5033946902930272;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2572568342674001;  // std dev = 0.939, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(L, B) )
%   | | | then return -0.16052349492247964;  // std dev = 0.878, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.01718794697936533;  // std dev = 0.899, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then return 0.27164209207004547;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10004693063193643;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( hasposition(A, D), sameperson(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( hasposition(B, F), student(A) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.1420781456864597;  // std dev = 1.379, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.44059663959610135;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( professor(B) )
%   | | | then return -0.019610901991520782;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08944638215627176;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then return 0.22133553893389196;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(D, B), ta(E, A, F) )
%   | then if ( professor(B) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.1514031135053108;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.052215527152200125;  // std dev = 1.296, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.08413587733498096;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B), ta(J, A, K) )
%   | | then return -0.4194942613286609;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(L, B), student(A) )
%   | | | then return -0.2862362613277734;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05114294275564183;  // std dev = 1.004, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), publication(C, B) )
%   | then return 0.1204315955744796;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( professor(A) )
%   | | then return -0.08058147506732267;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.5613752466385336;  // std dev = 0.201, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, G, H), publication(I, G) )
%   | | | then return -0.14366030635122742;  // std dev = 0.952, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13068466441544196;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4071751824955279;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.0760595955822241;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.07330587654032136;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( projectmember(E, B), ta(F, A, G) )
%   | then return -0.268539995666115;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | then if ( ta(K, L, J), publication(M, L) )
%   | | | then return 0.2401431215995605;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0019661781826785982;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(N, A), publication(P, B) )
%   | | | then return -0.19808914606837905;  // std dev = 0.678, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.02054387150849387;  // std dev = 1.237, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then return -0.07686574831088389;  // std dev = 0.651, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.33569908618809274;  // std dev = 0.236, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.11910396097395372;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2732349855158109;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(H, A, I) )
%   | then if ( ta(J, B, K) )
%   | | then return -0.07669823256256642;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.15888420698437228;  // std dev = 0.316, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(A) )
%   | | then return -0.07132743071608177;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( ta(L, B, M) )
%   | | | then return -0.06361905345844891;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09716163617272593;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.710', 'seconds']
Refined model CLL: -0.219657


******************************************
Best model found
******************************************
Results 

CLL : -0.215389 

AUC ROC : 0.950545 

AUC PR : 0.319371 

Precision : 0.18797 

Recall : 0.773196 

F1 : 0.302419 

Total Learning Time : 5.119 

Total Inference Time : 0.8449132442474365 

Total revision time: 7.780159641265869
Best scored revision CLL: -0.219657


Results 

CLL : -0.215389 

AUC ROC : 0.950545 

AUC PR : 0.319371 

Precision : 0.18797 

Recall : 0.773196 

F1 : 0.302419 

Total Learning Time : 7.821186710357666 

Total Inference Time : 0.8449132442474365 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.041
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2227322684328443;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1462662651861467;  // std dev = 4.854, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17296961804186922;  // std dev = 4.682, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1378791012879241;  // std dev = 4.683, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06461061442066092;  // std dev = 4.862, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1360812774094837;  // std dev = 4.559, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06852199051197859;  // std dev = 4.703, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038037110086429245;  // std dev = 4.767, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030561944401098853;  // std dev = 4.782, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035456355308528684;  // std dev = 4.724, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.106', 'seconds']
Parameter learned model CLL:-0.370753 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.49e-08, 23, 0], 'false,false,true': [4.716, 61, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.854, 79, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.682, 63, 35]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.683, 67, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.862, 84, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.559, 57, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.703, 69, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.767, 74, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.782, 72, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.724, 70, 35]}]
{'': [nan, 0.20761245674740622], 'false': [9.654113257610057e-18, 0.2316623263888904], 'false,false': [0.2316623263888904, nan], 'false,true': [nan, 9.654113257610057e-18]}
{'': [nan, 0.20672076158742128], 'false': [nan, 0.20672076158742128], 'false,false': [nan, 0.20672076158742128], 'false,false,false': [nan, 0.20672076158742128]}
{'': [nan, 0.22369436335104043], 'false': [nan, 0.22369436335104043], 'false,false': [nan, 0.22369436335104043], 'false,false,false': [nan, 0.22369436335104056]}
{'': [nan, 0.2150249565583637], 'false': [nan, 0.2150249565583637], 'false,false': [nan, 0.2150249565583637], 'false,false,false': [nan, 0.2150249565583637]}
{'': [nan, 0.1986587604341893], 'false': [nan, 0.1986587604341893], 'false,false': [nan, 0.1986587604341893], 'false,false,false': [nan, 0.1986587604341893]}
{'': [nan, 0.22588393832847214], 'false': [nan, 0.22588393832847214], 'false,false': [nan, 0.22588393832847214], 'false,false,false': [nan, 0.22588393832847214]}
{'': [nan, 0.21267573483831173], 'false': [nan, 0.21267573483831173], 'false,false': [nan, 0.21267573483831173], 'false,false,false': [nan, 0.21267573483831173]}
{'': [nan, 0.20848810887749444], 'false': [nan, 0.20848810887749444], 'false,false': [nan, 0.20848810887749444], 'false,false,false': [nan, 0.20848810887749444]}
{'': [nan, 0.21374088168203909], 'false': [nan, 0.21374088168203909], 'false,false': [nan, 0.21374088168203909], 'false,false,false': [nan, 0.21374088168203909]}
{'': [nan, 0.21250205778195475], 'false': [nan, 0.21250205778195505], 'false,false': [nan, 0.21250205778195475], 'false,false,false': [nan, 0.21250205778195475]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 6.465
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.4831489350995123;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.15769477985683927;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4315399591865954;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.7886573287083126;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.48096502101600497;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.1254446385283915;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.17016485225187905;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02906173117272646;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.4304639796736764;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.5947618600068673;  // std dev = 0.854, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.6975980625073265;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360635;  // std dev = 2.11e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.556341226817672;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04459083694456586;  // std dev = 1.383, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.580686912598414;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.37628344768426736;  // std dev = 0.338, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10159632948783634;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.39631117802617694;  // std dev = 0.288, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.3950449569651561;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.2653197127936707;  // std dev = 0.763, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.09802384162549037;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   else return -0.09269127618926101;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.31126331454055045;  // std dev = 0.271, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.27601203791320594;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return -0.03366464215439584;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.22899596263590047;  // std dev = 1.769, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.0851847513883968;  // std dev = 2.11e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2142396880376267;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return -0.34724158134794675;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.0018630062941609692;  // std dev = 1.477, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.21682759972129995;  // std dev = 1.267, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.0787767547310918;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.2855851014842627;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then return 0.18044608930341713;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.14639989588626737;  // std dev = 1.388, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.10140303456231788;  // std dev = 1.719, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 1.18e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.1534604193810044;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.2314010654655035;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A), ta(G, A, H) )
%   | | | then return -0.3410984217951778;  // std dev = 0.377, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.038375630431882746;  // std dev = 1.472, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( professor(B), publication(I, A) )
%   | then if ( professor(A) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.06257705238064266;  // std dev = 0.453, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( publication(J, B), ta(K, A, L) )
%   | | then return -0.0180540651310514;  // std dev = 0.123, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( professor(B), publication(M, B) )
%   | | | then return -0.15255811116851892;  // std dev = 1.316, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.06697438605341735;  // std dev = 0.818, 57.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.13459329974488693;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(D, C) )
%   | | | then return -0.2964706334412361;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0436258332639905;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.22423135712345998;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(E, A), professor(B) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.014052292195945068;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04803181795849776;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(E, G), ta(H, G, I) )
%   | | | then return -0.2969279840969337;  // std dev = 0.466, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.18220694696968634;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.05553567594806579;  // std dev = 0.185, 62.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.127', 'seconds']
Refined model CLL: -0.21807


******************************************
Best model found
******************************************
Results 

CLL : -0.206648 

AUC ROC : 0.951834 

AUC PR : 0.370904 

Precision : 0.222951 

Recall : 0.871795 

F1 : 0.355091 

Total Learning Time : 6.465 

Total Inference Time : 1.3206467628479004 

Total revision time: 9.910098749160767
Best scored revision CLL: -0.21807


Results 

CLL : -0.206648 

AUC ROC : 0.951834 

AUC PR : 0.370904 

Precision : 0.222951 

Recall : 0.871795 

F1 : 0.355091 

Total Learning Time : 10.04684062576294 

Total Inference Time : 1.3206467628479004 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.89
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( inphase(A, G) )
%   | | then return 0.30259337954395643;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24760166186828686;  // std dev = 3.362, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10157774816379274;  // std dev = 3.638, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11515665455811142;  // std dev = 3.563, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1322321551694963;  // std dev = 3.437, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11779079072503823;  // std dev = 3.410, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0041852956080760916;  // std dev = 3.685, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05368778120935097;  // std dev = 3.539, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03575574090776;  // std dev = 3.543, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.002359869066701669;  // std dev = 3.613, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.504', 'seconds']
Parameter learned model CLL:-0.40857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 14, 0], 'false,false,true': [3.333, 25, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.362, 27, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.638, 45, 20]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.563, 38, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.437, 33, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.41, 31, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.685, 48, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.539, 36, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.543, 38, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.613, 45, 20]}]
{'': [nan, 0.22407354208560717], 'false': [-1.1895246692412391e-17, 0.2469135802469133], 'false,false': [0.2469135802469133, nan], 'false,true': [nan, -1.1895246692412391e-17]}
{'': [nan, 0.2405555398025989], 'false': [nan, 0.2405555398025989], 'false,false': [nan, 0.2405555398025989], 'false,false,false': [nan, 0.2405555398025989]}
{'': [nan, 0.20363633345232313], 'false': [nan, 0.20363633345232313], 'false,false': [nan, 0.20363633345232313], 'false,false,false': [nan, 0.20363633345232332]}
{'': [nan, 0.21891321891134266], 'false': [nan, 0.21891321891134266], 'false,false': [nan, 0.21891321891134266], 'false,false,false': [nan, 0.21891321891134266]}
{'': [nan, 0.2228850014155146], 'false': [nan, 0.2228850014155146], 'false,false': [nan, 0.2228850014155146], 'false,false,false': [nan, 0.2228850014155146]}
{'': [nan, 0.22797058173759124], 'false': [nan, 0.22797058173759124], 'false,false': [nan, 0.22797058173759124], 'false,false,false': [nan, 0.22797058173759124]}
{'': [nan, 0.19967795137499572], 'false': [nan, 0.19967795137499572], 'false,false': [nan, 0.19967795137499572], 'false,false,false': [nan, 0.19967795137499572]}
{'': [nan, 0.22366522737786454], 'false': [nan, 0.22366522737786454], 'false,false': [nan, 0.22366522737786454], 'false,false,false': [nan, 0.22366522737786454]}
{'': [nan, 0.21646879147172177], 'false': [nan, 0.21646879147172177], 'false,false': [nan, 0.21646879147172177], 'false,false,false': [nan, 0.21646879147172177]}
{'': [nan, 0.20084140246246948], 'false': [nan, 0.2008414024624697], 'false,false': [nan, 0.20084140246246948], 'false,false,false': [nan, 0.20084140246246948]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 4.95
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( professor(B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(I, A), publication(I, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.35814893509951223;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.49399761434482087;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7439976143448208;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.40874113578563503;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06115425329646222;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else return -0.1254446385283913;  // std dev = 3.16e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.5818157197609236;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18748594222331508;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.6054774295828196;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7576443523072816;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A) )
%   | then if ( publication(C, A), student(A) )
%   | | then return 0.46313862740035877;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(E, B), publication(C, E) )
%   | | | then return -0.3880555357689896;  // std dev = 0.351, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0028532753149811147;  // std dev = 1.029, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.4623614781592156;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.568434200909342;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(H, A) )
%   | then if ( professor(B) )
%   | | then return 0.01150037110525041;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( publication(I, B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14564365603588567;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, E), ta(F, E, G) )
%   | | then if ( ta(H, D, I) )
%   | | | then return 0.14587290884739038;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07461557926609357;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.24875063451809437;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), ta(M, L, N) )
%   | | | then return 0.22419139862327175;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3217453078410115;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(P, A, Q) )
%   | | | then return 0.35182856250396577;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4893709112137732;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09184703531835528;  // std dev = 0.033, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.3631403272679096;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2762796324366382;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.4363608867189124;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.096451230909008;  // std dev = 1.083, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.29255183912570476;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08943303670656313;  // std dev = 0.097, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.33815822419759495;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.29601046609745324;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.29797258973931606;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.028172533940601218;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.26804757625252773;  // std dev = 0.293, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07922240296791745;  // std dev = 0.018, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.22701913307490368;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.12783818666165506;  // std dev = 0.464, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.17927818396282758;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30488642278890005;  // std dev = 0.219, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0733509076795617;  // std dev = 0.014, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return -0.19851916557815993;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.1798195208329738;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.035556548966588164;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( tempadvisedby(J, B), publication(H, B) )
%   | | | then return 0.20006812551066258;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05874993109283766;  // std dev = 0.390, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.23895486233941324;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06927663340993429;  // std dev = 0.060, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( publication(E, A) )
%   | then return 0.2423707997176634;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16623691826741452;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(F, B), publication(F, A) )
%   | then if ( professor(B), student(A) )
%   | | then return 0.15225212282107267;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06138033481718335;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return -0.14468493756950945;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.5180147165703998;  // std dev = 0.970, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.06795680071561637;  // std dev = 0.074, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.644', 'seconds']
Refined model CLL: -0.187871


******************************************
Best model found
******************************************
Results 

CLL : -0.266206 

AUC ROC : 0.943478 

AUC PR : 0.188375 

Precision : 0.145242 

Recall : 0.935484 

F1 : 0.251445 

Total Learning Time : 4.95 

Total Inference Time : 0.8269627094268799 

Total revision time: 7.446512069702148
Best scored revision CLL: -0.187871


Results 

CLL : -0.266206 

AUC ROC : 0.943478 

AUC PR : 0.188375 

Precision : 0.145242 

Recall : 0.935484 

F1 : 0.251445 

Total Learning Time : 7.583253946304321 

Total Inference Time : 0.8269627094268799 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.771
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( inphase(A, G) )
%   | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1533033716088668;  // std dev = 2.469, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16372006890781496;  // std dev = 2.414, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10674465409562675;  // std dev = 2.464, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16777121479267348;  // std dev = 2.317, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09989588509294495;  // std dev = 2.373, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08610494765318646;  // std dev = 2.376, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -4.4454864389198076E-4;  // std dev = 2.502, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09543521632897016;  // std dev = 2.331, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08345061693849506;  // std dev = 2.301, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.487', 'seconds']
Parameter learned model CLL:-0.453313 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 7, 0], 'false,false,true': [2.491, 20, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.469, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.414, 17, 9]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.464, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.317, 14, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.373, 17, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.376, 16, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.502, 22, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.331, 14, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.301, 14, 9]}]
{'': [nan, 0.1875000000000001], 'false': [-7.93016446160826e-18, 0.2140309155766945], 'false,false': [0.2140309155766945, nan], 'false,true': [nan, -7.93016446160826e-18]}
{'': [nan, 0.21015311164877112], 'false': [nan, 0.21015311164877112], 'false,false': [nan, 0.21015311164877112], 'false,false,false': [nan, 0.21015311164877112]}
{'': [nan, 0.22419875043583667], 'false': [nan, 0.22419875043583667], 'false,false': [nan, 0.22419875043583667], 'false,false,false': [nan, 0.22419875043583665]}
{'': [nan, 0.209297902442593], 'false': [nan, 0.209297902442593], 'false,false': [nan, 0.209297902442593], 'false,false,false': [nan, 0.209297902442593]}
{'': [nan, 0.23333241344441547], 'false': [nan, 0.23333241344441547], 'false,false': [nan, 0.23333241344441547], 'false,false,false': [nan, 0.23333241344441547]}
{'': [nan, 0.21661954451025045], 'false': [nan, 0.21661954451025045], 'false,false': [nan, 0.21661954451025045], 'false,false,false': [nan, 0.21661954451025045]}
{'': [nan, 0.22572492688740042], 'false': [nan, 0.22572492688740042], 'false,false': [nan, 0.22572492688740042], 'false,false,false': [nan, 0.22572492688740042]}
{'': [nan, 0.20190066814087254], 'false': [nan, 0.20190066814087254], 'false,false': [nan, 0.20190066814087254], 'false,false,false': [nan, 0.20190066814087254]}
{'': [nan, 0.2362729579046958], 'false': [nan, 0.2362729579046958], 'false,false': [nan, 0.2362729579046958], 'false,false,false': [nan, 0.2362729579046958]}
{'': [nan, 0.2301411237792314], 'false': [nan, 0.23014112377923132], 'false,false': [nan, 0.2301411237792314], 'false,false,false': [nan, 0.2301411237792314]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 2.163
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.26146360292241394;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.53055391526214;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2817652788073128;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10653961442139208;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.39934721485313956;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13497369680107815;  // std dev = 0.430, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09753194081853564;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return -0.005238064707043688;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.34892967298988664;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08442539267727023;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.2965568859926666;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08044772573834776;  // std dev = 0.038, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.24231342623050497;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08049195347782256;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07252350367832575;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return -0.003325059607518255;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.22192893403686567;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06779399152473811;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then return 0.21662162899365484;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(D, A), professor(B) )
%   | then return -0.26316721643933877;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.17428607280382383;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06363306193502573;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.250', 'seconds']
Refined model CLL: -0.190372


******************************************
Best model found
******************************************
Results 

CLL : -0.375938 

AUC ROC : 0.908618 

AUC PR : 0.123512 

Precision : 0.11954 

Recall : 1.0 

F1 : 0.213552 

Total Learning Time : 2.163 

Total Inference Time : 0.5415282249450684 

Total revision time: 4.084011301040649
Best scored revision CLL: -0.190372


Results 

CLL : -0.375938 

AUC ROC : 0.908618 

AUC PR : 0.123512 

Precision : 0.11954 

Recall : 1.0 

F1 : 0.213552 

Total Learning Time : 4.2207531776428215 

Total Inference Time : 0.5415282249450684 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.033
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( inphase(A, G) )
%   | | then return 0.27064893509951105;  // std dev = 4.403, 80.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22667606488677497;  // std dev = 4.392, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11301121608356487;  // std dev = 4.686, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10427578910995364;  // std dev = 4.624, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1250284581009022;  // std dev = 4.499, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07135418927970717;  // std dev = 4.605, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10479487391412089;  // std dev = 4.397, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09206477673086318;  // std dev = 4.360, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.009965496280580325;  // std dev = 4.675, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -1.339154653733815E-4;  // std dev = 4.642, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.158', 'seconds']
Parameter learned model CLL:-0.381134 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 19, 0], 'false,false,true': [4.403, 47, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.392, 51, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.686, 71, 33]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.624, 70, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.499, 57, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.605, 65, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.397, 55, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.36, 53, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.675, 75, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.642, 73, 33]}]
{'': [nan, 0.22222222222222363], 'false': [0.0, 0.2423437500000015], 'false,false': [0.2423437500000015, nan], 'false,true': [nan, 0.0]}
{'': [nan, 0.22964952887887538], 'false': [nan, 0.22964952887887538], 'false,false': [nan, 0.22964952887887538], 'false,false,false': [nan, 0.22964952887887538]}
{'': [nan, 0.21113419127741062], 'false': [nan, 0.21113419127741062], 'false,false': [nan, 0.21113419127741062], 'false,false,false': [nan, 0.21113419127741084]}
{'': [nan, 0.20754748813701018], 'false': [nan, 0.20754748813701018], 'false,false': [nan, 0.20754748813701018], 'false,false,false': [nan, 0.20754748813701018]}
{'': [nan, 0.22490490681759326], 'false': [nan, 0.22490490681759326], 'false,false': [nan, 0.22490490681759326], 'false,false,false': [nan, 0.22490490681759326]}
{'': [nan, 0.21637193268553587], 'false': [nan, 0.21637193268553587], 'false,false': [nan, 0.21637193268553587], 'false,false,false': [nan, 0.21637193268553587]}
{'': [nan, 0.2197308488503048], 'false': [nan, 0.2197308488503048], 'false,false': [nan, 0.2197308488503048], 'false,false,false': [nan, 0.2197308488503048]}
{'': [nan, 0.2210785663719119], 'false': [nan, 0.2210785663719119], 'false,false': [nan, 0.2210785663719119], 'false,false,false': [nan, 0.2210785663719119]}
{'': [nan, 0.20237208332731477], 'false': [nan, 0.20237208332731477], 'false,false': [nan, 0.20237208332731477], 'false,false,false': [nan, 0.20237208332731477]}
{'': [nan, 0.2032977611230823], 'false': [nan, 0.20329776112308218], 'false,false': [nan, 0.2032977611230823], 'false,false,false': [nan, 0.2032977611230823]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 8.577
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(F, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.7627255363209549;  // std dev = 0.140, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.653826923557083;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(I, A), ta(J, A, K) )
%   | | | then return -0.17404366681621206;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.47760408988591685;  // std dev = 1.664, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0.09327822062953846;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839124;  // std dev = 4.71e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( ta(E, C, F) )
%   | | | then return 0.21132869397400125;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5812069058325595;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.31891095000180936;  // std dev = 1.446, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07068428391108872;  // std dev = 1.278, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(I, K, J), publication(L, K) )
%   | | | then return 0.2250382760150906;  // std dev = 1.261, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.462718352648598;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.6558147018235118;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1123163781936064;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.5743329701194265;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.12595334252618104;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4555356354269302;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return -0.14898881452826263;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23443816117954333;  // std dev = 2.235, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.1015963294878363;  // std dev = 2.36e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.004392204435580897;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3648511372863838;  // std dev = 0.110, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, A) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.1398634013269509;  // std dev = 1.224, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.16447942121036557;  // std dev = 1.254, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return 0.19325802982809395;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2883179991176687;  // std dev = 1.305, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.09269127618926105;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), student(D) )
%   | | then if ( tempadvisedby(D, E) )
%   | | | then return 0.04530964124647954;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.23541733905775272;  // std dev = 2.094, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | else return -0.0573856432484474;  // std dev = 0.950, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.17972001843423546;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.08518475138839679;  // std dev = 2.47e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2503562636297593;  // std dev = 0.099, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, H, E), publication(I, H) )
%   | | | then return -0.03265172363723306;  // std dev = 1.883, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.21079050457143622;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.28091730347995425;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04056112681483721;  // std dev = 1.233, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( ta(E, F, D), publication(G, F) )
%   | then if ( tempadvisedby(H, B), publication(I, B) )
%   | | then if ( samecourse(C, E) )
%   | | | then return 0.16257560775695076;  // std dev = 0.567, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.31707016055781123;  // std dev = 0.950, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(G, A), publication(J, B) )
%   | | | then return 0.04843900435155104;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3940486795077503;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.331863112489105;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(K, B), publication(K, A) )
%   | then return 0.1706009636512944;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(L, A) )
%   | | | then return -0.12297546642484071;  // std dev = 1.118, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.2022677213749862;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( professor(A) )
%   | then return -0.08570358011526062;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1820410446508933;  // std dev = 0.095, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(G, I, F) )
%   | | then return -0.6449810323576081;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0035529183440125935;  // std dev = 0.974, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( professor(B), ta(J, A, K) )
%   | | then if ( tempadvisedby(L, B) )
%   | | | then return 0.23595141183070667;  // std dev = 0.814, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.02642175730670527;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.2127816391419739;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(F, G, D), publication(E, G) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.17658744183992256;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35350636921604267;  // std dev = 0.267, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(C, H, D), publication(I, H) )
%   | | | then return -0.35501620625938934;  // std dev = 0.306, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0010038711264663603;  // std dev = 1.462, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then return 0.39107422838276823;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(M, B), publication(M, A) )
%   | | | then return 0.1477025427186856;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.034640401516060765;  // std dev = 1.325, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.488', 'seconds']
Refined model CLL: -0.208348


******************************************
Best model found
******************************************
Results 

CLL : -0.196804 

AUC ROC : 0.946326 

AUC PR : 0.427987 

Precision : 0.198556 

Recall : 0.6875 

F1 : 0.308123 

Total Learning Time : 8.577 

Total Inference Time : 1.3590455055236816 

Total revision time: 12.003287658691406
Best scored revision CLL: -0.208348


Results 

CLL : -0.196804 

AUC ROC : 0.946326 

AUC PR : 0.427987 

Precision : 0.198556 

Recall : 0.6875 

F1 : 0.308123 

Total Learning Time : 12.140029535293579 

Total Inference Time : 1.3590455055236816 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.815
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22788126852751467;  // std dev = 3.055, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.164132116495049;  // std dev = 3.106, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12936479307495896;  // std dev = 3.115, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07401788644767736;  // std dev = 3.198, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11128295771274453;  // std dev = 3.069, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039138223554730504;  // std dev = 3.198, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.004064712953618588;  // std dev = 3.270, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01416125704658865;  // std dev = 3.237, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04216360353312226;  // std dev = 3.165, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.415', 'seconds']
Parameter learned model CLL:-0.387605 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 17, 0], 'false,false,true': [3.013, 21, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.055, 24, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.106, 28, 16]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.115, 29, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.198, 33, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.069, 26, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.198, 32, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.27, 39, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.237, 35, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.165, 30, 16]}]
{'': [nan, 0.20850480109739317], 'false': [-3.2653618371328133e-18, 0.2454346238130017], 'false,false': [0.2454346238130017, nan], 'false,true': [nan, -3.2653618371328133e-18]}
{'': [nan, 0.23325856627400166], 'false': [nan, 0.23325856627400166], 'false,false': [nan, 0.23325856627400166], 'false,false,false': [nan, 0.23325856627400166]}
{'': [nan, 0.21924453496356894], 'false': [nan, 0.21924453496356894], 'false,false': [nan, 0.21924453496356894], 'false,false,false': [nan, 0.21924453496356894]}
{'': [nan, 0.2156405950202317], 'false': [nan, 0.2156405950202317], 'false,false': [nan, 0.2156405950202317], 'false,false,false': [nan, 0.2156405950202317]}
{'': [nan, 0.20872780666110097], 'false': [nan, 0.20872780666110097], 'false,false': [nan, 0.20872780666110097], 'false,false,false': [nan, 0.20872780666110097]}
{'': [nan, 0.22426177427809332], 'false': [nan, 0.22426177427809332], 'false,false': [nan, 0.22426177427809332], 'false,false,false': [nan, 0.22426177427809332]}
{'': [nan, 0.21307841380331802], 'false': [nan, 0.21307841380331802], 'false,false': [nan, 0.21307841380331802], 'false,false,false': [nan, 0.21307841380331802]}
{'': [nan, 0.19437157094336044], 'false': [nan, 0.19437157094336044], 'false,false': [nan, 0.19437157094336044], 'false,false,false': [nan, 0.19437157094336044]}
{'': [nan, 0.20549711205417268], 'false': [nan, 0.20549711205417268], 'false,false': [nan, 0.20549711205417268], 'false,false,false': [nan, 0.20549711205417268]}
{'': [nan, 0.21782635572247913], 'false': [nan, 0.21782635572247913], 'false,false': [nan, 0.21782635572247913], 'false,false,false': [nan, 0.21782635572247913]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 4.97
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), projectmember(F, B) )
%   | then return 0.03320549123154841;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | then if ( ta(G, I, J) )
%   | | | then return 0.35801933462185453;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.756403160283695;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( professor(B), student(A) )
%   | then return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( ta(F, G, D), publication(H, G) )
%   | | then return 0.497560314043273;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7041456040093995;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, A) )
%   | | then return 0.08249138106673742;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.3324913810667374;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6644443070014825;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, E), inphase(E, F) )
%   | | then return 0.5202211192415739;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5964823158521212;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19455873324218623;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( ta(G, A, H) )
%   | then if ( ta(G, I, J), publication(K, I) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.21575917085659857;  // std dev = 0.280, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.007988916494449244;  // std dev = 0.600, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43165594326575996;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, H, E), publication(I, H) )
%   | | | then return 0.387303790251299;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04797576722883434;  // std dev = 1.233, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.29251650813382096;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09288964012247607;  // std dev = 1.271, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09575745505368415;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B), publication(E, B) )
%   | then return -0.17583158544588048;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.3304637988603261;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.050011877247707795;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14680668809061248;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( ta(I, B, J), student(A) )
%   | then return -0.08144766984334341;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( ta(K, A, L) )
%   | | then return -0.1406187444896208;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(A) )
%   | | | then return -0.08494611296344613;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.031484893014759624;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then return 0.1463029905568581;  // std dev = 0.402, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( publication(D, A), professor(B) )
%   | then return -0.46148301580446893;  // std dev = 0.465, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B), student(A) )
%   | | then if ( projectmember(E, B), publication(F, B) )
%   | | | then return 0.21127193199914543;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03038577682889859;  // std dev = 1.789, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.07814890207710562;  // std dev = 0.026, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( ta(E, F, D), publication(G, F) )
%   | then return 0.2778179920863526;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3789432743168053;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( projectmember(H, B), publication(I, B) )
%   | then return -0.23432678900557347;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(J, B), student(A) )
%   | | then return 0.15229193802200208;  // std dev = 0.612, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( professor(B), publication(K, B) )
%   | | | then return -0.13262190426382445;  // std dev = 0.690, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04783658560638707;  // std dev = 0.593, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, G), publication(H, F) )
%   | | then return 0.22147519071303395;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(C, I), inphase(I, J) )
%   | | | then return 0.24688683522147273;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3540265531803726;  // std dev = 0.989, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(K, B) )
%   | | then return -0.07171759200325951;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.08317094789470773;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06976118100407608;  // std dev = 0.047, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then return -0.23911362043426335;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( projectmember(F, B) )
%   | then return 0.2566712667473401;  // std dev = 0.701, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.13383935943628714;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.050925933403581335;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.10578328400506314;  // std dev = 1.274, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.572', 'seconds']
Refined model CLL: -0.237816


******************************************
Best model found
******************************************
Results 

CLL : -0.242024 

AUC ROC : 0.948617 

AUC PR : 0.224278 

Precision : 0.168932 

Recall : 0.896907 

F1 : 0.284314 

Total Learning Time : 4.97 

Total Inference Time : 0.7712650299072266 

Total revision time: 7.35508957862854
Best scored revision CLL: -0.237816


Results 

CLL : -0.242024 

AUC ROC : 0.948617 

AUC PR : 0.224278 

Precision : 0.168932 

Recall : 0.896907 

F1 : 0.284314 

Total Learning Time : 7.491831455230713 

Total Inference Time : 0.7712650299072266 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.9
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.20468358856485747;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.2077068567512208;  // std dev = 4.672, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.11839216612726298;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.17386717527043147;  // std dev = 4.608, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07048877962999713;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.2431648422925191;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.26408153451907435;  // std dev = 2.11e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.13476360169804097;  // std dev = 4.393, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21603177816207134;  // std dev = 1.83e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.025568236041526502;  // std dev = 4.623, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014073368895242562;  // std dev = 4.629, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18765299004805677;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.12029565598079839;  // std dev = 4.295, 74.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '941', 'milliseconds']
Parameter learned model CLL:-0.396375 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.782, 66, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.672, 58, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.885, 75, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.608, 54, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.875, 74, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.153, 34, 35], 'true,false,true': [2.11e-08, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.393, 43, 35], 'true,false': [0.0, 0, 0], 'false,true,true': [1.83e-08, 17, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.623, 69, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.629, 73, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.295, 39, 35], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22644838741300016, nan], 'true': [0.22644838741300016, nan]}
{'': [0.23470921493814256, nan]}
{'': [0.21694214876033174, nan], 'true': [0.21694214876033174, nan], 'true,true': [0.21694214876033174, nan]}
{'': [nan, 0.23860623658629002], 'false': [nan, 0.23860623658629002], 'false,false': [0.23860623658629002, nan]}
{'': [0.21799511825603973, nan], 'true': [nan, 0.21799511825603973]}
{'': [0.24134667387777212, nan], 'true': [0.24994749002310482, 2.6122894697062506e-17], 'true,false': [2.6122894697062506e-17, nan]}
{'': [0.24737015121630485, 1.959217102279688e-17], 'true': [0.24737015121630485, nan], 'false': [1.959217102279688e-17, nan], 'false,true': [1.959217102279688e-17, nan]}
{'': [0.20549247932147213, nan], 'true': [0.20549247932147213, nan]}
{'': [0.19838081100156374, nan], 'true': [nan, 0.1983808110015635]}
{'': [-2.7755575615628914e-17, 0.24926953981008027], 'false': [nan, 0.24926953981008027], 'false,false': [0.24926953981008027, nan], 'true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 10.345
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.14185106490048768;  // std dev = 4.71e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.728352773263003;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return 0.10510121752573909;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.43160481542880164;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return 0.24220578048654473;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.49460161141194875;  // std dev = 1.902, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.12544463852839155;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5732296116727985;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5531727516090716;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30317275160907164;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, B) )
%   | | then if ( ta(J, A, K), tempadvisedby(L, B) )
%   | | | then return -0.21266965591551665;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16025005828237132;  // std dev = 2.484, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.32276389153224266;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6539414387132165;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B), tempadvisedby(E, B) )
%   | | then return 0.4350621446121515;  // std dev = 0.122, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.22499086648120403;  // std dev = 0.153, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3171675200818276;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(G, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.4075297863843363;  // std dev = 1.150, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5199156264907613;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.3426240024965681;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.29875759859910245;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783627;  // std dev = 2.11e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then if ( publication(F, A), sameperson(B, E) )
%   | | | then return 0.24401822317547422;  // std dev = 0.412, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6000513468696198;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.3313843737504047;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.09906904223158067;  // std dev = 1.679, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( tempadvisedby(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.02716739843914744;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3621425862114906;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11433080801368413;  // std dev = 0.500, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.09269127618926105;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.30105375810422286;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 7.699269855546143E-5;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.07387453237745578;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2674749673171419;  // std dev = 1.691, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.21753098395886236;  // std dev = 0.095, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.044318049603584965;  // std dev = 1.513, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.33301691579334597;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( professor(B), publication(G, B) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.09686287757136089;  // std dev = 1.422, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.3809492889373088;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.052278595218938725;  // std dev = 0.543, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return -0.1084971777914666;  // std dev = 1.122, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E), publication(F, D) )
%   | | | then return 0.1107023354754862;  // std dev = 1.184, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.2509581397451276;  // std dev = 0.988, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return -0.1948885757274702;  // std dev = 0.925, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( ta(G, A, H) )
%   | | then return -0.16950409892152385;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return -0.14451752845547589;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3814545556082832;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07344043415355837;  // std dev = 0.011, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( publication(E, A), publication(E, B) )
%   | then return 0.18213221779895508;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4312600781148661;  // std dev = 0.242, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.15545261224052412;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.33016649532035014;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.20020898887761424;  // std dev = 1.267, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.07554329955960974;  // std dev = 1.268, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.06821413121551528;  // std dev = 0.009, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06419295971336106;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( ta(G, E, H), publication(I, A) )
%   | | | then return 0.13133829546152515;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19571859507443792;  // std dev = 1.349, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(J, A), projectmember(K, B) )
%   | | | then return 0.31820653328642673;  // std dev = 0.000803, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09146221204140506;  // std dev = 1.971, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else return -0.06396359944474325;  // std dev = 0.008, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.128', 'seconds']
Refined model CLL: -0.236222


******************************************
Best model found
******************************************
Results 

CLL : -0.224777 

AUC ROC : 0.951172 

AUC PR : 0.368508 

Precision : 0.202279 

Recall : 0.910256 

F1 : 0.331002 

Total Learning Time : 10.345 

Total Inference Time : 1.5918214321136475 

Total revision time: 13.886381978988648
Best scored revision CLL: -0.236222


Results 

CLL : -0.224777 

AUC ROC : 0.951172 

AUC PR : 0.368508 

Precision : 0.202279 

Recall : 0.910256 

F1 : 0.331002 

Total Learning Time : 13.978288049697877 

Total Inference Time : 1.5918214321136475 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.826
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.14386322081379785;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.21008910010526818;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.14837247342918983;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.11877679730295775;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08220999430741331;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.17517101493085027;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.25036089996276706;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.12351445062153713;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.20635319153152656;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.07752865638276941;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027230347709013454;  // std dev = 3.555, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.1902104202539375;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.10147077809046737;  // std dev = 3.362, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.261', 'seconds']
Parameter learned model CLL:-0.404003 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.78, 50, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.549, 34, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.636, 39, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.651, 40, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.695, 43, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.39, 27, 20], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [3.44, 29, 20], 'true,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 5, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.464, 34, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.555, 40, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.05e-08, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.362, 26, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.20408163265306076, nan], 'true': [0.20408163265306076, nan]}
{'': [0.23319615912208497, nan]}
{'': [0.22407354208560717, nan], 'true': [0.22407354208560717, nan], 'true,true': [0.22407354208560717, nan]}
{'': [nan, 0.22222222222222285], 'false': [nan, 0.22222222222222285], 'false,false': [0.22222222222222285, nan]}
{'': [0.2166792642983118, nan], 'true': [nan, 0.2166792642983118]}
{'': [0.22776238842720808, nan], 'true': [0.24445450430058815, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}
{'': [0.24156601416076634, 5.551115123125783e-18], 'true': [0.24156601416076634, nan], 'false': [5.551115123125783e-18, nan], 'false,true': [5.551115123125783e-18, nan]}
{'': [0.22223331322389034, nan], 'true': [0.22223331322389034, nan]}
{'': [0.2106418724584022, nan], 'true': [nan, 0.21064187245840216]}
{'': [1.1102230246251566e-17, 0.2457466918714559], 'false': [nan, 0.2457466918714559], 'false,false': [0.2457466918714559, nan], 'true': [1.1102230246251566e-17, nan], 'true,true': [1.1102230246251566e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 6.082
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( ta(D, A, E) )
%   | then return 0.7492293200691813;  // std dev = 0.126, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(C, A) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4187995083338206;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( student(B) )
%   | then return -0.12544463852839133;  // std dev = 2.11e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.031628939575295306;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B), student(A) )
%   | | then return 0.5537310271221841;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.41654989294791955;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18477595111113096;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( ta(G, A, H) )
%   | | then return 0.5480070934378327;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7204741726956199;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.5054261811136664;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41207710011670295;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.417911362794178;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.199202830035145;  // std dev = 0.945, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.05156249751931574;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11180279782355797;  // std dev = 0.239, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H), ta(G, I, F) )
%   | | | then return -0.2368289626271876;  // std dev = 0.997, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3799698689631994;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.31785580438005395;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4424972986583525;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11962616282606586;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( professor(B) )
%   | then return -0.22906866856544847;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0918364772257359;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.3196348778664316;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0691030040923678;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return 0.19448984256739882;  // std dev = 0.460, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.44886485833384854;  // std dev = 0.252, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( student(B) )
%   | | then return -0.08445881296479411;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.15093298706660682;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), publication(E, A) )
%   | then if ( ta(F, A, G), publication(H, B) )
%   | | then return 0.3231781927842682;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.22069679812166093;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.02176020114882739;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | then return 0.10333187489741859;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.015031452891354016;  // std dev = 0.390, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.10881481741853907;  // std dev = 0.628, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( student(B), publication(P, A) )
%   | then return -0.07815304702402558;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1500517080137356;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A), professor(B) )
%   then if ( publication(D, B), student(A) )
%   | then if ( publication(C, E), ta(F, E, G) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.19316934896161345;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2923370057259233;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0944108583954927;  // std dev = 0.405, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07145443019003273;  // std dev = 0.786, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( professor(B) )
%   | then if ( ta(H, A, I) )
%   | | then return -0.08835510653263424;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return -0.40897217355403087;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.20708253482543315;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.07240364262744163;  // std dev = 0.018, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.23596773789927253;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.16521696192185528;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return -0.2871952480013187;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0763835476283491;  // std dev = 1.300, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06928204450959123;  // std dev = 0.058, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( publication(E, B), student(B) )
%   | then return -0.061930600892705856;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08306678964464403;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( publication(F, B), professor(B) )
%   | then if ( publication(G, A), tempadvisedby(H, B) )
%   | | then if ( publication(F, H) )
%   | | | then return -0.49198581813689496;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.048465765392974876;  // std dev = 0.902, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.1452811724851258;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2469665407103117;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( student(B) )
%   | | then return -0.06407721385108547;  // std dev = 0.018, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.1423730826664471;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.3629502628744108;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.228', 'seconds']
Refined model CLL: -0.17734


******************************************
Best model found
******************************************
Results 

CLL : -0.246495 

AUC ROC : 0.946447 

AUC PR : 0.258817 

Precision : 0.164859 

Recall : 0.817204 

F1 : 0.274368 

Total Learning Time : 6.082 

Total Inference Time : 0.9258561134338379 

Total revision time: 8.588282592773437
Best scored revision CLL: -0.17734


Results 

CLL : -0.246495 

AUC ROC : 0.946447 

AUC PR : 0.258817 

Precision : 0.164859 

Recall : 0.817204 

F1 : 0.274368 

Total Learning Time : 8.680188663482665 

Total Inference Time : 0.9258561134338379 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.72
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.1176568198632693;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.09112439653787871;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.11687438986932477;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.135772032595454;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.17984634099795713;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.24872508757347148;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.24558887576162847;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.2051929681362977;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return -0.019728002916956172;  // std dev = 2.455, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.012545970353222037;  // std dev = 2.405, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.1727125571530414;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.11533713760097161;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.172', 'seconds']
Parameter learned model CLL:-0.441878 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [2.372, 15, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [2.527, 22, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [2.543, 23, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.471, 19, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.4, 16, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.268, 12, 9], 'true,false,true': [1.05e-08, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.058, 8, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [2.455, 22, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.405, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.225, 11, 9], 'false,false,false': [0.0, 0, 0]}]
{'': [0.23437500000000003, nan], 'true': [0.23437500000000003, nan]}
{'': [0.20603537981269524, nan]}
{'': [0.20214843750000008, nan], 'true': [0.20214843750000008, nan], 'true,true': [0.20214843750000008, nan]}
{'': [nan, 0.21811224489795888], 'false': [nan, 0.21811224489795888], 'false,false': [0.21811224489795888, nan]}
{'': [0.23039999999999972, nan], 'true': [nan, 0.23039999999999972]}
{'': [0.21403091557669454, nan], 'true': [0.24489795918367357, 1.3877787807814457e-17], 'true,false': [1.3877787807814457e-17, nan]}
{'': [0.24913494809688597, 0.0], 'true': [0.24913494809688597, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.19438785132199476, nan], 'true': [0.19438785132199476, nan]}
{'': [0.20650326433566507, nan], 'true': [nan, 0.2065032643356651]}
{'': [0.0, 0.2474999999999999], 'false': [nan, 0.2474999999999999], 'false,false': [0.2474999999999999, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 2.458
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.3861400788776211;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5909633829007739;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360638;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.10298447322691735;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4441563789602298;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.40316773579925597;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15346284154672243;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return 0.3071966929240614;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return -0.37402251961658645;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.2938875942269335;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then return 0.25544178337388507;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(H, A, I), publication(J, A) )
%   | | then return -0.29169364713380525;  // std dev = 0.522, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.1311131984893929;  // std dev = 0.828, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07506222447293462;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then return 0.2439457594597407;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(D, A, E) )
%   | then if ( ta(F, G, E), tempadvisedby(G, H) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.18147103517020327;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.2142161531820535;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07333806099089844;  // std dev = 0.000403, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.02056622867436919;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.1898639938106485;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0660679625652314;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06455210698168712;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( professor(B) )
%   | then return 0.1788740871082931;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0635526171435177;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.181', 'seconds']
Refined model CLL: -0.172902


******************************************
Best model found
******************************************
Results 

CLL : -0.35459 

AUC ROC : 0.90667 

AUC PR : 0.120486 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.458 

Total Inference Time : 0.6241705417633057 

Total revision time: 4.383343008041382
Best scored revision CLL: -0.172902


Results 

CLL : -0.35459 

AUC ROC : 0.90667 

AUC PR : 0.120486 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.47524907875061 

Total Inference Time : 0.6241705417633057 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.92
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.1724346493852252;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.1725705370664431;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.12208670534989044;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.18417840598585447;  // std dev = 4.476, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10302881538786934;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.21820936686489636;  // std dev = 4.149, 69.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.26005150270032035;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.1243956923789591;  // std dev = 4.342, 77.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.213198491080152;  // std dev = 1.05e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.04344310962899192;  // std dev = 4.460, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07471955879922683;  // std dev = 4.322, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19769106386384475;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.08220173450263706;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.052', 'seconds']
Parameter learned model CLL:-0.395065 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.757, 72, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.678, 65, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.767, 73, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.476, 51, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.654, 63, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.149, 36, 33], 'true,false,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.342, 44, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 17, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.46, 64, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.322, 52, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.299, 42, 33], 'false,false,false': [0.0, 0, 0]}]
{'': [0.21551020408163402, nan], 'true': [0.21551020408163402, nan]}
{'': [0.22334443981674382, nan]}
{'': [0.2144001423994305, nan], 'true': [0.2144001423994305, nan], 'true,true': [0.2144001423994305, nan]}
{'': [nan, 0.2385204081632653], 'false': [nan, 0.2385204081632653], 'false,false': [0.2385204081632653, nan]}
{'': [0.22558593749999967, nan], 'true': [nan, 0.22558593749999967]}
{'': [0.22670360110803395, nan], 'true': [0.24952741020794025, -8.540177112501205e-18], 'true,false': [-8.540177112501205e-18, nan]}
{'': [0.2448979591836742, 6.530723674265627e-18], 'true': [0.2448979591836742, nan], 'false': [6.530723674265627e-18, nan], 'false,true': [6.530723674265627e-18, nan]}
{'': [0.20511037918105174, nan], 'true': [0.20511037918105174, nan]}
{'': [0.21978803614271275, nan], 'true': [nan, 0.21978803614271258]}
{'': [-4.440892098500626e-18, 0.2463999999999998], 'false': [nan, 0.2463999999999998], 'false,false': [0.2463999999999998, nan], 'true': [-4.440892098500626e-18, nan], 'true,true': [-4.440892098500626e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 9.604
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(D, G, H), publication(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(G, A) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.42089349296867157;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1287361416937471;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.4410437248681107;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.6317883974647583;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12544463852839136;  // std dev = 1.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5693464191012169;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H), ta(E, I, H) )
%   | | | then return -0.3113504172591419;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1971136480209285;  // std dev = 1.688, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return 0.13759011729490972;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4029963316287623;  // std dev = 1.787, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else return -0.11231637819360636;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.437239844714937;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, C) )
%   | | | then return -0.07532752944625325;  // std dev = 0.856, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25495652802078733;  // std dev = 1.595, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.4141176798167021;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.029521752680046493;  // std dev = 1.600, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.12578306526382127;  // std dev = 1.731, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.10159632948783635;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( tempadvisedby(F, E), publication(G, F) )
%   | | | then return 4.5326981634872626E-4;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.30607167059977575;  // std dev = 0.719, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( publication(C, H), professor(H) )
%   | | | then return -0.19993651960188522;  // std dev = 0.923, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.03684648587315974;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | then return 0.6465565033938568;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.27455638271763416;  // std dev = 1.497, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.07195605895443087;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.09269127618926104;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then if ( publication(E, B), tempadvisedby(F, B) )
%   | | | then return 0.2942137860949824;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.029435336499377535;  // std dev = 2.231, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.4758577772306288;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23754602703312408;  // std dev = 1.217, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return -0.0851847513883968;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.2788203359196498;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5085610086601642;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.06682130384876597;  // std dev = 1.703, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.2776313359967659;  // std dev = 1.022, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.28499150653663785;  // std dev = 0.221, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0918079642700246;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, B), publication(G, A) )
%   | | then return 0.19271300083239207;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return -0.1150878022732229;  // std dev = 1.354, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07133073452276066;  // std dev = 1.846, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), publication(H, A) )
%   | | then return 0.23233264623277738;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2436786945818187;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(I, A), ta(J, A, K) )
%   | | then return -0.06558876547832765;  // std dev = 0.457, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.09882086499222313;  // std dev = 1.318, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.3066127484385759;  // std dev = 0.432, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.06842697784420271;  // std dev = 9.13e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.0641918400820262;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( publication(G, E) )
%   | | then return 0.05305687053044039;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.2501120196438639;  // std dev = 0.237, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09079277825681178;  // std dev = 1.020, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then return 0.16439906852111483;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.030026634162695798;  // std dev = 1.571, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.15223389329067474;  // std dev = 1.437, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.111', 'seconds']
Refined model CLL: -0.22935


******************************************
Best model found
******************************************
Results 

CLL : -0.212562 

AUC ROC : 0.953076 

AUC PR : 0.471778 

Precision : 0.181586 

Recall : 0.8875 

F1 : 0.301486 

Total Learning Time : 9.604 

Total Inference Time : 1.402665376663208 

Total revision time: 12.915589164733886
Best scored revision CLL: -0.22935


Results 

CLL : -0.212562 

AUC ROC : 0.953076 

AUC PR : 0.471778 

Precision : 0.181586 

Recall : 0.8875 

F1 : 0.301486 

Total Learning Time : 13.007495235443114 

Total Inference Time : 1.402665376663208 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.809
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.21415787218392998;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.18223973874112398;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.12622942052990416;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061332614317843995;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.1358595078869907;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2641404921130094;  // std dev = 1.49e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.19347001658681506;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21607317147105357;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return -0.005783620845081455;  // std dev = 3.236, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005267427345550865;  // std dev = 3.174, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18163816993775211;  // std dev = 1.67e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.13733949882507046;  // std dev = 2.887, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.173', 'seconds']
Parameter learned model CLL:-0.376057 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.266, 32, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.147, 26, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.147, 26, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.211, 29, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.314, 35, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.098, 24, 16], 'true,false,true': [1.49e-08, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.871, 17, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.236, 38, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.174, 40, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.67e-08, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.887, 19, 16], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22222222222222174, nan], 'true': [0.22222222222222174, nan]}
{'': [0.23582766439909247, nan]}
{'': [0.23582766439909328, nan], 'true': [0.23582766439909328, nan], 'true,true': [0.23582766439909328, nan]}
{'': [nan, 0.22913580246913648], 'false': [nan, 0.22913580246913648], 'false,false': [0.22913580246913648, nan]}
{'': [0.21530180699730925, nan], 'true': [nan, 0.21530180699730925]}
{'': [0.2130177514792904, nan], 'true': [0.24000000000000035, 1.850371707708594e-17], 'true,false': [1.850371707708594e-17, nan]}
{'': [0.24977043158861287, -8.540177112501205e-18], 'true': [0.24977043158861287, nan], 'false': [-8.540177112501205e-18, nan], 'false,true': [-8.540177112501205e-18, nan]}
{'': [0.1939644189133768, nan], 'true': [0.1939644189133768, nan]}
{'': [0.17995135739754903, nan], 'true': [nan, 0.17995135739754914]}
{'': [2.1350442781253012e-17, 0.23811018668105655], 'false': [nan, 0.23811018668105655], 'false,false': [0.23811018668105655, nan], 'true': [2.1350442781253012e-17, nan], 'true,true': [2.1350442781253012e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 5.469
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( professor(A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( publication(C, A) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(D, A, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7392282227217368;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.40934797424197805;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6815357966312561;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return -0.1873082525725631;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1640345318970146;  // std dev = 1.542, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0.46069830491043634;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.5205408069371739;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(D, B) )
%   | | | then return 0.3304262898722113;  // std dev = 1.258, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.21193616501586;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.05741813559684377;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.10159632948783634;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.5041898818999024;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(D, B) )
%   | | then return 0.39266631932783047;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.1713191175334703;  // std dev = 1.357, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.15152945531621226;  // std dev = 0.864, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.092691276189261;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( hasposition(B, E), ta(F, A, G) )
%   | then if ( publication(H, A) )
%   | | then return 0.04645248597218334;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(I, J, G), publication(K, J) )
%   | | | then return 0.3953680374619739;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2279872644920437;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | then return -0.28554299428084917;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return 0.3516532886707669;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08682708866263318;  // std dev = 1.033, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then return 0.3186253890633162;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A) )
%   | | then return -0.2503025290686773;  // std dev = 0.473, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( publication(G, B), ta(H, A, I) )
%   | | | then return 0.1976583614480822;  // std dev = 1.038, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.05575790411743886;  // std dev = 1.231, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else return -0.07504449026174209;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then return 0.14888448145480035;  // std dev = 0.364, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( publication(D, A), professor(B) )
%   | then return -0.3491026812949657;  // std dev = 0.320, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( publication(E, B) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return -0.034621732182280214;  // std dev = 1.430, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.20329401459849125;  // std dev = 1.395, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.39872473499010014;  // std dev = 0.276, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07328408564620828;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, F), publication(G, E) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, F) )
%   | | | then return 0.03810653998935698;  // std dev = 0.439, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1387519646836948;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.15780218560978396;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.292923686011425;  // std dev = 0.277, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0657939690419441;  // std dev = 0.045, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.05788645975157726;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( hasposition(B, E), student(A) )
%   | then if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then if ( publication(I, A) )
%   | | | then return -0.05358636992345152;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05122295775251706;  // std dev = 1.204, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.19599697422524606;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2991570857261578;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(K, A, L), professor(B) )
%   | | then return -0.49192909937250984;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(M, B, N) )
%   | | | then return -0.062400542131424194;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.034367848842651115;  // std dev = 0.471, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.828', 'seconds']
Refined model CLL: -0.234633


******************************************
Best model found
******************************************
Results 

CLL : -0.200478 

AUC ROC : 0.95086 

AUC PR : 0.285902 

Precision : 0.190698 

Recall : 0.845361 

F1 : 0.311195 

Total Learning Time : 5.469 

Total Inference Time : 0.8725566864013672 

Total revision time: 7.887488725662232
Best scored revision CLL: -0.234633


Results 

CLL : -0.200478 

AUC ROC : 0.95086 

AUC PR : 0.285902 

Precision : 0.190698 

Recall : 0.845361 

F1 : 0.311195 

Total Learning Time : 7.97939479637146 

Total Inference Time : 0.8725566864013672 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.122
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2217852987358757;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2528857772047755;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.206310018085057;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19035020361539223;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10538001718604946;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12132021919053385;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.061837388469950474;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11567903702111319;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03962784466525674;  // std dev = 3.820, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.24605492021200256;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.13856046440338224;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.032521094555501805;  // std dev = 3.820, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.2032960791725651;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06068044346558076;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09062149154139196;  // std dev = 4.739, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13137655633445686;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01931541323257555;  // std dev = 3.160, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2868892898396215;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09483807154232213;  // std dev = 4.616, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013939556457050218;  // std dev = 4.797, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.232', 'seconds']
Parameter learned model CLL:-0.360667 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.568, 35, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [3.013, 23, 15], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.529, 33, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.084, 26, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.721, 45, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.179, 31, 15]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.79, 51, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.144, 29, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.82, 54, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 8, 0], 'false,false,false,false': [3.038, 24, 15]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.82, 54, 20], 'false,false,true,true': [0.0, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.162, 30, 15]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.739, 67, 35]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.487, 31, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.16, 34, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 10, 0], 'false,false,false,false': [4.616, 55, 35]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.797, 77, 35]}]
{'': [0.23140495867768554, 0.2389196675900272], 'false': [nan, 0.2389196675900272], 'false,false': [0.2389196675900272, nan], 'true': [nan, 0.23140495867768554], 'true,false': [nan, 0.23140495867768554]}
{'': [0.23495906016376, 0.2320047590719813], 'false': [nan, 0.2320047590719813], 'false,false': [nan, 0.2320047590719813], 'false,false,false': [nan, 0.2320047590719813]}
{'': [nan, 0.21587111626765723], 'false': [nan, 0.21587111626765723], 'false,false': [0.21301775147929006, 0.21975425330812826], 'false,false,false': [nan, 0.21975425330812826], 'false,false,true': [nan, 0.21301775147929006]}
{'': [nan, 0.2115766147494144], 'false': [nan, 0.21157661474941386], 'false,false': [0.2023408053957553, 0.22469008264462775], 'false,false,false': [nan, 0.22469008264462775]}
{'': [nan, 0.20528556337059495], 'false': [0.19722425127830573, 0.21729289271163474], 'false,false': [nan, 0.21729289271163474], 'false,false,false': [-1.3877787807814457e-17, 0.2366863905325448], 'false,true': [nan, 0.19722425127830573], 'false,true,false': [nan, 0.19722425127830573]}
{'': [nan, 0.19628946376524412], 'false': [0.19722425127830584, 0.19486346358853643], 'false,false': [-1.2335811384723961e-17, 0.22222222222222257], 'false,false,false': [nan, 0.22222222222222257], 'false,false,true': [-1.2335811384723961e-17, nan]}
{'': [nan, 0.22017978666994878], 'false': [nan, 0.22017978666994797], 'false,false': [nan, 0.22017978666994875], 'false,false,false': [nan, 0.22017978666994878]}
{'': [0.23836985774702, 0.20379514513177432], 'true': [nan, 0.23836985774702], 'true,false': [nan, 0.23836985774702], 'true,false,false': [nan, 0.2383698577470202], 'false': [nan, 0.20379514513177432], 'false,false': [nan, 0.20379514513177432], 'false,false,false': [nan, 0.20379514513177432]}
{'': [nan, 0.2261933573028219], 'false': [nan, 0.2261933573028219], 'false,false': [nan, 0.2261933573028219], 'false,false,false': [-2.2204460492503132e-17, 0.23675437471592897]}
{'': [nan, 0.2054852198966687], 'false': [nan, 0.20548521989666813], 'false,false': [nan, 0.20548521989666813], 'false,false,false': [nan, 0.2054852198966687]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 5.875
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.1418510649004877;  // std dev = 3.94e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7372321343150517;  // std dev = 0.105, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return -0.22173996171995905;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4266115539628718;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.2380386837952483;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5942992829281827;  // std dev = 1.596, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.12544463852839136;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5739366910924588;  // std dev = 0.136, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(E, F), tempadvisedby(F, G) )
%   | | | then return 0.061740046232461286;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0941151763122285;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.0019534532817856256;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5805165942240447;  // std dev = 1.300, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else return -0.11231637819360639;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.43221987892132;  // std dev = 0.139, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(E, G, H), publication(I, G) )
%   | | | then return -0.2192741222863021;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1518934844946727;  // std dev = 0.919, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.10671810654471536;  // std dev = 0.993, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3377144414137891;  // std dev = 1.866, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.10159632948783634;  // std dev = 1.05e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.33122374164386803;  // std dev = 0.127, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, B), tempadvisedby(F, B) )
%   | | | then return -0.2856836121768106;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12102311866230848;  // std dev = 1.667, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return -0.09269127618926094;  // std dev = 1.18e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B) )
%   | | then if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return -0.1329187354435431;  // std dev = 0.684, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14344195546509828;  // std dev = 2.064, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.5232656008040626;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.17865418381098774;  // std dev = 1.357, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.19785498668284254;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.08518475138839683;  // std dev = 1.49e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.26534166669678977;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.0864062375538083;  // std dev = 1.472, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.17964645938208668;  // std dev = 0.314, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23853592826441541;  // std dev = 0.542, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.0760946042487491;  // std dev = 0.949, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.10372088446782794;  // std dev = 2.014, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( publication(J, A) )
%   | | then return 0.08398630993103813;  // std dev = 0.463, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.37030337975571564;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109176;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.2070484907464934;  // std dev = 0.115, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( projectmember(E, B), publication(F, A) )
%   | | then return 0.16911314885503806;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( inphase(A, G), inphase(C, G) )
%   | | | then return -0.1536626090267606;  // std dev = 1.015, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.043514186955585156;  // std dev = 1.372, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( publication(H, B), publication(I, A) )
%   | then if ( professor(B), student(A) )
%   | | then return 0.22110230827133998;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( ta(J, A, K), publication(L, B) )
%   | | then return 0.0722267170114762;  // std dev = 0.356, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.19773714188515348;  // std dev = 1.869, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.07324622576333704;  // std dev = 9.13e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.06681409369064753;  // std dev = 0.956, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.20630022179608654;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.08936294944399432;  // std dev = 1.500, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.28278523872713685;  // std dev = 1.000, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.06866784964447946;  // std dev = 0.010, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), professor(B) )
%   then if ( tempadvisedby(D, B), publication(C, B) )
%   | then return 0.16473169650077008;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return -0.042192083765376955;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.18839145429742793;  // std dev = 0.377, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15834292105887546;  // std dev = 1.162, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( ta(G, A, H) )
%   | then return 0.028630154404339917;  // std dev = 0.161, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( ta(K, I, L) )
%   | | | then return -0.15507654561950443;  // std dev = 1.023, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06223190119830697;  // std dev = 0.767, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(M, B), student(A) )
%   | | | then return -0.09337452069561683;  // std dev = 1.330, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return -0.05843825204236867;  // std dev = 1.106, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.398', 'seconds']
Refined model CLL: -0.207541


******************************************
Best model found
******************************************
Results 

CLL : -0.199494 

AUC ROC : 0.944674 

AUC PR : 0.419916 

Precision : 0.205776 

Recall : 0.730769 

F1 : 0.321127 

Total Learning Time : 5.875 

Total Inference Time : 1.4236843585968018 

Total revision time: 9.588770887374878
Best scored revision CLL: -0.207541


Results 

CLL : -0.199494 

AUC ROC : 0.944674 

AUC PR : 0.419916 

Precision : 0.205776 

Recall : 0.730769 

F1 : 0.321127 

Total Learning Time : 9.630706092834473 

Total Inference Time : 1.4236843585968018 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.968
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1914822684328457;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.18455684258290014;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15867448372865434;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0825543526440885;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15127586666538076;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.13482641382775676;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12608783097305873;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0792170913703451;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.24658229662533898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.38978133973829754;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.09745719074297766;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.20367102901446743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11167793495436579;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16593376521099867;  // std dev = 3.255, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04559512925394657;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.021051238917717235;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.30610829779449517;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06650201515474521;  // std dev = 3.459, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.026985324111605778;  // std dev = 3.647, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.581', 'seconds']
Parameter learned model CLL:-0.41669 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.944, 26, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [2.068, 11, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [2.904, 24, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.16, 14, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.067, 34, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.924, 25, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.996, 29, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.595, 4, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [2.924, 25, 13], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.255, 25, 20]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.924, 25, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 7, 0], 'false,false,false,false': [3.459, 31, 20]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.647, 47, 20]}]
{'': [0.2222222222222217, 0.23765432098765438], 'false': [nan, 0.23765432098765438], 'false,false': [0.23765432098765438, nan], 'true': [nan, 0.2222222222222217], 'true,false': [nan, 0.2222222222222217]}
{'': [0.22790357925493024, 0.22222222222222227], 'false': [nan, 0.22222222222222227], 'false,false': [nan, 0.22222222222222227], 'false,false,false': [nan, 0.22222222222222227]}
{'': [nan, 0.2092613932018255], 'false': [nan, 0.2092613932018255], 'false,false': [0.2000905387052964, 0.22749999999999973], 'false,false,false': [nan, 0.22749999999999973], 'false,false,true': [nan, 0.2000905387052964]}
{'': [nan, 0.22592469302318086], 'false': [nan, 0.22592469302318077], 'false,false': [0.2250692520775617, 0.2274999999999998], 'false,false,false': [nan, 0.2274999999999998]}
{'': [nan, 0.23170145649755808], 'false': [0.2137188208616784, 0.24305555555555536], 'false,false': [nan, 0.24305555555555536], 'false,false,false': [0.0, 0.23140495867768573], 'false,true': [nan, 0.2137188208616784], 'false,true,false': [nan, 0.2137188208616784]}
{'': [nan, 0.22879903593497847], 'false': [0.22506925207756204, 0.23712325088311229], 'false,false': [0.0, 0.24609374999999994], 'false,false,false': [nan, 0.24609374999999994], 'false,false,true': [0.0, nan]}
{'': [nan, 0.23551088732047348], 'false': [nan, 0.23551088732047376], 'false,false': [nan, 0.23551088732047343], 'false,false,false': [nan, 0.23551088732047348]}
{'': [0.2250692520775625, 0.23268698060941836], 'false': [nan, 0.23268698060941836], 'false,false': [nan, 0.23268698060941836], 'false,false,false': [nan, 0.23268698060941836], 'true': [nan, 0.2250692520775625], 'true,false': [nan, 0.2250692520775625], 'true,false,false': [nan, 0.22506925207756232]}
{'': [nan, 0.22100940561908397], 'false': [nan, 0.2210094056190837], 'false,false': [nan, 0.22100940561908397], 'false,false,false': [-3.172065784643304e-17, 0.23458766582986426]}
{'': [nan, 0.1985415216042958], 'false': [nan, 0.19854152160429586], 'false,false': [nan, 0.19854152160429586], 'false,false,false': [nan, 0.1985415216042958]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 4.975
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(F, G, E), tempadvisedby(G, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( professor(B), student(A) )
%   | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.14185106490048768;  // std dev = 3.65e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(E, F, D), tempadvisedby(F, G) )
%   | | then return 0.4080481822613878;  // std dev = 1.083, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.763465875030611;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7514198607928527;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12754107898722633;  // std dev = 0.081, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(C, D) )
%   | | | then return 0.6070993880315851;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3034485789828216;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.5906836629971377;  // std dev = 0.139, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.06250641815371216;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11377258533847619;  // std dev = 0.074, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.4972057762260209;  // std dev = 0.169, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.4321794081964449;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4801022840685529;  // std dev = 0.273, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09920846568743634;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10324609978442607;  // std dev = 0.068, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.44506394666768845;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.130764382820352;  // std dev = 0.955, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3548331923607523;  // std dev = 0.289, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.0922546810321316;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.11358593215361251;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B), publication(I, B) )
%   | | then if ( tempadvisedby(J, B), publication(I, J) )
%   | | | then return 0.03562524793858638;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26559491968896903;  // std dev = 0.978, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.10450841420799531;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.33765876791027494;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22823406944239988;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.07281340878239181;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.20618794559539327;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.08481409234929821;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.08317294347167446;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B) )
%   | | then return 0.373720848763885;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.08386777576699678;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.2669139935194926;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19053662094925494;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.4518972396942006;  // std dev = 0.392, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05523384396740658;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.2906583202071736;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.015669836434583084;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( student(B) )
%   | then return -0.07826465254713114;  // std dev = 0.002, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.16123318924456653;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( publication(E, F), professor(F) )
%   | | then return -0.02526400953984914;  // std dev = 0.516, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.11857198495580001;  // std dev = 0.720, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.20949906290065867;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26028652799353524;  // std dev = 0.396, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.2633348938483477;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.021335015740375274;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07158990942388364;  // std dev = 0.027, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.0645558078135425;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then return 0.25604412539644883;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.034946840257605506;  // std dev = 0.816, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16715421763664948;  // std dev = 0.644, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.07321283550652069;  // std dev = 0.115, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then return 0.1384617296671894;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.06928983338701594;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( ta(D, A, E), publication(F, B) )
%   | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return -0.26289349226746245;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( professor(B) )
%   | | | then return 0.24579047904109386;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06360392232288298;  // std dev = 0.000823, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( student(A), student(B) )
%   | | | then return -0.06377186949326259;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.38283371004676664;  // std dev = 0.390, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.20539803937583864;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09778918512681381;  // std dev = 0.910, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.975', 'seconds']
Refined model CLL: -0.181514


******************************************
Best model found
******************************************
Results 

CLL : -0.254468 

AUC ROC : 0.940593 

AUC PR : 0.272744 

Precision : 0.155598 

Recall : 0.88172 

F1 : 0.264516 

Total Learning Time : 4.975 

Total Inference Time : 0.9012551307678223 

Total revision time: 7.6909550838470455
Best scored revision CLL: -0.181514


Results 

CLL : -0.254468 

AUC ROC : 0.940593 

AUC PR : 0.272744 

Precision : 0.155598 

Recall : 0.88172 

F1 : 0.264516 

Total Learning Time : 7.73289028930664 

Total Inference Time : 0.9012551307678223 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.866
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.044467437835755574;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1904400018488961;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08853712653884482;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2924317789906823;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.22618777100218232;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17773966312321404;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04128007975720371;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03796976033156104;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.18438044853995347;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), publication(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13417309278397743;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006897049090886286;  // std dev = 2.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.027498719798968625;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016063690538435507;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2446043079745372;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.018935838150483875;  // std dev = 2.526, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09112843089763725;  // std dev = 2.305, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.572', 'seconds']
Parameter learned model CLL:-0.434041 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.225, 6, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [2.029, 10, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.265, 8, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.871, 7, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.095, 3, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.225, 6, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.16, 14, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,false': 'publication(A, G), publication(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.095, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.463, 20, 9]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.247, 7, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-09, 5, 0], 'false,false,false,false': [2.526, 21, 9]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.305, 14, 9]}]
{'': [0.18750000000000003, 0.24221453287197234], 'false': [nan, 0.24221453287197234], 'false,false': [0.24221453287197234, nan], 'true': [nan, 0.18750000000000003], 'true,false': [nan, 0.18750000000000003]}
{'': [0.15999999999999998, 0.23268698060941811], 'false': [nan, 0.23268698060941811], 'false,false': [nan, 0.23268698060941811], 'false,false,false': [nan, 0.23268698060941811]}
{'': [nan, 0.2368929323996425], 'false': [nan, 0.2368929323996425], 'false,false': [0.18750000000000008, 0.24999999999999997], 'false,false,false': [nan, 0.24999999999999997], 'false,false,true': [nan, 0.18750000000000008]}
{'': [nan, 0.2450686565364269], 'false': [nan, 0.24506865653642684], 'false,false': [0.23999999999999994, 0.2460937500000002], 'false,false,false': [nan, 0.2460937500000002]}
{'': [nan, 0.21264586719786324], 'false': [0.18749999999999997, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 0.18749999999999997], 'false,true,false': [nan, 0.18749999999999997]}
{'': [nan, 0.24510014123755233], 'false': [0.24, 0.24609375], 'false,false': [nan, 0.24609375], 'false,false,false': [nan, 0.24609375]}
{'': [nan, 0.20923365526711366], 'false': [nan, 0.20923365526711366], 'false,false': [nan, 0.20923365526711363], 'false,false,false': [nan, 0.20923365526711366]}
{'': [0.17283950617283947, 0.22749999999999998], 'false': [nan, 0.22749999999999998], 'false,false': [nan, 0.22749999999999998], 'false,false,false': [nan, 0.22749999999999998], 'true': [nan, 0.17283950617283947], 'true,false': [nan, 0.17283950617283947], 'true,false,false': [nan, 0.1728395061728395]}
{'': [nan, 0.18848171372921785], 'false': [nan, 0.18848171372921785], 'false,false': [nan, 0.18848171372921785], 'false,false,false': [1.1102230246251566e-17, 0.21262015293084036]}
{'': [nan, 0.23091439912082845], 'false': [nan, 0.23091439912082865], 'false,false': [nan, 0.23091439912082865], 'false,false,false': [nan, 0.23091439912082845]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 2.28
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.7580193346218546;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.47910989281367955;  // std dev = 0.428, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.27404181645565046;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3773364109528947;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6136642565556021;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.25807285335587443;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.4945448108625549;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.07722098720028708;  // std dev = 1.194, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.22532888245433771;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.41849684773180273;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1515184896675635;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return -0.015633728239930294;  // std dev = 1.168, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.28475402531784866;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07996311862482561;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.08059287263848272;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2425459568547005;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07316573470028476;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06835651791824367;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( tempadvisedby(E, B) )
%   | then return 0.28555657208783425;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G) )
%   | | then if ( publication(H, B) )
%   | | | then return -0.1396022695070432;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06835651791824367;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( professor(B) )
%   | | | then return 0.18878196457041377;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06835651791824367;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.256773807029484;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.057262396266197654;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.0636690614117292;  // std dev = 0.006, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.225', 'seconds']
Refined model CLL: -0.177086


******************************************
Best model found
******************************************
Results 

CLL : -0.352946 

AUC ROC : 0.900176 

AUC PR : 0.112591 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.28 

Total Inference Time : 0.5856337547302246 

Total revision time: 4.349062057495117
Best scored revision CLL: -0.177086


Results 

CLL : -0.352946 

AUC ROC : 0.900176 

AUC PR : 0.112591 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.390997262954712 

Total Inference Time : 0.5856337547302246 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.103
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2823913593419366;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.16733599753278436;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16164948544758145;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08488765142632755;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21934459387539817;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.11275791406039763;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19455752627875228;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06075786100131915;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2804850184190288;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.07848934055533031;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.05005932509822878;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.22748940579695284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02898690397899556;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07110288390163585;  // std dev = 4.645, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0025715158584480946;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01854653627567994;  // std dev = 3.031, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.25541549485803566;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.141520055058557;  // std dev = 4.338, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014493084577081958;  // std dev = 4.694, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.285', 'seconds']
Parameter learned model CLL:-0.353709 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.574, 39, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [2.839, 19, 14], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.559, 38, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.036, 27, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.711, 50, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.839, 19, 14]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.603, 41, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.806, 18, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.689, 48, 19], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.996, 25, 14]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.689, 48, 19], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.073, 29, 14]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.645, 67, 33]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.767, 56, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.031, 29, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 14, 0], 'false,false,false,false': [4.338, 46, 33]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.694, 72, 33]}]
{'': [0.22027348394768081, 0.2442607897153347], 'false': [nan, 0.2442607897153347], 'false,false': [0.2442607897153347, nan], 'true': [nan, 0.22027348394768081], 'true,false': [nan, 0.22027348394768081]}
{'': [0.22222222222222293, 0.22486615110053534], 'false': [nan, 0.22486615110053534], 'false,false': [nan, 0.22486615110053534], 'false,false,false': [nan, 0.22486615110053534]}
{'': [nan, 0.21796374225591447], 'false': [nan, 0.21796374225591447], 'false,false': [0.19953791220331865, 0.24426078971533452], 'false,false,false': [nan, 0.24426078971533452], 'false,false,true': [nan, 0.19953791220331865]}
{'': [nan, 0.2282388617273253], 'false': [nan, 0.22823886172732613], 'false,false': [0.21638888888888907, 0.24609375], 'false,false,false': [nan, 0.24609375]}
{'': [nan, 0.21140234935823604], 'false': [0.2031632880374249, 0.22486615110053515], 'false,false': [nan, 0.22486615110053515], 'false,false,false': [0.0, 0.2301117685733068], 'false,true': [nan, 0.2031632880374249], 'false,true,false': [nan, 0.2031632880374249]}
{'': [nan, 0.20844419764075567], 'false': [0.2031632880374251, 0.21604876273584528], 'false,false': [0.0, 0.21957815035154127], 'false,false,false': [nan, 0.21957815035154127], 'false,false,true': [0.0, nan]}
{'': [nan, 0.21580631560121463], 'false': [nan, 0.2158063156012146], 'false,false': [nan, 0.2158063156012146], 'false,false,false': [nan, 0.21580631560121463]}
{'': [0.18915555555555574, 0.2136578429146554], 'false': [nan, 0.2136578429146554], 'false,false': [nan, 0.2136578429146554], 'false,false,false': [nan, 0.2136578429146554], 'true': [nan, 0.18915555555555574], 'true,false': [nan, 0.18915555555555574], 'true,false,false': [nan, 0.18915555555555566]}
{'': [nan, 0.22249124613592794], 'false': [nan, 0.22249124613592863], 'false,false': [nan, 0.22249124613592794], 'false,false,false': [7.93016446160826e-18, 0.23820169143576617]}
{'': [nan, 0.20988576663281003], 'false': [nan, 0.209885766632811], 'false,false': [nan, 0.209885766632811], 'false,false,false': [nan, 0.20988576663281003]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 7.521
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.14185106490048768;  // std dev = 4.34e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7313336960296929;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.5808233380153474;  // std dev = 1.567, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.2671258397957405;  // std dev = 1.883, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0.10623616102140032;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839155;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5674438619644697;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.36954199787976294;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.05272052745400148;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.281237913961527;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.5907580965727672;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.11231637819360642;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4268252891939469;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.14399964017618355;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.26471529269033345;  // std dev = 0.992, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.19859710251906648;  // std dev = 1.139, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.38141969102346013;  // std dev = 1.234, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.10159632948783634;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.3272219814971603;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.2052494295842522;  // std dev = 1.107, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.041398570040098316;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return -0.092691276189261;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.003949678496863567;  // std dev = 1.866, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.25906105118364675;  // std dev = 1.243, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.2597236159047247;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return -0.05825937678416737;  // std dev = 1.055, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.27447291918609745;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.0851847513883968;  // std dev = 1.49e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, B), professor(B) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.34500917709182743;  // std dev = 0.905, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.49939036800628056;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(M, B) )
%   | | | then return -0.08518475138839683;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.21665423923299879;  // std dev = 0.455, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( publication(C, B) )
%   | | | then return -0.16327104725050165;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.03844357898555592;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(C, H), tempadvisedby(I, H) )
%   | | | then return 0.23556133619630723;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.056922491313968954;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(J, B) )
%   | | then return 0.33319722916283606;  // std dev = 0.344, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.2748553740156465;  // std dev = 0.766, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.10229599102670991;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07850755150945883;  // std dev = 0.018, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.2674838236091579;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4114276214604595;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(G, I, H), publication(J, I) )
%   | | | then return 0.3032481045461475;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.023304089968805366;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.15128440417654035;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.3596283693857757;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07273696035966118;  // std dev = 0.014, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06847661778867822;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( publication(E, B), publication(E, A) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.17384314851533805;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.25735986680118716;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1422365118858785;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(J, A), ta(K, A, L) )
%   | | | then return -0.10819752847554666;  // std dev = 1.154, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.03758891827685956;  // std dev = 2.366, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( professor(B) )
%   | | | then return -0.35413745328371143;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06564622507857479;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( ta(E, F, D), publication(G, F) )
%   | then return 0.22868201697011364;  // std dev = 0.191, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( ta(C, H, I), tempadvisedby(H, J) )
%   | | then return -0.041812720718281904;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09599596199910518;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( tempadvisedby(K, B), publication(L, B) )
%   | then if ( student(A), publication(M, A) )
%   | | then if ( publication(N, K) )
%   | | | then return -0.0599324191721462;  // std dev = 0.457, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23669999075602424;  // std dev = 0.381, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.03394808455932086;  // std dev = 0.792, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(P, A), professor(B) )
%   | | then if ( publication(P, B) )
%   | | | then return -0.07425034111236621;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2287466966846496;  // std dev = 1.076, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.04856505575666193;  // std dev = 0.068, 43.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.487', 'seconds']
Refined model CLL: -0.227795


******************************************
Best model found
******************************************
Results 

CLL : -0.226105 

AUC ROC : 0.952629 

AUC PR : 0.438746 

Precision : 0.184358 

Recall : 0.825 

F1 : 0.30137 

Total Learning Time : 7.521 

Total Inference Time : 1.3487491607666016 

Total revision time: 11.148909496307372
Best scored revision CLL: -0.227795


Results 

CLL : -0.226105 

AUC ROC : 0.952629 

AUC PR : 0.438746 

Precision : 0.184358 

Recall : 0.825 

F1 : 0.30137 

Total Learning Time : 11.190844701766967 

Total Inference Time : 1.3487491607666016 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.914
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.049581791761367275;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1782561565911189;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009801856147162192;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13912205269775188;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.10850111543997451;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1904369291611994;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062140532165027434;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2743829844547449;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.20561701554525535;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.15110153844665927;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.2232406150743872;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12729013072279105;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035877617206344685;  // std dev = 3.178, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.051764799950422005;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03360202793015378;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2032530941902671;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.086314638870978;  // std dev = 3.091, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01378186640537394;  // std dev = 3.185, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.734', 'seconds']
Parameter learned model CLL:-0.387474 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.777, 15, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [2.542, 14, 12], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.789, 16, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.763, 21, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.826, 20, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.787, 22, 12]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.713, 11, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.619, 16, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.749, 13, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.498, 13, 12]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [1.633, 8, 4], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.582, 15, 12]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.178, 36, 16]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.833, 21, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.712, 19, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 10, 0], 'false,false,false,false': [3.091, 24, 16]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.185, 35, 16]}]
{'': [0.16620498614958432, 0.24852071005917115], 'false': [nan, 0.24852071005917115], 'false,false': [0.24852071005917115, nan], 'true': [nan, 0.16620498614958432], 'true,false': [nan, 0.16620498614958432]}
{'': [0.16, 0.23140495867768557], 'false': [nan, 0.23140495867768557], 'false,false': [nan, 0.23140495867768557], 'false,false,false': [nan, 0.23140495867768557]}
{'': [nan, 0.1954021475952098], 'false': [nan, 0.1954021475952098], 'false,false': [0.13888888888888887, 0.2283737024221454], 'false,false,false': [nan, 0.2283737024221454], 'false,false,true': [nan, 0.13888888888888887]}
{'': [nan, 0.2292104579610292], 'false': [nan, 0.2292104579610294], 'false,false': [0.19555555555555562, 0.24489795918367369], 'false,false,false': [nan, 0.24489795918367369]}
{'': [nan, 0.22379520039543177], 'false': [0.17993079584775085, 0.24691358024691373], 'false,false': [nan, 0.24691358024691373], 'false,false,false': [0.0, 0.24960000000000013], 'false,true': [nan, 0.17993079584775085], 'false,true,false': [nan, 0.17993079584775085]}
{'': [nan, 0.23369935500025635], 'false': [0.22222222222222213, 0.23777456686776013], 'false,false': [0.0, 0.24691358024691373], 'false,false,false': [nan, 0.24691358024691373], 'false,false,true': [0.0, nan]}
{'': [nan, 0.19425739994273009], 'false': [nan, 0.19425739994272992], 'false,false': [nan, 0.19425739994273006], 'false,false,false': [nan, 0.19425739994273009]}
{'': [0.13439999999999988, 0.23725286160249717], 'false': [nan, 0.23725286160249717], 'false,false': [nan, 0.23725286160249717], 'false,false,false': [nan, 0.23725286160249717], 'true': [nan, 0.13439999999999988], 'true,false': [nan, 0.13439999999999988], 'true,false,false': [nan, 0.13439999999999996]}
{'': [nan, 0.20448946140911667], 'false': [nan, 0.2044894614091167], 'false,false': [nan, 0.20448946140911667], 'false,false,false': [-5.551115123125783e-18, 0.2388419323553502]}
{'': [nan, 0.19885952407614588], 'false': [nan, 0.19885952407614568], 'false,false': [nan, 0.19885952407614568], 'false,false,false': [nan, 0.19885952407614588]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 5.737
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( student(A), professor(B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7951850376804652;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.22322338620422918;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.3995842979648177;  // std dev = 1.570, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.5886325027454696;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.6428791295742273;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.6370032452536168;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.1955509350350556;  // std dev = 1.466, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.4424348890921435;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(C, H) )
%   | | | then return 0.16915995648569723;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5673288100571788;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.08380842188134514;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5288238390054046;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then return 0.42321728194280717;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( hasposition(A, D), sameperson(A, E) )
%   | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.22475764587884672;  // std dev = 1.177, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08641943695081337;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.29310961148655235;  // std dev = 0.549, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04489065892236364;  // std dev = 0.755, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then return 0.3251232758273384;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( hasposition(A, D), sameperson(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( hasposition(B, F), student(A) )
%   | | then if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return -9.579280606696217E-4;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.37284870931753045;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.15638804337916518;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04408885478207886;  // std dev = 0.572, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.43519886458336143;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(F, A) )
%   | | then return 0.25850405774954116;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.29015780808869407;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3810427495710638;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07542605715741688;  // std dev = 0.032, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then return 0.022923664803896432;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.27271965922976277;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.13794018223523657;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20577736169440689;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(H, A, I) )
%   | then if ( professor(B) )
%   | | then return -0.42405973699750543;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.060796850645843975;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( professor(B) )
%   | | then if ( publication(J, B) )
%   | | | then return -0.07759180737109322;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09016994219132106;  // std dev = 0.401, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07697514089116154;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.07068512070369234;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( ta(E, A, F), professor(B) )
%   | then if ( tempadvisedby(G, B), ta(E, G, H) )
%   | | then return 0.2286677727177492;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.5557489945389261;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17930160908476148;  // std dev = 1.703, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.1891034493731699;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.06538074977848517;  // std dev = 0.278, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07071878751867548;  // std dev = 0.732, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( ta(E, G, F), tempadvisedby(G, H) )
%   | | then return -0.35393018248872;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(I, J, F), publication(K, J) )
%   | | | then return 0.040011305775855634;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.330916692409187;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15523560647096582;  // std dev = 0.251, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( publication(L, A) )
%   | then if ( student(A), student(B) )
%   | | then return -0.07323763085613896;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2295788531400083;  // std dev = 0.573, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( ta(M, A, N) )
%   | | then return -0.11464395608604423;  // std dev = 0.352, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(B) )
%   | | | then return 0.23727250885201742;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07271640038995249;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.597', 'seconds']
Refined model CLL: -0.246557


******************************************
Best model found
******************************************
Results 

CLL : -0.265585 

AUC ROC : 0.944177 

AUC PR : 0.234931 

Precision : 0.12367 

Recall : 0.958763 

F1 : 0.219081 

Total Learning Time : 5.737 

Total Inference Time : 0.9356920719146729 

Total revision time: 8.400005556106567
Best scored revision CLL: -0.246557


Results 

CLL : -0.265585 

AUC ROC : 0.944177 

AUC PR : 0.234931 

Precision : 0.12367 

Recall : 0.958763 

F1 : 0.219081 

Total Learning Time : 8.441940761566162 

Total Inference Time : 0.9356920719146729 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.999
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2798356820874628;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11076734167761006;  // std dev = 4.947, 126.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13349662470673218;  // std dev = 4.807, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21050696814865455;  // std dev = 4.430, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08951378250850683;  // std dev = 4.738, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04787905005161075;  // std dev = 4.831, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0710715498095461;  // std dev = 4.699, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05783484192228941;  // std dev = 4.690, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053118980017336;  // std dev = 4.659, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021862645215773788;  // std dev = 4.727, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.106', 'seconds']
Parameter learned model CLL:-0.372932 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.05e-08, 22, 0], 'false,false,true': [4.499, 48, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.947, 91, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.807, 75, 35]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.43, 49, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.738, 71, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.831, 79, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.699, 69, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.69, 69, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.659, 67, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.727, 74, 35]}]
{'': [nan, 0.22222222222222365], 'false': [5.046468293750712e-18, 0.2438670344026725], 'false,false': [0.2438670344026725, nan], 'false,true': [nan, 5.046468293750712e-18]}
{'': [nan, 0.1942299908290177], 'false': [nan, 0.1942299908290177], 'false,false': [nan, 0.1942299908290177], 'false,false,false': [nan, 0.1942299908290177]}
{'': [nan, 0.21007466532956565], 'false': [nan, 0.21007466532956565], 'false,false': [nan, 0.21007466532956565], 'false,false,false': [nan, 0.21007466532956579]}
{'': [nan, 0.2336023661574847], 'false': [nan, 0.2336023661574847], 'false,false': [nan, 0.2336023661574847], 'false,false,false': [nan, 0.2336023661574847]}
{'': [nan, 0.21173757853066077], 'false': [nan, 0.21173757853066077], 'false,false': [nan, 0.21173757853066077], 'false,false,false': [nan, 0.21173757853066077]}
{'': [nan, 0.2046982141601723], 'false': [nan, 0.2046982141601723], 'false,false': [nan, 0.2046982141601723], 'false,false,false': [nan, 0.2046982141601723]}
{'': [nan, 0.21232042942256205], 'false': [nan, 0.21232042942256205], 'false,false': [nan, 0.21232042942256205], 'false,false,false': [nan, 0.21232042942256205]}
{'': [nan, 0.21147927564954586], 'false': [nan, 0.21147927564954586], 'false,false': [nan, 0.21147927564954586], 'false,false,false': [nan, 0.21147927564954586]}
{'': [nan, 0.21278750991062292], 'false': [nan, 0.21278750991062292], 'false,false': [nan, 0.21278750991062292], 'false,false,false': [nan, 0.21278750991062292]}
{'': [nan, 0.20496251947523975], 'false': [nan, 0.20496251947523966], 'false,false': [nan, 0.20496251947523975], 'false,false,false': [nan, 0.20496251947523975]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 7.901
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.6914822684328457;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.033771135085416674;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.32373365448410585;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.6268526675222025;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.7333343037735349;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.018140978234977356;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3298230415955944;  // std dev = 2.182, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.11231637819360635;  // std dev = 2.11e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4293096631811646;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.24546863594835527;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.10853806479856884;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.14950752605723955;  // std dev = 2.149, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.296187797904966;  // std dev = 1.440, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.10159632948783634;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.3298745370846791;  // std dev = 0.099, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( projectmember(E, B), publication(F, A) )
%   | | then return 0.5830424504632734;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.18629561583139956;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19653522471642593;  // std dev = 1.645, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(H, A), ta(I, A, J) )
%   | | then return -0.11745886971682788;  // std dev = 1.010, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.3333127450871561;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.002437621523519613;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.2681315450103589;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.060768301073567246;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.1742063366898899;  // std dev = 0.422, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.29679729933888155;  // std dev = 1.524, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.4174967506285866;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.051747970788833586;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.029755009525629466;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.0851847513883968;  // std dev = 1.83e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.21792144765163632;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(C, D), tempadvisedby(D, E) )
%   | | | then return 0.2221277338247733;  // std dev = 1.029, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0048191644895152225;  // std dev = 1.698, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( publication(F, A) )
%   | | then return 0.2345419239912053;  // std dev = 0.763, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4132817779919242;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), tempadvisedby(D, B) )
%   then if ( inphase(A, E), inphase(D, E) )
%   | then return -0.21257082088439141;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.20888053519558772;  // std dev = 0.192, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( tempadvisedby(F, B), student(A) )
%   | then if ( publication(G, A), ta(H, A, I) )
%   | | then return -0.2481076647073548;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( inphase(A, J), inphase(F, J) )
%   | | | then return -0.2610995520973511;  // std dev = 0.604, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04127534906366481;  // std dev = 1.246, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( professor(B) )
%   | | then if ( professor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.019223411651781746;  // std dev = 2.039, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.2938067429574044;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.05690262096743362;  // std dev = 1.486, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.27167632661062374;  // std dev = 1.002, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.1317843009520458;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04842594836584283;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.0684269778442027;  // std dev = 1.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, B) )
%   then if ( ta(E, C, F) )
%   | then if ( publication(D, A) )
%   | | then return 0.1408748730182432;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07056742433552446;  // std dev = 0.359, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.2085059138432114;  // std dev = 0.150, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( publication(G, B) )
%   | then if ( publication(H, A), ta(I, A, J) )
%   | | then return -0.1846199807602068;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0449198793850557;  // std dev = 0.222, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | else if ( tempadvisedby(K, B) )
%   | | then if ( projectmember(L, B), ta(M, A, N) )
%   | | | then return -0.4278200828401905;  // std dev = 0.871, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17618342377580035;  // std dev = 1.496, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( publication(P, A), student(A) )
%   | | | then return 0.03421952863536231;  // std dev = 0.539, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10956120848475924;  // std dev = 1.144, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.414', 'seconds']
Refined model CLL: -0.203075


******************************************
Best model found
******************************************
Results 

CLL : -0.205735 

AUC ROC : 0.951854 

AUC PR : 0.384095 

Precision : 0.215947 

Recall : 0.833333 

F1 : 0.343008 

Total Learning Time : 7.901 

Total Inference Time : 1.3510477542877197 

Total revision time: 11.384405994415284
Best scored revision CLL: -0.203075


Results 

CLL : -0.205735 

AUC ROC : 0.951854 

AUC PR : 0.384095 

Precision : 0.215947 

Recall : 0.833333 

F1 : 0.343008 

Total Learning Time : 11.521557235717774 

Total Inference Time : 1.3510477542877197 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.882
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( inphase(A, G) )
%   | | then return 0.3343394112899882;  // std dev = 3.237, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.155550635644032;  // std dev = 3.588, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13695124818836307;  // std dev = 3.569, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08267346316506209;  // std dev = 3.656, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03972483365697803;  // std dev = 3.729, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13805872584396742;  // std dev = 3.424, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1089392760894647;  // std dev = 3.435, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0058743389218632565;  // std dev = 3.648, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13629439672661559;  // std dev = 3.297, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.027298978154510805;  // std dev = 3.678, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.382', 'seconds']
Parameter learned model CLL:-0.409417 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,false,true': [3.237, 22, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.588, 41, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.569, 40, 20]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.656, 46, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.729, 53, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.424, 33, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.435, 33, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.648, 49, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.297, 26, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.678, 47, 20]}]
{'': [nan, 0.23836985774702002], 'false': [-9.25185853854297e-18, 0.24943310657596351], 'false,false': [0.24943310657596351, nan], 'false,true': [nan, -9.25185853854297e-18]}
{'': [nan, 0.2110644635987597], 'false': [nan, 0.2110644635987597], 'false,false': [nan, 0.2110644635987597], 'false,false,false': [nan, 0.2110644635987597]}
{'': [nan, 0.21234822947885398], 'false': [nan, 0.21234822947885398], 'false,false': [nan, 0.21234822947885398], 'false,false,false': [nan, 0.21234822947885384]}
{'': [nan, 0.202492085606162], 'false': [nan, 0.202492085606162], 'false,false': [nan, 0.202492085606162], 'false,false,false': [nan, 0.202492085606162]}
{'': [nan, 0.19050724207873687], 'false': [nan, 0.19050724207873687], 'false,false': [nan, 0.19050724207873687], 'false,false,false': [nan, 0.19050724207873687]}
{'': [nan, 0.2212350149974821], 'false': [nan, 0.2212350149974821], 'false,false': [nan, 0.2212350149974821], 'false,false,false': [nan, 0.2212350149974821]}
{'': [nan, 0.22259390747490582], 'false': [nan, 0.22259390747490582], 'false,false': [nan, 0.22259390747490582], 'false,false,false': [nan, 0.22259390747490582]}
{'': [nan, 0.19288344876705768], 'false': [nan, 0.19288344876705768], 'false,false': [nan, 0.19288344876705768], 'false,false,false': [nan, 0.19288344876705768]}
{'': [nan, 0.23627953717395958], 'false': [nan, 0.23627953717395958], 'false,false': [nan, 0.23627953717395958], 'false,false,false': [nan, 0.23627953717395958]}
{'': [nan, 0.20191000497159453], 'false': [nan, 0.20191000497159456], 'false,false': [nan, 0.20191000497159453], 'false,false,false': [nan, 0.20191000497159453]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 6.686
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( professor(B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.7378665638113542;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15066340939422632;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.7487588965229676;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839136;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5732130407949446;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.6041086820467299;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return -0.2279788500793941;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36216936288703727;  // std dev = 1.253, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then return 0.430979199226283;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( tempadvisedby(D, B), student(A) )
%   | then if ( ta(E, A, F), ta(G, D, H) )
%   | | then return -0.027348890840670853;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.4973120104433275;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.028103115904824116;  // std dev = 1.247, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( publication(K, B), ta(L, A, M) )
%   | | then if ( professor(B) )
%   | | | then return 0.12449777738867378;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.30787101909317804;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, A), sameperson(B, E) )
%   | | then return -0.21615633100115453;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3457316296099922;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09104928499017928;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(C, A) )
%   | | then return 0.32821484341878127;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4423137371277257;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(H, A), student(A) )
%   | then if ( publication(I, B) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.053477978861317846;  // std dev = 0.654, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( professor(B) )
%   | | then return -0.3066311385604334;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10062391023323777;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.27315125660186623;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.14798742748688598;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3305548744402011;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.28296965688249676;  // std dev = 0.842, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.019718396251064235;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09734437705572135;  // std dev = 0.161, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.2562598553266319;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | then return 0.0354187772880824;  // std dev = 0.547, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.012425041427164857;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2593213928040208;  // std dev = 0.854, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.0888185534965065;  // std dev = 0.134, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( ta(F, A, G) )
%   | | then return 0.21285121049245645;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(C, A), student(A) )
%   | | | then return 0.014573729484247566;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1592419235012367;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then return 0.3206596252573173;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.21548291851354953;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12142466050790739;  // std dev = 0.231, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( professor(B), student(A) )
%   | then return -0.25640535078709503;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.07706583548979556;  // std dev = 0.079, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.17960560765299163;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02913686913454745;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.25577130447805024;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16910158870293562;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.14537375271636396;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( ta(K, A, L), publication(M, A) )
%   | then if ( publication(N, B) )
%   | | then return -0.07516044639298416;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.20890603280856326;  // std dev = 0.324, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( student(B) )
%   | | then return -0.07187376441562493;  // std dev = 0.069, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.010552378935261267;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.21584355171933373;  // std dev = 0.146, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13063833154230622;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11224447632464324;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( publication(E, B), professor(B) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(E, F) )
%   | | | then return -0.03970899092700521;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07069866434511421;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.0035401006448246286;  // std dev = 0.453, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.4452069883245892;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( professor(B) )
%   | | then return 0.0700396193515125;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06376318454498128;  // std dev = 0.019, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.987', 'seconds']
Refined model CLL: -0.169099


******************************************
Best model found
******************************************
Results 

CLL : -0.244813 

AUC ROC : 0.941995 

AUC PR : 0.256884 

Precision : 0.154762 

Recall : 0.83871 

F1 : 0.261307 

Total Learning Time : 6.686 

Total Inference Time : 0.926612377166748 

Total revision time: 9.245300453186035
Best scored revision CLL: -0.169099


Results 

CLL : -0.244813 

AUC ROC : 0.941995 

AUC PR : 0.256884 

Precision : 0.154762 

Recall : 0.83871 

F1 : 0.261307 

Total Learning Time : 9.382451694488525 

Total Inference Time : 0.926612377166748 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.785
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( inphase(A, G) )
%   | | then return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33705905374157186;  // std dev = 2.112, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15096821318888476;  // std dev = 2.372, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0778611202656411;  // std dev = 2.453, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10618039585426649;  // std dev = 2.384, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03939383753510774;  // std dev = 2.464, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012964576725737628;  // std dev = 2.495, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040337845780591776;  // std dev = 2.442, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06927307970258524;  // std dev = 2.374, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08679359202010611;  // std dev = 2.310, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.350', 'seconds']
Parameter learned model CLL:-0.447151 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false,true': [2.471, 19, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.112, 9, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.372, 16, 9]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.453, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.384, 16, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.464, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.495, 22, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.442, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.374, 16, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.31, 14, 9]}]
{'': [nan, 0.21000000000000008], 'false': [0.0, 0.21811224489795927], 'false,false': [0.21811224489795927, nan], 'false,true': [nan, 0.0]}
{'': [nan, 0.24787703913902048], 'false': [nan, 0.24787703913902048], 'false,false': [nan, 0.24787703913902048], 'false,false,false': [nan, 0.24787703913902048]}
{'': [nan, 0.22501007359271213], 'false': [nan, 0.22501007359271213], 'false,false': [nan, 0.22501007359271213], 'false,false,false': [nan, 0.22501007359271213]}
{'': [nan, 0.20754099179515545], 'false': [nan, 0.20754099179515545], 'false,false': [nan, 0.20754099179515545], 'false,false,false': [nan, 0.20754099179515545]}
{'': [nan, 0.2273708345663283], 'false': [nan, 0.2273708345663283], 'false,false': [nan, 0.2273708345663283], 'false,false,false': [nan, 0.2273708345663283]}
{'': [nan, 0.20932783660833898], 'false': [nan, 0.20932783660833898], 'false,false': [nan, 0.20932783660833898], 'false,false,false': [nan, 0.20932783660833898]}
{'': [nan, 0.20081828369273072], 'false': [nan, 0.20081828369273072], 'false,false': [nan, 0.20081828369273072], 'false,false,false': [nan, 0.20081828369273072]}
{'': [nan, 0.21292864371824263], 'false': [nan, 0.21292864371824263], 'false,false': [nan, 0.21292864371824263], 'false,false,false': [nan, 0.21292864371824263]}
{'': [nan, 0.22539999432028368], 'false': [nan, 0.22539999432028368], 'false,false': [nan, 0.22539999432028368], 'false,false,false': [nan, 0.22539999432028368]}
{'': [nan, 0.23205842236893362], 'false': [nan, 0.23205842236893362], 'false,false': [nan, 0.23205842236893362], 'false,false,false': [nan, 0.23205842236893362]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 2.235
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.7816289395752953;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.11496227290862865;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.35782502815203276;  // std dev = 1.040, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11813264429061743;  // std dev = 0.084, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.5125184431873868;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.023820343145317557;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.44843194547397947;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10680174302853387;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.15690182233984032;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3966548429488812;  // std dev = 0.317, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0917685091530202;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.42582666859618734;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1756007437014476;  // std dev = 0.443, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08440104993082832;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.3299876503737195;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22437822822213746;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07810338776674557;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then return 0.20695946054346295;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(D, A, E) )
%   | then return -0.2590658521770612;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( student(A), publication(F, B) )
%   | | then return 0.1022344590903846;  // std dev = 0.303, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( sameperson(A, B) )
%   | | | then return -0.1894946610541158;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07266176596025553;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then return 0.2550463820339507;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B) )
%   | then return 1.331442212582079E-4;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.0636989983757506;  // std dev = 0.031, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), professor(A) )
%   | then return -0.20758432179974887;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( ta(E, A, F) )
%   | | then return -0.13773977723134376;  // std dev = 0.549, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(G, B, H) )
%   | | | then return -0.06399212853724459;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.015487140887301576;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( professor(B) )
%   | then if ( ta(I, A, J) )
%   | | then return 0.02821428458865244;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16869741239642191;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.05781315484570182;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.297', 'seconds']
Refined model CLL: -0.181867


******************************************
Best model found
******************************************
Results 

CLL : -0.401924 

AUC ROC : 0.903095 

AUC PR : 0.116064 

Precision : 0.118857 

Recall : 1.0 

F1 : 0.212462 

Total Learning Time : 2.235 

Total Inference Time : 0.6348404884338379 

Total revision time: 4.249598999023437
Best scored revision CLL: -0.181867


Results 

CLL : -0.401924 

AUC ROC : 0.903095 

AUC PR : 0.116064 

Precision : 0.118857 

Recall : 1.0 

F1 : 0.212462 

Total Learning Time : 4.386750240325927 

Total Inference Time : 0.6348404884338379 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.947
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2758704540868528;  // std dev = 4.384, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1955215063355892;  // std dev = 4.506, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13976926616899438;  // std dev = 4.596, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10782130949600953;  // std dev = 4.629, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1233084278075389;  // std dev = 4.492, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08531119236284657;  // std dev = 4.529, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0530752946636426;  // std dev = 4.577, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029414600177670426;  // std dev = 4.641, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01853416611448932;  // std dev = 4.663, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0011226153695449185;  // std dev = 4.699, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.246', 'seconds']
Parameter learned model CLL:-0.361949 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.16e-08, 33, 0], 'false,false,true': [4.384, 46, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.506, 58, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.596, 65, 33]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.629, 67, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.492, 58, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.529, 63, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.577, 68, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.641, 70, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.663, 71, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.699, 77, 33]}]
{'': [nan, 0.20782844387755237], 'false': [3.027880976250427e-17, 0.24323025156225117], 'false,false': [0.24323025156225117, nan], 'false,true': [nan, 3.027880976250427e-17]}
{'': [nan, 0.22310711412953185], 'false': [nan, 0.22310711412953185], 'false,false': [nan, 0.22310711412953185], 'false,false,false': [nan, 0.22310711412953185]}
{'': [nan, 0.21557908379354973], 'false': [nan, 0.21557908379354973], 'false,false': [nan, 0.21557908379354973], 'false,false,false': [nan, 0.2155790837935498]}
{'': [nan, 0.21427202752939487], 'false': [nan, 0.21427202752939487], 'false,false': [nan, 0.21427202752939487], 'false,false,false': [nan, 0.21427202752939487]}
{'': [nan, 0.22178197949548645], 'false': [nan, 0.22178197949548645], 'false,false': [nan, 0.22178197949548645], 'false,false,false': [nan, 0.22178197949548645]}
{'': [nan, 0.21366478729990557], 'false': [nan, 0.21366478729990557], 'false,false': [nan, 0.21366478729990557], 'false,false,false': [nan, 0.21366478729990557]}
{'': [nan, 0.20741147336370655], 'false': [nan, 0.20741147336370655], 'false,false': [nan, 0.20741147336370655], 'false,false,false': [nan, 0.20741147336370655]}
{'': [nan, 0.2091564337780778], 'false': [nan, 0.2091564337780778], 'false,false': [nan, 0.2091564337780778], 'false,false,false': [nan, 0.2091564337780778]}
{'': [nan, 0.20903118387048736], 'false': [nan, 0.20903118387048736], 'false,false': [nan, 0.20903118387048736], 'false,false,false': [nan, 0.20903118387048736]}
{'': [nan, 0.20074992979791115], 'false': [nan, 0.20074992979791087], 'false,false': [nan, 0.20074992979791115], 'false,false,false': [nan, 0.20074992979791115]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 11.477
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5381489350995123;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( professor(B) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.30953166172080504;  // std dev = 1.202, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.05914747614680118;  // std dev = 1.325, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.37165474329418496;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.7793445937067122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( ta(E, D, F), publication(G, B) )
%   | | then return 0.3014356419052173;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.5878235196141074;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8053706577231455;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(H, A, I), publication(J, B) )
%   | | then if ( ta(H, K, L), publication(J, K) )
%   | | | then return 0.6768649750999662;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41468935103555654;  // std dev = 1.409, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( publication(M, A), publication(M, B) )
%   | | | then return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13406831732835575;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return -0.11231637819360628;  // std dev = 4.59e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.4518382381620327;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.15681380031755152;  // std dev = 1.636, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.02454230954336114;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(G, I, H), publication(J, I) )
%   | | | then return 0.5105262782752717;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23123349935598786;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( publication(K, A), publication(K, B) )
%   | | | then return 0.46680171834956075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6462230519813882;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783635;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.34217971424728916;  // std dev = 0.097, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.11433945799995603;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.09652271422859261;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.4481310836455892;  // std dev = 1.020, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17127717262166647;  // std dev = 1.470, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.09269127618926104;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(F, G, D), publication(E, G) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.3478734499030046;  // std dev = 0.304, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.024143950086182954;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.49215912073173995;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07060597610258001;  // std dev = 1.609, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), tempadvisedby(M, L) )
%   | | | then return 0.11078583686495788;  // std dev = 1.013, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.36325424357460695;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3428011472201991;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839682;  // std dev = 2.24e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, B) )
%   then if ( ta(E, C, F) )
%   | then return 0.3626019808537252;  // std dev = 0.270, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(G, C) )
%   | | then return 0.32028878602204053;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(D, H), ta(I, H, J) )
%   | | | then return 0.37596779383585976;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.036871136602166024;  // std dev = 1.005, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(K, A), ta(L, A, M) )
%   | | then return -0.1705819114295143;  // std dev = 0.425, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( ta(N, A, P) )
%   | | | then return 0.39471175666294317;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03404293608457305;  // std dev = 1.361, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, H, D), publication(E, H) )
%   | | | then return 0.21526577030800972;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0020858378586200116;  // std dev = 1.228, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( ta(C, I, D), publication(J, I) )
%   | | | then return 0.29746422502735426;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3140332339861646;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | then if ( publication(L, M), ta(N, M, P) )
%   | | | then return 0.3160292335703176;  // std dev = 0.331, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06810872589268398;  // std dev = 0.442, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(Q, A) )
%   | | | then return 0.09706582721006009;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.27169225388648305;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.0739041631427346;  // std dev = 0.037, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( ta(F, E, G), publication(H, A) )
%   | | then return 0.25226021291793105;  // std dev = 0.270, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, J, D), publication(K, J) )
%   | | | then return -0.3002804863547799;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.11937780622388175;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(L, A) )
%   | | then if ( publication(L, B) )
%   | | | then return 0.18147829075332683;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06145254900590177;  // std dev = 1.318, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.2436979686105457;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14987077417875397;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06903981753453158;  // std dev = 0.031, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.194697667127397;  // std dev = 0.248, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08016785166555075;  // std dev = 1.084, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.292469656019654;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20166899562116694;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.15548113889689147;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1655069103000717;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.004447276264779465;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.039140063407099225;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06595517174450537;  // std dev = 0.055, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.425', 'seconds']
Refined model CLL: -0.229327


******************************************
Best model found
******************************************
Results 

CLL : -0.21777 

AUC ROC : 0.951066 

AUC PR : 0.367238 

Precision : 0.194986 

Recall : 0.875 

F1 : 0.318907 

Total Learning Time : 11.477 

Total Inference Time : 1.3463561534881592 

Total revision time: 14.824324821472167
Best scored revision CLL: -0.229327


Results 

CLL : -0.21777 

AUC ROC : 0.951066 

AUC PR : 0.367238 

Precision : 0.194986 

Recall : 0.875 

F1 : 0.318907 

Total Learning Time : 14.961476062774658 

Total Inference Time : 1.3463561534881592 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.864
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( inphase(A, G) )
%   | | then return 0.4098730730305468;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10686737772562985;  // std dev = 3.291, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16206581406406056;  // std dev = 3.119, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09864974570867406;  // std dev = 3.204, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10754310744750656;  // std dev = 3.137, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09557453195216765;  // std dev = 3.110, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1040561496606954;  // std dev = 3.011, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021993951535227242;  // std dev = 3.179, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05398488701863815;  // std dev = 3.049, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041227723769141626;  // std dev = 3.088, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.410', 'seconds']
Parameter learned model CLL:-0.406481 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 7, 0], 'false,false,true': [2.678, 13, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.291, 40, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.119, 28, 16]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.204, 33, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.137, 29, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.11, 28, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.011, 26, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.179, 33, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.049, 30, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.088, 28, 16]}]
{'': [nan, 0.2469135802469131], 'false': [-7.93016446160826e-18, 0.24732461355529087], 'false,false': [0.24732461355529087, nan], 'false,true': [nan, -7.93016446160826e-18]}
{'': [nan, 0.1934073554919634], 'false': [nan, 0.1934073554919634], 'false,false': [nan, 0.1934073554919634], 'false,false,false': [nan, 0.1934073554919634]}
{'': [nan, 0.22112295697421838], 'false': [nan, 0.22112295697421838], 'false,false': [nan, 0.22112295697421838], 'false,false,false': [nan, 0.22112295697421827]}
{'': [nan, 0.209463523886948], 'false': [nan, 0.209463523886948], 'false,false': [nan, 0.209463523886948], 'false,false,false': [nan, 0.209463523886948]}
{'': [nan, 0.21865061918523845], 'false': [nan, 0.21865061918523845], 'false,false': [nan, 0.21865061918523845], 'false,false,false': [nan, 0.21865061918523845]}
{'': [nan, 0.21981969928322884], 'false': [nan, 0.21981969928322884], 'false,false': [nan, 0.21981969928322884], 'false,false,false': [nan, 0.21981969928322884]}
{'': [nan, 0.2158540173303725], 'false': [nan, 0.2158540173303725], 'false,false': [nan, 0.2158540173303725], 'false,false,false': [nan, 0.2158540173303725]}
{'': [nan, 0.2062967360633549], 'false': [nan, 0.2062967360633549], 'false,false': [nan, 0.2062967360633549], 'false,false,false': [nan, 0.2062967360633549]}
{'': [nan, 0.20208451739139913], 'false': [nan, 0.20208451739139913], 'false,false': [nan, 0.20208451739139913], 'false,false,false': [nan, 0.20208451739139913]}
{'': [nan, 0.2167483481238305], 'false': [nan, 0.21674834812383048], 'false,false': [nan, 0.2167483481238305], 'false,false,false': [nan, 0.2167483481238305]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 5.35
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( professor(B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(E, F, D), publication(G, F) )
%   | | then if ( ta(C, F, H), publication(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3504898020630852;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7609104304538484;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.5519483400226466;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.27226233341298245;  // std dev = 1.349, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.3758078566068166;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5924909653841901;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( ta(F, A, G), ta(H, D, G) )
%   | | then return -0.006871861349735178;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(E, I), projectmember(J, I) )
%   | | | then return 0.09250611337367984;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5083139309776328;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4751788612064221;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( ta(K, A, L) )
%   | then if ( ta(M, B, N) )
%   | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.15143209150268927;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( professor(A) )
%   | | then return -0.11211717795106285;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.00458765561540643;  // std dev = 0.531, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return -0.09328014262961033;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.44823479892152335;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.2989657357096358;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.026114491376999727;  // std dev = 1.198, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.09936826447204981;  // std dev = 0.098, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), publication(C, B) )
%   then if ( publication(C, D), projectmember(E, D) )
%   | then return 0.3960772164749682;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(C, F), inphase(F, G) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.08912718401325154;  // std dev = 0.916, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.311571509404646;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.33395096885670855;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( ta(K, A, L) )
%   | then if ( ta(M, N, L), publication(P, N) )
%   | | then return -0.08390925145888868;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.2819685973602441;  // std dev = 0.552, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( student(A), professor(B) )
%   | | then return 0.3671979361410758;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08518314759339668;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return -0.054621823318517414;  // std dev = 0.770, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | then return 0.3421642889207052;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.27237543987740237;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08375493452586662;  // std dev = 0.069, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B), ta(E, A, F) )
%   | then return -0.3123376953452469;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | then return 0.25710679673411824;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return 0.11905250631575437;  // std dev = 0.814, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20908655939166634;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( ta(L, A, M) )
%   | then if ( ta(N, B, P) )
%   | | then return -0.08042696199812815;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( ta(L, Q, R), publication(S, Q) )
%   | | | then return -0.24177301283122415;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07096165168874247;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(A) )
%   | | then return -0.07175517063033572;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.021346759452353585;  // std dev = 0.348, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then return 0.14402014913226893;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( professor(B), publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, F) )
%   | | | then return -0.2633477726315839;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04657583662251988;  // std dev = 1.171, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.44802947811890353;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( ta(I, A, J) )
%   | | then if ( publication(K, A) )
%   | | | then return -0.06740156535937558;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.143581762006983;  // std dev = 0.423, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(B) )
%   | | | then return 0.21505855702338664;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07661168387322322;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( projectmember(C, B) )
%   then if ( ta(D, A, E) )
%   | then return -0.3646283243496348;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.12101662487182516;  // std dev = 0.260, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( professor(B), ta(F, A, G) )
%   | then if ( ta(F, H, I), publication(J, H) )
%   | | then return 0.19935187460463774;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24849606907403177;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(K, A), hasposition(B, L) )
%   | | then return 0.047090196644602705;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(M, B) )
%   | | | then return -0.27860120619389267;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0436981033569633;  // std dev = 0.330, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.531', 'seconds']
Refined model CLL: -0.240751


******************************************
Best model found
******************************************
Results 

CLL : -0.262357 

AUC ROC : 0.948075 

AUC PR : 0.249483 

Precision : 0.144444 

Recall : 0.938144 

F1 : 0.250344 

Total Learning Time : 5.35 

Total Inference Time : 0.8447048664093018 

Total revision time: 7.855722679138183
Best scored revision CLL: -0.240751


Results 

CLL : -0.262357 

AUC ROC : 0.948075 

AUC PR : 0.249483 

Precision : 0.144444 

Recall : 0.938144 

F1 : 0.250344 

Total Learning Time : 7.992873920440673 

Total Inference Time : 0.8447048664093018 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.948
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.20128619000147172;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.20417897110042027;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.13464855092890582;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.10010744969706106;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12587585961495593;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.15433853633049485;  // std dev = 4.518, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.26232813033617125;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.09999038167875403;  // std dev = 4.608, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.2147999984439744;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.036111388019999545;  // std dev = 4.694, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03410008540613918;  // std dev = 4.673, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19141845562813142;  // std dev = 2.36e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.0970895678834742;  // std dev = 4.479, 82.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.001', 'seconds']
Parameter learned model CLL:-0.367774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.795, 67, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.687, 59, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.83, 70, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.875, 74, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.716, 61, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.518, 49, 35], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.608, 54, 35], 'true,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 21, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.694, 74, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.673, 72, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [2.36e-08, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.479, 47, 35], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22539407920030902, nan], 'true': [0.22539407920030902, nan]}
{'': [0.23370303304662812, nan]}
{'': [0.22222222222222132, nan], 'true': [0.22222222222222132, nan], 'true,true': [0.22222222222222132, nan]}
{'': [nan, 0.21799511825603843], 'false': [nan, 0.21799511825603843], 'false,false': [0.21799511825603843, nan]}
{'': [0.23166232638888953, nan], 'true': [nan, 0.23166232638888953]}
{'': [0.22116411534353925, nan], 'true': [0.24305555555555616, -3.027880976250427e-17], 'true,false': [-3.027880976250427e-17, nan]}
{'': [0.2386062365862887, 5.28677630773884e-18], 'true': [0.2386062365862887, nan], 'false': [5.28677630773884e-18, nan], 'false,true': [5.28677630773884e-18, nan]}
{'': [0.2021660431192463, nan], 'true': [0.2021660431192463, nan]}
{'': [0.20409804411346855, nan], 'true': [nan, 0.2040980441134689]}
{'': [3.0839528461809905e-17, 0.24464604402141485], 'false': [nan, 0.24464604402141485], 'false,false': [0.24464604402141485, nan], 'true': [3.0839528461809905e-17, nan], 'true,true': [3.0839528461809905e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 16.214
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5381489350995123;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(F, B) )
%   | | | then return -0.17626634551589415;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3793445937067122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.7941409472991768;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4360046869647661;  // std dev = 2.301, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.12544463852839136;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), ta(E, A, F) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.06841508977363896;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1666584260273225;  // std dev = 0.977, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.7033862203005384;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2733706238586865;  // std dev = 2.577, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return -0.11231637819360642;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B), tempadvisedby(F, B) )
%   | | | then return -0.17598027169434;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.31160409315781795;  // std dev = 1.395, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.6509652061311824;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2829306291261806;  // std dev = 1.780, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2633602686256907;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.5087616755711709;  // std dev = 0.269, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.4005736531404779;  // std dev = 0.219, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2620613315086631;  // std dev = 1.942, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.09269127618926101;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), ta(F, A, G) )
%   | | then if ( publication(E, A), tempadvisedby(H, B) )
%   | | | then return 0.24665433417703608;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16310812170125094;  // std dev = 1.130, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.14276444572696143;  // std dev = 1.536, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.2886734750619983;  // std dev = 1.561, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.22231356738998814;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2163611149579645;  // std dev = 0.821, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.41970757441992435;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13021828156723173;  // std dev = 2.226, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.17312945984590036;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.27153484929299293;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(G, B) )
%   | | then if ( publication(H, A), publication(H, B) )
%   | | | then return 0.19547630198736188;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.02990334529432488;  // std dev = 1.946, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.15029929103290912;  // std dev = 1.168, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4080439451341216;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 7.45e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.1613809278683936;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, A), projectmember(F, B) )
%   | | | then return 0.33055249443069495;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09819655528911012;  // std dev = 1.816, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then return 0.16272160960878174;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.35287229047355534;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420271;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( publication(E, B), professor(B) )
%   | then if ( ta(F, A, G) )
%   | | then if ( publication(E, H), tempadvisedby(H, I) )
%   | | | then return 0.1563649404284777;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.17001834648431285;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(J, B), publication(E, J) )
%   | | | then return -0.07493156063431357;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1522140459265538;  // std dev = 1.079, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.279536946065635;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(L, A), professor(B) )
%   | | | then return -0.455980853759138;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06191343401571696;  // std dev = 1.206, 47.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.432', 'seconds']
Refined model CLL: -0.229198


******************************************
Best model found
******************************************
Results 

CLL : -0.218867 

AUC ROC : 0.948274 

AUC PR : 0.408433 

Precision : 0.209231 

Recall : 0.871795 

F1 : 0.337469 

Total Learning Time : 16.214 

Total Inference Time : 1.7450592517852783 

Total revision time: 19.965855895996093
Best scored revision CLL: -0.229198


Results 

CLL : -0.218867 

AUC ROC : 0.948274 

AUC PR : 0.408433 

Precision : 0.209231 

Recall : 0.871795 

F1 : 0.337469 

Total Learning Time : 20.058408081054687 

Total Inference Time : 1.7450592517852783 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.821
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.10506251534642576;  // std dev = 3.881, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.2222308746651145;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.17710479251373126;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.07921149265503027;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09929654234105662;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.1456061078559628;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2465507548891351;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.1254159235692367;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.20364860791714892;  // std dev = 1.97e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.028199319961417266;  // std dev = 3.637, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061664109936528336;  // std dev = 3.485, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18581595953400498;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.10606186869414526;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.133', 'seconds']
Parameter learned model CLL:-0.391168 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.881, 61, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.529, 33, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.568, 35, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.757, 48, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.666, 41, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.487, 31, 20], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [3.464, 30, 20], 'true,false': [0.0, 0, 0], 'false,true,true': [1.97e-08, 12, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.637, 44, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.485, 40, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.05e-08, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.39, 27, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.18594726413656407, nan], 'true': [0.18594726413656407, nan]}
{'': [0.23495906016375903, nan]}
{'': [0.23140495867768623, nan], 'true': [0.23140495867768623, nan], 'true,true': [0.23140495867768623, nan]}
{'': [nan, 0.2076124567474045], 'false': [nan, 0.2076124567474045], 'false,false': [0.2076124567474045, nan]}
{'': [0.2203708680462241, nan], 'true': [nan, 0.2203708680462241]}
{'': [0.21484374999999975, nan], 'true': [0.23836985774702016, -5.124106267500723e-17], 'true,false': [-5.124106267500723e-17, nan]}
{'': [0.23999999999999966, 3.23815048849004e-17], 'true': [0.23999999999999966, nan], 'false': [3.23815048849004e-17, nan], 'false,true': [3.23815048849004e-17, nan]}
{'': [0.2066530597396521, nan], 'true': [0.2066530597396521, nan]}
{'': [0.20247335970426283, nan], 'true': [nan, 0.202473359704263]}
{'': [5.551115123125783e-18, 0.2444545043005879], 'false': [nan, 0.2444545043005879], 'false,false': [0.2444545043005879, nan], 'true': [5.551115123125783e-18, nan], 'true,true': [5.551115123125783e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 5.728
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1.83e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), student(D) )
%   | | then return 0.7373228684706171;  // std dev = 0.092, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4813730497173962;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.07511856893599714;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then return 0.5716788869650611;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.3617153122728183;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5509545461977046;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.23377723431127267;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08755404236328866;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.4946973577079308;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41324537032782527;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return -0.415075193534083;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.29513123753318443;  // std dev = 0.948, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( tempadvisedby(H, B) )
%   | then if ( ta(I, A, J), ta(K, H, L) )
%   | | then return -0.09077030581424916;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5342806343908927;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.20213420625170087;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(C, G) )
%   | | then return 0.3171383689135624;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4108523993098639;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(H, B) )
%   | | then if ( publication(H, I), tempadvisedby(I, B) )
%   | | | then return 0.07465757963964696;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27629495375895474;  // std dev = 0.765, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.05352470546294937;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.09534421509600885;  // std dev = 0.093, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.32290975102219177;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0673188004544957;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.3573603641601285;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2778916546817116;  // std dev = 0.714, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.08755793566706782;  // std dev = 0.072, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), publication(E, A) )
%   | then if ( publication(E, F), ta(G, F, H) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.2805428277426977;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21167449650164868;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07264345417883641;  // std dev = 0.448, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then return 0.1102481606210604;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(M, B), ta(N, A, P) )
%   | | | then return 0.004578651099156811;  // std dev = 0.412, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.1161480844972276;  // std dev = 0.592, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08337071566317325;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), professor(D) )
%   | | then if ( tempadvisedby(E, B), publication(C, B) )
%   | | | then return 0.21736892457786144;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10807944567496523;  // std dev = 0.448, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.36129144169315314;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.2501229410679054;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.27622501046069164;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07427611904419522;  // std dev = 0.078, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return -0.4149031415067393;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17289350243736237;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.18941307030853505;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22806642313056244;  // std dev = 0.152, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.04972913568745815;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0725029202378934;  // std dev = 0.089, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.07705236434410295;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( professor(B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return -0.15170998710254965;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1743765267523464;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then if ( publication(J, K), tempadvisedby(L, K) )
%   | | | then return 0.1629910126350213;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.006366853286519795;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), publication(M, B) )
%   | | | then return -0.2378635283564161;  // std dev = 1.033, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05226325213714142;  // std dev = 0.781, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.189', 'seconds']
Refined model CLL: -0.171808


******************************************
Best model found
******************************************
Results 

CLL : -0.252287 

AUC ROC : 0.931553 

AUC PR : 0.174368 

Precision : 0.165899 

Recall : 0.774194 

F1 : 0.273245 

Total Learning Time : 5.728 

Total Inference Time : 0.905024528503418 

Total revision time: 8.19356033706665
Best scored revision CLL: -0.171808


Results 

CLL : -0.252287 

AUC ROC : 0.931553 

AUC PR : 0.174368 

Precision : 0.165899 

Recall : 0.774194 

F1 : 0.273245 

Total Learning Time : 8.286112522125244 

Total Inference Time : 0.905024528503418 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.724
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.16288753636876518;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.09123002291584241;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.15070820353008102;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09010992979926223;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.08532977135884065;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.23609880006973097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.048166676405982226;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.19618880870640357;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.12963978389059858;  // std dev = 2.318, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04545237681245595;  // std dev = 2.437, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19288320301773162;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.06382921937371665;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.225', 'seconds']
Parameter learned model CLL:-0.404574 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [2.558, 24, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [2.558, 24, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.426, 17, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.491, 20, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.471, 19, 9], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.51, 21, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [2.318, 15, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.437, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.4, 16, 9], 'false,false,false': [0.0, 0, 0]}]
{'': [0.19834710743801665, nan], 'true': [0.19834710743801665, nan]}
{'': [0.21811224489795897, nan]}
{'': [0.1983471074380163, nan], 'true': [0.1983471074380163, nan], 'true,true': [0.1983471074380163, nan]}
{'': [nan, 0.22633136094674589], 'false': [nan, 0.22633136094674589], 'false,false': [0.22633136094674589, nan]}
{'': [0.21403091557669468, nan], 'true': [nan, 0.21403091557669468]}
{'': [0.19834710743801637, nan], 'true': [0.21811224489795905, 0.0], 'true,false': [0.0, nan]}
{'': [0.21000000000000021, -9.25185853854297e-18], 'true': [0.21000000000000021, nan], 'false': [-9.25185853854297e-18, nan], 'false,true': [-9.25185853854297e-18, nan]}
{'': [0.22385834684020675, nan], 'true': [0.22385834684020675, nan]}
{'': [0.2121374789851659, nan], 'true': [nan, 0.21213747898516586]}
{'': [0.0, 0.23040000000000002], 'false': [nan, 0.23040000000000002], 'false,false': [0.23040000000000002, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 2.607
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.7483828540191295;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5656553863479212;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.13074173065792566;  // std dev = 0.114, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.23933370241824692;  // std dev = 1.198, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.602402488743435;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11178933421037086;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.5259770488524962;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.29360836647720673;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10116177231367937;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.4080958739907074;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13183086839966945;  // std dev = 0.428, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09232730641574814;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( publication(E, A) )
%   | then if ( professor(B) )
%   | | then return -0.15577009372058995;  // std dev = 0.970, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.08487576689704573;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( professor(B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.07266572446182107;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16115901062908072;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.08487576689704573;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.1298893885535834;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3230997958633758;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07851137057847567;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07851137057847565;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.007018964932676989;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2637534190678426;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( publication(D, B) )
%   | then return -0.19224096419059844;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0730159569694979;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.25503784236959703;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), ta(F, A, G) )
%   | then return -0.43298942506309507;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( student(A), professor(B) )
%   | | then return 0.07224247253427742;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( professor(A) )
%   | | | then return -0.1285632619340681;  // std dev = 0.286, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06582536750256886;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.0604924344432084;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( professor(B), ta(E, A, F) )
%   | then return 0.2282841111190008;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return 0.05948040246993012;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06302502313143844;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.794', 'seconds']
Refined model CLL: -0.180687


******************************************
Best model found
******************************************
Results 

CLL : -0.345769 

AUC ROC : 0.907653 

AUC PR : 0.125126 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.607 

Total Inference Time : 0.6040587425231934 

Total revision time: 4.518806844711304
Best scored revision CLL: -0.180687


Results 

CLL : -0.345769 

AUC ROC : 0.907653 

AUC PR : 0.125126 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.611359029769898 

Total Inference Time : 0.6040587425231934 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.864
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.20189893509951096;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.17195900097382985;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.16499514500106424;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.1092234803010104;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1480973596016149;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.18386496058747;  // std dev = 4.252, 73.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.26818983393307744;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.14017403251469168;  // std dev = 4.276, 74.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21891235634478248;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.014292695605583388;  // std dev = 4.547, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029197315805837995;  // std dev = 4.499, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19039613373806763;  // std dev = 1.83e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.14645324369036766;  // std dev = 4.092, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.063', 'seconds']
Parameter learned model CLL:-0.396158 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.654, 63, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.666, 64, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.6, 59, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.702, 67, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.493, 52, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.252, 40, 33], 'true,false,true': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.276, 41, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 23, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.547, 72, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.499, 64, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.83e-08, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.092, 34, 33], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22558593750000142, nan], 'true': [0.22558593750000142, nan]}
{'': [0.22446593686895608, nan]}
{'': [0.23003308128544422, nan], 'true': [0.23003308128544422, nan], 'true,true': [0.23003308128544422, nan]}
{'': [nan, 0.22109999999999957], 'false': [nan, 0.22109999999999957], 'false,false': [0.22109999999999957, nan]}
{'': [0.23750865051903042, nan], 'true': [nan, 0.23750865051903042]}
{'': [0.2255859375, nan], 'true': [0.24770125727153325, -5.792467954566034e-17], 'true,false': [-5.792467954566034e-17, nan]}
{'': [0.24707815924032178, -3.8616453030440226e-17], 'true': [0.24707815924032178, nan], 'false': [-3.8616453030440226e-17, nan], 'false,true': [-3.8616453030440226e-17, nan]}
{'': [0.19690340695764022, nan], 'true': [0.19690340695764022, nan]}
{'': [0.20864009819732532, nan], 'true': [nan, 0.20864009819732537]}
{'': [1.586032892321652e-17, 0.24994430830920067], 'false': [nan, 0.24994430830920067], 'false,false': [0.24994430830920067, nan], 'true': [1.586032892321652e-17, nan], 'true,true': [1.586032892321652e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 8.625
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( ta(H, A, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7334901112694635;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(F, A, G) )
%   | | then if ( ta(F, H, I), publication(J, H) )
%   | | | then return 0.6617281112815515;  // std dev = 0.871, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4165402196923352;  // std dev = 1.211, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.02435045090600851;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22444059551604367;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.12544463852839133;  // std dev = 2.79e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5797705016738095;  // std dev = 0.116, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.45804089512952034;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2137120584054477;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.2833082374055717;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4747614941048963;  // std dev = 1.435, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.11231637819360639;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.40749513411635163;  // std dev = 1.255, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.2908678619310613;  // std dev = 1.838, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.2132536548454772;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.041482189558392335;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783623;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.3196904418440682;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3810703442445104;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4174491487699432;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.13406392452124868;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.33827783181873516;  // std dev = 1.052, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.3533259281918952;  // std dev = 0.638, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19663647469505832;  // std dev = 1.750, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.09269127618926105;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.3860673141276205;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.07805046104471887;  // std dev = 1.568, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.18997727172383286;  // std dev = 1.788, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, F), ta(G, F, H) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.2237857102458734;  // std dev = 1.125, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.06747136814514135;  // std dev = 1.333, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return 0.015755340924469285;  // std dev = 0.514, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44662422012504865;  // std dev = 0.327, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(L, A, M), publication(N, A) )
%   | | then if ( ta(P, B, Q) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.00535699311515266;  // std dev = 0.402, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(R, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09527883954688489;  // std dev = 0.206, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | | then return 0.2076338061581359;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24876659418752353;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.1754043391854823;  // std dev = 1.289, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.0024397710459169216;  // std dev = 1.508, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return -0.12981918830010644;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07335244187637983;  // std dev = 0.009, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(C, D), student(D) )
%   | then if ( ta(E, D, F), ta(G, A, F) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.16842295980082447;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2413964097034753;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.0923070011059817;  // std dev = 1.456, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.12841324242737;  // std dev = 1.354, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return -0.21127808811159335;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then return -0.2509505920970834;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.06852673734013885;  // std dev = 0.009, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06565679529457476;  // std dev = 0.027, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( publication(E, A), publication(E, B) )
%   | then if ( professor(B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.1469782788812862;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17561795356864396;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06417946798082494;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( publication(I, A) )
%   | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return -0.14723546650014516;  // std dev = 0.883, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.022857052690664112;  // std dev = 0.905, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( professor(B) )
%   | | | then return -0.13685729896410675;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.06356445329763323;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.137', 'seconds']
Refined model CLL: -0.219298


******************************************
Best model found
******************************************
Results 

CLL : -0.196465 

AUC ROC : 0.949672 

AUC PR : 0.434368 

Precision : 0.199387 

Recall : 0.8125 

F1 : 0.320197 

Total Learning Time : 8.625 

Total Inference Time : 1.513756275177002 

Total revision time: 11.952740587234498
Best scored revision CLL: -0.219298


Results 

CLL : -0.196465 

AUC ROC : 0.949672 

AUC PR : 0.434368 

Precision : 0.199387 

Recall : 0.8125 

F1 : 0.320197 

Total Learning Time : 12.045292772293092 

Total Inference Time : 1.513756275177002 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.796
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.09635387540765858;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.13852377621557754;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.14429825270579244;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18012223905441793;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.20481902167770144;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.25232383546515613;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.17770827456100624;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.20774359820718094;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.06074855177152412;  // std dev = 3.042, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.008014728055194419;  // std dev = 3.126, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18579613193762332;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.09472757539183191;  // std dev = 2.975, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.166', 'seconds']
Parameter learned model CLL:-0.380467 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.355, 38, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.445, 46, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.314, 35, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.249, 31, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.098, 24, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.947, 19, 16], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.91, 18, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.042, 30, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.126, 38, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.975, 21, 16], 'false,false,false': [0.0, 0, 0]}]
{'': [0.20850480109739317, nan], 'true': [0.20850480109739317, nan]}
{'': [0.19146722164412108, nan]}
{'': [0.2153018069973084, nan], 'true': [0.2153018069973084, nan], 'true,true': [0.2153018069973084, nan]}
{'': [nan, 0.22453598913535497], 'false': [nan, 0.22453598913535497], 'false,false': [0.22453598913535497, nan]}
{'': [0.24, nan], 'true': [nan, 0.24]}
{'': [0.22453598913535583, nan], 'true': [0.2481632653061228, -1.850371707708594e-17], 'true,false': [-1.850371707708594e-17, nan]}
{'': [0.24913494809688566, 0.0], 'true': [0.24913494809688566, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.2011921604839422, nan], 'true': [0.2011921604839422, nan]}
{'': [0.18098402504021505, nan], 'true': [nan, 0.18098402504021516]}
{'': [-5.551115123125783e-18, 0.23924580905611254], 'false': [nan, 0.23924580905611254], 'false,false': [0.23924580905611254, nan], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 6.654
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return -0.14185106490048777;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return 0.13019801023843924;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(F, H), ta(I, H, J) )
%   | | | then return 0.3730340463557628;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7854095483292248;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7769559148019282;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then return 0.6735672532352996;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then return 0.11494004892778634;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4504429818806976;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( professor(B), ta(I, A, J) )
%   | then return -0.3056868782059302;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B) )
%   | | then return 0.08085250565996979;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.16627453358918948;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(F, B) )
%   | | then if ( publication(F, G), projectmember(H, G) )
%   | | | then return 0.5263255455816122;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0943080195984559;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0.5330830796157174;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10476921847794761;  // std dev = 0.035, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.04318318902928745;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( ta(F, A, G), publication(H, A) )
%   | | then return 0.0022662449770694815;  // std dev = 0.695, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.25698157480849254;  // std dev = 1.435, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.404307640480553;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09743309188374052;  // std dev = 0.036, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( hasposition(B, E), ta(F, A, G) )
%   | then if ( tempadvisedby(H, B), ta(I, H, G) )
%   | | then return -0.12844501318296128;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.06992779271325043;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3543143457642839;  // std dev = 0.796, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( publication(K, A), hasposition(B, L) )
%   | | then return 0.09336078759068357;  // std dev = 0.534, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( professor(B) )
%   | | | then return -0.16291368499761166;  // std dev = 1.345, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.08456999337787874;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( hasposition(B, E) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then return 0.36621390823268396;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.10424846779897641;  // std dev = 1.389, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.3384782137273696;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.18202024869968633;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07824861678472209;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09055650986565777;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.0877591454476309;  // std dev = 0.882, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.41218007050404354;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1335542709215489;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3032065160438507;  // std dev = 0.226, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0758629088728044;  // std dev = 0.048, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then if ( ta(F, G, E), publication(H, G) )
%   | then return 0.2801470763752098;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.04605878013720055;  // std dev = 0.959, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( projectmember(I, B), publication(J, B) )
%   | then return 0.03754651853123246;  // std dev = 0.434, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then return 0.0629677697579314;  // std dev = 0.396, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(L, B), student(A) )
%   | | | then return -0.34047847132192777;  // std dev = 1.027, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08964190233661407;  // std dev = 1.101, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.07070175653529115;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( publication(E, B), professor(B) )
%   | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | then if ( ta(I, H, G) )
%   | | | then return -0.2089419021433952;  // std dev = 0.950, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17961370230528834;  // std dev = 0.524, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.30957770908620147;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(J, A, K), professor(B) )
%   | | then return -0.5130247268246266;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.2788494433092675;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.060836303153461016;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.693', 'seconds']
Refined model CLL: -0.221766


******************************************
Best model found
******************************************
Results 

CLL : -0.2266 

AUC ROC : 0.931529 

AUC PR : 0.215546 

Precision : 0.160243 

Recall : 0.814433 

F1 : 0.267797 

Total Learning Time : 6.654 

Total Inference Time : 0.9350152015686035 

Total revision time: 9.135285329818725
Best scored revision CLL: -0.221766


Results 

CLL : -0.2266 

AUC ROC : 0.931529 

AUC PR : 0.215546 

Precision : 0.160243 

Recall : 0.814433 

F1 : 0.267797 

Total Learning Time : 9.227837514877319 

Total Inference Time : 0.9350152015686035 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.2
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15226658215833566;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2528857772047755;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.1560447974788409;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1654056359878978;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12402389768021864;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11841420277131678;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.053412848764463554;  // std dev = 3.856, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17432953841956952;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10568409591404242;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2518132548265999;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1535921505788057;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.07773774345981117;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.20738212934786365;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05907310736414964;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015237969535454194;  // std dev = 5.005, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12354054505352254;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08623134532732141;  // std dev = 3.010, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2705070545413849;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.08468522981384703;  // std dev = 4.680, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05950884261980566;  // std dev = 4.652, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.182', 'seconds']
Parameter learned model CLL:-0.363207 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.757, 48, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [3.013, 23, 15], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.695, 43, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.144, 29, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.721, 45, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.196, 32, 15]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.856, 58, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.013, 23, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.695, 43, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 3, 0], 'false,false,false,false': [2.986, 22, 15]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.721, 45, 20], 'false,false,true,true': [0.0, 5, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.144, 29, 15]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.005, 93, 35]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.549, 34, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.01, 26, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 19, 0], 'false,false,false,false': [4.68, 59, 35]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.652, 66, 35]}]
{'': [0.2076124567474044, 0.2389196675900272], 'false': [nan, 0.2389196675900272], 'false,false': [0.2389196675900272, nan], 'true': [nan, 0.2076124567474044], 'true,false': [nan, 0.2076124567474044]}
{'': [0.21667926429831122, 0.22469008264462842], 'false': [nan, 0.22469008264462842], 'false,false': [nan, 0.22469008264462842], 'false,false,false': [nan, 0.22469008264462842]}
{'': [nan, 0.21481944792820643], 'false': [nan, 0.21481944792820643], 'false,false': [0.2130177514792895, 0.21729289271163407], 'false,false,false': [nan, 0.21729289271163407], 'false,false,true': [nan, 0.2130177514792895]}
{'': [nan, 0.20969250051474148], 'false': [nan, 0.20969250051474117], 'false,false': [0.19066403681788296, 0.2389196675900276], 'false,false,false': [nan, 0.2389196675900276]}
{'': [nan, 0.22362416153398998], 'false': [0.21667926429831236, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [-9.25185853854297e-18, 0.2410518626734841], 'false,true': [nan, 0.21667926429831236], 'false,true,false': [nan, 0.21667926429831236]}
{'': [nan, 0.21149148275811308], 'false': [0.21301775147928922, 0.20826799861703202], 'false,false': [-5.551115123125783e-18, 0.22469008264462798], 'false,false,false': [nan, 0.22469008264462798], 'false,false,true': [-5.551115123125783e-18, nan]}
{'': [nan, 0.19567897266652362], 'false': [nan, 0.19567897266652323], 'false,false': [nan, 0.19567897266652376], 'false,false,false': [nan, 0.19567897266652362]}
{'': [0.23319615912208463, 0.220988830679788], 'true': [nan, 0.23319615912208463], 'true,false': [nan, 0.23319615912208463], 'true,false,false': [nan, 0.23319615912208475], 'false': [nan, 0.220988830679788], 'false,false': [nan, 0.220988830679788], 'false,false,false': [nan, 0.220988830679788]}
{'': [nan, 0.2114990030753183], 'false': [nan, 0.21149900307531744], 'false,false': [nan, 0.2114990030753183], 'false,false,false': [-4.674623261579606e-17, 0.2330357960963066]}
{'': [nan, 0.21430167734350655], 'false': [nan, 0.21430167734350586], 'false,false': [nan, 0.21430167734350586], 'false,false,false': [nan, 0.21430167734350655]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 7.458
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6676727446233218;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.1418510649004877;  // std dev = 3.94e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A), tempadvisedby(E, B) )
%   | | then return 0.7267962660610723;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.40106897758515225;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(G, B) )
%   | | then return 0.756268130071842;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.7693863815002904;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4780499880309554;  // std dev = 1.209, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( student(A) )
%   | then if ( publication(C, A), publication(C, B) )
%   | | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | | then return 0.4424463346046132;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5961828046424792;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.15707773864922425;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3297448298884576;  // std dev = 2.456, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.4384046801999784;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, C) )
%   | | | then return -0.11238470736346917;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3734911538574952;  // std dev = 1.346, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then return 0.40637208854896817;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(H, A) )
%   | | | then return -0.15836841769588014;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1667179423577798;  // std dev = 1.603, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( tempadvisedby(D, B), student(A) )
%   | then if ( publication(E, D), publication(E, B) )
%   | | then return 0.12565734995524927;  // std dev = 0.524, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.35855809037163777;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return -0.16320770155228498;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29865374371912545;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.12551177992257612;  // std dev = 1.800, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.351134563469708;  // std dev = 0.948, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.15466999531938685;  // std dev = 0.238, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( ta(E, A, F) )
%   | | then if ( professor(B) )
%   | | | then return 0.1031405119957296;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( tempadvisedby(G, B), student(A) )
%   | | | then return -0.24676844881773022;  // std dev = 1.107, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.07210007431727185;  // std dev = 1.014, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.3015311577383237;  // std dev = 0.769, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1496796865060019;  // std dev = 1.706, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.24209312614559347;  // std dev = 0.090, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( ta(E, A, F) )
%   | | | then return -0.4229752851217965;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06075150654949958;  // std dev = 1.182, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.17777529744177056;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.210214520534447;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.42009529825212616;  // std dev = 0.178, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08027351591635393;  // std dev = 0.032, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( professor(A) )
%   | then return -0.09116411348007397;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.21322817196037028;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.18300599834478404;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.01757682638835628;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( ta(J, A, K), tempadvisedby(L, B) )
%   | then return -0.2402817282626092;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( ta(M, A, N), publication(P, B) )
%   | | then return 0.1393739566433923;  // std dev = 0.601, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(Q, B) )
%   | | | then return 0.0029788025782234748;  // std dev = 1.655, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.08339530899800214;  // std dev = 1.868, 57.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06991587836925123;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( publication(E, A), publication(E, B) )
%   | then if ( professor(B) )
%   | | then return 0.18195664986951304;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.11043798951794596;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(G, I, J), publication(K, I) )
%   | | | then return -0.6163306667390086;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07873082303980045;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.087317889979959;  // std dev = 1.473, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.06022635036678738;  // std dev = 2.047, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( professor(A) )
%   | then return -0.06812151628782494;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( tempadvisedby(F, B), ta(G, E, H) )
%   | | | then return 0.1521769412353087;  // std dev = 0.524, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.34140666028841654;  // std dev = 0.304, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.2600673088357794;  // std dev = 0.984, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( professor(B), publication(I, A) )
%   | then if ( professor(A) )
%   | | then return -0.0641888325079977;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3627407032830067;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( student(B) )
%   | | then return -0.06605029057078857;  // std dev = 0.045, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.0757327824036829;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.3167654374011883;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.397', 'seconds']
Refined model CLL: -0.219395


******************************************
Best model found
******************************************
Results 

CLL : -0.208701 

AUC ROC : 0.947045 

AUC PR : 0.396654 

Precision : 0.199357 

Recall : 0.794872 

F1 : 0.318766 

Total Learning Time : 7.458 

Total Inference Time : 1.5095126628875732 

Total revision time: 11.47133374977112
Best scored revision CLL: -0.219395


Results 

CLL : -0.208701 

AUC ROC : 0.947045 

AUC PR : 0.396654 

Precision : 0.199357 

Recall : 0.794872 

F1 : 0.318766 

Total Learning Time : 11.512124546051027 

Total Inference Time : 1.5095126628875732 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.922
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1914822684328457;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.09952824544433996;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.17531075438944352;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31226300539622714;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1788290796382959;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08030612617954479;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.14948534752794287;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15558302979929992;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03378439486518116;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.24006565495979676;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10993434504020319;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.04026214462143093;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.19902723857806;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17680997904972523;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05721738457888606;  // std dev = 3.648, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08695327989692675;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0017968521299704797;  // std dev = 2.192, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.2917963954806044;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.044379394594084194;  // std dev = 3.611, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.003783681275362848;  // std dev = 3.677, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.493', 'seconds']
Parameter learned model CLL:-0.383633 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.944, 26, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [2.304, 22, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [2.924, 25, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.932, 8, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.859, 22, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.245, 18, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.859, 22, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.054, 33, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 4, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.026, 31, 13], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.648, 41, 20]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.882, 23, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.192, 16, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 10, 0], 'false,false,false,false': [3.611, 40, 20]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.677, 48, 20]}]
{'': [0.2222222222222217, 0.18311533888228312], 'true': [nan, 0.2222222222222217], 'true,false': [nan, 0.2222222222222217], 'false': [nan, 0.18311533888228312], 'false,false': [0.18311533888228312, nan]}
{'': [0.22506925207756198, 0.24888888888888908], 'false': [nan, 0.24888888888888908], 'false,false': [nan, 0.24888888888888908], 'false,false,false': [nan, 0.24888888888888908]}
{'': [nan, 0.22254976113865838], 'false': [nan, 0.22254976113865838], 'false,false': [0.23346938775510206, 0.20159999999999992], 'false,false,true': [nan, 0.23346938775510206], 'false,false,false': [nan, 0.20159999999999992]}
{'': [nan, 0.2332025757243644], 'false': [nan, 0.23320257572436406], 'false,false': [0.23346938775510206, 0.23268698060941803], 'false,false,false': [nan, 0.23268698060941803]}
{'': [nan, 0.2041346663339689], 'false': [0.20274102079395065, 0.20659722222222235], 'false,false': [nan, 0.20659722222222235], 'false,false,false': [0.0, 0.22750000000000012], 'false,true': [nan, 0.20274102079395065], 'false,true,false': [nan, 0.20274102079395065]}
{'': [nan, 0.2171368051524751], 'false': [0.20816115702479346, 0.23270097423745145], 'false,false': [0.0, 0.2460937500000001], 'false,false,false': [nan, 0.2460937500000001], 'false,false,true': [0.0, nan]}
{'': [nan, 0.21820062238082918], 'false': [nan, 0.21820062238082905], 'false,false': [nan, 0.2182006223808292], 'false,false,false': [nan, 0.21820062238082918]}
{'': [0.23070987654320968, 0.20896918154952704], 'true': [nan, 0.23070987654320968], 'true,false': [nan, 0.23070987654320968], 'true,false,false': [nan, 0.23070987654320987], 'false': [nan, 0.20896918154952704], 'false,false': [nan, 0.20896918154952704], 'false,false,false': [nan, 0.20896918154952704]}
{'': [nan, 0.20013138694458774], 'false': [nan, 0.20013138694458768], 'false,false': [nan, 0.20013138694458774], 'false,false,false': [0.0, 0.21734173784025593]}
{'': [nan, 0.1988358824120955], 'false': [nan, 0.19883588241209557], 'false,false': [nan, 0.19883588241209557], 'false,false,false': [nan, 0.1988358824120955]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 4.382
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.32315072393662575;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.04744840516913428;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.12544463852839133;  // std dev = 2.11e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.5697977687757647;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.21121631198624163;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42339247058829327;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( publication(C, A) )
%   | | then return 0.4797580436547585;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5878704604942392;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( student(A), publication(G, A) )
%   | | then return 0.4140874200753305;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15453246325225742;  // std dev = 0.512, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( ta(H, A, I), publication(J, A) )
%   | then return -0.16518784607104936;  // std dev = 0.284, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then return 0.04419685068248399;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.3397039806518814;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.31532943548976444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04522690475056795;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09671437339118877;  // std dev = 0.070, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( professor(B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.3622936367882936;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5090012370232085;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.26839125647154227;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.11893045430674712;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2245487996308663;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08501590970873316;  // std dev = 0.024, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.09725475586660576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then return 0.3396554376904962;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( professor(B) )
%   | | | then return -0.039753077954420256;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return -0.3983335090074755;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.03455475246258184;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B), publication(I, B) )
%   | | | then return 0.2541325466034522;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10959211424269744;  // std dev = 0.427, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.2688751669753822;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.42221432850428703;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08275963910621917;  // std dev = 0.083, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.21965412873634083;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1968611979497195;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.05604615357903577;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2532179106530462;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07630917865420697;  // std dev = 0.081, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.07965224147271384;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( publication(E, B), publication(E, A) )
%   | then return 0.17279444767886235;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(I, A, J) )
%   | | | then return -0.30750089589719587;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04333697632007856;  // std dev = 0.465, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.21306369062174232;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06627652309063213;  // std dev = 1.072, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then return 0.17924394683240708;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.1448654784650916;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.29154308864548145;  // std dev = 0.000725, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.026892866518540243;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06516465001983957;  // std dev = 0.049, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.474', 'seconds']
Refined model CLL: -0.188136


******************************************
Best model found
******************************************
Results 

CLL : -0.263068 

AUC ROC : 0.944817 

AUC PR : 0.220338 

Precision : 0.149648 

Recall : 0.913978 

F1 : 0.257186 

Total Learning Time : 4.382 

Total Inference Time : 0.8042004108428955 

Total revision time: 6.903904298782349
Best scored revision CLL: -0.188136


Results 

CLL : -0.263068 

AUC ROC : 0.944817 

AUC PR : 0.220338 

Precision : 0.149648 

Recall : 0.913978 

F1 : 0.257186 

Total Learning Time : 6.944695095062256 

Total Inference Time : 0.8042004108428955 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.827
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.13379530847388582;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21090783810620606;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011847284599544178;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20080970722404498;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return -0.00498219597065717;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14257491168634984;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.028084482042598242;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07627283780612022;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return -0.024141035093288393;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), publication(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2941844045605299;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029084063790841677;  // std dev = 2.432, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1180273517811924;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008625726256855943;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.1848115664384045;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.057458664065220905;  // std dev = 2.383, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.03346232154388399;  // std dev = 2.535, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.597', 'seconds']
Parameter learned model CLL:-0.4172 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.247, 7, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [2.029, 10, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.195, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 11, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.279, 9, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 10, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.291, 10, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 11, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.309, 12, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,false': 'publication(A, G), publication(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.309, 12, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.708, 5, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.432, 20, 9]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.195, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 4, 0], 'false,false,false,false': [2.383, 15, 9]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.535, 22, 9]}]
{'': [0.17283950617283952, 0.24221453287197234], 'false': [nan, 0.24221453287197234], 'false,false': [0.24221453287197234, nan], 'true': [nan, 0.17283950617283952], 'true,false': [nan, 0.17283950617283952]}
{'': [0.2040816326530613, 0.23765432098765416], 'false': [nan, 0.23765432098765416], 'false,false': [nan, 0.23765432098765416], 'false,false,false': [nan, 0.23765432098765416]}
{'': [nan, 0.21401718180475918], 'false': [nan, 0.21401718180475918], 'false,false': [0.1487603305785124, 0.2422145328719724], 'false,false,false': [nan, 0.2422145328719724], 'false,false,true': [nan, 0.1487603305785124]}
{'': [nan, 0.20337369215297257], 'false': [nan, 0.20337369215297263], 'false,false': [0.1388888888888889, 0.23765432098765452], 'false,false,false': [nan, 0.23765432098765452]}
{'': [nan, 0.1868815227884053], 'false': [0.12244897959183677, 0.2275000000000001], 'false,false': [nan, 0.2275000000000001], 'false,false,false': [nan, 0.2275000000000001], 'false,true': [nan, 0.12244897959183677], 'false,true,false': [nan, 0.12244897959183677]}
{'': [nan, 0.20329642644073345], 'false': [0.12244897959183679, 0.24305555555555566], 'false,false': [nan, 0.24305555555555566], 'false,false,false': [nan, 0.24305555555555566]}
{'': [nan, 0.20400895387397855], 'false': [nan, 0.20400895387397872], 'false,false': [nan, 0.20400895387397858], 'false,false,false': [nan, 0.20400895387397855]}
{'': [0.2040816326530612, 0.23268698060941817], 'false': [nan, 0.23268698060941817], 'false,false': [nan, 0.23268698060941817], 'false,false,false': [nan, 0.23268698060941817], 'true': [nan, 0.2040816326530612], 'true,false': [nan, 0.2040816326530612], 'true,false,false': [nan, 0.20408163265306123]}
{'': [nan, 0.20995323415779096], 'false': [nan, 0.20995323415779102], 'false,false': [nan, 0.20995323415779096], 'false,false,false': [0.0, 0.23656045919528768]}
{'': [nan, 0.20729698820372414], 'false': [nan, 0.20729698820372394], 'false,false': [nan, 0.20729698820372394], 'false,false,false': [nan, 0.20729698820372414]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 2.24
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.2544901862807741;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5762317043041707;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( professor(A) )
%   | then return -0.19539567445863368;  // std dev = 0.288, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.4816775249906514;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return -0.2277103900894669;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.43232924159619623;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(F, B), publication(G, A) )
%   | then return -0.19763545536297022;  // std dev = 0.244, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10002433187464288;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.39580259858611233;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3342312607129583;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(D, A) )
%   | then return -0.17619138580337568;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09282356524114074;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.28511330360310244;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(F, A), professor(B) )
%   | then return -0.3039580074323494;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.11000933112400911;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07954116406293135;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.23658814858879962;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.28083448751187007;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, B), professor(A) )
%   | then return -0.12487926318672027;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07642423826946336;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return -0.16103435259917395;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.21190858784331798;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18842040276622904;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06916428247997017;  // std dev = 0.027, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.10390930135712838;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( professor(B) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.025204005794443974;  // std dev = 0.708, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2119384715213979;  // std dev = 0.174, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06886143167185928;  // std dev = 0.005, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.17889997247631742;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(F, A, G), professor(B) )
%   | then return -0.4178051209602627;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then return 0.0389968612033091;  // std dev = 0.307, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( student(B) )
%   | | | then return -0.06250432544103665;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.03949498729917287;  // std dev = 0.844, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.269', 'seconds']
Refined model CLL: -0.169654


******************************************
Best model found
******************************************
Results 

CLL : -0.334814 

AUC ROC : 0.906468 

AUC PR : 0.122462 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.24 

Total Inference Time : 0.6034810543060303 

Total revision time: 4.262024013519287
Best scored revision CLL: -0.169654


Results 

CLL : -0.334814 

AUC ROC : 0.906468 

AUC PR : 0.122462 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.3028148097991945 

Total Inference Time : 0.6034810543060303 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.193
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.10764966468423426;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16139382724735216;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08482843472669861;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2229474092650122;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.10971616632044352;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13438830252566403;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13599420160123346;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.28082704325881386;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.13093766262353915;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.03473764657739311;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.22772710954955494;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11622943769381269;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049665461475357296;  // std dev = 4.688, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.044023456935854376;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13198533219334604;  // std dev = 2.689, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.25659145095013797;  // std dev = 1.49e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.087473782813613;  // std dev = 4.483, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019134759973271402;  // std dev = 4.622, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.318', 'seconds']
Parameter learned model CLL:-0.368033 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.617, 42, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [2.691, 15, 14], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.721, 51, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.017, 26, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.74, 53, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.806, 18, 14]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.643, 44, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.925, 22, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.527, 36, 19], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.87, 20, 14]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.73, 52, 19], 'false,false,true,true': [0.0, 4, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.839, 19, 14]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.688, 71, 33]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.667, 46, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.689, 16, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.49e-08, 26, 0], 'false,false,false,false': [4.483, 52, 33]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.622, 70, 33]}]
{'': [0.21445847890352004, 0.2497027348394764], 'false': [nan, 0.2497027348394764], 'false,false': [0.2497027348394764, nan], 'true': [nan, 0.21445847890352004], 'true,false': [nan, 0.21445847890352004]}
{'': [0.19775510204081617, 0.22750000000000054], 'false': [nan, 0.22750000000000054], 'false,false': [nan, 0.22750000000000054], 'false,false,false': [nan, 0.22750000000000054]}
{'': [nan, 0.21426669938548043], 'false': [nan, 0.21426669938548043], 'false,false': [0.1942515432098763, 0.24609374999999997], 'false,false,false': [nan, 0.24609374999999997], 'false,false,true': [nan, 0.1942515432098763]}
{'': [nan, 0.22059941330046612], 'false': [nan, 0.220599413300466], 'false,false': [0.21063240110859194, 0.23765432098765457], 'false,false,false': [nan, 0.23765432098765457]}
{'': [nan, 0.23086698166340372], 'false': [0.22611570247933854, 0.2376543209876544], 'false,false': [nan, 0.2376543209876544], 'false,false,false': [0.0, 0.2422145328719724], 'false,true': [nan, 0.22611570247933854], 'false,true,false': [nan, 0.22611570247933854]}
{'': [nan, 0.20783255121557115], 'false': [0.19599285855980952, 0.22926138077875305], 'false,false': [0.0, 0.24426078971533538], 'false,false,false': [nan, 0.24426078971533538], 'false,false,true': [0.0, nan]}
{'': [nan, 0.21129794031833823], 'false': [nan, 0.2112979403183392], 'false,false': [nan, 0.2112979403183385], 'false,false,false': [nan, 0.21129794031833823]}
{'': [0.20686390532544427, 0.24110814466960853], 'false': [nan, 0.24110814466960853], 'false,false': [nan, 0.24110814466960853], 'false,false,false': [nan, 0.24110814466960853], 'true': [nan, 0.20686390532544427], 'true,false': [nan, 0.20686390532544427], 'true,false,false': [nan, 0.20686390532544405]}
{'': [nan, 0.20225817808475707], 'false': [nan, 0.2022581780847564], 'false,false': [nan, 0.20225817808475707], 'false,false,false': [8.540177112501205e-18, 0.23639652953308377]}
{'': [nan, 0.20744519956271207], 'false': [nan, 0.20744519956271157], 'false,false': [nan, 0.20744519956271157], 'false,false,false': [nan, 0.20744519956271207]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 7.781
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.1418510649004877;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17742683337431933;  // std dev = 1.513, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.7600005323215862;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.41825615172292147;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.295794374745815;  // std dev = 1.332, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.0013819976265918577;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return 0.35436220407383706;  // std dev = 1.222, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.6103180560146169;  // std dev = 0.125, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1123163781936064;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( ta(F, D, G), publication(H, B) )
%   | | | then return -0.26688540085717455;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10158932478991155;  // std dev = 1.274, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.1233965823392971;  // std dev = 1.275, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3330642187211729;  // std dev = 1.511, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.10159632948783624;  // std dev = 3.65e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.012621486173183668;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.35268436499940503;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(G, B), publication(G, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4519279029843932;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( professor(B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.14292288091055036;  // std dev = 1.620, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.42887220044152197;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.40778472802296173;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20868643251667207;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, B), publication(G, A) )
%   | | then return 0.17008299408001784;  // std dev = 0.147, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( student(A), professor(B) )
%   | | | then return -0.16630583506054158;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.08518475138839685;  // std dev = 1.58e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( hasposition(A, H), sameperson(A, I) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(J, B), professor(B) )
%   | | then if ( publication(J, K), tempadvisedby(K, L) )
%   | | | then return -0.21348620129582746;  // std dev = 0.996, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1606507834490163;  // std dev = 1.647, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.11755082204063722;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A), publication(D, A) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2552432808660136;  // std dev = 0.210, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.15785596077134903;  // std dev = 0.732, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5461499692270317;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return 0.2251466504699984;  // std dev = 0.372, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.1303619608776888;  // std dev = 1.538, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08224759572974875;  // std dev = 1.052, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else if ( professor(B) )
%   | then return -0.27266815374165415;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07888895031580125;  // std dev = 0.031, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( ta(C, A, D), tempadvisedby(E, B) )
%   then if ( publication(F, A), publication(G, B) )
%   | then return 0.07496446744714666;  // std dev = 0.782, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.46905855664280816;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(H, B), publication(H, A) )
%   | then if ( student(A), tempadvisedby(I, B) )
%   | | then return 0.18294206438399951;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1228310152048039;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( publication(J, A), student(A) )
%   | | then if ( student(B) )
%   | | | then return -0.07323861015524001;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.1692814575055751;  // std dev = 1.488, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.11028075087265696;  // std dev = 1.554, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.04620768319675452;  // std dev = 0.952, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.0731973729350961;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H), publication(E, B) )
%   | | | then return -0.21394846657787356;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09769948514274052;  // std dev = 0.890, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( ta(I, A, J), publication(K, A) )
%   | | | then return 0.331834729818772;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09747117245256297;  // std dev = 1.910, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | else return -0.0712536583996535;  // std dev = 0.065, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(E, C), publication(F, A) )
%   | | then return -0.19489150545927897;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(D, G), ta(H, G, I) )
%   | | | then return 0.16576664503582553;  // std dev = 1.097, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.06570320394336623;  // std dev = 0.946, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then return 0.16697947845969952;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.3540727279362405;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26829768798664144;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06658528531546747;  // std dev = 0.085, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.504', 'seconds']
Refined model CLL: -0.257209


******************************************
Best model found
******************************************
Results 

CLL : -0.247196 

AUC ROC : 0.957244 

AUC PR : 0.4229 

Precision : 0.168467 

Recall : 0.975 

F1 : 0.287293 

Total Learning Time : 7.781 

Total Inference Time : 1.2787153720855713 

Total revision time: 11.398014806747437
Best scored revision CLL: -0.257209


Results 

CLL : -0.247196 

AUC ROC : 0.957244 

AUC PR : 0.4229 

Precision : 0.168467 

Recall : 0.975 

F1 : 0.287293 

Total Learning Time : 11.438805603027344 

Total Inference Time : 1.2787153720855713 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.925
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04862512557570276;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.03394431173323758;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2559056677895362;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0700198026939791;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2162427405940813;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.12425508581802151;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1492662277113656;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15433603303762566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.27980351844819584;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.13398958500008007;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return -0.012334427627797292;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.22701563201280875;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06741773222000011;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006179374353988584;  // std dev = 3.341, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03347681901476879;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07228615371574298;  // std dev = 2.660, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.20726384141510323;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.029872884901987546;  // std dev = 3.277, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020396387764417465;  // std dev = 3.235, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.451', 'seconds']
Parameter learned model CLL:-0.36461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.799, 17, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [2.739, 20, 12], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.809, 18, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.619, 16, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.764, 14, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.619, 16, 12]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.69, 10, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.683, 18, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.633, 8, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.652, 17, 12]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [1.799, 17, 4], 'false,false,true,true': [0.0, 3, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.739, 20, 12]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.341, 41, 16]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.749, 13, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.66, 20, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 3, 0], 'false,false,false,false': [3.277, 32, 16]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.235, 37, 16]}]
{'': [0.15419501133786834, 0.2343749999999995], 'false': [nan, 0.2343749999999995], 'false,false': [0.2343749999999995, nan], 'true': [nan, 0.15419501133786834], 'true,false': [nan, 0.15419501133786834]}
{'': [0.14876033057851226, 0.24489795918367374], 'false': [nan, 0.24489795918367374], 'false,false': [nan, 0.24489795918367374], 'false,false,false': [nan, 0.24489795918367374]}
{'': [nan, 0.22179384731286558], 'false': [nan, 0.22179384731286558], 'false,false': [0.1728395061728394, 0.24489795918367369], 'false,false,false': [nan, 0.24489795918367369], 'false,false,true': [nan, 0.1728395061728394]}
{'': [nan, 0.2287071382986499], 'false': [nan, 0.22870713829864953], 'false,false': [0.20408163265306123, 0.24000000000000002], 'false,false,false': [nan, 0.24000000000000002]}
{'': [nan, 0.23350350227142994], 'false': [0.2222222222222222, 0.2372528616024973], 'false,false': [nan, 0.2372528616024973], 'false,false,false': [0.0, 0.24256837098692025], 'false,true': [nan, 0.2222222222222222], 'false,true,false': [nan, 0.2222222222222222]}
{'': [nan, 0.19669432673487455], 'false': [0.15419501133786845, 0.22107945842730722], 'false,false': [-9.25185853854297e-18, 0.2343750000000001], 'false,false,false': [nan, 0.2343750000000001], 'false,false,true': [-9.25185853854297e-18, nan]}
{'': [nan, 0.19582126672834155], 'false': [nan, 0.19582126672834207], 'false,false': [nan, 0.1958212667283417], 'false,false,false': [nan, 0.19582126672834155]}
{'': [0.17993079584775074, 0.2211319217239219], 'false': [nan, 0.2211319217239219], 'false,false': [nan, 0.2211319217239219], 'false,false,false': [nan, 0.2211319217239219], 'true': [nan, 0.17993079584775074], 'true,false': [nan, 0.17993079584775074], 'true,false,false': [nan, 0.17993079584775076]}
{'': [nan, 0.21368822066149934], 'false': [nan, 0.2136882206614996], 'false,false': [nan, 0.21368822066149934], 'false,false,false': [0.0, 0.22373586227823236]}
{'': [nan, 0.1974948153641713], 'false': [nan, 0.19749481536417138], 'false,false': [nan, 0.19749481536417138], 'false,false,false': [nan, 0.1974948153641713]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 4.442
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( ta(F, D, G), ta(F, A, H) )
%   | | then return 0.7382776263229421;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.15619471171805724;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4425527212135841;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B), student(A) )
%   | then return 0.00824389952611801;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.021661607727606686;  // std dev = 0.877, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H), ta(I, F, H) )
%   | | | then return 0.31012235474401717;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5587339224065009;  // std dev = 0.763, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.312365677871262;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then return 0.197713376928864;  // std dev = 0.782, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( projectmember(E, B) )
%   | | then return 0.5219206292880667;  // std dev = 0.231, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.27053558995646954;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5207638353544841;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783634;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.4122258056976878;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(E, B) )
%   | | then return -0.19128339362137578;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( publication(H, B), professor(B) )
%   | | then if ( publication(H, I), projectmember(J, I) )
%   | | | then return 0.1227436847366973;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4334311537661981;  // std dev = 0.155, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.15639301331490058;  // std dev = 0.349, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.020017557429625885;  // std dev = 0.984, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.22804258413085873;  // std dev = 0.419, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.16831874781448528;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08426281340908087;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( hasposition(A, E), sameperson(A, F) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( tempadvisedby(G, B) )
%   | | then if ( projectmember(H, B), ta(I, A, J) )
%   | | | then return -0.20603988896138226;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18403461053553521;  // std dev = 1.216, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( hasposition(B, K) )
%   | | | then return -0.239656314746568;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.051520917463034124;  // std dev = 0.693, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B), ta(E, A, F) )
%   | then return -0.008020141712386;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | then if ( ta(J, K, H), publication(L, K) )
%   | | | then return 0.2960160606207448;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05503816023510555;  // std dev = 0.877, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.3056524561093893;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2802132245769115;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(N, B) )
%   | then if ( publication(N, A) )
%   | | then return -0.16233719430956398;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07599567290771295;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( professor(B) )
%   | | then return -0.020001779662682136;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.0785314801309662;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.21795764338056267;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.2393818714323118;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return 0.04233847134215048;  // std dev = 1.533, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.1717339344326506;  // std dev = 0.705, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07617010575996817;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then if ( tempadvisedby(E, A) )
%   | then return -0.06413656523026313;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09035337064860952;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | then if ( publication(I, A) )
%   | | then return -0.010242040819039414;  // std dev = 0.364, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3537705907722568;  // std dev = 0.312, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( projectmember(L, B) )
%   | | | then return 0.035575729131341126;  // std dev = 0.303, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.3050180115748715;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(M, A, N) )
%   | | | then return -0.1246805654137339;  // std dev = 0.893, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.010239147960164048;  // std dev = 0.627, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( projectmember(D, B), publication(E, B) )
%   | then return -0.11344839484681779;  // std dev = 1.025, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(F, A), ta(G, A, H) )
%   | | then return 0.046010199709732934;  // std dev = 0.311, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.2393261469906185;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21796814302871056;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(K, A, L) )
%   | then if ( professor(B) )
%   | | then return -0.17465859221539853;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.058914705704725595;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( professor(B) )
%   | | then return 0.0979249363706324;  // std dev = 0.506, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07416091090721631;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.575', 'seconds']
Refined model CLL: -0.241016


******************************************
Best model found
******************************************
Results 

CLL : -0.226647 

AUC ROC : 0.944706 

AUC PR : 0.235548 

Precision : 0.190931 

Recall : 0.824742 

F1 : 0.310078 

Total Learning Time : 4.442 

Total Inference Time : 0.8474948406219482 

Total revision time: 7.029146091461182
Best scored revision CLL: -0.241016


Results 

CLL : -0.226647 

AUC ROC : 0.944706 

AUC PR : 0.235548 

Precision : 0.190931 

Recall : 0.824742 

F1 : 0.310078 

Total Learning Time : 7.069936887741089 

Total Inference Time : 0.8474948406219482 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.027
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2558762078267837;  // std dev = 4.591, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2680059617872276;  // std dev = 4.369, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1603649919674395;  // std dev = 4.631, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11249274746198486;  // std dev = 4.707, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07454989488999925;  // std dev = 4.758, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04898421776954921;  // std dev = 4.775, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05145013425033271;  // std dev = 4.736, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023117957205829216;  // std dev = 4.819, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06621726176173405;  // std dev = 4.644, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08265454442365514;  // std dev = 4.520, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.132', 'seconds']
Parameter learned model CLL:-0.394385 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.05e-08, 22, 0], 'false,false,true': [4.591, 53, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.369, 46, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.631, 60, 35]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.707, 65, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.758, 71, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.775, 77, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.736, 72, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.819, 76, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.644, 61, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.52, 54, 35]}]
{'': [nan, 0.216942148760332], 'false': [5.046468293750712e-18, 0.23954028925619986], 'false,false': [0.23954028925619986, nan], 'false,true': [nan, 5.046468293750712e-18]}
{'': [nan, 0.23561178692826437], 'false': [nan, 0.23561178692826437], 'false,false': [nan, 0.23561178692826437], 'false,false,false': [nan, 0.23561178692826437]}
{'': [nan, 0.22571306644393835], 'false': [nan, 0.22571306644393835], 'false,false': [nan, 0.22571306644393835], 'false,false,false': [nan, 0.2257130664439383]}
{'': [nan, 0.22152558049612203], 'false': [nan, 0.22152558049612203], 'false,false': [nan, 0.22152558049612203], 'false,false,false': [nan, 0.22152558049612203]}
{'': [nan, 0.21353646249247513], 'false': [nan, 0.21353646249247513], 'false,false': [nan, 0.21353646249247513], 'false,false,false': [nan, 0.21353646249247513]}
{'': [nan, 0.203607199745354], 'false': [nan, 0.203607199745354], 'false,false': [nan, 0.203607199745354], 'false,false,false': [nan, 0.203607199745354]}
{'': [nan, 0.20961830787246574], 'false': [nan, 0.20961830787246574], 'false,false': [nan, 0.20961830787246574], 'false,false,false': [nan, 0.20961830787246574]}
{'': [nan, 0.2092138406781381], 'false': [nan, 0.2092138406781381], 'false,false': [nan, 0.2092138406781381], 'false,false,false': [nan, 0.2092138406781381]}
{'': [nan, 0.22467595736488563], 'false': [nan, 0.22467595736488563], 'false,false': [nan, 0.22467595736488563], 'false,false,false': [nan, 0.22467595736488563]}
{'': [nan, 0.22952580671915987], 'false': [nan, 0.22952580671915968], 'false,false': [nan, 0.22952580671915987], 'false,false,false': [nan, 0.22952580671915987]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 8.693
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A), publication(F, B) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.5133213488926158;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.5335844858837554;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.17463793853176468;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.11691781921708873;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5348243628647642;  // std dev = 2.078, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   else return -0.12544463852839133;  // std dev = 3.33e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then return 0.419046251094236;  // std dev = 0.610, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6798525281733744;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.46857574904021576;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.27764368466491784;  // std dev = 2.025, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.012915938320768613;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17958260498743522;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return -0.1123163781936064;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.42169822563182713;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(D, G, H), publication(I, G) )
%   | | | then return -0.3199451427050155;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.28304653103922145;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( publication(J, L), tempadvisedby(L, M) )
%   | | | then return 0.12823311165415144;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4969715058437186;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return 0.36689634384534037;  // std dev = 1.423, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.6296546698053647;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.10159632948783631;  // std dev = 2.11e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.34240736123425336;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.17643723231457425;  // std dev = 1.285, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.4891367470424881;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(E, A, F) )
%   | | then return -0.06671852542537984;  // std dev = 1.149, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.09374914684151961;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2173273303363477;  // std dev = 1.235, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09269127618926105;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | | then return 0.2535895299792404;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.29799563106374666;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return -0.32043135305948806;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.13801914729184958;  // std dev = 1.336, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( publication(I, B) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.3681396008178995;  // std dev = 0.792, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.25286512960556723;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4304195501022742;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.20865499334057425;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(D, G, H), publication(I, G) )
%   | | | then return -0.28731272495709664;  // std dev = 0.302, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12548330943733874;  // std dev = 1.009, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(J, B) )
%   | | then if ( tempadvisedby(K, B), publication(J, A) )
%   | | | then return 0.06388941196939912;  // std dev = 0.964, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3242338195762659;  // std dev = 1.006, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.1217176204051803;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0371265517212256;  // std dev = 1.340, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( tempadvisedby(D, B) )
%   | then if ( publication(E, D), publication(E, B) )
%   | | then return 0.25471583198725994;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17858962183002985;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.014035062966238437;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | then return 0.13383974878295357;  // std dev = 0.636, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then return -0.21854745922493857;  // std dev = 0.482, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( publication(K, B), student(A) )
%   | | | then return -0.004961273468913456;  // std dev = 1.349, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.07217837543972389;  // std dev = 1.879, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( professor(A) )
%   | then return -0.08228931226809094;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return -0.12386789759100118;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15999661888524838;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( tempadvisedby(E, B), publication(F, E) )
%   | then if ( publication(F, B), student(A) )
%   | | then return -0.31564649953439505;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.1320013238854584;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.29441531415736977;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( professor(B), publication(H, A) )
%   | | | then return -0.1919532935078677;  // std dev = 1.461, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.04820823417684932;  // std dev = 2.063, 73.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | | then return 0.21602755350255154;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13685075570289074;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.17187689567800396;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.21596966334066647;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return 0.04428509744866371;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.23741505239515162;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36783743043469214;  // std dev = 0.276, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.06835229208621686;  // std dev = 0.043, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.342', 'seconds']
Refined model CLL: -0.222332


******************************************
Best model found
******************************************
Results 

CLL : -0.214999 

AUC ROC : 0.950156 

AUC PR : 0.405844 

Precision : 0.198142 

Recall : 0.820513 

F1 : 0.319202 

Total Learning Time : 8.693 

Total Inference Time : 1.4186060428619385 

Total revision time: 12.190080137252806
Best scored revision CLL: -0.222332


Results 

CLL : -0.214999 

AUC ROC : 0.950156 

AUC PR : 0.405844 

Precision : 0.198142 

Recall : 0.820513 

F1 : 0.319202 

Total Learning Time : 12.325429887771605 

Total Inference Time : 1.4186060428619385 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.859
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2217852987358757;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19423792643912458;  // std dev = 3.542, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09910183973616823;  // std dev = 3.731, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14290479976881434;  // std dev = 3.557, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07502086728764659;  // std dev = 3.675, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11566783827667462;  // std dev = 3.526, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05052492465046077;  // std dev = 3.636, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08005488252248075;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06278495432981185;  // std dev = 3.512, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05245713620726611;  // std dev = 3.511, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.444', 'seconds']
Parameter learned model CLL:-0.412505 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,false,true': [3.568, 35, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.542, 36, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.731, 48, 20]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.557, 37, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.675, 45, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.526, 35, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.636, 43, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.509, 37, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.512, 37, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.511, 36, 20]}]
{'': [nan, 0.2112029384756653], 'false': [-1.0092936587501423e-17, 0.23140495867768554], 'false,false': [0.23140495867768554, nan], 'false,true': [nan, -1.0092936587501423e-17]}
{'': [nan, 0.22408008063383486], 'false': [nan, 0.22408008063383486], 'false,false': [nan, 0.22408008063383486], 'false,false,false': [nan, 0.22408008063383486]}
{'': [nan, 0.20471221701182465], 'false': [nan, 0.20471221701182465], 'false,false': [nan, 0.20471221701182465], 'false,false,false': [nan, 0.20471221701182465]}
{'': [nan, 0.22203088729756024], 'false': [nan, 0.22203088729756024], 'false,false': [nan, 0.22203088729756024], 'false,false,false': [nan, 0.22203088729756024]}
{'': [nan, 0.20777684297799695], 'false': [nan, 0.20777684297799695], 'false,false': [nan, 0.20777684297799695], 'false,false,false': [nan, 0.20777684297799695]}
{'': [nan, 0.22601627557279477], 'false': [nan, 0.22601627557279477], 'false,false': [nan, 0.22601627557279477], 'false,false,false': [nan, 0.22601627557279477]}
{'': [nan, 0.20990211075802004], 'false': [nan, 0.20990211075802004], 'false,false': [nan, 0.20990211075802004], 'false,false,false': [nan, 0.20990211075802004]}
{'': [nan, 0.21599430504990993], 'false': [nan, 0.21599430504990993], 'false,false': [nan, 0.21599430504990993], 'false,false,false': [nan, 0.21599430504990993]}
{'': [nan, 0.21640893861888022], 'false': [nan, 0.21640893861888022], 'false,false': [nan, 0.21640893861888022], 'false,false,false': [nan, 0.21640893861888022]}
{'': [nan, 0.22014664211636484], 'false': [nan, 0.22014664211636498], 'false,false': [nan, 0.22014664211636484], 'false,false,false': [nan, 0.22014664211636484]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 5.22
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( student(B) )
%   | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.5167834609153605;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7504867934385782;  // std dev = 0.145, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(E, C) )
%   | | then return -0.10972476177696067;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5838635615767661;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09568685803207665;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.5657795829922222;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.590615491181582;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.620098183969117;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3136455478343983;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.46216626762603275;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3138131955679091;  // std dev = 0.760, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then return -0.0014892889413259391;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.5436931500788289;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09883671785146256;  // std dev = 1.256, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.10159632948783634;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.42699153988164096;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0011244705949761957;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.4130703444769781;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.41336711090343553;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24681513840979827;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.092691276189261;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.32944233525002464;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.26125594226953186;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return -0.019091699566594206;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3187072594357256;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07371516381372323;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( publication(H, A) )
%   | then if ( student(B) )
%   | | then return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.02754543163199315;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(I, B) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.2001055439245475;  // std dev = 0.281, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then if ( ta(D, C, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.1544418577171008;  // std dev = 0.498, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.25293229955381;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3958518176028307;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( student(B) )
%   | then return -0.07764154019183242;  // std dev = 0.015, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.21414327303744013;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.028366701581735154;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1510086805274593;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, A) )
%   then if ( publication(C, D), ta(E, D, F) )
%   | then if ( tempadvisedby(G, B), student(A) )
%   | | then return 0.28533263621149996;  // std dev = 0.186, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13068520594973065;  // std dev = 0.316, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(C, B) )
%   | | then return 0.20529403445045155;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17191804479922052;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( professor(B), publication(H, B) )
%   | then if ( publication(H, I), tempadvisedby(I, J) )
%   | | then return 0.2740121223217577;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.169148284633707;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11845776551241335;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(M, A, N) )
%   | | then return -0.12408803818536375;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07214925884176208;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), tempadvisedby(E, B) )
%   then if ( ta(F, E, G), ta(F, H, D) )
%   | then return -0.052402532787508525;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2501323549763283;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(I, B), publication(J, I) )
%   | then return -0.24759708379416753;  // std dev = 0.982, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then if ( professor(B), student(A) )
%   | | | then return 0.16888134772414629;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.07982164704468736;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( ta(L, A, M), publication(N, A) )
%   | | | then return -0.19459517642748528;  // std dev = 0.937, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.05842809674564358;  // std dev = 1.225, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), student(A) )
%   then if ( professor(B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.1914159485946532;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1347236281481407;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( professor(B), ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return -0.03731931670741392;  // std dev = 0.448, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2687719882161026;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.2566193474311851;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18692942078215902;  // std dev = 0.768, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( student(A), professor(B) )
%   | then return -0.260683918027313;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( student(B) )
%   | | then return -0.06372694083899542;  // std dev = 0.012, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.13171678637651635;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.802', 'seconds']
Refined model CLL: -0.171819


******************************************
Best model found
******************************************
Results 

CLL : -0.23865 

AUC ROC : 0.940456 

AUC PR : 0.262029 

Precision : 0.152401 

Recall : 0.784946 

F1 : 0.255245 

Total Learning Time : 5.22 

Total Inference Time : 0.8484673500061035 

Total revision time: 7.657911066055298
Best scored revision CLL: -0.171819


Results 

CLL : -0.23865 

AUC ROC : 0.940456 

AUC PR : 0.262029 

Precision : 0.152401 

Recall : 0.784946 

F1 : 0.255245 

Total Learning Time : 7.793260816574096 

Total Inference Time : 0.8484673500061035 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.765
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( inphase(A, G) )
%   | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22979826772853917;  // std dev = 2.262, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13983481257470515;  // std dev = 2.369, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061634702963682744;  // std dev = 2.456, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10345588490061992;  // std dev = 2.365, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04156380396187839;  // std dev = 2.431, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07496262058543188;  // std dev = 2.363, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07900844576091987;  // std dev = 2.317, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013573165654782993;  // std dev = 2.402, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.02897102224859741;  // std dev = 2.488, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.345', 'seconds']
Parameter learned model CLL:-0.432298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 10, 0], 'false,false,true': [2.121, 9, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.262, 13, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.369, 16, 9]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.456, 21, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.365, 16, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.431, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.363, 16, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.317, 15, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.402, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.488, 22, 9]}]
{'': [nan, 0.21811224489795927], 'false': [-1.1102230246251566e-17, 0.25], 'false,false': [0.25, nan], 'false,true': [nan, -1.1102230246251566e-17]}
{'': [nan, 0.23258934842231468], 'false': [nan, 0.23258934842231468], 'false,false': [nan, 0.23258934842231468], 'false,false,false': [nan, 0.23258934842231468]}
{'': [nan, 0.22441258547973786], 'false': [nan, 0.22441258547973786], 'false,false': [nan, 0.22441258547973786], 'false,false,false': [nan, 0.22441258547973789]}
{'': [nan, 0.20113466462100824], 'false': [nan, 0.20113466462100824], 'false,false': [nan, 0.20113466462100824], 'false,false,false': [nan, 0.20113466462100824]}
{'': [nan, 0.2237497066445593], 'false': [nan, 0.2237497066445593], 'false,false': [nan, 0.2237497066445593], 'false,false,false': [nan, 0.2237497066445593]}
{'': [nan, 0.20371346931245704], 'false': [nan, 0.20371346931245704], 'false,false': [nan, 0.20371346931245704], 'false,false,false': [nan, 0.20371346931245704]}
{'': [nan, 0.22328877146893122], 'false': [nan, 0.22328877146893122], 'false,false': [nan, 0.22328877146893122], 'false,false,false': [nan, 0.22328877146893122]}
{'': [nan, 0.22362663883774989], 'false': [nan, 0.22362663883774989], 'false,false': [nan, 0.22362663883774989], 'false,false,false': [nan, 0.22362663883774989]}
{'': [nan, 0.2060383513679656], 'false': [nan, 0.2060383513679656], 'false,false': [nan, 0.2060383513679656], 'false,false,false': [nan, 0.2060383513679656]}
{'': [nan, 0.19964480952954378], 'false': [nan, 0.1996448095295438], 'false,false': [nan, 0.19964480952954378], 'false,false,false': [nan, 0.19964480952954378]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 2.198
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( professor(B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.5316289395752953;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.42777284737409105;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5661818591148914;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return -0.025541231932392494;  // std dev = 1.050, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.2449627664320805;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4288570577276447;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.5399690648384433;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return -0.3180285283967748;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return -0.23998397996752208;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33989591883278447;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return -0.03811199020456654;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.40580024710576207;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28055360014976716;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08482542646368854;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.0856572641573847;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2686356776044561;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08337698448150863;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then return 0.3211489051389061;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B), student(A) )
%   | then return 0.049333846346008035;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.07547507473574679;  // std dev = 0.041, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return -0.05031046208178639;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.19296098782716298;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06801571490858029;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.01283324720138665;  // std dev = 0.917, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18199735784207163;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06382885848146959;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.152', 'seconds']
Refined model CLL: -0.175336


******************************************
Best model found
******************************************
Results 

CLL : -0.334438 

AUC ROC : 0.901129 

AUC PR : 0.113116 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.198 

Total Inference Time : 0.5746612548828125 

Total revision time: 4.091039121627808
Best scored revision CLL: -0.175336


Results 

CLL : -0.334438 

AUC ROC : 0.901129 

AUC PR : 0.113116 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.2263888721466065 

Total Inference Time : 0.5746612548828125 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.978
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( inphase(A, G) )
%   | | then return 0.304094881045457;  // std dev = 4.276, 74.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11856134832166247;  // std dev = 4.765, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13712610000064826;  // std dev = 4.616, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13970942493475483;  // std dev = 4.541, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06381817675936717;  // std dev = 4.722, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0767911532531607;  // std dev = 4.629, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08608150701395058;  // std dev = 4.550, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06670667755607883;  // std dev = 4.541, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03874141239372989;  // std dev = 4.583, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03250462133308308;  // std dev = 4.579, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.197', 'seconds']
Parameter learned model CLL:-0.369269 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 14, 0], 'false,false,true': [4.276, 41, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.765, 81, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.616, 70, 33]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.541, 61, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.722, 77, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.629, 69, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.55, 61, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.541, 63, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.583, 68, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.579, 67, 33]}]
{'': [nan, 0.23437500000000144], 'false': [-1.1895246692412391e-17, 0.24707815924032298], 'false,false': [0.24707815924032298, nan], 'false,true': [nan, -1.1895246692412391e-17]}
{'': [nan, 0.19921037909831138], 'false': [nan, 0.19921037909831138], 'false,false': [nan, 0.19921037909831138], 'false,false,false': [nan, 0.19921037909831138]}
{'': [nan, 0.2068980659502967], 'false': [nan, 0.2068980659502967], 'false,false': [nan, 0.2068980659502967], 'false,false,false': [nan, 0.20689806595029664]}
{'': [nan, 0.21937803885585383], 'false': [nan, 0.21937803885585383], 'false,false': [nan, 0.21937803885585383], 'false,false,false': [nan, 0.21937803885585383]}
{'': [nan, 0.20273790588515225], 'false': [nan, 0.20273790588515225], 'false,false': [nan, 0.20273790588515225], 'false,false,false': [nan, 0.20273790588515225]}
{'': [nan, 0.21004808853765805], 'false': [nan, 0.21004808853765805], 'false,false': [nan, 0.21004808853765805], 'false,false,false': [nan, 0.21004808853765805]}
{'': [nan, 0.2202627784712697], 'false': [nan, 0.2202627784712697], 'false,false': [nan, 0.2202627784712697], 'false,false,false': [nan, 0.2202627784712697]}
{'': [nan, 0.21476433310823143], 'false': [nan, 0.21476433310823143], 'false,false': [nan, 0.21476433310823143], 'false,false,false': [nan, 0.21476433310823143]}
{'': [nan, 0.20792273110846915], 'false': [nan, 0.20792273110846915], 'false,false': [nan, 0.20792273110846915], 'false,false,false': [nan, 0.20792273110846915]}
{'': [nan, 0.20966351328493932], 'false': [nan, 0.20966351328493948], 'false,false': [nan, 0.20966351328493932], 'false,false,false': [nan, 0.20966351328493932]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 11.363
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, A), publication(F, B) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.6914822684328457;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.42163438586856555;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7291536777539392;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(D, I), ta(J, I, K) )
%   | | | then return 0.4926229998504546;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.007377000149545408;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.7518526675222025;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), ta(E, A, F) )
%   | | then return 0.5089522598337118;  // std dev = 0.758, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.5529747814966219;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6104240648077525;  // std dev = 0.144, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(H, B), publication(H, A) )
%   | | then return 0.5529747814966219;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.30569557963890526;  // std dev = 1.566, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.1459825129096688;  // std dev = 1.296, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1123163781936063;  // std dev = 3.80e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.11143342249722499;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.5028160750226401;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41574209623451747;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( publication(K, A) )
%   | | | then return -0.13837942951145965;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03689849819125153;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( publication(L, A), ta(M, A, N) )
%   | | | then return 0.5902752699116469;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16712025069166178;  // std dev = 1.876, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   else return -0.10159632948783628;  // std dev = 2.79e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.37952810537965903;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3472882930692124;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3195111010523558;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( professor(A) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( publication(C, H), student(H) )
%   | | | then return 0.1829246492625887;  // std dev = 2.349, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.20345680731739374;  // std dev = 1.136, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( professor(B) )
%   | then return -0.3906247852315719;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.3879105990841629;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.2735682410125363;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08752353205474606;  // std dev = 1.869, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( ta(H, A, I), publication(J, A) )
%   | | then return 0.03197376724382515;  // std dev = 1.015, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(K, A), publication(K, B) )
%   | | | then return 0.25435274211478676;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48060993634085314;  // std dev = 0.295, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0851847513883968;  // std dev = 2.11e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( student(E), tempadvisedby(F, B) )
%   | | | then return 0.22222588951258931;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0074854034925738114;  // std dev = 1.339, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( publication(C, G), professor(G) )
%   | | | then return -0.22933412282666543;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1995563827831833;  // std dev = 0.876, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.24283216459591736;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07133313425731495;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.07545451701047735;  // std dev = 1.245, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13423154647874114;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07840973106954058;  // std dev = 0.019, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(F, C, G), publication(H, A) )
%   | | then return 0.22163121641375225;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(D, I, J), publication(K, I) )
%   | | | then return 0.05290120097367249;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.20725535821860203;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( ta(L, A, M), publication(N, A) )
%   | | then return 0.37124442183656875;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(P, B) )
%   | | | then return 0.21534691865552247;  // std dev = 0.713, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.07738663019013219;  // std dev = 1.705, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.07285645395573864;  // std dev = 0.018, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.16185984099505646;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15642799091180282;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19328560044529625;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.10310112985247444;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.23019443643355503;  // std dev = 1.001, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return -0.054049353376840956;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.18923739790677915;  // std dev = 1.292, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.06813381347713454;  // std dev = 0.017, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(D, A) )
%   | then if ( publication(C, A), student(A) )
%   | | then return 0.14865791969342207;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(E, B), student(A) )
%   | | | then return -0.14425895384639745;  // std dev = 1.119, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.025731788472163678;  // std dev = 1.107, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.13499114810206087;  // std dev = 0.941, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.027817380526399555;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(C, I), ta(J, I, K) )
%   | | | then return 0.24568424537119982;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27485782403198855;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( student(B) )
%   | then return -0.06425494134762127;  // std dev = 1.18e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.34587527538617985;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.602', 'seconds']
Refined model CLL: -0.226964


******************************************
Best model found
******************************************
Results 

CLL : -0.22547 

AUC ROC : 0.951044 

AUC PR : 0.45012 

Precision : 0.168981 

Recall : 0.9125 

F1 : 0.285156 

Total Learning Time : 11.363 

Total Inference Time : 1.3287937641143799 

Total revision time: 14.686544815063476
Best scored revision CLL: -0.226964


Results 

CLL : -0.22547 

AUC ROC : 0.951044 

AUC PR : 0.45012 

Precision : 0.168981 

Recall : 0.9125 

F1 : 0.285156 

Total Learning Time : 14.821894565582275 

Total Inference Time : 1.3287937641143799 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.897
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( inphase(A, G) )
%   | | then return 0.35814893509951234;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.167370602464734;  // std dev = 3.164, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10142513700751113;  // std dev = 3.263, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16328872042251094;  // std dev = 3.059, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09537076310660898;  // std dev = 3.149, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14969768194017183;  // std dev = 2.947, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04560842048918317;  // std dev = 3.147, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08383549986114681;  // std dev = 2.982, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019240521233884856;  // std dev = 3.122, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020696927453812387;  // std dev = 3.109, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.383', 'seconds']
Parameter learned model CLL:-0.410035 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 12, 0], 'false,false,true': [2.828, 16, 16], 'false,false,false': [0.0, 1, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.164, 31, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.263, 37, 16]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.059, 26, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.149, 31, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.947, 23, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.147, 31, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.982, 27, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.122, 32, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.109, 31, 16]}]
{'': [nan, 0.2291358024691353], 'false': [-1.1564823173178714e-17, 0.24977043158861298], 'false,false': [0.24999999999999953, 0.0], 'false,true': [nan, -1.1564823173178714e-17]}
{'': [nan, 0.2130085154153025], 'false': [nan, 0.2130085154153025], 'false,false': [nan, 0.2130085154153025], 'false,false,false': [nan, 0.2130085154153025]}
{'': [nan, 0.2008655750789612], 'false': [nan, 0.2008655750789612], 'false,false': [nan, 0.2008655750789612], 'false,false,false': [nan, 0.2008655750789611]}
{'': [nan, 0.22273791747794838], 'false': [nan, 0.22273791747794838], 'false,false': [nan, 0.22273791747794838], 'false,false,false': [nan, 0.22273791747794838]}
{'': [nan, 0.21098509039214022], 'false': [nan, 0.21098509039214022], 'false,false': [nan, 0.21098509039214022], 'false,false,false': [nan, 0.21098509039214022]}
{'': [nan, 0.222648893745179], 'false': [nan, 0.222648893745179], 'false,false': [nan, 0.222648893745179], 'false,false,false': [nan, 0.222648893745179]}
{'': [nan, 0.2107085616764159], 'false': [nan, 0.2107085616764159], 'false,false': [nan, 0.2107085616764159], 'false,false,false': [nan, 0.2107085616764159]}
{'': [nan, 0.20673303331171514], 'false': [nan, 0.20673303331171514], 'false,false': [nan, 0.20673303331171514], 'false,false,false': [nan, 0.20673303331171514]}
{'': [nan, 0.2030222733970162], 'false': [nan, 0.2030222733970162], 'false,false': [nan, 0.2030222733970162], 'false,false,false': [nan, 0.2030222733970162]}
{'': [nan, 0.2057162090632602], 'false': [nan, 0.20571620906326013], 'false,false': [nan, 0.2057162090632602], 'false,false,false': [nan, 0.2057162090632602]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true
0;false;inphase(A, G).;true;true


Refining candidate
***************************
Model training time 5.254
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( inphase(A, D) )
%   | then if ( professor(B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37988806553429494;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | | then return 0.47202263026819835;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.23392739217296052;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.8053559636015319;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), ta(E, G, H) )
%   | | then return 0.61048787762038;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7336813933425523;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then return 0.3624941311004322;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15292069482855705;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( ta(K, A, L) )
%   | then if ( ta(M, B, N) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( publication(P, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2714221670732769;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(A) )
%   | | then return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.03995188514249246;  // std dev = 0.681, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, F, G) )
%   | | | then return 0.46398412661295546;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5533975737198009;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.13752138186297524;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.33776497671812644;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6222566268978573;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10466967697471413;  // std dev = 0.040, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), publication(F, A) )
%   | then return -0.20824992690190536;  // std dev = 0.931, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( projectmember(G, B), publication(H, B) )
%   | | then return 0.04058454399392741;  // std dev = 1.031, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return 0.2668520516988701;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.473603772409472;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( professor(B), student(A) )
%   | then return -0.26538433955810325;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.09255326363191739;  // std dev = 0.026, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( ta(D, A, E) )
%   | then if ( ta(D, C, F) )
%   | | then return 0.12365843147096167;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20217342817354633;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.4174405980371289;  // std dev = 0.276, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B), ta(G, A, H) )
%   | then return 0.15059653260458863;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(I, A), student(A) )
%   | | then return 0.016671819675418805;  // std dev = 0.354, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(J, B), student(A) )
%   | | | then return -0.22887486074249988;  // std dev = 0.394, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.05889024959013839;  // std dev = 0.627, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), ta(D, A, E) )
%   then return 0.3350042349045662;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( projectmember(F, B), publication(G, B) )
%   | then return 0.1319374741805286;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(H, A), student(A) )
%   | | then return 0.08948990066341775;  // std dev = 0.381, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(I, B), student(A) )
%   | | | then return -0.23299983618528453;  // std dev = 0.390, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07960340288159257;  // std dev = 1.141, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( professor(B) )
%   | then return -0.2503454904385572;  // std dev = 0.932, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.08852060959506533;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( student(A), professor(B) )
%   | then if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then if ( ta(I, J, H), publication(K, J) )
%   | | | then return 0.01704700739062892;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14946281814031365;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.11685129069208622;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3790645928521125;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07500818027048418;  // std dev = 0.057, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), projectmember(E, B) )
%   then return -0.37606163155330846;  // std dev = 0.849, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( projectmember(F, B), student(A) )
%   | then return 0.302092237613785;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( professor(B), publication(G, A) )
%   | | then return 0.15351583904970176;  // std dev = 0.408, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.02448588220472797;  // std dev = 1.589, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.06880407177245068;  // std dev = 0.058, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then if ( ta(F, G, E), publication(H, G) )
%   | then if ( ta(D, C, I) )
%   | | then return 0.2787499545804782;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22663267294229328;  // std dev = 0.943, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3178511361964392;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( tempadvisedby(J, B), publication(K, B) )
%   | then if ( projectmember(L, B) )
%   | | then return 0.08096380796732826;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2526320193463082;  // std dev = 0.677, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(M, A, N) )
%   | | | then return -0.15736686715887338;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2670412421895796;  // std dev = 0.278, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06729944076638443;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.400', 'seconds']
Refined model CLL: -0.241579


******************************************
Best model found
******************************************
Results 

CLL : -0.256228 

AUC ROC : 0.925704 

AUC PR : 0.164628 

Precision : 0.120805 

Recall : 0.742268 

F1 : 0.207792 

Total Learning Time : 5.254 

Total Inference Time : 0.8174355030059814 

Total revision time: 7.71990869140625
Best scored revision CLL: -0.241579


Results 

CLL : -0.256228 

AUC ROC : 0.925704 

AUC PR : 0.164628 

Precision : 0.120805 

Recall : 0.742268 

F1 : 0.207792 

Total Learning Time : 7.855258441925049 

Total Inference Time : 0.8174355030059814 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.943
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.17346425041482622;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.1690278516972627;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.12365121831177824;  // std dev = 4.905, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.11555193333184227;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0709103778120588;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.16601141012130294;  // std dev = 4.556, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.24096533406474402;  // std dev = 2.98e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.15948130472751393;  // std dev = 4.458, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.19966975012068225;  // std dev = 2.79e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.06499468236169877;  // std dev = 4.643, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0839921160853994;  // std dev = 4.509, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19169364282647908;  // std dev = 3.16e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.09965553645831907;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '936', 'milliseconds']
Parameter learned model CLL:-0.3768 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.895, 76, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.83, 70, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.905, 77, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.864, 73, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.953, 82, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.556, 51, 35], 'true,false,true': [2.98e-08, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.458, 46, 35], 'true,false': [0.0, 0, 0], 'false,true,true': [2.79e-08, 21, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.643, 65, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.509, 57, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [3.16e-08, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.437, 45, 35], 'false,false,false': [0.0, 0, 0]}]
{'': [0.21589156724292, nan], 'true': [0.21589156724292, nan]}
{'': [0.22222222222222054, nan]}
{'': [0.21484374999999972, nan], 'true': [0.21484374999999972, nan], 'true,true': [0.21484374999999972, nan]}
{'': [nan, 0.21905006858710524], 'false': [nan, 0.21905006858710524], 'false,false': [0.21905006858710524, nan]}
{'': [0.20965738914456813, nan], 'true': [nan, 0.20965738914456813]}
{'': [0.21484374999999975, nan], 'true': [0.24134667387777134, 3.416070845000482e-17], 'true,false': [3.416070845000482e-17, nan]}
{'': [0.2453894223441536, 3.700743415417188e-17], 'true': [0.2453894223441536, nan], 'false': [3.700743415417188e-17, nan], 'false,true': [3.700743415417188e-17, nan]}
{'': [0.21559943047292737, nan], 'true': [0.21559943047292737, nan]}
{'': [0.22098509815921857, nan], 'true': [nan, 0.2209850981592186]}
{'': [4.163336342344337e-17, 0.2460937500000004], 'false': [nan, 0.2460937500000004], 'false,false': [0.2460937500000004, nan], 'true': [4.163336342344337e-17, nan], 'true,true': [4.163336342344337e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 12.15
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(C, B) )
%   | | then if ( publication(D, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(C, F), tempadvisedby(G, F) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(H, B) )
%   | | then if ( publication(I, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.7373228684706172;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4850122940520397;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.7374506595744976;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return -0.1743114219620713;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3372037634392678;  // std dev = 2.621, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else return -0.1254446385283913;  // std dev = 3.94e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5834581582986587;  // std dev = 0.150, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.36214923917564884;  // std dev = 1.801, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.10883979668402403;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.5732954857711152;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3844370442760813;  // std dev = 1.135, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(D, E) )
%   | | | then return 0.30841967850040314;  // std dev = 0.552, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.42007938644490916;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6457690663399464;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return 0.04616254338900624;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.18288340792020744;  // std dev = 0.978, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3871094147534719;  // std dev = 1.625, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.10159632948783635;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.36967861609800073;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.19239040951382386;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.010357886459659155;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(H, B), publication(I, A) )
%   | | then return 0.0534462655604128;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.2863821907973742;  // std dev = 1.582, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.44933635435626984;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(E, F) )
%   | | | then return -0.018793342261110218;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.271342668770002;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(G, A), projectmember(H, B) )
%   | | | then return 0.3506313224016706;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06644886639211077;  // std dev = 2.518, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, A) )
%   | then if ( publication(F, B) )
%   | | then return 0.2316379200721783;  // std dev = 0.145, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.10135538688493773;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, B), professor(B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.06229147956852236;  // std dev = 1.986, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return -0.13823120038588002;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.03329305358115641;  // std dev = 0.523, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.12126540682311204;  // std dev = 1.693, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then return 0.1978820778065343;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.32182282599773016;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.028292161223668483;  // std dev = 1.076, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.002883075596635676;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.2341242970383601;  // std dev = 1.368, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3330274950841011;  // std dev = 0.152, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07246464621034883;  // std dev = 0.016, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(C, F) )
%   | | | then return -0.10500154768216903;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06478083392125436;  // std dev = 0.376, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14222051578999562;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.1604211319732473;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return -0.19676371102417517;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08617909171643172;  // std dev = 2.059, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06721413117419678;  // std dev = 0.011, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06431175193989111;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.15257015143537217;  // std dev = 0.155, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.056809250455640274;  // std dev = 1.439, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( publication(E, G), tempadvisedby(G, H) )
%   | | | then return 0.3849297535808267;  // std dev = 0.318, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18576771975247403;  // std dev = 0.610, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( professor(B), ta(I, A, J) )
%   | | then return 0.08073564822242289;  // std dev = 0.634, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( professor(B), publication(K, A) )
%   | | | then return 0.029369554062197406;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06634755284213113;  // std dev = 1.191, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.227', 'seconds']
Refined model CLL: -0.222413


******************************************
Best model found
******************************************
Results 

CLL : -0.195201 

AUC ROC : 0.949335 

AUC PR : 0.396107 

Precision : 0.21831 

Recall : 0.794872 

F1 : 0.342541 

Total Learning Time : 12.15 

Total Inference Time : 1.6477136611938477 

Total revision time: 15.756317918777466
Best scored revision CLL: -0.222413


Results 

CLL : -0.195201 

AUC ROC : 0.949335 

AUC PR : 0.396107 

Precision : 0.21831 

Recall : 0.794872 

F1 : 0.342541 

Total Learning Time : 15.847438877105713 

Total Inference Time : 1.6477136611938477 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.841
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.21529179224236922;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.16320361520128407;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.12815482585793014;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.12369668310671608;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18861421812457094;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.1046727918822714;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2726856986837666;  // std dev = 1.49e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.10606861669668856;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.22205606489905283;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.0936331638116854;  // std dev = 3.398, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.037790616214572095;  // std dev = 3.490, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.20679448933809205;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.09894325380695411;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.218', 'seconds']
Parameter learned model CLL:-0.418861 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.586, 36, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.651, 40, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.681, 42, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.636, 39, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.39, 27, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.529, 33, 20], 'true,false,true': [1.49e-08, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [3.464, 30, 20], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.398, 31, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.49, 37, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.333, 25, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22959183673469347, nan], 'true': [0.22959183673469347, nan]}
{'': [0.22222222222222185, nan]}
{'': [0.2185223725286164, nan], 'true': [0.2185223725286164, nan], 'true,true': [0.2185223725286164, nan]}
{'': [nan, 0.22407354208560767], 'false': [nan, 0.22407354208560767], 'false,false': [0.22407354208560767, nan]}
{'': [0.2444545043005881, nan], 'true': [nan, 0.2444545043005881]}
{'': [0.21301775147929058, nan], 'true': [0.2349590601637599, 1.850371707708594e-17], 'true,false': [1.850371707708594e-17, nan]}
{'': [0.2400000000000003, 0.0], 'true': [0.2400000000000003, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.2263496455205448, nan], 'true': [0.2263496455205448, nan]}
{'': [0.21366578337937508, nan], 'true': [nan, 0.21366578337937497]}
{'': [-8.540177112501205e-18, 0.24691358024691307], 'false': [nan, 0.24691358024691307], 'false,false': [0.24691358024691307, nan], 'true': [-8.540177112501205e-18, nan], 'true,true': [-8.540177112501205e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 5.2
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(D, A, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.7492293200691811;  // std dev = 0.126, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15838403941624393;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.575516756053382;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.2980070934378327;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6665498929479197;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A), publication(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04652918569935316;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.1123163781936064;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.4374872861733738;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1339485258386665;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then return 0.4226987078762341;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.42947267606837625;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5805770069239213;  // std dev = 0.257, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.4067585137692119;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16475114024202583;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3351107192903439;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( ta(F, A, G), publication(H, A) )
%   | then return -0.1584631183860178;  // std dev = 0.360, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.028211949379134887;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( student(A), tempadvisedby(E, B) )
%   | then if ( ta(F, E, G), ta(H, A, I) )
%   | | then return -0.012616966600127094;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(J, E) )
%   | | | then return -0.007023199928105443;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3318770304217321;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then return 0.14790766741034808;  // std dev = 0.163, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( professor(B), ta(L, A, M) )
%   | | | then return -0.2753910580043534;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06886075651662946;  // std dev = 0.802, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( publication(E, B), ta(F, A, G) )
%   | | then return 0.272611111120198;  // std dev = 0.145, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(H, A), publication(H, B) )
%   | | | then return 0.25581314995556254;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.042343389400032815;  // std dev = 1.170, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.07958481706652541;  // std dev = 0.021, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09326896382644125;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20402804053724433;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.29410972837664207;  // std dev = 0.998, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.2330317198927349;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11031317391602033;  // std dev = 1.389, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.0767658576871903;  // std dev = 0.068, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( publication(E, F), professor(F) )
%   | | then return -0.1259741922197115;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0599811147650679;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then return -0.01952504309609654;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(I, A), publication(I, B) )
%   | | | then return 0.16706495341178984;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2968558820300971;  // std dev = 0.491, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.073244922527072;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06489740312858848;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( ta(F, A, G) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.15463712427427956;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24288623261337103;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.16063228494648504;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.035095265097300064;  // std dev = 0.633, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(K, A) )
%   | | then if ( publication(L, B) )
%   | | | then return -0.0705979842454644;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.004379406899402136;  // std dev = 0.764, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( ta(M, A, N) )
%   | | | then return -0.14402954995421668;  // std dev = 0.355, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06462440424977109;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.152', 'seconds']
Refined model CLL: -0.175737


******************************************
Best model found
******************************************
Results 

CLL : -0.241626 

AUC ROC : 0.944262 

AUC PR : 0.233145 

Precision : 0.17207 

Recall : 0.741935 

F1 : 0.279352 

Total Learning Time : 5.2 

Total Inference Time : 0.9645817279815674 

Total revision time: 7.7451370868682865
Best scored revision CLL: -0.175737


Results 

CLL : -0.241626 

AUC ROC : 0.944262 

AUC PR : 0.233145 

Precision : 0.17207 

Recall : 0.741935 

F1 : 0.279352 

Total Learning Time : 7.836258045196534 

Total Inference Time : 0.9645817279815674 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.713
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.12670077233469573;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.11802405167795471;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.08714683090510737;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13632897350932272;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.06901638339271299;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2643169499406202;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.003296167917838738;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.2161970504610887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.0824319437730595;  // std dev = 2.377, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10461294198628442;  // std dev = 2.311, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.211297924297308;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.042285063904907334;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.189', 'seconds']
Parameter learned model CLL:-0.420988 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [2.225, 11, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [2.491, 20, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [2.471, 19, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.491, 20, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.372, 15, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.449, 18, 9], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.543, 23, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [2.377, 17, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.311, 14, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [5.27e-09, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.4, 16, 9], 'false,false,false': [0.0, 0, 0]}]
{'': [0.2475, nan], 'true': [0.2475, nan]}
{'': [0.21403091557669465, nan]}
{'': [0.21811224489795927, nan], 'true': [0.21811224489795927, nan], 'true,true': [0.21811224489795927, nan]}
{'': [nan, 0.2140309155766942], 'false': [nan, 0.2140309155766942], 'false,false': [0.2140309155766942, nan]}
{'': [0.2343750000000002, nan], 'true': [nan, 0.2343750000000002]}
{'': [0.20603537981269515, nan], 'true': [0.2222222222222223, 0.0], 'true,false': [0.0, nan]}
{'': [0.20214843750000017, 0.0], 'true': [0.20214843750000017, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.2172402338455835, nan], 'true': [0.2172402338455835, nan]}
{'': [0.23211704021130894, nan], 'true': [nan, 0.23211704021130894]}
{'': [9.25185853854297e-18, 0.2303999999999999], 'false': [nan, 0.2303999999999999], 'false,false': [0.2303999999999999, nan], 'true': [9.25185853854297e-18, nan], 'true,true': [9.25185853854297e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 2.304
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.6741025682283763;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3886997700796178;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return -0.007317809673517334;  // std dev = 0.976, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.4862844423713934;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2965208390995363;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.4212853762842041;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return -0.18705013533058704;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.23700035959078458;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( publication(H, B) )
%   | then return -0.19700819866622038;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.2052163847499852;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.33780089875347413;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08462865885472616;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return 0.3300402231172129;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return 0.09374090975859913;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07749914470672185;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.20408402752215993;  // std dev = 0.313, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return -0.03679626607025033;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2734475995366536;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( professor(A) )
%   | then return -0.13750794772311625;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07143246258153471;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then return 0.2529183156418277;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(E, B) )
%   | then return -0.2960327970179787;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.2101761834116839;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06449735910806784;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.09241483535066052;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( ta(E, A, F), professor(B) )
%   | then return 0.208864354509673;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return -0.420740333924072;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.1774935359893864;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.063141337769623;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.914', 'seconds']
Refined model CLL: -0.170653


******************************************
Best model found
******************************************
Results 

CLL : -0.344245 

AUC ROC : 0.906573 

AUC PR : 0.123279 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.304 

Total Inference Time : 0.6034362316131592 

Total revision time: 4.209236423492431
Best scored revision CLL: -0.170653


Results 

CLL : -0.344245 

AUC ROC : 0.906573 

AUC PR : 0.123279 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.300357381820678 

Total Inference Time : 0.6034362316131592 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.889
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.15544623239680821;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.15243933160424347;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.12195098132394264;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.1724065608470044;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12296421673004988;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.17407871011883672;  // std dev = 4.342, 77.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.25449271845259125;  // std dev = 2.36e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.14530672727382227;  // std dev = 4.321, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.20927759373496602;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.03064037312769313;  // std dev = 4.553, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.044443987170256445;  // std dev = 4.473, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18793585447483782;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.07631075693245015;  // std dev = 4.403, 80.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.006', 'seconds']
Parameter learned model CLL:-0.368982 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.816, 78, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.757, 72, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.787, 75, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.541, 55, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.614, 60, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.342, 44, 33], 'true,false,true': [2.36e-08, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.321, 43, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 31, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.553, 71, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.473, 65, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.403, 47, 33], 'false,false,false': [0.0, 0, 0]}]
{'': [0.20891161431702107, nan], 'true': [0.20891161431702107, nan]}
{'': [0.2155102040816318, nan]}
{'': [0.21219135802469194, nan], 'true': [0.21219135802469194, nan], 'true,true': [0.21219135802469194, nan]}
{'': [nan, 0.23437500000000025], 'false': [nan, 0.23437500000000025], 'false,false': [0.23437500000000025, nan]}
{'': [0.22892819979188456, nan], 'true': [nan, 0.22892819979188456]}
{'': [0.2322222222222216, nan], 'true': [0.24489795918367305, 4.2700885562506023e-17], 'true,false': [4.2700885562506023e-17, nan]}
{'': [0.2456717451523545, -1.4325458382260084e-17], 'true': [0.2456717451523545, nan], 'false': [-1.4325458382260084e-17, nan], 'false,true': [-1.4325458382260084e-17, nan]}
{'': [0.19932078641154657, nan], 'true': [0.19932078641154657, nan]}
{'': [0.2041919125924482, nan], 'true': [nan, 0.20419191259244798]}
{'': [-2.114710523095536e-17, 0.2423437499999995], 'false': [nan, 0.2423437499999995], 'false,false': [0.2423437499999995, nan], 'true': [-2.114710523095536e-17, nan], 'true,true': [-2.114710523095536e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 13.242
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then if ( ta(G, J, H), publication(K, J) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 4.71e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.7373228684706172;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.5234113125247076;  // std dev = 1.249, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.10400543684117836;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( ta(H, A, I) )
%   | | then return 0.763518792874402;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5544815893967017;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.12544463852839124;  // std dev = 4.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( publication(F, A), ta(G, C, H) )
%   | | then return 0.6380391531195972;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, J, E), publication(K, J) )
%   | | | then return 0.08698029994084763;  // std dev = 1.302, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.39975321168419975;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | then if ( publication(N, L) )
%   | | | then return 0.2804740851757774;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5980942004312592;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(P, B), publication(P, A) )
%   | | | then return 0.5531862071000988;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6327327723241586;  // std dev = 0.196, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.11231637819360642;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( publication(C, B), student(A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.38889410251416;  // std dev = 1.642, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.1267049038060771;  // std dev = 1.185, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.18881155642456496;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09322240126127322;  // std dev = 0.767, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(D, E), student(E) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.30760745747776846;  // std dev = 0.865, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.14196989580515107;  // std dev = 1.261, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.351969528549699;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.47671910623770625;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5351638307431331;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.24246089928075376;  // std dev = 0.328, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.09278121347958283;  // std dev = 0.002, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( student(A), professor(B) )
%   | | then if ( publication(E, F), tempadvisedby(G, F) )
%   | | | then return 0.2044859292759132;  // std dev = 0.970, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.0887757043460714;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.08555190760991427;  // std dev = 0.000857, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( ta(H, A, I), publication(J, B) )
%   | | then if ( professor(B) )
%   | | | then return 0.05625632601931657;  // std dev = 1.912, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return -0.08517774298886895;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( tempadvisedby(K, B), student(A) )
%   | | | then return -0.24956563536863355;  // std dev = 1.554, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.08906379387903225;  // std dev = 1.191, 49.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.2916754530867986;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25746729052414014;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.1408794582752236;  // std dev = 1.617, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.05065368282419164;  // std dev = 1.980, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( professor(B) )
%   | | then return -0.29682214694845144;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.07859392985163716;  // std dev = 0.000765, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0786583201049184;  // std dev = 0.001, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( ta(D, A, E), publication(F, A) )
%   | then if ( ta(G, C, H) )
%   | | then return 0.14147084483867123;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.05285826971808437;  // std dev = 0.965, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(I, A, J) )
%   | | then return 0.20694916232440524;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2989134558881224;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( publication(K, A), publication(K, B) )
%   | then if ( professor(A) )
%   | | then return -0.07365096773014071;  // std dev = 0.000494, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2688847330771901;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( student(B) )
%   | | then return -0.0730476932125789;  // std dev = 0.000700, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( ta(L, A, M) )
%   | | | then return -0.06221853764221169;  // std dev = 1.605, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.15423082854455553;  // std dev = 1.373, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( tempadvisedby(F, E), ta(G, F, H) )
%   | | | then return 0.002931778562488306;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.20906151129339462;  // std dev = 0.185, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(C, I), professor(I) )
%   | | | then return -0.23012634650882022;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.02341438779799701;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then return -0.04951841016942456;  // std dev = 1.237, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.3192611583146167;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3021343200156893;  // std dev = 0.230, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06803991752237168;  // std dev = 0.006, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06343302182184914;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( publication(E, A), professor(B) )
%   | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | then return 0.2544678599926197;  // std dev = 0.606, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(I, A, J) )
%   | | | then return -0.07083443094067829;  // std dev = 0.976, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16694484085208924;  // std dev = 0.920, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( tempadvisedby(K, B) )
%   | | then if ( ta(L, A, M) )
%   | | | then return 0.06518790196405129;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.018974559343135005;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(N, A, P), professor(B) )
%   | | | then return -0.12101819081278858;  // std dev = 1.381, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.035233684097961654;  // std dev = 0.588, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.842', 'seconds']
Refined model CLL: -0.232957


******************************************
Best model found
******************************************
Results 

CLL : -0.219425 

AUC ROC : 0.952074 

AUC PR : 0.444923 

Precision : 0.182058 

Recall : 0.8625 

F1 : 0.300654 

Total Learning Time : 13.242 

Total Inference Time : 1.9946744441986084 

Total revision time: 17.100136953353882
Best scored revision CLL: -0.232957


Results 

CLL : -0.219425 

AUC ROC : 0.952074 

AUC PR : 0.444923 

Precision : 0.182058 

Recall : 0.8625 

F1 : 0.300654 

Total Learning Time : 17.19125791168213 

Total Inference Time : 1.9946744441986084 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.799
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.19857446701440598;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.16555086207382821;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.1278150075743784;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.06305035517398797;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.090160243280262;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.2048399480138838;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.23960449643056092;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.16556145593966484;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.19869772285562035;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.07622805949304738;  // std dev = 3.033, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09096304577925542;  // std dev = 2.949, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19372891567226813;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.15343394373315997;  // std dev = 2.779, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.254', 'seconds']
Parameter learned model CLL:-0.398734 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.249, 31, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.266, 32, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.298, 34, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.404, 42, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.314, 35, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.981, 20, 16], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.981, 20, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.033, 31, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.949, 27, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.779, 17, 16], 'false,false,false': [0.0, 0, 0]}]
{'': [0.22453598913535486, nan], 'true': [0.22453598913535486, nan]}
{'': [0.22222222222222185, nan]}
{'': [0.21759999999999974, nan], 'true': [0.21759999999999974, nan], 'true,true': [0.21759999999999974, nan]}
{'': [nan, 0.199762187871581], 'false': [nan, 0.199762187871581], 'false,false': [0.199762187871581, nan]}
{'': [0.21530180699730872, nan], 'true': [nan, 0.21530180699730872]}
{'': [0.22222222222222154, nan], 'true': [0.2469135802469129, -1.850371707708594e-17], 'true,false': [-1.850371707708594e-17, nan]}
{'': [0.24691358024691348, -1.2335811384723961e-17], 'true': [0.24691358024691348, nan], 'false': [-1.2335811384723961e-17, nan], 'false,true': [-1.2335811384723961e-17, nan]}
{'': [0.19574544594697657, nan], 'true': [0.19574544594697657, nan]}
{'': [0.20222270356857022, nan], 'true': [nan, 0.2022227035685702]}
{'': [0.0, 0.23396960368387956], 'false': [nan, 0.23396960368387956], 'false,false': [0.23396960368387956, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 4.864
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.1418510649004877;  // std dev = 2.98e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.27502896776651004;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then return 0.1975363455610038;  // std dev = 0.980, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( projectmember(F, B), publication(G, B) )
%   | | then return 0.2707187277146856;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6178159476250306;  // std dev = 0.146, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( publication(H, A), ta(I, A, J) )
%   | then return -0.22308877321364276;  // std dev = 0.271, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(K, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11024456011969057;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), projectmember(F, B) )
%   | then return -0.2337944911755815;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(G, A) )
%   | | then return 0.480259713147811;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.13724908602219338;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.2746099046138675;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( professor(B) )
%   | then return -0.07318971192621977;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.10122425726085352;  // std dev = 0.009, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09081376690097641;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( professor(A) )
%   | then return -0.10034709875823432;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(C, A), publication(C, B) )
%   | | then return 0.3645724623082196;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(D, A, E), publication(F, B) )
%   | | | then return 0.2011838668089121;  // std dev = 1.410, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.031076854445532306;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.4517393239868199;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.2854214262103707;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0018550905311737714;  // std dev = 1.783, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return -0.08596071588571982;  // std dev = 0.022, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then if ( ta(H, E, G) )
%   | | then return -0.11782798560735383;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.39883596722655373;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( professor(B), publication(I, A) )
%   | | then return -0.24544156631378147;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.1128636633677307;  // std dev = 1.176, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.09261736468908549;  // std dev = 0.662, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.08179094535224499;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A), projectmember(D, B) )
%   then return -0.6187113688625057;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( tempadvisedby(E, B), student(A) )
%   | then if ( projectmember(F, B) )
%   | | then return 0.31943392511477975;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H), ta(G, E, I) )
%   | | | then return 0.2623963686936831;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18168629975705045;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(J, A), ta(K, A, L) )
%   | | then return -0.17857314847087805;  // std dev = 0.568, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.14074898905574623;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.08090413800159586;  // std dev = 0.028, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), ta(D, A, E) )
%   then if ( professor(B) )
%   | then if ( ta(D, F, G), publication(C, F) )
%   | | then return -0.07953540327227586;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(H, I, E), publication(J, I) )
%   | | | then return 0.08574852459126217;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.31690515270204966;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06590408962867454;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( ta(K, A, L) )
%   | then if ( student(B) )
%   | | then return -0.07326968932093524;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.6717491874001049;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(M, B) )
%   | | | then return -0.11286334613253404;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3075652647067134;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0705603057686367;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.05868628190110088;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( publication(E, B), professor(B) )
%   | then return 0.2566225836767496;  // std dev = 0.179, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( professor(B), ta(F, A, G) )
%   | | then return -0.5178390704403002;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.16818836621494362;  // std dev = 0.353, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06462565232762851;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.762', 'seconds']
Refined model CLL: -0.253898


******************************************
Best model found
******************************************
Results 

CLL : -0.266915 

AUC ROC : 0.939852 

AUC PR : 0.250166 

Precision : 0.124834 

Recall : 0.969072 

F1 : 0.221176 

Total Learning Time : 4.864 

Total Inference Time : 0.9776384830474854 

Total revision time: 7.349742544174195
Best scored revision CLL: -0.253898


Results 

CLL : -0.266915 

AUC ROC : 0.939852 

AUC PR : 0.250166 

Precision : 0.124834 

Recall : 0.969072 

F1 : 0.221176 

Total Learning Time : 7.440863502502442 

Total Inference Time : 0.9776384830474854 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.057
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1860177875585285;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.1914822684328457;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.19759989406244946;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20820549123154902;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09888829857800503;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13556676504256807;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.1591348449490103;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1745787752553054;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08361508568908814;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2515868889886433;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.18958958159959166;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.035353135498163143;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.20722182939444847;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07692174473800621;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0556427218507631;  // std dev = 4.814, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0355436217193942;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02828968984957442;  // std dev = 3.116, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.27924603268963427;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.12202580983923583;  // std dev = 4.469, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 1.7172246524964767E-4;  // std dev = 4.826, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.234', 'seconds']
Parameter learned model CLL:-0.36486 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.666, 41, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [3.162, 30, 15], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.568, 35, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.062, 25, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.757, 48, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.162, 30, 15]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.549, 34, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.013, 23, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.681, 42, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 8, 0], 'false,false,false,false': [2.895, 19, 15]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.769, 49, 20], 'false,false,true,true': [0.0, 13, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.084, 26, 15]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.814, 71, 35]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.721, 45, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.116, 30, 15]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 13, 0], 'false,false,false,false': [4.469, 51, 35]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.826, 79, 35]}]
{'': [0.2203708680462237, 0.2222222222222217], 'false': [nan, 0.2222222222222217], 'false,false': [0.2222222222222217, nan], 'true': [nan, 0.2203708680462237], 'true,false': [nan, 0.2203708680462237]}
{'': [0.23140495867768585, 0.2343749999999995], 'false': [nan, 0.2343749999999995], 'false,false': [nan, 0.2343749999999995], 'false,false,false': [nan, 0.2343749999999995]}
{'': [nan, 0.21375289889167215], 'false': [nan, 0.21375289889167215], 'false,false': [0.20761245674740503, 0.2222222222222227], 'false,false,false': [nan, 0.2222222222222227], 'false,false,true': [nan, 0.20761245674740503]}
{'': [nan, 0.23561804219742474], 'false': [nan, 0.23561804219742447], 'false,false': [0.23319615912208538, 0.23891966759002775], 'false,false,false': [nan, 0.23891966759002775]}
{'': [nan, 0.22310863281912596], 'false': [0.21852237252861556, 0.22959183673469458], 'false,false': [nan, 0.22959183673469458], 'false,false,false': [0.0, 0.24653979238754395], 'false,true': [nan, 0.21852237252861556], 'false,true,false': [nan, 0.21852237252861556]}
{'': [nan, 0.19946194988581137], 'false': [0.2058391094307923, 0.1909093490327623], 'false,false': [-8.540177112501205e-18, 0.23200475907198118], 'false,false,false': [nan, 0.23200475907198118], 'false,false,true': [-8.540177112501205e-18, nan]}
{'': [nan, 0.21859519586496928], 'false': [nan, 0.2185951958649699], 'false,false': [nan, 0.2185951958649696], 'false,false,false': [nan, 0.21859519586496928]}
{'': [0.21301775147928995, 0.2157549776582533], 'false': [nan, 0.2157549776582533], 'false,false': [nan, 0.2157549776582533], 'false,false,false': [nan, 0.2157549776582533], 'true': [nan, 0.21301775147928995], 'true,false': [nan, 0.21301775147928995], 'true,false,false': [nan, 0.21301775147928995]}
{'': [nan, 0.2200930050709553], 'false': [nan, 0.22009300507095447], 'false,false': [nan, 0.2200930050709553], 'false,false,false': [0.0, 0.23221895681047008]}
{'': [nan, 0.20427405071016383], 'false': [nan, 0.2042740507101641], 'false,false': [nan, 0.2042740507101641], 'false,false,false': [nan, 0.20427405071016383]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 8.842
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4735335504841277;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   else return -0.1418510649004877;  // std dev = 3.94e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.1254446385283912;  // std dev = 5.48e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( student(A) )
%   | then if ( publication(C, B), publication(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | | then return 0.2321999138731827;  // std dev = 1.672, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.4160991171748107;  // std dev = 2.381, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(C, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1781613914125547;  // std dev = 1.203, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.2666405902003468;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7353443370724624;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(I, B), publication(J, A) )
%   | | then return 0.6284917774239089;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, A) )
%   | | | then return -0.03692467557053632;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30635649430238054;  // std dev = 1.427, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.11231637819360647;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.21751358415830996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.426867452213296;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | then if ( projectmember(H, B) )
%   | | | then return 0.2243376118248729;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.27387194379178526;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.3185212830627991;  // std dev = 1.881, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.2521784113973928;  // std dev = 1.522, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.10159632948783633;  // std dev = 1.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.33832688521570853;  // std dev = 0.105, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.41895189610551026;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03569958874285851;  // std dev = 1.356, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return -0.1866720775955204;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.31201787520044694;  // std dev = 1.756, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.10804376009769498;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2577901937587559;  // std dev = 0.073, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.21401534406811368;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11431779671190079;  // std dev = 1.485, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.08518475138839685;  // std dev = 1.29e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( hasposition(A, I), sameperson(A, J) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then if ( ta(K, A, L) )
%   | | | then return -0.041208686967469516;  // std dev = 0.991, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3371812164677224;  // std dev = 1.348, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( professor(A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.34318300040483035;  // std dev = 0.287, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.25752883032833046;  // std dev = 0.657, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.06445111092990063;  // std dev = 1.260, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( projectmember(G, B) )
%   | then if ( ta(H, A, I) )
%   | | then return -0.36939984222108796;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07960182623178066;  // std dev = 1.068, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( professor(B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.03532215282749894;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2450100268555942;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A) )
%   | then return 0.18467566198078206;  // std dev = 0.105, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.1813242569152369;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16531507070726625;  // std dev = 1.650, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( projectmember(F, B), publication(G, A) )
%   | then return 0.2336996878227494;  // std dev = 0.358, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(H, B), student(A) )
%   | | then return 0.012921999305506993;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.17738625828201776;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07445800112925582;  // std dev = 0.036, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.07053070673811156;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(E, B) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.07073113717722648;  // std dev = 0.976, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.20450579100334385;  // std dev = 0.978, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( projectmember(I, B), publication(J, A) )
%   | | | then return 0.2861974090184507;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018678686504502922;  // std dev = 1.670, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return -0.06835542300579453;  // std dev = 0.000129, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, E), publication(C, B) )
%   | | | then return 0.14044756338619627;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03716620491652978;  // std dev = 0.409, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.3581894288256022;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.2316428257390822;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20669379347834113;  // std dev = 1.053, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return -0.2223309205412861;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04619716623815721;  // std dev = 1.941, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.06448414982673475;  // std dev = 0.027, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.318', 'seconds']
Refined model CLL: -0.21365


******************************************
Best model found
******************************************
Results 

CLL : -0.222769 

AUC ROC : 0.950275 

AUC PR : 0.405413 

Precision : 0.202941 

Recall : 0.884615 

F1 : 0.330144 

Total Learning Time : 8.842 

Total Inference Time : 1.4086520671844482 

Total revision time: 12.648634981155396
Best scored revision CLL: -0.21365


Results 

CLL : -0.222769 

AUC ROC : 0.950275 

AUC PR : 0.405413 

Precision : 0.202941 

Recall : 0.884615 

F1 : 0.330144 

Total Learning Time : 12.689725231170655 

Total Inference Time : 1.4086520671844482 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.958
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16767274462332188;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.20814893509951235;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.18783955141042546;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26837637556697486;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09175733194004515;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15818027603106175;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.1459270034904212;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11229340587579775;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06518739874388745;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.25864924154974367;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1097718110818351;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.028809542778666652;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.21221082877737205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08817253092195673;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04975125748149364;  // std dev = 3.702, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0032739591372737743;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006114565374906871;  // std dev = 2.179, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.25735126789522544;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.12360211693459071;  // std dev = 3.476, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05625217174872659;  // std dev = 3.519, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.613', 'seconds']
Parameter learned model CLL:-0.386749 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.996, 29, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [2.133, 13, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [2.904, 24, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.054, 33, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.904, 24, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.026, 31, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 4, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.079, 35, 13], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.103, 12, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.702, 44, 20]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.102, 37, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.179, 16, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 12, 0], 'false,false,false,false': [3.476, 30, 20]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.519, 41, 20]}]
{'': [0.2137188208616775, 0.2275000000000001], 'false': [nan, 0.2275000000000001], 'false,false': [0.2275000000000001, nan], 'true': [nan, 0.2137188208616775], 'true,false': [nan, 0.2137188208616775]}
{'': [0.22790357925493057, 0.24609375000000028], 'false': [nan, 0.24609375000000028], 'false,false': [nan, 0.24609375000000028], 'false,false,false': [nan, 0.24609375000000028]}
{'': [nan, 0.21240714030367996], 'false': [nan, 0.21240714030367996], 'false,false': [0.20274102079395118, 0.2326869806094183], 'false,false,false': [nan, 0.2326869806094183], 'false,false,true': [nan, 0.20274102079395118]}
{'': [nan, 0.22801962161469422], 'false': [nan, 0.22801962161469405], 'false,false': [0.22790357925493102, 0.22749999999999973], 'false,false,false': [nan, 0.22749999999999973]}
{'': [nan, 0.2094685524883138], 'false': [0.2081611570247932, 0.21172022684310007], 'false,false': [nan, 0.21172022684310007], 'false,false,false': [0.0, 0.23268698060941825], 'false,true': [nan, 0.2081611570247932], 'false,true,false': [nan, 0.2081611570247932]}
{'': [nan, 0.20608380194795584], 'false': [0.1974826388888884, 0.22533856431119964], 'false,false': [0.0, 0.23268698060941836], 'false,false,false': [nan, 0.23268698060941836], 'false,false,true': [0.0, nan]}
{'': [nan, 0.2141116646883013], 'false': [nan, 0.21411166468830112], 'false,false': [nan, 0.21411166468830115], 'false,false,false': [nan, 0.2141116646883013]}
{'': [0.1923999999999999, 0.20642527253189769], 'false': [nan, 0.20642527253189769], 'false,false': [nan, 0.20642527253189769], 'false,false,false': [nan, 0.20642527253189769], 'true': [nan, 0.1923999999999999], 'true,false': [nan, 0.1923999999999999], 'true,false,false': [nan, 0.19239999999999996]}
{'': [nan, 0.21749176043466553], 'false': [nan, 0.2174917604346656], 'false,false': [nan, 0.21749176043466553], 'false,false,false': [-2.7755575615628914e-17, 0.24160098008479938]}
{'': [nan, 0.20302221593471387], 'false': [nan, 0.203022215934714], 'false,false': [nan, 0.203022215934714], 'false,false,false': [nan, 0.20302221593471387]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 4.562
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(G, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004877;  // std dev = 3.33e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7346807759443374;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.15755225223156827;  // std dev = 1.114, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.7621891678716269;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.39649933343834465;  // std dev = 1.120, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.6842556852013397;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(C, G), tempadvisedby(G, H) )
%   | | | then return 0.5516081211218715;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2632740361233124;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(I, B), ta(J, A, K) )
%   | | then return 0.3770803731937507;  // std dev = 0.934, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.38305648630532996;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1314248949976598;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.5242614786743571;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.4350878395669043;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.28223989315654113;  // std dev = 1.300, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.0037039635455050623;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.3365653904545648;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.1586819545502438;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2415087590474058;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09269127618926094;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( hasposition(A, F), sameperson(A, G) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( ta(H, A, I), professor(B) )
%   | | then return 0.422908335650392;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.11090732913970211;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.12181265423372864;  // std dev = 0.218, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then if ( tempadvisedby(G, B) )
%   | | then return 0.414747858061773;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.11200138244485028;  // std dev = 0.395, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then return -0.326423238650778;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.0776276098416031;  // std dev = 1.204, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.08518475138839685;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( hasposition(A, J), sameperson(A, K) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | then return 0.2245357438664953;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(P, B) )
%   | | | then return -0.20921502194446595;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05466171738293215;  // std dev = 0.464, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return -0.05456884170099476;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), tempadvisedby(H, I) )
%   | | | then return 0.3930453387557979;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27847476674296023;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | | then return -0.06638485424147245;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2507440529316717;  // std dev = 0.666, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07921534028941404;  // std dev = 0.027, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( tempadvisedby(D, B), publication(C, D) )
%   | then return -0.14792215591281507;  // std dev = 1.169, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(C, H) )
%   | | | then return 0.20304710817808927;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2879009711663571;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.3160998165482488;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.024033155692484168;  // std dev = 0.692, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( ta(L, A, M), publication(N, A) )
%   | then return -0.15394617407904904;  // std dev = 0.329, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( student(B) )
%   | | then return -0.07324691318647357;  // std dev = 0.000222, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.05668907619170074;  // std dev = 0.593, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.07384670111476413;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( student(B) )
%   | then return -0.06924196373647745;  // std dev = 0.017, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( ta(E, A, F), publication(G, A) )
%   | | then return 0.1040897297566058;  // std dev = 0.575, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.12888084663141264;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24557172381642642;  // std dev = 0.301, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A), ta(E, C, F) )
%   | then return -0.01420263504104092;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( ta(G, C, H) )
%   | | then return 0.2458545199845711;  // std dev = 0.204, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.07059048660693397;  // std dev = 0.558, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( publication(I, B), publication(I, A) )
%   | then if ( student(A), professor(B) )
%   | | then return 0.1626037736356052;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06738608719912718;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(J, B), ta(K, A, L) )
%   | | | then return -0.13721243973867062;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.39045395911564074;  // std dev = 0.945, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.06547920691770814;  // std dev = 0.029, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.676', 'seconds']
Refined model CLL: -0.179485


******************************************
Best model found
******************************************
Results 

CLL : -0.258442 

AUC ROC : 0.928304 

AUC PR : 0.180445 

Precision : 0.1417 

Recall : 0.752688 

F1 : 0.238501 

Total Learning Time : 4.562 

Total Inference Time : 0.8220596313476562 

Total revision time: 7.141862649917603
Best scored revision CLL: -0.179485


Results 

CLL : -0.258442 

AUC ROC : 0.928304 

AUC PR : 0.180445 

Precision : 0.1417 

Recall : 0.752688 

F1 : 0.238501 

Total Learning Time : 7.182952899932862 

Total Inference Time : 0.8220596313476562 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.833
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.10944794019839156;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21090783810620606;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05727547429901226;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2557116680083587;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.08392162519116302;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07668584111011413;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0156487484976086;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16595164324399445;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return -0.031195448408600192;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), publication(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13191236366493536;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01876532536525044;  // std dev = 2.475, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04427062595958029;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09903712195280975;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.20366304432556948;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10504808559496055;  // std dev = 2.279, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.017195261591128996;  // std dev = 2.444, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.548', 'seconds']
Parameter learned model CLL:-0.43416 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.095, 3, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [2.029, 10, 7], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.195, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 11, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.932, 8, 7]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.195, 5, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.16, 14, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.265, 8, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,false': 'publication(A, G), publication(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.279, 9, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.475, 19, 9]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.291, 10, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.984, 9, 7]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 4, 0], 'false,false,false,false': [2.279, 12, 9]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.444, 21, 9]}]
{'': [0.24000000000000005, 0.24221453287197234], 'false': [nan, 0.24221453287197234], 'false,false': [0.24221453287197234, nan], 'true': [nan, 0.24000000000000005], 'true,false': [nan, 0.24000000000000005]}
{'': [0.20408163265306126, 0.23765432098765416], 'false': [nan, 0.23765432098765416], 'false,false': [nan, 0.23765432098765416], 'false,false,false': [nan, 0.23765432098765416]}
{'': [nan, 0.2364686151673518], 'false': [nan, 0.2364686151673518], 'false,false': [0.18749999999999997, 0.24888888888888902], 'false,false,false': [nan, 0.24888888888888902], 'false,false,true': [nan, 0.18749999999999997]}
{'': [nan, 0.2176968916870448], 'false': [nan, 0.21769689168704479], 'false,false': [0.20408163265306126, 0.2222222222222224], 'false,false,false': [nan, 0.2222222222222224]}
{'': [nan, 0.22078637923803626], 'false': [0.16000000000000006, 0.24609375], 'false,false': [nan, 0.24609375], 'false,false,false': [nan, 0.24609375], 'false,true': [nan, 0.16000000000000006], 'false,true,false': [nan, 0.16000000000000006]}
{'': [nan, 0.2128623457518181], 'false': [0.14876033057851243, 0.24609375000000008], 'false,false': [nan, 0.24609375000000008], 'false,false,false': [nan, 0.24609375000000008]}
{'': [nan, 0.21885205723844975], 'false': [nan, 0.21885205723844958], 'false,false': [nan, 0.21885205723844975], 'false,false,false': [nan, 0.21885205723844975]}
{'': [0.13888888888888887, 0.24609374999999994], 'false': [nan, 0.24609374999999994], 'false,false': [nan, 0.24609374999999994], 'false,false,false': [nan, 0.24609374999999994], 'true': [nan, 0.13888888888888887], 'true,false': [nan, 0.13888888888888887], 'true,false,false': [nan, 0.1388888888888889]}
{'': [nan, 0.2204962494700286], 'false': [nan, 0.22049624947002872], 'false,false': [nan, 0.2204962494700286], 'false,false,false': [0.0, 0.2472471252054779]}
{'': [nan, 0.1991822382371568], 'false': [nan, 0.19918223823715694], 'false,false': [nan, 0.19918223823715694], 'false,false,false': [nan, 0.1991822382371568]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 2.21
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0.7366049332824657;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.5728278417003819;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1320208607999251;  // std dev = 0.153, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.09215111172878383;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4301584308929013;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11062667679426359;  // std dev = 0.145, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.3476775306085728;  // std dev = 0.122, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09030280724286638;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.30408825140393536;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.017726006178199513;  // std dev = 0.418, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(A) )
%   | then return -0.16642666736957856;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08315393600780005;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return -0.01123742315434198;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2555516316792965;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(F, B), publication(G, A) )
%   | then return -0.12272565624186609;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07602146097930093;  // std dev = 0.009, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A), student(A) )
%   then return 0.1568588607257634;  // std dev = 0.281, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( ta(D, A, E) )
%   | then if ( professor(B) )
%   | | then return -0.1872110069245343;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07179608841743583;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then return 0.20319118288882237;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07026598609296791;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06221292418381744;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( tempadvisedby(E, B) )
%   | then return 0.24256759606689635;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G) )
%   | | then if ( ta(F, H, I), tempadvisedby(H, J) )
%   | | | then return 0.030536490198848316;  // std dev = 0.239, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.24388666648439847;  // std dev = 0.612, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return 0.17992446821736735;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07124713650501015;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( ta(D, A, E) )
%   | then return -0.19393362486955482;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(A) )
%   | | then return -0.09975519174336295;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.022503684962046456;  // std dev = 0.243, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( ta(F, A, G), professor(B) )
%   | then return 0.2170353126882195;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(H, B) )
%   | | then return -0.05169596525904352;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.06497702204402078;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.316', 'seconds']
Refined model CLL: -0.183887


******************************************
Best model found
******************************************
Results 

CLL : -0.372363 

AUC ROC : 0.902952 

AUC PR : 0.114993 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.21 

Total Inference Time : 0.5697674751281738 

Total revision time: 4.243872659683228
Best scored revision CLL: -0.183887


Results 

CLL : -0.372363 

AUC ROC : 0.902952 

AUC PR : 0.114993 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.2849629096984865 

Total Inference Time : 0.5697674751281738 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.135
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11148226843284566;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.25814893509951237;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.16069579434877604;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2021120328624837;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14372131240723007;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17082540045705297;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.03421667241500203;  // std dev = 3.814, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12192295237036961;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07769274474068798;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.2598033915841149;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.20686327508255192;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.07342530808048871;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.21302380656928968;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08738093699483832;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10181113897788063;  // std dev = 4.512, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021117656148738246;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10857788138762894;  // std dev = 2.747, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.25429461406149095;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.11338889356026793;  // std dev = 4.407, 80.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008409996792304444;  // std dev = 4.640, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.279', 'seconds']
Parameter learned model CLL:-0.365348 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.767, 56, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [2.898, 21, 14], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [3.603, 41, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.95, 23, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.589, 40, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.95, 23, 14]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.814, 62, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.996, 25, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.689, 48, 19], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 6, 0], 'false,false,false,false': [2.733, 16, 14]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [3.667, 46, 19], 'false,false,true,true': [0.0, 3, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.925, 22, 14]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.512, 60, 33]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.721, 51, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.747, 18, 14]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 23, 0], 'false,false,false,false': [4.407, 47, 33]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.64, 75, 33]}]
{'': [0.18915555555555502, 0.2399999999999995], 'false': [nan, 0.2399999999999995], 'false,false': [0.2399999999999995, nan], 'true': [nan, 0.18915555555555502], 'true,false': [nan, 0.18915555555555502]}
{'': [0.2163888888888896, 0.23520818115412756], 'false': [nan, 0.23520818115412756], 'false,false': [nan, 0.23520818115412756], 'false,false,false': [nan, 0.23520818115412756]}
{'': [nan, 0.22500795678274713], 'false': [nan, 0.22500795678274713], 'false,false': [0.21832806664751522, 0.23520818115412756], 'false,false,false': [nan, 0.23520818115412756], 'false,false,true': [nan, 0.21832806664751522]}
{'': [nan, 0.19766725881906386], 'false': [nan, 0.19766725881906472], 'false,false': [0.17954580094497846, 0.23011176857330762], 'false,false,false': [nan, 0.23011176857330762]}
{'': [nan, 0.21581889750092925], 'false': [0.20316328803742514, 0.2376543209876544], 'false,false': [nan, 0.2376543209876544], 'false,false,false': [0.0, 0.24888888888888888], 'false,true': [nan, 0.20316328803742514], 'false,true,false': [nan, 0.20316328803742514]}
{'': [nan, 0.21397745135417567], 'false': [0.20686390532544402, 0.22578100706239085], 'false,false': [-9.25185853854297e-18, 0.23765432098765452], 'false,false,false': [nan, 0.23765432098765452], 'false,false,true': [-9.25185853854297e-18, nan]}
{'': [nan, 0.21892634459046234], 'false': [nan, 0.2189263445904612], 'false,false': [nan, 0.21892634459046212], 'false,false,false': [nan, 0.21892634459046234]}
{'': [0.19775510204081578, 0.23582523094075103], 'false': [nan, 0.23582523094075103], 'false,false': [nan, 0.23582523094075103], 'false,false,false': [nan, 0.23582523094075103], 'true': [nan, 0.19775510204081578], 'true,false': [nan, 0.19775510204081578], 'true,false,false': [nan, 0.19775510204081595]}
{'': [nan, 0.2120287834096052], 'false': [nan, 0.21202878340960452], 'false,false': [nan, 0.2120287834096052], 'false,false,false': [0.0, 0.24279874096149792]}
{'': [nan, 0.1993223745896769], 'false': [nan, 0.199322374589677], 'false,false': [nan, 0.199322374589677], 'false,false,false': [nan, 0.1993223745896769]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 8.174
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048768;  // std dev = 4.47e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(H, G) )
%   | | then if ( publication(C, G) )
%   | | | then return 0.6810792755816668;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.29615138711519595;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7816289395752953;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return 0.06039088838624221;  // std dev = 1.236, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2194734122109545;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return -0.12544463852839155;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5705048410328121;  // std dev = 0.114, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.5341182359630418;  // std dev = 0.958, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4290369564002606;  // std dev = 1.269, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.5022766759911592;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13300690619280406;  // std dev = 1.328, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.11231637819360632;  // std dev = 3.49e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4294376316066212;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.04354507328937076;  // std dev = 1.491, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2881287011743701;  // std dev = 0.905, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.2888678767685158;  // std dev = 1.235, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4544503515081825;  // std dev = 0.877, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.10159632948783631;  // std dev = 2.11e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.12348341751998049;  // std dev = 0.469, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.3318279173352565;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4787702120413733;  // std dev = 0.879, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( hasposition(A, G), sameperson(A, H) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.22428936892465787;  // std dev = 1.202, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.12700490854353794;  // std dev = 1.568, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.03936406033808243;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.25687723171633203;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.022652982143890235;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10860005083069457;  // std dev = 1.529, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return -0.08518475138839682;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( hasposition(A, K), sameperson(A, L) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(M, B) )
%   | | | then return 0.07363257063683905;  // std dev = 1.446, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.2982069539295089;  // std dev = 0.995, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.12519858396073577;  // std dev = 1.737, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.09437603938177153;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return -0.03752325286676502;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33692781559656076;  // std dev = 0.583, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.19378426991388906;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109177;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.2674651041516566;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19080352008793905;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(G, C, H) )
%   | | | then return 0.1741247704196086;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.20680208886866816;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(I, K, L), tempadvisedby(K, M) )
%   | | | then return 0.3015668226830567;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.32650296282317914;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(N, A), publication(N, B) )
%   | | | then return 0.15404807736273562;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0368368826045454;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( tempadvisedby(E, B) )
%   | then if ( publication(F, A), publication(G, B) )
%   | | then if ( ta(H, E, I) )
%   | | | then return -0.09642285573572924;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1344100103050585;  // std dev = 0.937, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.43658153059253346;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.018913098950120794;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(L, A) )
%   | | then if ( ta(M, A, N), professor(B) )
%   | | | then return -0.20897301426869955;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.06681637777249369;  // std dev = 1.211, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( professor(B) )
%   | | | then return 0.2730570132166503;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then if ( publication(F, A), publication(G, B) )
%   | then return -0.047922405683603286;  // std dev = 1.205, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.3340321286547181;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(H, B), publication(H, A) )
%   | then if ( professor(A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1474321122445129;  // std dev = 0.086, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | then return -0.15021279159806772;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.029032384185668936;  // std dev = 1.996, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return -0.06423056755933372;  // std dev = 0.000300, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.519', 'seconds']
Refined model CLL: -0.235464


******************************************
Best model found
******************************************
Results 

CLL : -0.212774 

AUC ROC : 0.955818 

AUC PR : 0.363639 

Precision : 0.197674 

Recall : 0.85 

F1 : 0.320755 

Total Learning Time : 8.174 

Total Inference Time : 1.2158186435699463 

Total revision time: 11.61144755744934
Best scored revision CLL: -0.235464


Results 

CLL : -0.212774 

AUC ROC : 0.955818 

AUC PR : 0.363639 

Precision : 0.197674 

Recall : 0.85 

F1 : 0.320755 

Total Learning Time : 11.652537807464599 

Total Inference Time : 1.2158186435699463 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.952
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, C), sameproject(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( samecourse(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, G) )
%   | | then return 0.2010060779566552;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then return 0.11758869918022088;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( publication(A, D), publication(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(E, A), publication(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18481890136053633;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(D, A) )
%   | | then if ( publication(A, E), sameperson(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08538212359267472;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( samecourse(A, G), sameproject(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1915203931516543;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(F, A) )
%   | | then return 0.023301886415433036;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( publication(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20110180570428235;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then if ( hasposition(D, E), hasposition(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(G, D), publication(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010362638406423227;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( sameproject(A, H), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, J), sameperson(A, K) )
%   | | | then return -0.26472504004889064;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.25701409038589196;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A) )
%   | then return 0.0683510937913834;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( hasposition(A, E), sameperson(A, F) )
%   | | then if ( sameperson(G, F) )
%   | | | then return -0.21648348761455805;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H), publication(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025195472239278312;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C), sameperson(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(E, A), publication(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(A, F), publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13129968591880084;  // std dev = 2.988, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), sameproject(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, G), sameproject(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0944623708175428;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( publication(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(I, A), publication(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameproject(A, J), samecourse(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04125961300997731;  // std dev = 2.670, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), sameperson(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F), sameperson(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), hasposition(A, I) )
%   | | | then return -0.22950602260826447;  // std dev = 2.58e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.004695477917324593;  // std dev = 3.295, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, E), sameperson(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(H, A), publication(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024387874341545355;  // std dev = 3.182, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.423', 'seconds']
Parameter learned model CLL:-0.383299 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(A, C)', 'true,false': 'publication(D, C), sameproject(D, E)', 'false': 'samecourse(A, F)', 'false,false': 'sameperson(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.789, 16, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [2.808, 23, 12], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'false': 'publication(A, D), publication(D, A)', 'false,false': 'publication(E, A), publication(F, E)', 'false,false,false': 'publication(A, G)'}, {'true': [1.713, 11, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.787, 22, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, A)', 'false,false': 'publication(D, A)', 'false,false,true': 'publication(A, E), sameperson(A, F)', 'false,false,false': 'samecourse(A, G), sameproject(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.732, 12, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.712, 19, 12]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'publication(D, A), sameproject(D, E)', 'false,false': 'publication(F, A)', 'false,false,false': 'publication(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.789, 16, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.619, 16, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A)', 'false,true': 'hasposition(D, E), hasposition(A, F)', 'false,true,false': 'publication(G, D), publication(D, G)', 'false,false': 'sameproject(A, H), publication(A, I)', 'false,false,false': 'hasposition(A, J), sameperson(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.799, 17, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [2.396, 11, 12]}]
['advisedby(A, B)', {'': 'publication(C, A), publication(A, C)', 'false': 'publication(D, A)', 'false,false': 'hasposition(A, E), sameperson(A, F)', 'false,false,true': 'sameperson(G, F)', 'false,false,false': 'publication(A, H), publication(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [1.732, 12, 4], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.808, 23, 12]}]
['advisedby(A, B)', {'': 'publication(A, C), sameperson(C, D)', 'false': 'publication(E, A), publication(E, E)', 'false,false': 'hasposition(A, F), publication(A, G)', 'false,false,false': 'publication(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.988, 25, 16]}]
['advisedby(A, B)', {'': 'publication(C, A)', 'true': 'publication(D, C)', 'true,false': 'publication(A, E), sameproject(E, F)', 'true,false,false': 'hasposition(A, G), sameproject(C, H)', 'false': 'publication(A, A)', 'false,false': 'publication(I, A), publication(A, I)', 'false,false,false': 'sameproject(A, J), samecourse(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.664, 9, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.67, 20, 12]}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(D, A), sameperson(D, E)', 'false,false': 'sameproject(A, F), sameperson(A, G)', 'false,false,false': 'publication(H, A), hasposition(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.58e-08, 15, 0], 'false,false,false,false': [3.295, 35, 16]}]
['advisedby(A, B)', {'': 'publication(C, A), hasposition(C, D)', 'false': 'samecourse(A, E), sameperson(A, F)', 'false,false': 'publication(A, G)', 'false,false,false': 'publication(H, A), publication(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.182, 34, 16]}]
{'': [0.15999999999999986, 0.2253061224489791], 'false': [nan, 0.2253061224489791], 'false,false': [0.2253061224489791, nan], 'true': [nan, 0.15999999999999986], 'true,false': [nan, 0.15999999999999986]}
{'': [0.1955555555555555, 0.22837370242214583], 'false': [nan, 0.22837370242214583], 'false,false': [nan, 0.22837370242214583], 'false,false,false': [nan, 0.22837370242214583]}
{'': [nan, 0.22284518975023385], 'false': [nan, 0.22284518975023385], 'false,false': [0.18750000000000014, 0.2372528616024977], 'false,false,false': [nan, 0.2372528616024977], 'false,false,true': [nan, 0.18750000000000014]}
{'': [nan, 0.2172074789367904], 'false': [nan, 0.2172074789367905], 'false,false': [0.15999999999999998, 0.2448979591836736], 'false,false,false': [nan, 0.2448979591836736]}
{'': [nan, 0.21646343913082156], 'false': [0.15419501133786861, 0.2496000000000003], 'false,false': [nan, 0.2496000000000003], 'false,false,false': [0.0, 0.24952741020793975], 'false,true': [nan, 0.15419501133786861], 'false,true,false': [nan, 0.15419501133786861]}
{'': [nan, 0.20814190083799095], 'false': [0.18749999999999992, 0.21611398023809394], 'false,false': [0.0, 0.22530612244897943], 'false,false,false': [nan, 0.22530612244897943], 'false,false,true': [0.0, nan]}
{'': [nan, 0.217757725874422], 'false': [nan, 0.2177577258744214], 'false,false': [nan, 0.21775772587442177], 'false,false,false': [nan, 0.217757725874422]}
{'': [0.21301775147928997, 0.2227660157759028], 'false': [nan, 0.2227660157759028], 'false,false': [nan, 0.2227660157759028], 'false,false,false': [nan, 0.2227660157759028], 'true': [nan, 0.21301775147928997], 'true,false': [nan, 0.21301775147928997], 'true,false,false': [nan, 0.21301775147928995]}
{'': [nan, 0.17341231914991348], 'false': [nan, 0.17341231914991362], 'false,false': [nan, 0.17341231914991348], 'false,false,false': [4.4408920985006264e-17, 0.21292962856470068]}
{'': [nan, 0.20254079110755174], 'false': [nan, 0.20254079110755183], 'false,false': [nan, 0.20254079110755183], 'false,false,false': [nan, 0.20254079110755174]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;advisedby(A, B) :- publication(D, A).;true;true
4;false;hasposition(A, J), sameperson(A, K).;true;true
5;;advisedby(A, B) :- publication(D, A).;true;true
5;false;hasposition(A, E), sameperson(A, F).;true;true
8;;advisedby(A, B) :- publication(H, A), hasposition(A, I).;true;true


Refining candidate
***************************
Model training time 5.786
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, E), inphase(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B), publication(E, B) )
%   | then return 0.4337386289033884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.7388974214867499;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( student(B) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( professor(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.12612751691038213;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( ta(C, E, F) )
%   | | then return 0.5505649648833706;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, E, D) )
%   | | | then return -0.16029926220380214;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1666660650408149;  // std dev = 1.324, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | then return 0.2606912375899541;  // std dev = 0.875, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6752818301504466;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(H, G) )
%   | | then if ( publication(C, G) )
%   | | | then return 0.08062845566713865;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30061298686583254;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5606174502373136;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then return 0.24309194477546084;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.14859249867879878;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06589474235516499;  // std dev = 1.009, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( professor(A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4244637264481621;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.4807095082574187;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( hasposition(A, E), sameperson(A, F) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( projectmember(G, B), student(A) )
%   | | then return 0.3066270583244448;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.054100779801913676;  // std dev = 1.773, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, A) )
%   then if ( student(A), professor(B) )
%   | then return 0.3259128091536658;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08089014102006453;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( hasposition(A, D), sameperson(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.4151476961695414;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40640260879646906;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( professor(B) )
%   | | | then return 0.04972140350441327;  // std dev = 1.128, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), publication(F, A) )
%   | then return -0.09333730912933691;  // std dev = 0.674, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | then return 0.3174813158622371;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.31531114438761615;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.003947119688473573;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( ta(K, A, L) )
%   | then if ( ta(M, B, N) )
%   | | then return -0.08555438323253686;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.18863980243427278;  // std dev = 0.269, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(P, B) )
%   | | | then return -0.09013922381129909;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04273797791764886;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08323171305525372;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), publication(D, B) )
%   | then return -0.03260702339954188;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G), ta(F, A, H) )
%   | | | then return 0.2329022269622816;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2515485594217576;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4062012790401745;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07322559504103217;  // std dev = 0.045, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), hasposition(A, D) )
%   then return -0.06830833365678492;  // std dev = 0.000380, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( hasposition(B, E), student(A) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.2155004778118289;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.12094901105260528;  // std dev = 0.542, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0690251990449472;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( professor(B), student(A) )
%   | | then return -0.12434977806483027;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06752481508796758;  // std dev = 0.006, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( projectmember(C, B), ta(D, A, E) )
%   then return -0.4180164204660876;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( tempadvisedby(F, B), student(A) )
%   | then if ( publication(G, A), publication(G, B) )
%   | | then return 0.17801625042851701;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.06218266837108626;  // std dev = 1.179, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.3677974178016804;  // std dev = 1.278, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( publication(J, A), ta(K, A, L) )
%   | | then return -0.24711565429415697;  // std dev = 0.460, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( student(B) )
%   | | | then return -0.06350119856156873;  // std dev = 0.008, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.01004821654855279;  // std dev = 1.062, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.728', 'seconds']
Refined model CLL: -0.23785


******************************************
Best model found
******************************************
Results 

CLL : -0.227343 

AUC ROC : 0.951934 

AUC PR : 0.37182 

Precision : 0.147157 

Recall : 0.907216 

F1 : 0.253237 

Total Learning Time : 5.786 

Total Inference Time : 0.838524341583252 

Total revision time: 8.368697727203369
Best scored revision CLL: -0.23785


Results 

CLL : -0.227343 

AUC ROC : 0.951934 

AUC PR : 0.37182 

Precision : 0.147157 

Recall : 0.907216 

F1 : 0.253237 

Total Learning Time : 8.409787977218627 

Total Inference Time : 0.838524341583252 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.967
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( inphase(A, G) )
%   | | then return 0.24703782398839988;  // std dev = 4.625, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22352605693195288;  // std dev = 4.558, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12181291271603;  // std dev = 4.808, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13405813979637432;  // std dev = 4.672, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1170901221220812;  // std dev = 4.654, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04374853458620253;  // std dev = 4.832, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0653376723668931;  // std dev = 4.727, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016593356741051245;  // std dev = 4.848, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06367924274784828;  // std dev = 4.676, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 6.391286894422896E-4;  // std dev = 4.833, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.090', 'seconds']
Parameter learned model CLL:-0.363526 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 15, 0], 'false,false,true': [4.625, 55, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.558, 55, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.808, 74, 35]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.672, 65, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.654, 62, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.832, 79, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.727, 68, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.848, 81, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.676, 63, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.833, 82, 35]}]
{'': [nan, 0.22222222222222365], 'false': [-1.4802973661668754e-17, 0.23765432098765582], 'false,false': [0.23765432098765582, nan], 'false,true': [nan, -1.4802973661668754e-17]}
{'': [nan, 0.23079516526998717], 'false': [nan, 0.23079516526998717], 'false,false': [nan, 0.23079516526998717], 'false,false,false': [nan, 0.23079516526998717]}
{'': [nan, 0.21206614385026326], 'false': [nan, 0.21206614385026326], 'false,false': [nan, 0.21206614385026326], 'false,false,false': [nan, 0.21206614385026296]}
{'': [nan, 0.21824715109880694], 'false': [nan, 0.21824715109880694], 'false,false': [nan, 0.21824715109880694], 'false,false,false': [nan, 0.21824715109880694]}
{'': [nan, 0.22331011086693642], 'false': [nan, 0.22331011086693642], 'false,false': [nan, 0.22331011086693642], 'false,false,false': [nan, 0.22331011086693642]}
{'': [nan, 0.20477836868900823], 'false': [nan, 0.20477836868900823], 'false,false': [nan, 0.20477836868900823], 'false,false,false': [nan, 0.20477836868900823]}
{'': [nan, 0.21692541751708674], 'false': [nan, 0.21692541751708674], 'false,false': [nan, 0.21692541751708674], 'false,false,false': [nan, 0.21692541751708674]}
{'': [nan, 0.20261708832290526], 'false': [nan, 0.20261708832290526], 'false,false': [nan, 0.20261708832290526], 'false,false,false': [nan, 0.20261708832290526]}
{'': [nan, 0.22309506439801044], 'false': [nan, 0.22309506439801044], 'false,false': [nan, 0.22309506439801044], 'false,false,false': [nan, 0.22309506439801044]}
{'': [nan, 0.19963023332361426], 'false': [nan, 0.19963023332361396], 'false,false': [nan, 0.19963023332361426], 'false,false,false': [nan, 0.19963023332361426]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 7.46
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5854216623722396;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.5592310659461045;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7387463734164045;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return -0.18432648501714544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1711080304712916;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.06567351498285456;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5634048749303271;  // std dev = 1.982, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5811354223121038;  // std dev = 0.101, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.6572748510677247;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then return -0.26364581344196353;  // std dev = 0.242, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2263757661167099;  // std dev = 2.799, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   else return -0.11231637819360636;  // std dev = 2.11e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.030467126983360862;  // std dev = 0.543, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.39062772360709325;  // std dev = 0.581, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08962254870463487;  // std dev = 1.126, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, J), tempadvisedby(J, K) )
%   | | | then return 0.5976347917008854;  // std dev = 0.256, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.38037893161351033;  // std dev = 1.411, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.4984746576394099;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19168138146280653;  // std dev = 1.265, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.3496755129915674;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.051027371851674205;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.3443832602294637;  // std dev = 1.365, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.17866305684417244;  // std dev = 1.628, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.09269127618926105;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.277606766709422;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.09165245001414687;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2605833397174942;  // std dev = 0.174, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( ta(G, C, H) )
%   | | | then return 0.04586654942859711;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.34573082317011783;  // std dev = 0.980, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( professor(B), publication(I, B) )
%   | then if ( publication(J, A) )
%   | | then return -0.06865636032643734;  // std dev = 0.334, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( publication(I, K), tempadvisedby(K, L) )
%   | | | then return 0.37350243695256635;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06215765505853528;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.08240847715555241;  // std dev = 0.158, 69.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( publication(F, E), publication(F, B) )
%   | | then return -0.26780187568210334;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.084044792779446;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03294685340273377;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(I, J) )
%   | | | then return 0.41396596590257345;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08624711002922014;  // std dev = 1.294, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.0348602571224282;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2139995410729045;  // std dev = 1.607, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07983341959970931;  // std dev = 0.040, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(G, E) )
%   | | | then return 0.043210949579969515;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1280346274229044;  // std dev = 0.474, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2422575154810948;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(H, B), publication(H, A) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return -0.5165600561108327;  // std dev = 0.897, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20028812339487104;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return -0.25868949213929254;  // std dev = 0.975, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.015478652884225255;  // std dev = 2.441, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   else return -0.07404646120423004;  // std dev = 0.037, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.2836259318610129;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17021488741727467;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(G, B) )
%   | | then if ( publication(H, A), projectmember(I, B) )
%   | | | then return 0.25097861483334677;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06592819383969059;  // std dev = 1.894, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return 0.18688764712853093;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06837117001286253;  // std dev = 1.556, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.06857949401431909;  // std dev = 0.002, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then return 0.07954906112439906;  // std dev = 0.520, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.33805318784305943;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.13050678126481688;  // std dev = 0.276, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.13826155952168567;  // std dev = 1.243, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.295796427002475;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06292260099588722;  // std dev = 2.026, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   else return -0.06431713413706848;  // std dev = 0.002, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.209', 'seconds']
Refined model CLL: -0.207654


******************************************
Best model found
******************************************
Results 

CLL : -0.193866 

AUC ROC : 0.946669 

AUC PR : 0.372344 

Precision : 0.217391 

Recall : 0.769231 

F1 : 0.338983 

Total Learning Time : 7.46 

Total Inference Time : 1.3195436000823975 

Total revision time: 10.804511262893676
Best scored revision CLL: -0.207654


Results 

CLL : -0.193866 

AUC ROC : 0.946669 

AUC PR : 0.372344 

Precision : 0.217391 

Recall : 0.769231 

F1 : 0.338983 

Total Learning Time : 10.940700246810913 

Total Inference Time : 1.3195436000823975 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.861
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2217852987358757;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1840006627152894;  // std dev = 3.566, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1840750501871464;  // std dev = 3.482, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0780876836145091;  // std dev = 3.690, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07120621812250887;  // std dev = 3.674, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12258356427732432;  // std dev = 3.499, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028726209089166302;  // std dev = 3.680, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0681139106417477;  // std dev = 3.553, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07267850471502166;  // std dev = 3.514, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08190828333703601;  // std dev = 3.434, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.342', 'seconds']
Parameter learned model CLL:-0.4173 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,false,true': [3.568, 35, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.566, 38, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.482, 34, 20]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.69, 48, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.674, 46, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.499, 34, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.68, 48, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.553, 39, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.514, 35, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.434, 32, 20]}]
{'': [nan, 0.21484374999999956], 'false': [-9.25185853854297e-18, 0.23140495867768554], 'false,false': [0.23140495867768554, nan], 'false,true': [nan, -9.25185853854297e-18]}
{'': [nan, 0.21923383962612727], 'false': [nan, 0.21923383962612727], 'false,false': [nan, 0.21923383962612727], 'false,false,false': [nan, 0.21923383962612727]}
{'': [nan, 0.22446905472965295], 'false': [nan, 0.22446905472965295], 'false,false': [nan, 0.22446905472965295], 'false,false,false': [nan, 0.22446905472965317]}
{'': [nan, 0.20019034340979922], 'false': [nan, 0.20019034340979922], 'false,false': [nan, 0.20019034340979922], 'false,false,false': [nan, 0.20019034340979922]}
{'': [nan, 0.20453830789743455], 'false': [nan, 0.20453830789743455], 'false,false': [nan, 0.20453830789743455], 'false,false,false': [nan, 0.20453830789743455]}
{'': [nan, 0.2267658310400297], 'false': [nan, 0.2267658310400297], 'false,false': [nan, 0.2267658310400297], 'false,false,false': [nan, 0.2267658310400297]}
{'': [nan, 0.19910045033436308], 'false': [nan, 0.19910045033436308], 'false,false': [nan, 0.19910045033436308], 'false,false,false': [nan, 0.19910045033436308]}
{'': [nan, 0.2139192483283893], 'false': [nan, 0.2139192483283893], 'false,false': [nan, 0.2139192483283893], 'false,false,false': [nan, 0.2139192483283893]}
{'': [nan, 0.22455088349599836], 'false': [nan, 0.22455088349599836], 'false,false': [nan, 0.22455088349599836], 'false,false,false': [nan, 0.22455088349599836]}
{'': [nan, 0.22671169345132333], 'false': [nan, 0.2267116934513234], 'false,false': [nan, 0.22671169345132333], 'false,false,false': [nan, 0.22671169345132333]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 4.992
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( professor(B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(E, A), publication(F, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A), publication(C, A) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G) )
%   | | | then return -0.17809601907717026;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3251946922071284;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19494485159416;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then return -0.058656687536039386;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( student(A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5699757176473755;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6863988100350613;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.18150715923431723;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5647581173255574;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.041575888161960825;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.42850011677825134;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.530776460250952;  // std dev = 0.243, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then return 0.09453275573511537;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.48110609759910516;  // std dev = 0.295, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16007261930094357;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10723818262922452;  // std dev = 0.097, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.22887433507933777;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14017295591855972;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.4865876528347175;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3727783829479878;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return 0.18373825554350692;  // std dev = 0.542, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.44739819717681567;  // std dev = 0.255, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09399733907486038;  // std dev = 0.048, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.18293515361733137;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06215262437824329;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(G, A, H), publication(I, A) )
%   | | then if ( ta(J, K, H), tempadvisedby(K, L) )
%   | | | then return -0.1707621697837496;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3505039122442315;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.25713058035558317;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3297487136561674;  // std dev = 0.247, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09220640376574295;  // std dev = 0.136, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.29454679556919494;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, A, F), publication(G, A) )
%   | | | then return 0.14558271167567674;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08535220335636903;  // std dev = 1.356, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then return 0.20332695146709495;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3654842974780193;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0802878843027177;  // std dev = 0.057, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( ta(F, E, G), ta(C, H, G) )
%   | | then return -0.1003602673500514;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.08768615566431297;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return -0.007532059772844583;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(K, B), publication(K, A) )
%   | | | then return 0.19108351383735694;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.27773085386573426;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07687706081032561;  // std dev = 0.115, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( ta(C, E, F), tempadvisedby(E, G) )
%   | then return -0.13537018261761713;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.25759627874678237;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( publication(H, A), publication(H, B) )
%   | then if ( professor(B) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.011244526576387637;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15041063698871904;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06721872090382575;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( publication(J, A), professor(B) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return -0.36682487168100203;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17672926484744061;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.2576328018451882;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06721872090382576;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.22922860719168958;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13549437584382878;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0654246392060258;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, A) )
%   | | then return -0.18311913123487805;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2035035473258835;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then return 0.027512347000635096;  // std dev = 0.255, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.3800994706413814;  // std dev = 0.892, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06434613339430428;  // std dev = 0.036, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.693', 'seconds']
Refined model CLL: -0.197335


******************************************
Best model found
******************************************
Results 

CLL : -0.271533 

AUC ROC : 0.940991 

AUC PR : 0.187517 

Precision : 0.146912 

Recall : 0.946237 

F1 : 0.254335 

Total Learning Time : 4.992 

Total Inference Time : 0.7917585372924805 

Total revision time: 7.446749046325683
Best scored revision CLL: -0.197335


Results 

CLL : -0.271533 

AUC ROC : 0.940991 

AUC PR : 0.187517 

Precision : 0.146912 

Recall : 0.946237 

F1 : 0.254335 

Total Learning Time : 7.58293803024292 

Total Inference Time : 0.7917585372924805 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.755
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( inphase(A, G) )
%   | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17658603944692666;  // std dev = 2.398, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1371713587356023;  // std dev = 2.420, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05431532646252635;  // std dev = 2.527, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17074118582244813;  // std dev = 2.278, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011418034922001101;  // std dev = 2.531, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10871299875705143;  // std dev = 2.351, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253262780165312;  // std dev = 2.354, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07526330341498437;  // std dev = 2.337, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.042229825760556;  // std dev = 2.536, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.443', 'seconds']
Parameter learned model CLL:-0.427699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false,true': [2.306, 13, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.398, 17, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.42, 18, 9]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.527, 24, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.278, 14, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.531, 24, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.351, 15, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.354, 17, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.337, 15, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.536, 23, 9]}]
{'': [nan, 0.23437500000000003], 'false': [0.0, 0.24173553719008264], 'false,false': [0.24173553719008264, nan], 'false,true': [nan, 0.0]}
{'': [nan, 0.2211313691705875], 'false': [nan, 0.2211313691705875], 'false,false': [nan, 0.2211313691705875], 'false,false,false': [nan, 0.2211313691705875]}
{'': [nan, 0.21685696509574512], 'false': [nan, 0.21685696509574512], 'false,false': [nan, 0.21685696509574512], 'false,false,false': [nan, 0.21685696509574512]}
{'': [nan, 0.19358308135590552], 'false': [nan, 0.19358308135590552], 'false,false': [nan, 0.19358308135590552], 'false,false,false': [nan, 0.19358308135590552]}
{'': [nan, 0.22552599573163779], 'false': [nan, 0.22552599573163779], 'false,false': [nan, 0.22552599573163779], 'false,false,false': [nan, 0.22552599573163779]}
{'': [nan, 0.19409848655931622], 'false': [nan, 0.19409848655931622], 'false,false': [nan, 0.19409848655931622], 'false,false,false': [nan, 0.19409848655931622]}
{'': [nan, 0.2302072051112357], 'false': [nan, 0.2302072051112357], 'false,false': [nan, 0.2302072051112357], 'false,false,false': [nan, 0.2302072051112357]}
{'': [nan, 0.21308259191269457], 'false': [nan, 0.21308259191269457], 'false,false': [nan, 0.21308259191269457], 'false,false,false': [nan, 0.21308259191269457]}
{'': [nan, 0.22756613693782743], 'false': [nan, 0.22756613693782743], 'false,false': [nan, 0.22756613693782743], 'false,false,false': [nan, 0.22756613693782743]}
{'': [nan, 0.20089989533730676], 'false': [nan, 0.20089989533730676], 'false,false': [nan, 0.20089989533730676], 'false,false,false': [nan, 0.20089989533730676]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 2.131
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( professor(B) )
%   | then if ( publication(D, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.36801330557831013;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.5680133055783101;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11885185722039439;  // std dev = 0.114, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.46872495290413013;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2745326303555155;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10671638747363117;  // std dev = 0.106, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.3650113099481074;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09171569267936684;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.29378009131961874;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.029093857203753765;  // std dev = 0.439, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(B) )
%   | then return -0.25557004416280366;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08435615937663771;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return -0.018185901971878304;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.27582143539703446;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( professor(A) )
%   | then return -0.12205608716998549;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07806479193133194;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.24025139811361718;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.02765925587078319;  // std dev = 0.438, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(A) )
%   | then return -0.1502418060947346;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07262824685303274;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.06642535104409619;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( tempadvisedby(C, B) )
%   | then return 0.19621694706279935;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23781948459565228;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then return 0.18042009356587863;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(E, B), student(A) )
%   | then return -0.4912163956071782;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.1939826403699447;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return -0.1552899520271592;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06294009867252194;  // std dev = 0.009, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.101', 'seconds']
Refined model CLL: -0.182066


******************************************
Best model found
******************************************
Results 

CLL : -0.361141 

AUC ROC : 0.908109 

AUC PR : 0.125602 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.131 

Total Inference Time : 0.5398361682891846 

Total revision time: 4.0180197582244865
Best scored revision CLL: -0.182066


Results 

CLL : -0.361141 

AUC ROC : 0.908109 

AUC PR : 0.125602 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.154208742141723 

Total Inference Time : 0.5398361682891846 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.973
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( inphase(A, G) )
%   | | then return 0.2923594614153005;  // std dev = 4.321, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13357417540037775;  // std dev = 4.727, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16601852421322436;  // std dev = 4.526, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13590182564977502;  // std dev = 4.516, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08323680532292216;  // std dev = 4.621, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08523838856664431;  // std dev = 4.550, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08297556055920048;  // std dev = 4.506, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05732982475149331;  // std dev = 4.529, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04574888339634403;  // std dev = 4.535, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047948531921730535;  // std dev = 4.488, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.220', 'seconds']
Parameter learned model CLL:-0.38881 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [7.45e-09, 20, 0], 'false,false,true': [4.321, 43, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.727, 75, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.526, 60, 33]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.516, 62, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.621, 70, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.55, 65, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.506, 60, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.529, 63, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.535, 62, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.488, 59, 33]}]
{'': [nan, 0.22558593750000142], 'false': [2.7755575615628915e-18, 0.24567174515235612], 'false,false': [0.24567174515235612, nan], 'false,true': [nan, 2.7755575615628915e-18]}
{'': [nan, 0.2069366677123323], 'false': [nan, 0.2069366677123323], 'false,false': [nan, 0.2069366677123323], 'false,false,false': [nan, 0.2069366677123323]}
{'': [nan, 0.22023111437674547], 'false': [nan, 0.22023111437674547], 'false,false': [nan, 0.22023111437674547], 'false,false,false': [nan, 0.2202311143767452]}
{'': [nan, 0.21471151187114146], 'false': [nan, 0.21471151187114146], 'false,false': [nan, 0.21471151187114146], 'false,false,false': [nan, 0.21471151187114146]}
{'': [nan, 0.2072992592151095], 'false': [nan, 0.2072992592151095], 'false,false': [nan, 0.2072992592151095], 'false,false,false': [nan, 0.2072992592151095]}
{'': [nan, 0.21124870529470255], 'false': [nan, 0.21124870529470255], 'false,false': [nan, 0.21124870529470255], 'false,false,false': [nan, 0.21124870529470255]}
{'': [nan, 0.21831748272290644], 'false': [nan, 0.21831748272290644], 'false,false': [nan, 0.21831748272290644], 'false,false,false': [nan, 0.21831748272290644]}
{'': [nan, 0.21362818624517543], 'false': [nan, 0.21362818624517543], 'false,false': [nan, 0.21362818624517543], 'false,false,false': [nan, 0.21362818624517543]}
{'': [nan, 0.21651789536763688], 'false': [nan, 0.21651789536763688], 'false,false': [nan, 0.21651789536763688], 'false,false,false': [nan, 0.21651789536763688]}
{'': [nan, 0.21892692872791703], 'false': [nan, 0.21892692872791691], 'false,false': [nan, 0.21892692872791703], 'false,false,false': [nan, 0.21892692872791703]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true


Refining candidate
***************************
Model training time 7.378
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.5914822684328456;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( professor(B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.7469687014732399;  // std dev = 0.100, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.09121194543566787;  // std dev = 1.482, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.41231376599064695;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( publication(F, A) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.4947549929313577;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5696611326912233;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7700365736517609;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.588783801054808;  // std dev = 0.134, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.29537578648378443;  // std dev = 1.346, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.08567895298627694;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.42671595398306567;  // std dev = 1.549, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.7043108357384241;  // std dev = 0.192, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360642;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.44364248935811224;  // std dev = 0.137, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.11542627027946048;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.055296187840445786;  // std dev = 1.403, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.24918119684761417;  // std dev = 2.242, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.10159632948783628;  // std dev = 2.58e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.17847862854424534;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.6051512401044516;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3616651292209982;  // std dev = 1.167, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.31922307140726713;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.3293709206040306;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.016921250258265;  // std dev = 1.471, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.09269127618926105;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.3506865986931664;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2392552346399742;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12127267057768483;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.19533078507824794;  // std dev = 1.073, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.24582242199733478;  // std dev = 0.985, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.02403497626569402;  // std dev = 1.982, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.20051517009922723;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), student(D) )
%   | | then if ( publication(C, A), ta(E, D, F) )
%   | | | then return -0.02252508680715353;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1969562881799851;  // std dev = 2.060, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return -0.11332918022012155;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.13215151842010672;  // std dev = 0.873, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, D), publication(F, E) )
%   | | then if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.1899872222463654;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3639272242137769;  // std dev = 0.274, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(I, J, D), publication(K, J) )
%   | | | then return 0.06550599081577275;  // std dev = 1.092, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.22284676616359864;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | then if ( publication(M, N), ta(P, N, Q) )
%   | | | then return 0.3128116849514356;  // std dev = 0.412, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 7.070486729810616E-5;  // std dev = 0.339, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(R, A), publication(S, B) )
%   | | | then return 0.17170528816225175;  // std dev = 0.786, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.11332720915397125;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 7.45e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, B) )
%   then if ( professor(A) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( ta(E, C, F), ta(G, A, H) )
%   | | then return -0.04143261281012822;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.2690768408027516;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17214616512178565;  // std dev = 0.667, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( tempadvisedby(K, B), student(A) )
%   | then return -0.26428543549701206;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then if ( professor(B) )
%   | | | then return 0.19498732388533394;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(M, A), professor(B) )
%   | | | then return -0.21418668888806713;  // std dev = 1.349, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.06095744786280104;  // std dev = 1.632, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( student(A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.2234845273222453;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14293152760584446;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( tempadvisedby(F, B), publication(G, F) )
%   | then return -0.3326333825390243;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( ta(H, A, I), publication(J, A) )
%   | | then if ( publication(K, B) )
%   | | | then return -0.07374853078208518;  // std dev = 1.092, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09778806205964738;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.13291649080052068;  // std dev = 2.611, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return -0.06429401446757897;  // std dev = 0.012, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.427', 'seconds']
Refined model CLL: -0.203817


******************************************
Best model found
******************************************
Results 

CLL : -0.195116 

AUC ROC : 0.951259 

AUC PR : 0.395059 

Precision : 0.213058 

Recall : 0.775 

F1 : 0.334232 

Total Learning Time : 7.378 

Total Inference Time : 1.321148157119751 

Total revision time: 10.68662397956848
Best scored revision CLL: -0.203817


Results 

CLL : -0.195116 

AUC ROC : 0.951259 

AUC PR : 0.395059 

Precision : 0.213058 

Recall : 0.775 

F1 : 0.334232 

Total Learning Time : 10.822812963485717 

Total Inference Time : 1.321148157119751 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.894
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, D) )
%   | then if ( courselevel(E, F), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( inphase(A, G) )
%   | | then return 0.221785298735876;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(E, A), courselevel(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12805482893848533;  // std dev = 3.309, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(A, E), projectmember(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14496214351926143;  // std dev = 3.229, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( projectmember(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), projectmember(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13993888814151595;  // std dev = 3.189, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, E), courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( publication(A, G), inphase(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05552716740103427;  // std dev = 3.338, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, A), courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, E), inphase(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, G), courselevel(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08147841581798734;  // std dev = 3.243, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C), inphase(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(E, A), courselevel(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F), courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06543592715843026;  // std dev = 3.246, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(D, A), courselevel(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( projectmember(A, E), hasposition(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05698981184069509;  // std dev = 3.225, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(D, A), inphase(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( projectmember(A, F), inphase(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), publication(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06974123894754676;  // std dev = 3.153, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, A), publication(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(A, E), inphase(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( courselevel(H, A), courselevel(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053137139421799096;  // std dev = 3.180, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.354', 'seconds']
Parameter learned model CLL:-0.374087 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'hasposition(A, D)', 'false,true': 'courselevel(E, F), courselevel(A, F)', 'false,false': 'inphase(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 13, 0], 'false,false,true': [3.191, 28, 16], 'false,false,false': [0.0, 2, 0]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, D), courselevel(D, A)', 'false,false': 'courselevel(E, A), courselevel(F, E)', 'false,false,false': 'courselevel(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.309, 41, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A)', 'false,false,false': 'hasposition(A, E), projectmember(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.229, 34, 16]}]
['advisedby(A, B)', {'': 'projectmember(A, C)', 'false': 'courselevel(D, A), projectmember(D, E)', 'false,false': 'courselevel(F, A)', 'false,false,false': 'courselevel(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.189, 31, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'projectmember(A, E), courselevel(A, F)', 'false,false,false': 'publication(A, G), inphase(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.338, 41, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), courselevel(A, C)', 'false': 'courselevel(D, A)', 'false,false': 'publication(A, E), inphase(A, F)', 'false,false,false': 'courselevel(A, G), courselevel(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.243, 35, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C), inphase(C, D)', 'false': 'courselevel(E, A), courselevel(E, E)', 'false,false': 'publication(A, F), courselevel(A, G)', 'false,false,false': 'courselevel(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.246, 35, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A)', 'false': 'courselevel(A, A)', 'false,false': 'courselevel(D, A), courselevel(A, D)', 'false,false,false': 'projectmember(A, E), hasposition(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.225, 35, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(D, A), inphase(D, E)', 'false,false': 'projectmember(A, F), inphase(A, G)', 'false,false,false': 'courselevel(H, A), publication(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.153, 32, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, A), publication(C, D)', 'false': 'hasposition(A, E), inphase(A, F)', 'false,false': 'courselevel(A, G)', 'false,false,false': 'courselevel(H, A), courselevel(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.18, 31, 16]}]
{'': [nan, 0.19764435507038156], 'false': [-1.2810265668751807e-17, 0.22684310018903542], 'false,false': [0.23140495867768546, 0.0], 'false,true': [nan, -1.2810265668751807e-17]}
{'': [nan, 0.19207815056132763], 'false': [nan, 0.19207815056132763], 'false,false': [nan, 0.19207815056132763], 'false,false,false': [nan, 0.19207815056132763]}
{'': [nan, 0.20855971809085186], 'false': [nan, 0.20855971809085186], 'false,false': [nan, 0.20855971809085186], 'false,false,false': [nan, 0.2085597180908517]}
{'': [nan, 0.2163543714379036], 'false': [nan, 0.2163543714379036], 'false,false': [nan, 0.2163543714379036], 'false,false,false': [nan, 0.2163543714379036]}
{'': [nan, 0.19545869595746018], 'false': [nan, 0.19545869595746018], 'false,false': [nan, 0.19545869595746018], 'false,false,false': [nan, 0.19545869595746018]}
{'': [nan, 0.2061853498158176], 'false': [nan, 0.2061853498158176], 'false,false': [nan, 0.2061853498158176], 'false,false,false': [nan, 0.2061853498158176]}
{'': [nan, 0.2065506950248745], 'false': [nan, 0.2065506950248745], 'false,false': [nan, 0.2065506950248745], 'false,false,false': [nan, 0.2065506950248745]}
{'': [nan, 0.20393706310312104], 'false': [nan, 0.20393706310312104], 'false,false': [nan, 0.20393706310312104], 'false,false,false': [nan, 0.20393706310312104]}
{'': [nan, 0.2071207814158307], 'false': [nan, 0.2071207814158307], 'false,false': [nan, 0.2071207814158307], 'false,false,false': [nan, 0.2071207814158307]}
{'': [nan, 0.2151151082102859], 'false': [nan, 0.21511510821028598], 'false,false': [nan, 0.2151151082102859], 'false,false,false': [nan, 0.2151151082102859]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(A, D).;true;true
0;false;inphase(A, G).;true;true


Refining candidate
***************************
Model training time 6.516
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(A, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( inphase(A, D) )
%   | then if ( professor(B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.10168725978835073;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), projectmember(I, H) )
%   | | | then return 0.5427941835770488;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20335078596320766;  // std dev = 1.684, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.29279418357704884;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7744639907355253;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12653840028653116;  // std dev = 0.022, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then return 0.4441362084455909;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.7429395625130155;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6360632863561894;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.30482670447424426;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( ta(J, A, K) )
%   | then if ( professor(B) )
%   | | then return -0.2360737317819895;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11220737483673449;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( publication(L, A) )
%   | | then return -0.11220737483673449;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.031239378505196713;  // std dev = 0.766, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.2531954434782725;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then return 0.5736842089010036;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.5570631967677155;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2780187441715399;  // std dev = 1.612, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.10428103757503099;  // std dev = 0.038, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, G), publication(H, F) )
%   | | then if ( sameperson(A, F) )
%   | | | then return 0.13076630217204366;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2712359021017353;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5323322227503805;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(I, A, J) )
%   | | then return -0.2568382702773167;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(K, B), tempadvisedby(L, B) )
%   | | | then return -0.0635831540071165;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4387044866765627;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09630788225588187;  // std dev = 0.038, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.3778949877371689;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(D, B) )
%   | | then return 0.37013864669991625;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, A, F), hasposition(B, G) )
%   | | | then return 0.06093359717372809;  // std dev = 1.568, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.05942593420134301;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08602872870617674;  // std dev = 0.013, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( ta(D, A, E), ta(F, C, E) )
%   | then return -0.1331873634939637;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(G, A, H), ta(G, C, I) )
%   | | then return 0.05212406808550096;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.3792072366588876;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06713336302983063;  // std dev = 0.442, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( publication(K, A), ta(L, A, M) )
%   | then return -0.21650052184906698;  // std dev = 0.339, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( student(A), professor(B) )
%   | | then if ( ta(N, A, P), hasposition(B, Q) )
%   | | | then return -0.10654234069002594;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14978905951860552;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.08002872394802957;  // std dev = 0.020, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, A), projectmember(D, B) )
%   then return -0.3516724030949527;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then return -0.21203011184088885;  // std dev = 1.035, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.0873606036535698;  // std dev = 1.536, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.30627069491077935;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07475630969577184;  // std dev = 0.029, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), projectmember(E, B) )
%   then return -0.29904099845246657;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | then if ( ta(G, F, I) )
%   | | then return 0.3804886109550158;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12347071435492137;  // std dev = 0.945, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then return 0.057736954944237695;  // std dev = 0.257, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(K, A), professor(B) )
%   | | | then return -0.26509758936474787;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.04316119078329798;  // std dev = 1.307, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), ta(D, A, E) )
%   then if ( tempadvisedby(F, B), ta(G, F, E) )
%   | then return -0.23425282210306633;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( ta(H, I, E), publication(J, I) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.2810631865272955;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08486014626356882;  // std dev = 0.358, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3552350748693291;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), ta(L, A, M) )
%   | then return -0.2925757537157871;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( student(A), projectmember(N, B) )
%   | | then return 0.2088351743173389;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(P, B) )
%   | | | then return -0.09895226043106022;  // std dev = 0.754, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.03865759099868593;  // std dev = 0.436, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.672', 'seconds']
Refined model CLL: -0.224938


******************************************
Best model found
******************************************
Results 

CLL : -0.224339 

AUC ROC : 0.935989 

AUC PR : 0.24373 

Precision : 0.143925 

Recall : 0.793814 

F1 : 0.243671 

Total Learning Time : 6.516 

Total Inference Time : 0.8511488437652588 

Total revision time: 9.00975552558899
Best scored revision CLL: -0.224938


Results 

CLL : -0.224339 

AUC ROC : 0.935989 

AUC PR : 0.24373 

Precision : 0.143925 

Recall : 0.793814 

F1 : 0.243671 

Total Learning Time : 9.145944509506226 

Total Inference Time : 0.8511488437652588 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.921
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.2265699877310899;  // std dev = 4.702, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.1966930866480224;  // std dev = 4.702, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.15560928202306007;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.09633600694495711;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1353112163861428;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.12224371037500657;  // std dev = 4.608, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.271014716591286;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.11114713386425966;  // std dev = 4.556, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.22088866894326778;  // std dev = 2.11e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.028481514899664585;  // std dev = 4.695, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04606648495786013;  // std dev = 4.634, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19673361257708782;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.10158267433987937;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.003', 'seconds']
Parameter learned model CLL:-0.376606 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.702, 60, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.702, 60, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.743, 63, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.864, 73, 35], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.657, 57, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.608, 54, 35], 'true,false,true': [1.49e-08, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.556, 51, 35], 'true,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 23, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.695, 76, 35], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.634, 65, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.05e-08, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.437, 45, 35], 'false,false,false': [0.0, 0, 0]}]
{'': [0.23268698060941978, nan], 'true': [0.23268698060941978, nan]}
{'': [0.2326869806094181, nan]}
{'': [0.22959183673469283, nan], 'true': [0.22959183673469283, nan], 'true,true': [0.22959183673469283, nan]}
{'': [nan, 0.21905006858710646], 'false': [nan, 0.21905006858710646], 'false,false': [0.21905006858710646, nan]}
{'': [0.2357041587901706, nan], 'true': [nan, 0.2357041587901706]}
{'': [0.21905006858710505, nan], 'true': [0.23860623658628902, 1.1686558153949016e-17], 'true,false': [1.1686558153949016e-17, nan]}
{'': [0.24134667387777212, 1.9308226515220113e-17], 'true': [0.24134667387777212, nan], 'false': [1.9308226515220113e-17, nan], 'false,true': [1.9308226515220113e-17, nan]}
{'': [0.19861283559375956, nan], 'true': [0.19861283559375956, nan]}
{'': [0.21474145270471234, nan], 'true': [nan, 0.2147414527047123]}
{'': [6.938893903907228e-18, 0.24609374999999928], 'false': [nan, 0.24609374999999928], 'false,false': [0.24609374999999928, nan], 'true': [6.938893903907228e-18, nan], 'true,true': [6.938893903907228e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 9.895
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(G, A), projectmember(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5538011090125557;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.14185106490048774;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(H, G) )
%   | | | then return -0.0037759856910518806;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2210856219627274;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.24805729486461875;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.59722143551358;  // std dev = 1.569, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, A, G), publication(C, E) )
%   | | | then return 0.17120975172977693;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5007017466737574;  // std dev = 1.648, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0.004333122628844259;  // std dev = 0.851, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6502258570459277;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4567451990795777;  // std dev = 0.174, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.2870033816632183;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.155840791717107;  // std dev = 1.192, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.42016008337786337;  // std dev = 1.310, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.14629393973383015;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.10159632948783634;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return -0.15372827226723207;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, B) )
%   | | then if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.35023016455181794;  // std dev = 0.162, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.11815774935910812;  // std dev = 2.163, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.19730495826227207;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.48059202305344806;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926104;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.1831285927017815;  // std dev = 0.879, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.13185036060615601;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.16471795455028754;  // std dev = 1.489, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.2973334052757063;  // std dev = 1.279, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.16923891847464226;  // std dev = 0.995, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.09850683661756822;  // std dev = 1.576, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.3824650878262216;  // std dev = 0.298, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08426989161124511;  // std dev = 1.470, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | | then return -0.07778207660941376;  // std dev = 0.894, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1991089978232624;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.12110050953762849;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0943797254297954;  // std dev = 0.909, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return 0.47932750160486864;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.08876672891955723;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( student(B) )
%   | then return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( publication(H, A), projectmember(I, B) )
%   | | then return 0.116216948528063;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18152656431605202;  // std dev = 0.481, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1884556311818129;  // std dev = 0.180, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return -0.21346046861911536;  // std dev = 1.047, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return -0.09052591691967359;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.22142494322537198;  // std dev = 1.344, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.06842385671876856;  // std dev = 0.020, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.07027656496868523;  // std dev = 0.060, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( professor(B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.21550464733946095;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.031134041739327715;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3711092475104911;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, B) )
%   | | | then return -0.026744710499911523;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.12399590168744479;  // std dev = 1.458, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | | then return 0.16935856991168088;  // std dev = 0.815, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.046276192779660594;  // std dev = 1.422, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.982', 'seconds']
Refined model CLL: -0.235042


******************************************
Best model found
******************************************
Results 

CLL : -0.22755 

AUC ROC : 0.953971 

AUC PR : 0.350304 

Precision : 0.206304 

Recall : 0.923077 

F1 : 0.337237 

Total Learning Time : 9.895 

Total Inference Time : 1.6453428268432617 

Total revision time: 13.510577693939208
Best scored revision CLL: -0.235042


Results 

CLL : -0.22755 

AUC ROC : 0.953971 

AUC PR : 0.350304 

Precision : 0.206304 

Recall : 0.923077 

F1 : 0.337237 

Total Learning Time : 13.599273935317992 

Total Inference Time : 1.6453428268432617 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.838
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.11788919483977191;  // std dev = 3.848, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.17105268670360235;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.14708681946774008;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.11386469725600297;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11630136474692002;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.26936097108803203;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.24345954173248116;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.12025501844302948;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.20144864754620337;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.037383924667457845;  // std dev = 3.544, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.036573030451750796;  // std dev = 3.709, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.17109273977801046;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.20404995637058496;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.162', 'seconds']
Parameter learned model CLL:-0.410596 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.848, 57, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.666, 41, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.666, 41, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.695, 43, 20], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.636, 39, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [3.121, 19, 20], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [3.416, 28, 20], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.544, 39, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.709, 57, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [1.05e-08, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.078, 18, 20], 'false,false,false': [0.0, 0, 0]}]
{'': [0.19227525721032165, nan], 'true': [0.19227525721032165, nan]}
{'': [0.22037086804622402, nan]}
{'': [0.2203708680462235, nan], 'true': [0.2203708680462235, nan], 'true,true': [0.2203708680462235, nan]}
{'': [nan, 0.2166792642983122], 'false': [nan, 0.2166792642983122], 'false,false': [0.2166792642983122, nan]}
{'': [0.22407354208560806, nan], 'true': [nan, 0.22407354208560806]}
{'': [0.23999999999999944, nan], 'true': [0.24983563445101856, -3.027880976250427e-17], 'true,false': [-3.027880976250427e-17, nan]}
{'': [0.24305555555555536, 0.0], 'true': [0.24305555555555536, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.21285865374060947, nan], 'true': [0.21285865374060947, nan]}
{'': [0.17869520012924286, nan], 'true': [nan, 0.17869520012924303]}
{'': [1.1102230246251566e-17, 0.2493074792243768], 'false': [nan, 0.2493074792243768], 'false,false': [0.2493074792243768, nan], 'true': [1.1102230246251566e-17, nan], 'true,true': [1.1102230246251566e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 5.246
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( ta(H, A, I) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048774;  // std dev = 2.36e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then if ( publication(C, G), tempadvisedby(G, H) )
%   | | | then return 0.22756822603876645;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7518526675222027;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7463462063781202;  // std dev = 0.139, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.03162893957529534;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.6218937916026731;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5732462661130605;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.6159375403907105;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.143983367711045;  // std dev = 0.997, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.5832172578981745;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360643;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(D, B) )
%   | | | then return 0.47128670429172626;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4323775685689812;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.23005454281484045;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.01027390411296264;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return 0.27867168214941646;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.03100618757866265;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G) )
%   | | then return 0.33412684922169356;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.394265048823329;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return -0.047685641542843916;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.43551764658469144;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21422327714199538;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.03569403275568259;  // std dev = 0.671, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.17489358705960362;  // std dev = 1.071, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3429623328377156;  // std dev = 0.463, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08518475138839682;  // std dev = 1.97e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, A) )
%   | then if ( ta(G, A, H), ta(I, E, J) )
%   | | then return -0.45523387252793795;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.019335516912654005;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.029888092153335793;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return -0.03404359153358975;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24800092572750615;  // std dev = 0.734, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.2548920398717654;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.027424251586265453;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.3041672514150321;  // std dev = 0.284, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(C, A) )
%   | | then return 0.18078948698303102;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25434193375690617;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( publication(H, A) )
%   | then if ( student(A), student(B) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( tempadvisedby(I, A), publication(J, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16582501268832703;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.27414442080798457;  // std dev = 0.554, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), professor(B) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then return -0.08326331551559248;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(C, G), professor(G) )
%   | | then if ( tempadvisedby(H, G), publication(C, B) )
%   | | | then return 0.15901271744169615;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23109126419442708;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.382757938628749;  // std dev = 0.277, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B), ta(I, A, J) )
%   | then return -0.13632237974569242;  // std dev = 1.201, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(K, A) )
%   | | then return -0.07383597168811282;  // std dev = 0.039, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( professor(B) )
%   | | | then return -0.053058731701712325;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.05667885252315262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.07483816696002019;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( tempadvisedby(F, B), publication(E, F) )
%   | | then return 0.046017029495053305;  // std dev = 0.547, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.25827944598083247;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17045210054556825;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), professor(K) )
%   | | | then return -0.0638676800003529;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.12775789043492816;  // std dev = 0.469, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( inphase(A, L), inphase(B, L) )
%   | | | then return -0.05372349088575458;  // std dev = 3.23e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.16145882016948196;  // std dev = 0.530, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.690', 'seconds']
Refined model CLL: -0.184136


******************************************
Best model found
******************************************
Results 

CLL : -0.252327 

AUC ROC : 0.938765 

AUC PR : 0.185882 

Precision : 0.147541 

Recall : 0.870968 

F1 : 0.252336 

Total Learning Time : 5.246 

Total Inference Time : 0.9576659202575684 

Total revision time: 7.774264701843262
Best scored revision CLL: -0.184136


Results 

CLL : -0.252327 

AUC ROC : 0.938765 

AUC PR : 0.185882 

Precision : 0.147541 

Recall : 0.870968 

F1 : 0.252336 

Total Learning Time : 7.862960943222046 

Total Inference Time : 0.9576659202575684 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.776
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.1627998475099484;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.11553446172313678;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.1325800984562175;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17240518827975834;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.10576974994509762;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2692302500549022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.1380311940305414;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21964064964676577;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return -0.02160648295948894;  // std dev = 2.496, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030251574815649808;  // std dev = 2.398, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.18561519867695483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.06962948486666916;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.179', 'seconds']
Parameter learned model CLL:-0.424403 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [2.4, 16, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [2.449, 18, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [2.491, 20, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.426, 17, 9], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.306, 13, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.372, 15, 9], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.268, 12, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 7, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [2.496, 23, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.398, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.341, 14, 9], 'false,false,false': [0.0, 0, 0]}]
{'': [0.23040000000000005, nan], 'true': [0.23040000000000005, nan]}
{'': [0.22222222222222196, nan]}
{'': [0.2140309155766941, nan], 'true': [0.2140309155766941, nan], 'true,true': [0.2140309155766941, nan]}
{'': [nan, 0.22633136094674555], 'false': [nan, 0.22633136094674555], 'false,false': [0.22633136094674555, nan]}
{'': [0.2417355371900829, nan], 'true': [nan, 0.2417355371900829]}
{'': [0.23040000000000013, nan], 'true': [0.23437500000000014, 0.0], 'true,false': [0.0, nan]}
{'': [0.24489795918367327, 7.93016446160826e-18], 'true': [0.24489795918367327, nan], 'false': [7.93016446160826e-18, nan], 'false,true': [7.93016446160826e-18, nan]}
{'': [0.1946300807207498, nan], 'true': [0.1946300807207498, nan]}
{'': [0.20536162075096986, nan], 'true': [nan, 0.20536162075096984]}
{'': [0.0, 0.2381852551984876], 'false': [nan, 0.2381852551984876], 'false,false': [0.2381852551984876, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 2.387
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.13513726035718227;  // std dev = 0.150, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1291939773170083;  // std dev = 0.189, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.09794234301830722;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.43402809479030663;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09919668843776662;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.4211426395909041;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return -0.32416779488222286;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.18873823358894073;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0906784540047995;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then return 0.05042625657080957;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3103002400275611;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( professor(A) )
%   | | then return -0.23068348745206446;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08347383050329153;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then return 0.28950924058956884;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G), professor(B) )
%   | | then return -0.3391806884716749;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.24941479673574668;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0773056293814512;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06743712253162631;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.2583734302169717;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21710459885205688;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, B) )
%   | then return -0.12502856657830755;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07011478538187578;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then return 0.21310711617852002;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(E, A) )
%   | then if ( professor(B) )
%   | | then return -0.1992781370139609;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06396143167955481;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( professor(B) )
%   | | then return 0.1679475693428546;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06573791051179535;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( ta(E, B, F) )
%   | then return -0.054874860720058725;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07987032843816078;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B) )
%   | then if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | then return 0.15470244706913225;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18689367359166845;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06227664584096795;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.164', 'seconds']
Refined model CLL: -0.179838


******************************************
Best model found
******************************************
Results 

CLL : -0.363295 

AUC ROC : 0.904601 

AUC PR : 0.117619 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.387 

Total Inference Time : 0.5935170650482178 

Total revision time: 4.304875505447388
Best scored revision CLL: -0.179838


Results 

CLL : -0.363295 

AUC ROC : 0.904601 

AUC PR : 0.117619 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 4.393571746826172 

Total Inference Time : 0.5935170650482178 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.839
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.18814893509951094;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.15719763561967284;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.19443449858999012;  // std dev = 4.510, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.10259320494150545;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07518674347459985;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.16467677953145424;  // std dev = 4.384, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.2530447394558868;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.127085919749574;  // std dev = 4.403, 80.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.20825373998257665;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.07328690930602395;  // std dev = 4.436, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06378192098071676;  // std dev = 4.417, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.19676003242156334;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.08089985590294975;  // std dev = 4.363, 78.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.058', 'seconds']
Parameter learned model CLL:-0.378464 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [4.702, 67, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [4.725, 69, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [4.51, 53, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.725, 69, 33], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.757, 72, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [4.384, 46, 33], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [4.403, 47, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 22, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [4.436, 59, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [4.417, 57, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.363, 45, 33], 'false,false,false': [0.0, 0, 0]}]
{'': [0.2211000000000014, nan], 'true': [0.2211000000000014, nan]}
{'': [0.21885813148788974, nan]}
{'': [0.23647917793401774, nan], 'true': [0.23647917793401774, nan], 'true,true': [0.23647917793401774, nan]}
{'': [nan, 0.2188581314878902], 'false': [nan, 0.2188581314878902], 'false,false': [0.2188581314878902, nan]}
{'': [0.21551020408163157, nan], 'true': [nan, 0.21551020408163157]}
{'': [0.22558593750000064, nan], 'true': [0.24323025156225025, -1.3061447348531253e-17], 'true,false': [-1.3061447348531253e-17, nan]}
{'': [0.24234375000000047, 1.0092936587501423e-17], 'true': [0.24234375000000047, nan], 'false': [1.0092936587501423e-17, nan], 'false,true': [1.0092936587501423e-17, nan]}
{'': [0.21385198374323514, nan], 'true': [0.21385198374323514, nan]}
{'': [0.21673768544490918, nan], 'true': [nan, 0.21673768544490912]}
{'': [-1.586032892321652e-17, 0.24408284023668672], 'false': [nan, 0.24408284023668672], 'false,false': [0.24408284023668672, nan], 'true': [-1.586032892321652e-17, nan], 'true,true': [-1.586032892321652e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 9.662
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(F, H), ta(I, H, J) )
%   | | | then return 0.6215130680987772;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.04646541665739936;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5222916321041523;  // std dev = 1.914, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1395434882741248;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839136;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.570346628839126;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.2863242889053477;  // std dev = 1.404, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.6061656162202206;  // std dev = 0.961, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.04361180902291518;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3091654366161182;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E) )
%   | | | then return 0.3325219174133476;  // std dev = 2.090, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return 0.5911213442722071;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.04715896399592844;  // std dev = 0.566, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.053102072953264544;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( publication(E, B) )
%   | | then return 0.18213621456641899;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5394655275562079;  // std dev = 0.188, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.339945094944221;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return -0.06165879609747216;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17853827550620865;  // std dev = 2.148, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else return -0.09269127618926105;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.2872416929600166;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5573197304736827;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.286899529310055;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.138992303513684;  // std dev = 2.014, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.0851847513883968;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, F), student(F) )
%   | | then if ( ta(G, A, H), ta(I, F, H) )
%   | | | then return 0.3246801582901778;  // std dev = 0.158, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.14376068430794722;  // std dev = 1.846, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return -0.19122313442682756;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( ta(J, A, K) )
%   | | then if ( publication(L, A) )
%   | | | then return 0.08497365487503465;  // std dev = 0.401, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.16613395854572202;  // std dev = 0.303, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( publication(E, B) )
%   | then if ( ta(F, G, D), publication(E, G) )
%   | | then return 0.2585538240552122;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( ta(H, I, D), publication(J, I) )
%   | | | then return -0.1812491656858333;  // std dev = 1.127, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.20620944802226818;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.22326710081334775;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( publication(K, A), publication(K, B) )
%   | then if ( student(A), tempadvisedby(L, B) )
%   | | then return 0.1824560018503943;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.02775177241568181;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.07457090094901028;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( publication(M, A), tempadvisedby(N, B) )
%   | | then return -0.24154776192839453;  // std dev = 0.308, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return -0.055850671054163;  // std dev = 0.169, 55.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18635728720400524;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.11624544336238127;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.22860968783996538;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return -0.006625764047904964;  // std dev = 1.442, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.195662048396797;  // std dev = 1.086, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07049844269376147;  // std dev = 0.037, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06449019832037879;  // std dev = 0.010, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(E, G), publication(F, G) )
%   | | | then return 0.16231575301598616;  // std dev = 0.114, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.06755566145434069;  // std dev = 1.216, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.17607195044607976;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.29061749318287483;  // std dev = 0.205, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(K, A, L), student(B) )
%   | | then return -0.07002856876797169;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( publication(M, A), student(B) )
%   | | | then return -0.06511854803835539;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.05733800393966953;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.273', 'seconds']
Refined model CLL: -0.231247


******************************************
Best model found
******************************************
Results 

CLL : -0.224372 

AUC ROC : 0.948922 

AUC PR : 0.456616 

Precision : 0.186246 

Recall : 0.8125 

F1 : 0.30303 

Total Learning Time : 9.662 

Total Inference Time : 1.462554931640625 

Total revision time: 12.944823099136354
Best scored revision CLL: -0.231247


Results 

CLL : -0.224372 

AUC ROC : 0.948922 

AUC PR : 0.456616 

Precision : 0.186246 

Recall : 0.8125 

F1 : 0.30303 

Total Learning Time : 13.033519340515138 

Total Inference Time : 1.462554931640625 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 0.775
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(A, C) )
%   | then return 0.17814893509951235;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then return 0.18287634305602304;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(D, A), sameperson(A, D) )
%   | then if ( sameperson(C, E) )
%   | | then return 0.1892482119824;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(D, A), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(F, A) )
%   | | then return 0.09725251513224865;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( sameperson(C, D), sameproject(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09329584535629115;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameperson(C, A), sameperson(A, C) )
%   then if ( inphase(C, D) )
%   | then return 0.22738194210547258;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else if ( sameperson(C, C) )
%   | | then return -0.25746654274301234;  // std dev = 1.49e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( sameperson(C, E) )
%   | then return 0.1815830792463005;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameperson(F, A), sameperson(F, F) )
%   | then if ( sameperson(F, G) )
%   | | then return -0.21137707092627325;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameperson(C, A) )
%   then if ( sameperson(D, C) )
%   | then return 0.02567004622927247;  // std dev = 3.087, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( sameperson(A, C) )
%   then if ( inphase(C, D), hasposition(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03003381183729892;  // std dev = 3.251, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then if ( sameperson(E, C) )
%   | then if ( sameperson(A, F), sameperson(E, F) )
%   | | then return -0.17764492254638958;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( samecourse(A, G), inphase(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameperson(A, I) )
%   | | then return 0.04681796821004965;  // std dev = 3.115, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.136', 'seconds']
Parameter learned model CLL:-0.364751 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(A, C)'}, {'true,true': [3.298, 34, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)'}, {'true': [3.23, 30, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(D, A), sameperson(A, D)', 'true,true': 'sameperson(C, E)'}, {'true,true,true': [3.147, 26, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameperson(D, A), sameproject(D, E)', 'false,false': 'sameperson(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.298, 34, 16], 'false,false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'sameperson(C, D), sameproject(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.266, 32, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), sameperson(A, C)', 'true': 'inphase(C, D)', 'true,false': 'sameperson(C, C)'}, {'true,true': [2.871, 17, 16], 'true,false,true': [1.49e-08, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C), inphase(C, D)', 'true': 'sameperson(C, E)', 'false': 'sameperson(F, A), sameperson(F, F)', 'false,true': 'sameperson(F, G)'}, {'true,true': [2.871, 17, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A)', 'true': 'sameperson(D, C)'}, {'true,true': [3.087, 35, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(A, C)', 'true': 'inphase(C, D), hasposition(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.251, 41, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameperson(C, A), hasposition(C, D)', 'true': 'sameperson(E, C)', 'true,true': 'sameperson(A, F), sameperson(E, F)', 'false': 'samecourse(A, G), inphase(A, H)', 'false,false': 'sameperson(A, I)'}, {'true,true,true': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.115, 26, 16], 'false,false,false': [0.0, 0, 0]}]
{'': [0.2175999999999995, nan], 'true': [0.2175999999999995, nan]}
{'': [0.22684310018903572, nan]}
{'': [0.23582766439909306, nan], 'true': [0.23582766439909306, nan], 'true,true': [0.23582766439909306, nan]}
{'': [nan, 0.2175999999999995], 'false': [nan, 0.2175999999999995], 'false,false': [0.2175999999999995, nan]}
{'': [0.22222222222222274, nan], 'true': [nan, 0.22222222222222274]}
{'': [0.2336398053001623, nan], 'true': [0.24977043158861345, 2.2204460492503132e-17], 'true,false': [2.2204460492503132e-17, nan]}
{'': [0.2497704315886135, 0.0], 'true': [0.2497704315886135, nan], 'false': [0.0, nan], 'false,true': [0.0, nan]}
{'': [0.18688845112756552, nan], 'true': [0.18688845112756552, nan]}
{'': [0.1854582741102546, nan], 'true': [nan, 0.1854582741102547]}
{'': [-1.3877787807814457e-17, 0.23109060803776504], 'false': [nan, 0.23109060803776504], 'false,false': [0.23109060803776504, nan], 'true': [-1.3877787807814457e-17, nan], 'true,true': [-1.3877787807814457e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;advisedby(A, B) :- inphase(C, D).;true;true
6;;advisedby(A, B) :- sameperson(A, C), inphase(C, D).;true;true
9;;advisedby(A, B) :- sameperson(C, A), hasposition(C, D).;true;true


Refining candidate
***************************
Model training time 6.932
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, A, F), publication(G, B) )
%   | | then if ( ta(E, H, I), publication(J, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.5160747845880608;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3379307178660584;  // std dev = 1.289, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.6338029806322152;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.006818547905153238;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, A) )
%   | | then return 0.2622806884467217;  // std dev = 1.017, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.4906685653335612;  // std dev = 1.257, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.65951936663923;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.2993557803989145;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5392756938252673;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(F, B) )
%   | | then return 0.2389183609594121;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3285523378904273;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( projectmember(D, B) )
%   | then return 0.525679769207243;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, C, F), ta(E, A, G) )
%   | | then return 0.38458829926175947;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13860540761785112;  // std dev = 0.446, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( professor(B), ta(H, A, I) )
%   | then return -0.07409298008248957;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then return -0.005452271822565659;  // std dev = 0.478, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.2336128574454698;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09269127618926101;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( inphase(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.3280526248681377;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16303770930838468;  // std dev = 1.456, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0.4308941832574886;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08588965219536168;  // std dev = 0.009, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameperson(A, C), inphase(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, F), ta(G, F, H) )
%   | | then return -0.11142397013995087;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.09182520400873415;  // std dev = 1.160, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.34961482984209136;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(L, A, M) )
%   | | then if ( ta(N, B, P) )
%   | | | then return -0.07872561457707052;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.21290551397252283;  // std dev = 0.465, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return 0.1114320592272195;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07872561457707053;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08091373071684035;  // std dev = 0.013, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), ta(D, A, E) )
%   then if ( ta(D, F, G), publication(C, F) )
%   | then return -0.07264955249125205;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(H, I, E), publication(J, I) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.08858912541991595;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05015298635989951;  // std dev = 0.302, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.35150743024204156;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(L, A, M), professor(B) )
%   | then return -0.5474834889383061;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( publication(N, B), publication(N, A) )
%   | | then return 0.047899757192452756;  // std dev = 0.353, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(P, B) )
%   | | | then return 0.26528113737647463;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12111299864381567;  // std dev = 1.016, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return -0.17888410141603553;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.016340721705643924;  // std dev = 0.774, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.28068636496827787;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.312414552925394;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06874727337516008;  // std dev = 0.038, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameperson(C, A), hasposition(C, D) )
%   then return -0.06585834513751579;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( publication(E, A), publication(E, B) )
%   | then return 0.23248099314652262;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G), professor(B) )
%   | | then if ( ta(H, I, G), publication(J, I) )
%   | | | then return 0.24810928624521378;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08712637323486566;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( hasposition(B, K), student(A) )
%   | | | then return -0.15799871393340947;  // std dev = 1.026, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.062006455795864196;  // std dev = 0.639, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.027', 'seconds']
Refined model CLL: -0.258038


******************************************
Best model found
******************************************
Results 

CLL : -0.231226 

AUC ROC : 0.942181 

AUC PR : 0.30473 

Precision : 0.143802 

Recall : 0.896907 

F1 : 0.247863 

Total Learning Time : 6.932 

Total Inference Time : 0.9361753463745117 

Total revision time: 9.370076877593995
Best scored revision CLL: -0.258038


Results 

CLL : -0.231226 

AUC ROC : 0.942181 

AUC PR : 0.30473 

Precision : 0.143802 

Recall : 0.896907 

F1 : 0.247863 

Total Learning Time : 9.458773118972779 

Total Inference Time : 0.9361753463745117 

