Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using majority_vote 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.262
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22836170105695927;  // std dev = 7.402, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14456379791871932;  // std dev = 5.484, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.18936157314391727;  // std dev = 5.240, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1308979111129238;  // std dev = 4.850, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.1318800705973463;  // std dev = 5.905, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16980619078778122;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.11872900940797285;  // std dev = 6.656, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09918865285627632;  // std dev = 7.573, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07985847399344315;  // std dev = 7.574, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7211176538186691;  // std dev = 0.004, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2790161680554921;  // std dev = 0.005, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05487500608867438;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.04722327540823148;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03477837940135023;  // std dev = 3.784, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.04059912202530789;  // std dev = 5.924, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03992729509261826;  // std dev = 6.962, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004647246823729718;  // std dev = 7.114, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.511', 'seconds']
Parameter learned model CLL:-0.331061 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.402, 148, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.484, 95, 44], 'false,false,false,false': [5.24, 76, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.85, 72, 35], 'false,false,false,false': [5.905, 106, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.508, 32, 20], 'false,false,false,false': [6.656, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.573, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.574, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 35], 'true,false': [0.005, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.784, 70, 35], 'false,false,false,false': [5.924, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.962, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.114, 195, 87]}]
{'': [nan, 0.2331552738795845], 'false': [nan, 0.23315527387958426], 'false,false': [nan, 0.2331552738795845], 'false,false,false': [nan, 0.23315527387958426]}
{'': [nan, 0.2234991887506764], 'false': [nan, 0.2234991887506752], 'false,false': [nan, 0.2234991887506764], 'false,false,false': [0.21634490968376296, 0.23077466280629816]}
{'': [nan, 0.22037456941826705], 'false': [nan, 0.22037456941826705], 'false,false': [nan, 0.22037456941826702], 'false,false,false': [0.2198644694653091, 0.22071962735972211]}
{'': [nan, 0.22687945548692712], 'false': [nan, 0.22687945548692712], 'false,false': [nan, 0.22687945548692648], 'false,false,false': [0.23668639053254428, 0.22376125006887504]}
{'': [nan, 0.22492065638268088], 'false': [nan, 0.22492065638268088], 'false,false': [nan, 0.22492065638268113], 'false,false,false': [nan, 0.22492065638268113]}
{'': [nan, 0.22405870351561333], 'false': [nan, 0.22405870351561333], 'false,false': [nan, 0.22405870351561394], 'false,false,false': [nan, 0.2240587035156129]}
{'': [0.2306923420289475, 0.21938916207639997], 'true': [3.9039403775729756e-07, 3.483484788653131e-07], 'false': [nan, 0.21938916207639997], 'false,false': [nan, 0.21938916207639997], 'false,false,false': [0.21913805697589436, 0.21957815035154107], 'true,true': [nan, 3.9039403775729756e-07], 'true,true,false': [nan, 3.9039403775729756e-07]}
{'': [nan, 0.18647175245080558], 'false': [nan, 0.18647175245080558], 'false,false': [nan, 0.18647175245080616], 'false,false,false': [0.13634532023289847, 0.2193537990289292]}
{'': [nan, 0.18787432668974052], 'false': [nan, 0.18787432668974052], 'false,false': [nan, 0.18787432668974052], 'false,false,false': [nan, 0.18787432668974052]}
{'': [nan, 0.17944213360957256], 'false': [nan, 0.17944213360957256], 'false,false': [nan, 0.17944213360957248], 'false,false,false': [nan, 0.17944213360957248]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.837
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.16912454485560918;  // std dev = 5.928, 164.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.820430453655807;  // std dev = 0.138, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.16441102573379557;  // std dev = 0.005, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B), interaction(G, H) )
%   | | then return 0.6828754847875738;  // std dev = 0.276, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.14193883601735574;  // std dev = 0.114, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.15168331765348178;  // std dev = 1.983, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8167772932971328;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1641207946471091;  // std dev = 0.003, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.3817440775162004;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.23796013935773605;  // std dev = 4.295, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | then return 0.6327958646835026;  // std dev = 0.076, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1268410792534852;  // std dev = 0.132, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0.16297292285017959;  // std dev = 0.443, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6563075528106657;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14299087989514384;  // std dev = 0.003, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.05856466529643861;  // std dev = 5.268, 154.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=40 */
%   | | | else return 0.2010572488853808;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.07766706410768724;  // std dev = 1.017, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.30105724888538077;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(C, G) )
%   | | then return 0.09233797679784994;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5262481569007837;  // std dev = 0.347, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return -0.028690719716619264;  // std dev = 0.284, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.19172912028370168;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.012933148140422032;  // std dev = 1.806, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | then return 0.45375754829586934;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09879987745032649;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.10247064679188671;  // std dev = 5.612, 177.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=57 */
%   | | | else return -0.08845182378041443;  // std dev = 0.941, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3405183607966301;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.04400329014921405;  // std dev = 0.327, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.4088250325814423;  // std dev = 0.222, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.06781485375135501;  // std dev = 2.786, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.1915843758059488;  // std dev = 2.959, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, H) )
%   | | | then return 0.10589070466169721;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.027249587095512912;  // std dev = 1.097, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.2492165694969554;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09635637699028776;  // std dev = 3.666, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.2690921584093748;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.43349519146899224;  // std dev = 0.295, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5459008794803456;  // std dev = 0.326, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7214156395594592;  // std dev = 0.209, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2046312551935326;  // std dev = 0.054, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( enzyme(A, J), complex(H, K) )
%   | | | then return -0.012517905961671585;  // std dev = 1.366, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.05221689036145404;  // std dev = 2.891, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.25673246631422936;  // std dev = 1.617, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.09053484344566892;  // std dev = 4.148, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.022267409756705017;  // std dev = 0.301, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.11118992531777216;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.38184642981662625;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1059711157749682;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.003916044243225489;  // std dev = 1.798, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.35922030760542184;  // std dev = 0.289, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08070543882590629;  // std dev = 4.441, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17310480470223522;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.40181720254061465;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.10852860791403805;  // std dev = 0.277, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( enzyme(D, H) )
%   | | | then return -0.06187209645293919;  // std dev = 0.802, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08851956659042798;  // std dev = 2.183, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35970441900351663;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05624970649131565;  // std dev = 3.183, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( complex(A, L), enzyme(J, M) )
%   | | | then return -0.05785233636159879;  // std dev = 0.694, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.013709241991179021;  // std dev = 1.503, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.3179802105527336;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06275209244567284;  // std dev = 3.597, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.290483167199974;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return -0.009787156497134032;  // std dev = 0.247, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.16523672992673333;  // std dev = 0.410, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.2791014586214856;  // std dev = 0.235, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( enzyme(G, I) )
%   | | | then return -0.08653708751291005;  // std dev = 1.983, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.021279359187927352;  // std dev = 4.618, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.04459740703983991;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.10653358494729312;  // std dev = 1.446, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.007359255531722009;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(D, A), phenotype(D, F) )
%   | | then return -0.03485047378522193;  // std dev = 0.295, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | else return 0.04494238938158968;  // std dev = 0.417, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | else if ( phenotype(A, G), complex(D, H) )
%   | | then return 0.015259837632063601;  // std dev = 0.342, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(D, A), location(C, I) )
%   | | | then return 0.4155622152772828;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13378681513568721;  // std dev = 2.004, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then return 0.2856824055449881;  // std dev = 0.531, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, L) )
%   | | then return -0.13427470722308518;  // std dev = 0.331, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.047980351130058455;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06254406363165048;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.969', 'seconds']
Refined model CLL: -0.280915


******************************************
Best model found
******************************************
Results 

CLL : -0.300713 

AUC ROC : 0.877981 

AUC PR : 0.172322 

Precision : 0.164908 

Recall : 0.443262 

F1 : 0.240385 

Total Learning Time : 12.837 

Total Inference Time : 4.766932964324951 

Total revision time: 20.623362087249756
Best scored revision CLL: -0.280915


Results 

CLL : -0.300713 

AUC ROC : 0.877981 

AUC PR : 0.172322 

Precision : 0.164908 

Recall : 0.443262 

F1 : 0.240385 

Total Learning Time : 20.64323451423645 

Total Inference Time : 4.766932964324951 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.436
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20251979602666517;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14681742934060157;  // std dev = 5.968, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
%   | | | else return 0.16287610527188906;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12959826546121217;  // std dev = 5.280, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.15468549624015857;  // std dev = 6.418, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16598213521149174;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | | else return 0.11429188926366776;  // std dev = 7.087, 227.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08392991917146854;  // std dev = 8.404, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07560005675421458;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7322209282440083;  // std dev = 0.020, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2679762055054399;  // std dev = 0.029, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.034093533838387965;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.047216209925072285;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06381050416041271;  // std dev = 4.035, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.05862761931367234;  // std dev = 6.478, 189.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027712165569327558;  // std dev = 7.747, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02576780524298675;  // std dev = 7.706, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.260', 'seconds']
Parameter learned model CLL:-0.327019 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.968, 113, 52], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.28, 87, 41], 'false,false,false,false': [6.418, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.252, 48, 29], 'false,false,false,false': [7.087, 152, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.404, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 41], 'true,false': [0.029, 87, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.016, 54, 23], 'false,false,false,false': [5.235, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.035, 73, 41], 'false,false,false,false': [6.478, 126, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.747, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.706, 219, 104]}]
{'': [nan, 0.22577957107144642], 'false': [nan, 0.22577957107144478], 'false,false': [nan, 0.22577957107144642], 'false,false,false': [nan, 0.22577957107144478]}
{'': [nan, 0.21866440337949605], 'false': [nan, 0.2186644033795003], 'false,false': [nan, 0.21866440337949605], 'false,false,false': [0.2158310376492215, 0.22151000040569796]}
{'': [nan, 0.22294673137878093], 'false': [nan, 0.22294673137878093], 'false,false': [nan, 0.2229467313787825], 'false,false,false': [0.21777013207001739, 0.2263275480554282]}
{'': [nan, 0.22519882997420718], 'false': [nan, 0.22519882997420718], 'false,false': [nan, 0.2251988299742064], 'false,false,false': [0.2347782088041834, 0.22127267768972267]}
{'': [nan, 0.2179843431468247], 'false': [nan, 0.2179843431468247], 'false,false': [nan, 0.2179843431468246], 'false,false,false': [nan, 0.2179843431468246]}
{'': [nan, 0.22041173443128628], 'false': [nan, 0.22041173443128628], 'false,false': [nan, 0.2204117344312849], 'false,false,false': [nan, 0.22041173443128592]}
{'': [0.21780786905084312, 0.21342990088884306], 'true': [1.0034528389394797e-05, 9.426592647533337e-06], 'false': [nan, 0.21342990088884306], 'false,false': [nan, 0.21342990088884306], 'false,false,false': [0.2094788328554563, 0.21576043152086238], 'true,true': [nan, 1.0034528389394797e-05], 'true,true,false': [nan, 1.0034528389394797e-05]}
{'': [nan, 0.19223291958531785], 'false': [nan, 0.19223291958531785], 'false,false': [nan, 0.192232919585318], 'false,false,false': [0.14278915359474784, 0.22204603690997257]}
{'': [nan, 0.18468495819126562], 'false': [nan, 0.18468495819126543], 'false,false': [nan, 0.18468495819126543], 'false,false,false': [nan, 0.18468495819126543]}
{'': [nan, 0.18384302190648574], 'false': [nan, 0.18384302190648574], 'false,false': [nan, 0.18384302190648544], 'false,false,false': [nan, 0.18384302190648544]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.373
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.10376297018723167;  // std dev = 3.250, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1914822684328443;  // std dev = 4.546, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7086546197814566;  // std dev = 0.218, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), phenotype(E, G) )
%   | | | then return 0.72963631398112;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.18872674900559705;  // std dev = 1.594, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return 0.054632894467686814;  // std dev = 2.910, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.21156416396545916;  // std dev = 4.083, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.11255389319235971;  // std dev = 3.519, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3467190613477928;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4737588171569444;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5621538551635404;  // std dev = 0.217, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.567321084029434;  // std dev = 0.975, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.23184731515296667;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return -0.08068814447873471;  // std dev = 2.058, 98.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=5 */
%   | | | else return 0.10749805785374286;  // std dev = 5.598, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7684262617999303;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.19842766310582882;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( location(A, I) )
%   | | then return 0.7412783807289008;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19753583152509133;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | then return 0.47583624332560764;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.07882824961250698;  // std dev = 0.394, 267.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=81 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( complex(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.027834447163450717;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08551919597872966;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J), interaction(F, J) )
%   | | | then return 0.09685073585927788;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1824422367511532;  // std dev = 1.013, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( location(A, K) )
%   | | then return -0.17482322585078225;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.08140657607863304;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.018021467871607747;  // std dev = 1.416, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return -0.031199931580818692;  // std dev = 0.266, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else return 0.04092551151873366;  // std dev = 0.371, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(G, F) )
%   | | then return 0.43066044942214515;  // std dev = 0.206, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( complex(A, H), complex(F, H) )
%   | | | then return -0.1226611625244692;  // std dev = 0.475, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.12621089776213829;  // std dev = 5.326, 145.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=50 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6229204496774643;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21683276108710606;  // std dev = 0.177, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.06460956244897496;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.027763790908745922;  // std dev = 1.601, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.31177690937712077;  // std dev = 0.200, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( complex(A, E), complex(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16844309853541883;  // std dev = 0.447, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.038013266222084195;  // std dev = 1.591, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( enzyme(A, F), enzyme(D, F) )
%   | | | then return -0.1380277395125424;  // std dev = 1.288, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.05639674952595599;  // std dev = 5.983, 210.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=67 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return 0.040934380688075915;  // std dev = 0.518, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.4194267675436464;  // std dev = 0.686, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.30757673472489416;  // std dev = 1.013, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1614257124265016;  // std dev = 1.443, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.04205704844047939;  // std dev = 0.300, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return 0.3861689379573352;  // std dev = 0.339, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.003932239738964269;  // std dev = 0.968, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return -0.02965136223090072;  // std dev = 3.168, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | | else return 0.10279938446998368;  // std dev = 4.228, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.07362498454611535;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.22280203177395044;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.08457269676598289;  // std dev = 1.378, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.08344764103103446;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3245502271580078;  // std dev = 0.197, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | | then return 0.4228686121338775;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16059348672446017;  // std dev = 1.514, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3790441682081583;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.06414555067855043;  // std dev = 1.191, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( enzyme(I, K), complex(I, L) )
%   | | | then return 0.16977182741822797;  // std dev = 2.434, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.03747842607235621;  // std dev = 3.847, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return -0.06480162890491681;  // std dev = 1.664, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.024860120543091262;  // std dev = 3.626, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20830796465546544;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3071921110548394;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.2957639369408234;  // std dev = 0.169, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5371605063418186;  // std dev = 0.421, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.18100153842357905;  // std dev = 0.074, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return -0.016361382196074446;  // std dev = 3.705, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | | | else return 0.05600017269099105;  // std dev = 3.895, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.03611596236290744;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3480464432818346;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(A, E) )
%   | then if ( location(C, E), recursion_proteinclass(D, B) )
%   | | then return 0.20232553067093034;  // std dev = 0.186, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else if ( interaction(D, A), location(D, E) )
%   | | | then return -0.0661872726511141;  // std dev = 3.058, 118.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=17 */
%   | | | else return 0.04954900061800134;  // std dev = 4.506, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
%   | else if ( phenotype(D, F) )
%   | | then return 0.3052393313877757;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.06429520368130383;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( phenotype(A, G) )
%   | then return 0.038379829860684535;  // std dev = 0.277, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.10180810794386841;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2883725214198544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.08917799307248479;  // std dev = 0.395, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.808', 'seconds']
Refined model CLL: -0.267651


******************************************
Best model found
******************************************
Results 

CLL : -0.286055 

AUC ROC : 0.880681 

AUC PR : 0.238082 

Precision : 0.204268 

Recall : 0.50566 

F1 : 0.290988 

Total Learning Time : 16.373 

Total Inference Time : 11.754142045974731 

Total revision time: 31.66257928276062
Best scored revision CLL: -0.267651


Results 

CLL : -0.286055 

AUC ROC : 0.880681 

AUC PR : 0.238082 

Precision : 0.204268 

Recall : 0.50566 

F1 : 0.290988 

Total Learning Time : 31.682451709747316 

Total Inference Time : 11.754142045974731 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.185
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18789803904216476;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16703634490717903;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
%   | | | else return 0.15153246893818678;  // std dev = 5.289, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16791032828091704;  // std dev = 5.316, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.14603485115802783;  // std dev = 5.647, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.06457385005653007;  // std dev = 4.319, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | | else return 0.10985867173144359;  // std dev = 6.681, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11427582729310783;  // std dev = 7.756, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07355027009763122;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7335134566756841;  // std dev = 0.019, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2664335568832528;  // std dev = 0.026, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1159385197579112;  // std dev = 3.922, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.03699011759992944;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05526421097633355;  // std dev = 4.218, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | | | else return 0.03946593594981789;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04815784485548423;  // std dev = 7.022, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019619598534674498;  // std dev = 7.096, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.494', 'seconds']
Parameter learned model CLL:-0.326115 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.831, 102, 51], 'false,false,false,false': [5.289, 88, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.316, 79, 44], 'false,false,false,false': [5.647, 95, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.319, 66, 26], 'false,false,false,false': [6.681, 138, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.756, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 44], 'true,false': [0.026, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.922, 40, 25], 'false,false,false,false': [4.005, 53, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.218, 83, 44], 'false,false,false,false': [5.704, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.022, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.096, 195, 92]}]
{'': [nan, 0.22101463239167143], 'false': [nan, 0.2210146323916711], 'false,false': [nan, 0.22101463239167143], 'false,false,false': [nan, 0.2210146323916711]}
{'': [nan, 0.21980785674764586], 'false': [nan, 0.21980785674764944], 'false,false': [nan, 0.21980785674764586], 'false,false,false': [0.22222222222222385, 0.21681389339582874]}
{'': [nan, 0.2262532557429436], 'false': [nan, 0.2262532557429436], 'false,false': [nan, 0.2262532557429427], 'false,false,false': [0.22977704222283485, 0.2230010283772492]}
{'': [nan, 0.21426971575169362], 'false': [nan, 0.21426971575169362], 'false,false': [nan, 0.21426971575169268], 'false,false,false': [0.2027410207939496, 0.2188315467098607]}
{'': [nan, 0.2261259162660346], 'false': [nan, 0.2261259162660346], 'false,false': [nan, 0.2261259162660334], 'false,false,false': [nan, 0.2261259162660334]}
{'': [nan, 0.21978725851185826], 'false': [nan, 0.21978725851185826], 'false,false': [nan, 0.2197872585118574], 'false,false,false': [nan, 0.21978725851185782]}
{'': [0.22473046591869655, 0.22441460885814318], 'true': [8.212121589210788e-06, 8.15316276789618e-06], 'false': [nan, 0.22441460885814318], 'false,false': [nan, 0.22441460885814318], 'false,false,false': [0.2366863905325446, 0.21104570637119147], 'true,true': [nan, 8.212121589210788e-06], 'true,true,false': [nan, 8.212121589210788e-06]}
{'': [nan, 0.18238870387808967], 'false': [nan, 0.18238870387808967], 'false,false': [nan, 0.18238870387809059], 'false,false,false': [0.14008976102364232, 0.21832731973828634]}
{'': [nan, 0.18539458725729324], 'false': [nan, 0.18539458725729488], 'false,false': [nan, 0.18539458725729488], 'false,false,false': [nan, 0.18539458725729488]}
{'': [nan, 0.17545995981392135], 'false': [nan, 0.17545995981392135], 'false,false': [nan, 0.1754599598139207], 'false,false,false': [nan, 0.1754599598139207]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.623
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.0826387310178797;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.22533643509951157;  // std dev = 5.454, 128.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), enzyme(F, E) )
%   | | then return -0.1432891202995822;  // std dev = 0.054, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.10965616246994687;  // std dev = 2.340, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.16381609224570623;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7640012174362878;  // std dev = 0.238, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1437082065652288;  // std dev = 0.101, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14691928898510287;  // std dev = 5.682, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.03903956764293702;  // std dev = 0.348, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | else if ( interaction(F, C), phenotype(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.11406760170159978;  // std dev = 2.768, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.006549604492549521;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.12382963223336163;  // std dev = 1.381, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2076085911108527;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( phenotype(A, J), enzyme(A, K) )
%   | then return 0.0834878715354977;  // std dev = 0.334, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.39809478279042515;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14435257257939074;  // std dev = 4.535, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5270545817656048;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15344205244147693;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.016806973573498748;  // std dev = 2.414, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( enzyme(A, G), enzyme(D, G) )
%   | | | then return -0.15936534069019076;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.11503041575555978;  // std dev = 5.055, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J), interaction(H, K) )
%   | | | then return 0.14829425880748154;  // std dev = 1.647, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.3260428176731273;  // std dev = 2.052, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.018320683905886204;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.2830265662588274;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.45834378624324956;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.020151861731806952;  // std dev = 0.320, 94.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( complex(A, H), enzyme(A, G) )
%   | | then return 0.18981149322132396;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(F, I), phenotype(A, I) )
%   | | | then return 0.0354947349388771;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05709060476654296;  // std dev = 1.240, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), complex(A, M) )
%   | | | then return 0.15867298175363173;  // std dev = 1.416, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.05446942321435864;  // std dev = 2.316, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.10436228614885358;  // std dev = 1.987, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.17273248496702523;  // std dev = 4.254, 77.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.271135902511417;  // std dev = 0.243, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.4686618261239315;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02408333857115769;  // std dev = 1.604, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( complex(D, G), phenotype(A, H) )
%   | | | then return 0.3852891305691753;  // std dev = 0.911, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.09349722979274362;  // std dev = 1.735, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.015324152651480669;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.26450392708465403;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.05412223923127173;  // std dev = 3.245, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return -0.006896608455885131;  // std dev = 4.906, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.28471634253033445;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3126430390729261;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6107315058280776;  // std dev = 0.678, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.19555180155777296;  // std dev = 0.060, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.6737582412933908;  // std dev = 0.864, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.10226627731364335;  // std dev = 2.668, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return -0.26052346894349127;  // std dev = 0.375, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, A) )
%   | | then return -0.05489232113913073;  // std dev = 0.275, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08962166715228759;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.19187384259028376;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(C, D), location(A, D) )
%   | | then return -0.07406596003000332;  // std dev = 0.155, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( interaction(C, C) )
%   | | | then return -0.12632279250951062;  // std dev = 0.376, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11071788257167998;  // std dev = 0.366, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.2758117978024414;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.45121132054674695;  // std dev = 0.762, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.18776348956759326;  // std dev = 0.419, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.1321319919908139;  // std dev = 2.243, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.046532598407980845;  // std dev = 3.832, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17348644272243602;  // std dev = 0.090, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E), recursion_proteinclass(D, B) )
%   | | then return 0.21893268538046806;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, F), interaction(D, G) )
%   | | | then return -0.08494314938255582;  // std dev = 1.749, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return -0.03432332263293409;  // std dev = 2.789, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5017020299947521;  // std dev = 0.201, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19983234505307193;  // std dev = 0.130, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.017175494990371937;  // std dev = 1.680, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.05776979079867175;  // std dev = 3.654, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17173179106816813;  // std dev = 0.187, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), phenotype(D, G) )
%   | | then if ( interaction(A, F), enzyme(F, H) )
%   | | | then return -0.08504040268643519;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.032046887325129794;  // std dev = 1.619, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.07095979126107989;  // std dev = 1.393, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return -0.008420106799018308;  // std dev = 2.312, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K), complex(L, M) )
%   | | | then return -0.033313872946726;  // std dev = 2.480, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.05818903842593373;  // std dev = 1.931, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return -0.011891679745160554;  // std dev = 1.031, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11640287860326556;  // std dev = 2.430, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.712', 'seconds']
Refined model CLL: -0.226547


******************************************
Best model found
******************************************
Results 

CLL : -0.217173 

AUC ROC : 0.986964 

AUC PR : 0.301862 

Precision : 0.309623 

Recall : 0.534296 

F1 : 0.392053 

Total Learning Time : 7.623 

Total Inference Time : 3.9304404258728027 

Total revision time: 14.663823993682861
Best scored revision CLL: -0.226547


Results 

CLL : -0.217173 

AUC ROC : 0.986964 

AUC PR : 0.301862 

Precision : 0.309623 

Recall : 0.534296 

F1 : 0.392053 

Total Learning Time : 14.683696420669555 

Total Inference Time : 3.9304404258728027 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.302
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18639320990867306;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16095556494821658;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.17734588322532913;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14295600345866516;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.1408945506192886;  // std dev = 6.226, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12674786525346773;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.13361776821482332;  // std dev = 6.613, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08110630837863127;  // std dev = 7.660, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11309599747982937;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6927636437916734;  // std dev = 0.986, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2728332762214773;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.027888625196893706;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.07185237194121269;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.10012276726366834;  // std dev = 3.237, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
%   | | | else return 0.02704598488278527;  // std dev = 6.327, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04633235893016709;  // std dev = 7.039, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019730822989685905;  // std dev = 7.118, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.647', 'seconds']
Parameter learned model CLL:-0.343227 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.916, 107, 52], 'false,false,false,false': [4.725, 65, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.32, 56, 28], 'false,false,false,false': [6.226, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [6.613, 126, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.66, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.393, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.986, 1, 28], 'true,false': [0.017, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 77, 33], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.237, 41, 28], 'false,false,false,false': [6.327, 129, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.039, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.118, 181, 86]}]
{'': [nan, 0.22049997086416953], 'false': [nan, 0.22049997086416936], 'false,false': [nan, 0.22049997086416953], 'false,false,false': [nan, 0.22049997086416936]}
{'': [nan, 0.2222222222222231], 'false': [nan, 0.22222222222222335], 'false,false': [nan, 0.2222222222222231], 'false,false,false': [0.22008623076618916, 0.2254871951841653]}
{'': [nan, 0.2217190690472442], 'false': [nan, 0.2217190690472442], 'false,false': [nan, 0.22171906904724398], 'false,false,false': [0.22220350288974686, 0.22148516255814776]}
{'': [nan, 0.22603602759409389], 'false': [nan, 0.22603602759409389], 'false,false': [nan, 0.2260360275940942], 'false,false,false': [0.22417091836734646, 0.22656658491920525]}
{'': [nan, 0.21653156780078925], 'false': [nan, 0.21653156780078925], 'false,false': [nan, 0.2165315678007894], 'false,false,false': [nan, 0.2165315678007894]}
{'': [nan, 0.2315824519096629], 'false': [nan, 0.2315824519096629], 'false,false': [nan, 0.23158245190966353], 'false,false,false': [nan, 0.23158245190966392]}
{'': [0.21836738103300135, 0.21705249221800063], 'true': [0.03350733595040502, 4.93292800454258e-06], 'false': [nan, 0.21705249221800063], 'false,false': [nan, 0.21705249221800063], 'false,false,false': [0.20999999999999905, 0.22665895061728358], 'true,true': [nan, 0.03350733595040502], 'true,true,false': [nan, 0.03350733595040502]}
{'': [nan, 0.19836480913153223], 'false': [nan, 0.19836480913153223], 'false,false': [nan, 0.19836480913153248], 'false,false,false': [0.15183125128996358, 0.21409559032046463]}
{'': [nan, 0.19737424927426092], 'false': [nan, 0.197374249274261], 'false,false': [nan, 0.197374249274261], 'false,false,false': [nan, 0.197374249274261]}
{'': [nan, 0.18976344867693892], 'false': [nan, 0.18976344867693892], 'false,false': [nan, 0.18976344867693845], 'false,false,false': [nan, 0.18976344867693845]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.895
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(C, E), recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(C, G), interaction(G, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, H), phenotype(H, I) )
%   | | | then return 0.06968739663797391;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.3914822684328456;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then return 0.13212153783923733;  // std dev = 0.446, 146.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=40 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.2672398441904214;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.7657049099386324;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.02836358219558382;  // std dev = 0.388, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | else if ( interaction(H, C), interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.0912927600707589;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.3412927600707588;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.5093193669394853;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2506584488438725;  // std dev = 3.680, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | then return 0.5944734122109545;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, M), location(A, N) )
%   | | then return 0.053314230943765396;  // std dev = 0.415, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else return 0.22240979907880262;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7583904470461436;  // std dev = 0.097, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.18264873403610923;  // std dev = 0.335, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, E), complex(A, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.39197986409371594;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.23377251864625642;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, I), interaction(I, E) )
%   | | | then return 0.2666493966505014;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12377760542366018;  // std dev = 1.584, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8068609404312286;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19313905956877137;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.20372203673893555;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.47309690696765017;  // std dev = 0.108, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return -0.00929215701174442;  // std dev = 0.425, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14371926763184148;  // std dev = 0.068, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6693847215156804;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16184198266071453;  // std dev = 0.069, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(I, K), phenotype(A, L) )
%   | | | then return 0.16147943788440308;  // std dev = 1.958, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.4447779523044397;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.3393064731325314;  // std dev = 1.090, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.06054299176560447;  // std dev = 4.809, 164.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.2551842141356814;  // std dev = 0.219, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5615381791037624;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12759124680546305;  // std dev = 0.067, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, F), location(E, F) )
%   | | | then return 0.10836320238132037;  // std dev = 2.142, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.08878432614892434;  // std dev = 1.146, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return -0.0083263666846956;  // std dev = 1.854, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.07434273908981798;  // std dev = 3.175, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.02840749931971317;  // std dev = 1.475, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.16049262915085116;  // std dev = 2.849, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, A) )
%   | then return 0.021032205037731764;  // std dev = 0.204, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.37440499509294023;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.0959976597580795;  // std dev = 0.371, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(F, H), enzyme(H, I) )
%   | | then return 0.1623849775569094;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.42253402906665366;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return -0.02049441677031774;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35046885411579465;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.035973076213260236;  // std dev = 2.360, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.05497183479576484;  // std dev = 2.083, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48367063812029454;  // std dev = 0.199, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.19972602575527118;  // std dev = 0.106, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then return 0.12208714325547117;  // std dev = 0.318, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3117106681626806;  // std dev = 0.205, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.013789141424935706;  // std dev = 2.995, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.09730099904658455;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09633117546240375;  // std dev = 1.646, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.06552266022597718;  // std dev = 1.033, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0387439806062382;  // std dev = 2.531, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.4518008594913255;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5677177159311351;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.2346286984510132;  // std dev = 0.064, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.21286314106774185;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0873177830459322;  // std dev = 0.125, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.1597914025125492;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3847751971853259;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.35343338764086923;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.054063606681392685;  // std dev = 4.210, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.1974895458924914;  // std dev = 0.089, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return -0.10535054428070494;  // std dev = 0.174, 82.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=9 */
%   | | else if ( complex(C, H), interaction(I, D) )
%   | | | then return -0.07931385388948382;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.020696499592059523;  // std dev = 2.069, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), phenotype(L, M) )
%   | | | then return 0.14818371378774592;  // std dev = 2.134, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.45422373818556383;  // std dev = 1.168, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else return -0.2000326509860533;  // std dev = 0.355, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, N) )
%   | | then return -0.15704645789443689;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.05238438514372986;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.12090254430336998;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.28020459644406487;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08751950160840401;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17875942386403204;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14488312935624542;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 4.863292717430082E-5;  // std dev = 1.957, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.15533785572524614;  // std dev = 1.226, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.054868085417111884;  // std dev = 1.763, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.003212804803388912;  // std dev = 3.444, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '50.180', 'seconds']
Refined model CLL: -0.205901


******************************************
Best model found
******************************************
Results 

CLL : -0.217873 

AUC ROC : 0.986092 

AUC PR : 0.30949 

Precision : 0.238889 

Recall : 0.759717 

F1 : 0.363483 

Total Learning Time : 7.895 

Total Inference Time : 4.159150123596191 

Total revision time: 15.062230798721313
Best scored revision CLL: -0.205901


Results 

CLL : -0.217873 

AUC ROC : 0.986092 

AUC PR : 0.30949 

Precision : 0.238889 

Recall : 0.759717 

F1 : 0.363483 

Total Learning Time : 15.082103225708007 

Total Inference Time : 4.159150123596191 

Run: 2
Starting experiments for fasttext using majority_vote 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.206
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21325097591583891;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17124349311505616;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.158402496606387;  // std dev = 5.375, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15547735090174847;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.12658862582047206;  // std dev = 5.943, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09649127624365163;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.12957080000219512;  // std dev = 6.623, 194.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12882105510763903;  // std dev = 7.419, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07091137892828667;  // std dev = 7.615, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7221413856979483;  // std dev = 0.012, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.277575808120057;  // std dev = 0.017, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11014122317097931;  // std dev = 3.835, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.026683763469198797;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0031139744302176443;  // std dev = 3.900, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | | | else return 0.04394744581306361;  // std dev = 5.894, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03328259403913477;  // std dev = 7.003, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015856373801848112;  // std dev = 7.089, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.656', 'seconds']
Parameter learned model CLL:-0.333498 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.375, 88, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.77, 65, 35], 'false,false,false,false': [5.943, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.695, 43, 20], 'false,false,false,false': [6.623, 127, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.419, 150, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 35], 'true,false': [0.017, 78, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.835, 38, 24], 'false,false,false,false': [4.424, 65, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.9, 85, 35], 'false,false,false,false': [5.894, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.003, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.089, 181, 87]}]
{'': [nan, 0.22900458142440744], 'false': [nan, 0.2290045814244073], 'false,false': [nan, 0.22900458142440744], 'false,false,false': [nan, 0.2290045814244073]}
{'': [nan, 0.22264792899408198], 'false': [nan, 0.22264792899408162], 'false,false': [nan, 0.22264792899408198], 'false,false,false': [0.22474610900787165, 0.2204999708641689]}
{'': [nan, 0.2218459087697124], 'false': [nan, 0.2218459087697124], 'false,false': [nan, 0.22184590876971197], 'false,false,false': [0.22751304902932604, 0.21802914028704312]}
{'': [nan, 0.22401094856486434], 'false': [nan, 0.22401094856486434], 'false,false': [nan, 0.22401094856486406], 'false,false,false': [0.21667926429831125, 0.2261236148705435]}
{'': [nan, 0.23226400314977622], 'false': [nan, 0.23226400314977622], 'false,false': [nan, 0.23226400314977677], 'false,false,false': [nan, 0.23226400314977677]}
{'': [nan, 0.22214994800913], 'false': [nan, 0.22214994800913], 'false,false': [nan, 0.22214994800913093], 'false,false,false': [nan, 0.22214994800912954]}
{'': [0.2136820094707902, 0.2228301508544811], 'false': [nan, 0.2228301508544811], 'false,false': [nan, 0.2228301508544811], 'false,false,false': [0.23725286160249798, 0.21042895132385225], 'true': [4.04371980979233e-06, 3.7995723607181367e-06], 'true,true': [nan, 4.04371980979233e-06], 'true,true,false': [nan, 4.04371980979233e-06]}
{'': [nan, 0.1813813074245144], 'false': [nan, 0.1813813074245144], 'false,false': [nan, 0.1813813074245147], 'false,false,false': [0.1267781009858399, 0.22265882940051007]}
{'': [nan, 0.18575185530299507], 'false': [nan, 0.18575185530299498], 'false,false': [nan, 0.18575185530299498], 'false,false,false': [nan, 0.18575185530299498]}
{'': [nan, 0.1875289509992155], 'false': [nan, 0.1875289509992155], 'false,false': [nan, 0.1875289509992147], 'false,false,false': [nan, 0.1875289509992147]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.743
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.10814893509951236;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.1914822684328443;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3694710224608748;  // std dev = 0.959, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7840223484359659;  // std dev = 0.059, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.14419419359721264;  // std dev = 0.166, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.7763394517212515;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, E) )
%   | | | then return -0.15364155455738468;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.11726834327308186;  // std dev = 2.175, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5976090835911625;  // std dev = 0.799, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13747980798273263;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.22842982002615697;  // std dev = 4.389, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.3412666651079242;  // std dev = 0.808, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, C), enzyme(A, F) )
%   | | then return 0.6393121759474782;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5997694238832667;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.13142871204917894;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.582487956580845;  // std dev = 1.125, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.13197374179776858;  // std dev = 0.153, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.26954174741020254;  // std dev = 2.865, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.14857371278353776;  // std dev = 4.000, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(C, E), enzyme(E, F) )
%   | | then return 0.43095897617107215;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5258981243589143;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19902999118064765;  // std dev = 0.931, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11353463585121458;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5279854184910403;  // std dev = 0.172, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.010882915326050341;  // std dev = 2.679, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.037040097597812516;  // std dev = 3.139, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.11080292919481924;  // std dev = 4.094, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then return 0.28401683156028856;  // std dev = 0.425, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.44215520872179925;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10793453200936867;  // std dev = 0.036, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.02483381130828036;  // std dev = 1.314, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.10770175833366354;  // std dev = 1.168, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5816805809590713;  // std dev = 0.907, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.1749015849076985;  // std dev = 0.155, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -1.9088490004451697E-4;  // std dev = 2.871, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return 0.059992049139315204;  // std dev = 4.149, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.2917011026346884;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.35652352518590485;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( enzyme(E, H) )
%   | | | then return -0.013134022834336954;  // std dev = 2.197, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | | else return 0.04556727434573277;  // std dev = 4.807, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.0030962117497204678;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09190447030314033;  // std dev = 1.303, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return -0.0418435262684133;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.07768576906184252;  // std dev = 0.656, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.47502831349407615;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2442778376464112;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.3443630841197575;  // std dev = 0.190, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.45372459798798664;  // std dev = 0.297, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.12398924226787507;  // std dev = 0.214, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2665473848170417;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J), phenotype(A, J) )
%   | | | then return -0.19201175573601736;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03706595943115602;  // std dev = 2.125, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.24313192140930187;  // std dev = 1.202, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.055690057234452764;  // std dev = 4.271, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22477347463296662;  // std dev = 0.075, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return -0.020595235696553856;  // std dev = 0.953, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.17368602016213147;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.10110104442619497;  // std dev = 0.895, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.03849305946939651;  // std dev = 0.509, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I), location(A, J) )
%   | | | then return 0.03222607322870281;  // std dev = 2.879, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | | else return 0.22607966432721563;  // std dev = 1.278, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return -0.008778896012108168;  // std dev = 3.793, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   | | | else return 0.0519391167509333;  // std dev = 1.485, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.2778304374420349;  // std dev = 0.829, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.4980956054114279;  // std dev = 0.750, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.19794530796831591;  // std dev = 0.476, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.25968546933492553;  // std dev = 3.195, 69.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=43 */
%   | else if ( complex(A, H) )
%   | | then return -0.10870664153296253;  // std dev = 0.183, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.23370571187754466;  // std dev = 0.056, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return 0.10959368152883198;  // std dev = 0.636, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return -0.1970405068503817;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.1970405068503817;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D) )
%   | then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.2295641937578024;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, C), complex(F, D) )
%   | | | then return -0.08328795180053397;  // std dev = 0.494, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return -9.065760571812394E-4;  // std dev = 1.374, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( phenotype(A, G), phenotype(C, G) )
%   | | then if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.33963194831468807;  // std dev = 0.511, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16441609555206804;  // std dev = 0.220, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(C, I), location(A, J) )
%   | | | then return 0.08784831434029285;  // std dev = 2.515, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.0165226378754312;  // std dev = 3.307, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( enzyme(A, K) )
%   | then return -0.009654478382777987;  // std dev = 0.133, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return -0.21916006899309884;  // std dev = 0.291, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.497', 'seconds']
Refined model CLL: -0.198281


******************************************
Best model found
******************************************
Results 

CLL : -0.209815 

AUC ROC : 0.987035 

AUC PR : 0.474984 

Precision : 0.448454 

Recall : 0.617021 

F1 : 0.519403 

Total Learning Time : 11.743 

Total Inference Time : 8.9096519947052 

Total revision time: 23.664608835220335
Best scored revision CLL: -0.198281


Results 

CLL : -0.209815 

AUC ROC : 0.987035 

AUC PR : 0.474984 

Precision : 0.448454 

Recall : 0.617021 

F1 : 0.519403 

Total Learning Time : 23.684488414764402 

Total Inference Time : 8.9096519947052 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.271
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1771673400074883;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.23518541784561506;  // std dev = 5.586, 130.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
%   | | | else return 0.19380610750078747;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12742798266066527;  // std dev = 5.260, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.12758177073687346;  // std dev = 6.529, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12024032035841123;  // std dev = 4.371, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.12459136999499655;  // std dev = 7.034, 220.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09946405998219919;  // std dev = 8.295, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.052914598190276135;  // std dev = 8.466, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7307384128371053;  // std dev = 0.021, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2695515013778186;  // std dev = 0.030, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.13123075989878896;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | else return 0.05330362772351021;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.061063575302562366;  // std dev = 4.035, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   | | | else return 0.031448797147804505;  // std dev = 6.571, 200.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04997088453786953;  // std dev = 7.605, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027008604000693534;  // std dev = 7.667, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.301', 'seconds']
Parameter learned model CLL:-0.336571 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.586, 78, 52], 'false,false,false,false': [5.775, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.26, 85, 41], 'false,false,false,false': [6.529, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.371, 56, 29], 'false,false,false,false': [7.034, 145, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.295, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.466, 231, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 41], 'true,false': [0.03, 91, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.704, 34, 23], 'false,false,false,false': [5.225, 86, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.035, 74, 41], 'false,false,false,false': [6.571, 137, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.605, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.667, 208, 104]}]
{'': [nan, 0.21724566223794836], 'false': [nan, 0.2172456622379471], 'false,false': [nan, 0.21724566223794836], 'false,false,false': [nan, 0.2172456622379471]}
{'': [nan, 0.23516033057850888], 'false': [nan, 0.23516033057851174], 'false,false': [nan, 0.23516033057850888], 'false,false,false': [0.2399999999999985, 0.2300118906064194]}
{'': [nan, 0.2189973115760113], 'false': [nan, 0.2189973115760113], 'false,false': [nan, 0.218997311576013], 'false,false,false': [0.2195856677812142, 0.218617133667633]}
{'': [nan, 0.22484403407808082], 'false': [nan, 0.22484403407808082], 'false,false': [nan, 0.22484403407808082], 'false,false,false': [0.22477508650519074, 0.22486539688420945]}
{'': [nan, 0.22411464414653953], 'false': [nan, 0.22411464414653953], 'false,false': [nan, 0.22411464414653803], 'false,false,false': [nan, 0.22411464414653803]}
{'': [nan, 0.21397111673294078], 'false': [nan, 0.21397111673294078], 'false,false': [nan, 0.21397111673294172], 'false,false,false': [nan, 0.21397111673294142]}
{'': [0.214264362889944, 0.22546017321342504], 'false': [nan, 0.22546017321342504], 'false,false': [nan, 0.22546017321342504], 'false,false,false': [0.24068944290550942, 0.21667926429831094], 'true': [1.0910094483861946e-05, 9.953388260557068e-06], 'true,true': [nan, 1.0910094483861946e-05], 'true,true,false': [nan, 1.0910094483861946e-05]}
{'': [nan, 0.18897336667814177], 'false': [nan, 0.18897336667814177], 'false,false': [nan, 0.18897336667814188], 'false,false,false': [0.14156722625934165, 0.2159117100069111]}
{'': [nan, 0.19408179079775187], 'false': [nan, 0.19408179079775187], 'false,false': [nan, 0.19408179079775187], 'false,false,false': [nan, 0.19408179079775187]}
{'': [nan, 0.18842547791911393], 'false': [nan, 0.18842547791911393], 'false,false': [nan, 0.18842547791911457], 'false,false,false': [nan, 0.18842547791911457]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.915
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D), phenotype(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.030562728202960583;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12680565151742282;  // std dev = 3.628, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18282425977483743;  // std dev = 5.811, 154.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E) )
%   | then if ( interaction(D, A), phenotype(A, F) )
%   | | then if ( enzyme(D, G), complex(D, H) )
%   | | | then return 0.5161429344096266;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09549050792678354;  // std dev = 1.352, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(I, A), interaction(D, I) )
%   | | | then return 0.8361764175721484;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3738585706987392;  // std dev = 1.441, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.011753392815033204;  // std dev = 0.801, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.8382032538352716;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16179674616472853;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.1000240470470232;  // std dev = 0.437, 248.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=65 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, E), recursion_proteinclass(C, B) )
%   | then return 0.6899363922641981;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A) )
%   | | then return -0.06220883997624205;  // std dev = 0.402, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else return 0.18616402967247447;  // std dev = 0.493, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return 0.6839771415549203;  // std dev = 1.347, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0.3888711650116988;  // std dev = 4.391, 82.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=48 */
%   | | else return -0.17203012552531752;  // std dev = 0.198, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, L), phenotype(K, M) )
%   | | | then return 0.15345200327016015;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5489497516695592;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0701186699368268;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( interaction(A, E), interaction(E, D) )
%   | | | then return 0.6552449401081166;  // std dev = 0.751, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.3896773960616176;  // std dev = 0.667, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.5568338440055257;  // std dev = 2.814, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | | | else return -0.13409340775060066;  // std dev = 1.997, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | else return -0.16182558714977072;  // std dev = 0.516, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(A, I), phenotype(H, J) )
%   | | then return 0.1296936696802122;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.10166054950740733;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.03886437644853739;  // std dev = 1.414, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.14287472668256704;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C), interaction(D, E) )
%   | | then return 0.5113477605718634;  // std dev = 0.147, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2531721014193844;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4616259006782315;  // std dev = 0.326, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.058557324973550505;  // std dev = 0.258, 105.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=15 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.33442093315556826;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(G, I), enzyme(H, J) )
%   | | | then return 0.1723408301873833;  // std dev = 1.971, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.06881564628070251;  // std dev = 3.455, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.016880238861520586;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.22602113159479414;  // std dev = 1.849, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(A, C) )
%   | then return -0.06638646403762845;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.17299239644992206;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.27186307239366947;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.25889938921466477;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5448960755766623;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2671452520374261;  // std dev = 1.859, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return -0.136150370163099;  // std dev = 0.344, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.004967534061132554;  // std dev = 2.600, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.0824358094341319;  // std dev = 4.298, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.34661937798445286;  // std dev = 0.145, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.15001721798965462;  // std dev = 0.098, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.2832581388094299;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4995600923905983;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.007786111225339356;  // std dev = 2.844, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5062215570751671;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08872513591395528;  // std dev = 3.471, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.08380542906709225;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4229676369653139;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2290149963314767;  // std dev = 0.234, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return -0.13219370990686424;  // std dev = 0.070, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.1752726069605474;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, F) )
%   | | | then return -0.05464230013194235;  // std dev = 0.794, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.013584024005451695;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.44370078933191015;  // std dev = 1.156, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.19867441159046456;  // std dev = 0.417, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.20212426648213203;  // std dev = 1.590, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.08839959505196593;  // std dev = 3.523, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B), complex(A, D) )
%   | then return 0.11592664876363583;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, E), phenotype(C, F) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.03374489946674462;  // std dev = 1.212, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.06431942807378258;  // std dev = 2.206, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | | then return 0.14847071052778643;  // std dev = 1.394, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.015285701748332013;  // std dev = 3.566, 159.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=35 */
%   else if ( enzyme(A, J), interaction(A, K) )
%   | then return 0.3552734098825508;  // std dev = 0.671, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, L), phenotype(A, M) )
%   | | then return 0.15014438470234517;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.04110511960513639;  // std dev = 2.187, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return -0.1246674512128979;  // std dev = 0.645, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.015210797195561926;  // std dev = 0.233, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | else if ( phenotype(A, F), interaction(C, C) )
%   | | then return -0.2512035056889736;  // std dev = 0.746, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.16347970565790992;  // std dev = 0.626, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.0714741013233001;  // std dev = 2.201, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   else if ( complex(A, G) )
%   | then return -0.01073204428336471;  // std dev = 0.174, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.43798632271417876;  // std dev = 1.319, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.20330318228517474;  // std dev = 0.589, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.10907571759696046;  // std dev = 2.071, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.03325731183095721;  // std dev = 1.337, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '21.612', 'seconds']
Refined model CLL: -0.207639


******************************************
Best model found
******************************************
Results 

CLL : -0.216166 

AUC ROC : 0.989287 

AUC PR : 0.506478 

Precision : 0.452323 

Recall : 0.698113 

F1 : 0.548961 

Total Learning Time : 20.915 

Total Inference Time : 20.91397738456726 

Total revision time: 45.47637404060364
Best scored revision CLL: -0.207639


Results 

CLL : -0.216166 

AUC ROC : 0.989287 

AUC PR : 0.506478 

Precision : 0.452323 

Recall : 0.698113 

F1 : 0.548961 

Total Learning Time : 45.496253620147705 

Total Inference Time : 20.91397738456726 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.163
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18439006985128545;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18835546199141595;  // std dev = 5.739, 144.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=51 */
%   | | | else return 0.2173663654182072;  // std dev = 5.029, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11234460682737686;  // std dev = 5.519, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | | else return 0.11411702597875167;  // std dev = 5.755, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13043885668140218;  // std dev = 4.136, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | | else return 0.14992542333659786;  // std dev = 6.474, 181.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10276079629393599;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059855752280932054;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7314286669187545;  // std dev = 0.031, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2682225203849941;  // std dev = 0.047, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.021873313499375574;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | | else return 0.05400665145336642;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.017417285102075547;  // std dev = 4.364, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.07174012531618489;  // std dev = 5.581, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04945884770586106;  // std dev = 7.020, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027856052097328766;  // std dev = 7.082, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.585', 'seconds']
Parameter learned model CLL:-0.327498 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.739, 93, 51], 'false,false,false,false': [5.029, 66, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.519, 99, 44], 'false,false,false,false': [5.755, 107, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.136, 50, 26], 'false,false,false,false': [6.474, 115, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.031, 0, 44], 'true,false': [0.047, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.211, 61, 25], 'false,false,false,false': [3.93, 47, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.364, 102, 44], 'false,false,false,false': [5.581, 89, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.02, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.082, 185, 92]}]
{'': [nan, 0.21980785674764972], 'false': [nan, 0.2198078567476494], 'false,false': [nan, 0.21980785674764972], 'false,false,false': [nan, 0.2198078567476494]}
{'': [nan, 0.23218679068585793], 'false': [nan, 0.2321867906858623], 'false,false': [nan, 0.23218679068585793], 'false,false,false': [0.22873263888888903, 0.23635251987073116]}
{'': [nan, 0.21335449899433578], 'false': [nan, 0.21335449899433578], 'false,false': [nan, 0.21335449899433415], 'false,false,false': [0.21299326613612826, 0.21368625795395388]}
{'': [nan, 0.22970371490702596], 'false': [nan, 0.22970371490702596], 'false,false': [nan, 0.22970371490702696], 'false,false,false': [0.22506925207756326, 0.23153738460363885]}
{'': [nan, 0.22501602289990685], 'false': [nan, 0.22501602289990685], 'false,false': [nan, 0.22501602289990644], 'false,false,false': [nan, 0.22501602289990644]}
{'': [nan, 0.21700338164967595], 'false': [nan, 0.21700338164967595], 'false,false': [nan, 0.2170033816496766], 'false,false,false': [nan, 0.21700338164967653]}
{'': [0.21042073044924972, 0.21291834087482409], 'false': [nan, 0.21291834087482409], 'false,false': [nan, 0.21291834087482409], 'false,false,false': [0.20619253650621996, 0.22061224489795975], 'true': [2.2026377033170583e-05, 2.1299322818558056e-05], 'true,true': [nan, 2.2026377033170583e-05], 'true,true,false': [nan, 2.2026377033170583e-05]}
{'': [nan, 0.17808410731913535], 'false': [nan, 0.17808410731913535], 'false,false': [nan, 0.17808410731913574], 'false,false,false': [0.13042252406146887, 0.2273543344404323]}
{'': [nan, 0.18455851572843493], 'false': [nan, 0.1845585157284351], 'false,false': [nan, 0.1845585157284351], 'false,false,false': [nan, 0.1845585157284351]}
{'': [nan, 0.18107521195245216], 'false': [nan, 0.18107521195245216], 'false,false': [nan, 0.1810752119524526], 'false,false,false': [nan, 0.1810752119524526]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.253
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), enzyme(H, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.1771673400074868;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8061002457186633;  // std dev = 0.210, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.16352904745641747;  // std dev = 0.156, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7751740409729939;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.15558201454087878;  // std dev = 2.448, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.20103907638220048;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.11808585072553082;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), enzyme(A, D) )
%   | then return 0.2511045444079761;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5480822517242837;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), location(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.008275155859167894;  // std dev = 1.058, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.22507859472797725;  // std dev = 2.754, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( complex(E, I), complex(F, I) )
%   | | | then return -0.04361844681290566;  // std dev = 2.196, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.10207084048466734;  // std dev = 3.610, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.726059207084453;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.20482581342575903;  // std dev = 3.466, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | else return 0.12690451810634393;  // std dev = 2.675, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.43310524472938444;  // std dev = 0.171, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(C, E), enzyme(A, E) )
%   | | then return -0.11456464703199637;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, C), complex(A, G) )
%   | | | then return 0.14364079365270457;  // std dev = 3.434, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.07841815458210326;  // std dev = 4.652, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   else if ( complex(A, H) )
%   | then return 0.030657269578301876;  // std dev = 0.373, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), interaction(I, L) )
%   | | | then return 0.2134554272657047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.10147770114053418;  // std dev = 1.497, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.008043908693972212;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.11915501980508332;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B), phenotype(A, D) )
%   | then return 0.38698722790274437;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A), phenotype(A, E) )
%   | | then return -0.11374508735951849;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(C, F), location(A, F) )
%   | | | then return 0.05370057162020825;  // std dev = 1.751, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.05223795412490244;  // std dev = 1.581, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3142083164384467;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.06990051377381257;  // std dev = 0.724, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.19869629461617289;  // std dev = 2.979, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5903830909160754;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03882375862155078;  // std dev = 5.619, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2991293080963722;  // std dev = 0.214, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09440244782586009;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.07767430084258045;  // std dev = 1.139, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.04227108876801121;  // std dev = 0.768, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.27963084547991557;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6581926930290668;  // std dev = 0.845, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.22410177797951877;  // std dev = 0.253, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.07608638106503691;  // std dev = 3.213, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.1488239952906769;  // std dev = 3.872, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return -0.085276689048143;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2157728389296878;  // std dev = 0.185, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.555234400354448;  // std dev = 0.129, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.18822458174822557;  // std dev = 0.056, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3111855668802514;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), location(A, K) )
%   | | | then return 0.041654494380399254;  // std dev = 3.273, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return -0.04331823629321222;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.03210067732006617;  // std dev = 2.465, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.09298702564324851;  // std dev = 2.731, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.2793211897475133;  // std dev = 0.162, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, C) )
%   | | then return -0.11229170792466137;  // std dev = 0.222, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(F, C), interaction(F, F) )
%   | | | then return -0.056462392161047766;  // std dev = 1.465, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.007358248880530644;  // std dev = 2.072, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2541453911028337;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( complex(A, J), interaction(H, H) )
%   | | | then return 0.12634930773464867;  // std dev = 0.560, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06940108189375511;  // std dev = 1.746, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.0018262592137509878;  // std dev = 2.469, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.08264472007667352;  // std dev = 4.262, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16165604839939146;  // std dev = 0.168, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.0238742026231085;  // std dev = 0.508, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08284966718573032;  // std dev = 1.043, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.7050655553062353;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25957380895287857;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0869863182053605;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.11781633227961834;  // std dev = 1.650, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.015433407955160792;  // std dev = 5.386, 187.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=59 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), enzyme(D, F) )
%   | then return 0.050295688609641655;  // std dev = 0.299, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.18312947651319816;  // std dev = 0.136, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.0449941421466905;  // std dev = 0.341, 145.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( complex(H, I), phenotype(G, J) )
%   | | then return 0.04557975696556266;  // std dev = 0.323, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.14117151351090643;  // std dev = 1.241, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03303007720676457;  // std dev = 2.473, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.18416638275365887;  // std dev = 0.648, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.12821187875911697;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.01208572592948662;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.594', 'seconds']
Refined model CLL: -0.252271


******************************************
Best model found
******************************************
Results 

CLL : -0.254525 

AUC ROC : 0.939025 

AUC PR : 0.218923 

Precision : 0.259804 

Recall : 0.382671 

F1 : 0.309489 

Total Learning Time : 6.253 

Total Inference Time : 2.6834681034088135 

Total revision time: 11.943513980865479
Best scored revision CLL: -0.252271


Results 

CLL : -0.254525 

AUC ROC : 0.939025 

AUC PR : 0.218923 

Precision : 0.259804 

Recall : 0.382671 

F1 : 0.309489 

Total Learning Time : 11.963393560409546 

Total Inference Time : 2.6834681034088135 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20077841717122605;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16739343344651966;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.1526642794599098;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14519526486747936;  // std dev = 4.308, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.14739487069802193;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07588441699929542;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.13167919532207129;  // std dev = 6.614, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10622425097606973;  // std dev = 7.517, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057676582641512215;  // std dev = 7.681, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7376056328364691;  // std dev = 0.020, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2617508632973249;  // std dev = 0.025, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.043147072492939934;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.05227515917948532;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0122830182691903;  // std dev = 3.521, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.04117233663598339;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0283610743249666;  // std dev = 7.198, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04761379891192062;  // std dev = 7.038, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.565', 'seconds']
Parameter learned model CLL:-0.335172 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [4.806, 72, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.308, 55, 28], 'false,false,false,false': [6.191, 113, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [6.614, 126, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.517, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.681, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 28], 'true,false': [0.025, 54, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [4.122, 53, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.521, 69, 28], 'false,false,false,false': [6.278, 123, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.198, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.038, 166, 86]}]
{'': [nan, 0.22523452008698358], 'false': [nan, 0.22523452008698325], 'false,false': [nan, 0.22523452008698358], 'false,false,false': [nan, 0.22523452008698325]}
{'': [nan, 0.22093040325303462], 'false': [nan, 0.2209304032530337], 'false,false': [nan, 0.22093040325303462], 'false,false,false': [0.22293444328824008, 0.21787112851548462]}
{'': [nan, 0.22394215808398338], 'false': [nan, 0.22394215808398338], 'false,false': [nan, 0.22394215808398324], 'false,false,false': [0.22359554053551994, 0.2241088183420775]}
{'': [nan, 0.22223715425447513], 'false': [nan, 0.22223715425447513], 'false,false': [nan, 0.22223715425447538], 'false,false,false': [0.20686390532544396, 0.22663037594505567]}
{'': [nan, 0.22512771315647015], 'false': [nan, 0.22512771315647015], 'false,false': [nan, 0.22512771315647045], 'false,false,false': [nan, 0.22512771315647045]}
{'': [nan, 0.21530429422592412], 'false': [nan, 0.21530429422592412], 'false,false': [nan, 0.21530429422592404], 'false,false,false': [nan, 0.21530429422592415]}
{'': [0.22458923288802754, 0.21649989024720045], 'true': [1.3872869141261037e-05, 1.1625882555099665e-05], 'false': [nan, 0.21649989024720045], 'false,false': [nan, 0.21649989024720045], 'false,false,false': [0.21551020408163166, 0.2177843523997369], 'true,true': [nan, 1.3872869141261037e-05], 'true,true,false': [nan, 1.3872869141261037e-05]}
{'': [nan, 0.18656693296296395], 'false': [nan, 0.18656693296296395], 'false,false': [nan, 0.1865669329629645], 'false,false,false': [0.1278117860173142, 0.2177632910898157]}
{'': [nan, 0.19045806389553452], 'false': [nan, 0.19045806389553424], 'false,false': [nan, 0.19045806389553424], 'false,false,false': [nan, 0.19045806389553424]}
{'': [nan, 0.19655351084752265], 'false': [nan, 0.19655351084752265], 'false,false': [nan, 0.1965535108475231], 'false,false,false': [nan, 0.1965535108475231]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.192
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.06723984419042142;  // std dev = 0.407, 110.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=23 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.18423589162125148;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.7445976199461559;  // std dev = 0.164, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5387462266826133;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1403187749858918;  // std dev = 0.047, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), complex(F, G) )
%   | | | then return 0.31330345003073984;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8094146964769101;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, H), complex(A, I) )
%   | | | then return 0.08578487415644537;  // std dev = 3.017, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.1773313897310528;  // std dev = 5.380, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5582811924729194;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.68147657296519;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11764226216793756;  // std dev = 0.049, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( location(E, G) )
%   | | | then return 0.07837087591965985;  // std dev = 4.945, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
%   | | | else return -0.19178816839422413;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6528075012883197;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10359029898065887;  // std dev = 4.105, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4208649557866497;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5744996710840251;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1950380733777012;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10414162531984299;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.48267002239363604;  // std dev = 3.924, 92.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=68 */
%   | | | else return -0.18192718115353138;  // std dev = 0.369, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return 0.30160195156727926;  // std dev = 1.234, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.32314245496413113;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4672605720169133;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( interaction(H, E), phenotype(H, I) )
%   | | | then return 0.045758117320161405;  // std dev = 2.190, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.19067666654686521;  // std dev = 1.813, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.38070119314408163;  // std dev = 1.017, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3925683332590677;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10105118269153883;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.05765495137868381;  // std dev = 4.614, 153.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.31647724843199715;  // std dev = 0.241, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(C, G) )
%   | | then return -0.07095509463660025;  // std dev = 0.253, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.13453031727962064;  // std dev = 1.125, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.007835513342888218;  // std dev = 1.670, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then if ( interaction(K, A), interaction(L, K) )
%   | | then return -0.0037522533644107556;  // std dev = 0.255, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return 0.09577133947908027;  // std dev = 0.792, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.3155043169241691;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(N, A), interaction(A, N) )
%   | | | then return -0.039061824370625255;  // std dev = 1.152, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.07218401342754734;  // std dev = 4.686, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43417100142049847;  // std dev = 0.153, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.15252783441135292;  // std dev = 0.057, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), phenotype(E, H) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.19092879050219397;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0470303479224373;  // std dev = 1.002, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.1434307294252383;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06886834221271668;  // std dev = 1.715, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.30175715529059194;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.17204182664649997;  // std dev = 1.619, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.04182261617804082;  // std dev = 4.072, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.205214034497898;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(D, F), phenotype(F, E) )
%   | | | then return 0.01322589671833977;  // std dev = 1.280, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.09165876794685217;  // std dev = 1.635, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.02144594492319776;  // std dev = 1.985, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.1470586635264496;  // std dev = 1.450, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.10636194747109816;  // std dev = 0.620, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.202793284740387;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.03836705686497479;  // std dev = 1.909, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.08011989511142464;  // std dev = 3.756, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, C) )
%   | then return -0.04119479726900519;  // std dev = 0.236, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.05940053636860211;  // std dev = 0.628, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24138268159594692;  // std dev = 1.150, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.018285497245222333;  // std dev = 0.305, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else if ( location(A, G), interaction(H, A) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.3565937560848094;  // std dev = 0.260, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.023023797106041313;  // std dev = 3.086, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.1322993632792279;  // std dev = 2.489, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( complex(A, L) )
%   | | then return 0.15688334686216154;  // std dev = 0.547, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3737751468896102;  // std dev = 1.081, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.20865154669717229;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.08371039555882565;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1225554327733879;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), complex(G, H) )
%   | | then return -0.06290031050631066;  // std dev = 0.496, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24720139773999197;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), interaction(L, J) )
%   | | | then return -0.022967979247033594;  // std dev = 1.865, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.0871436017001003;  // std dev = 2.182, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.0033599782836531934;  // std dev = 3.454, 107.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | | | else return -0.0626036350498197;  // std dev = 2.844, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.578', 'seconds']
Refined model CLL: -0.253384


******************************************
Best model found
******************************************
Results 

CLL : -0.258965 

AUC ROC : 0.959206 

AUC PR : 0.233334 

Precision : 0.168478 

Recall : 0.547703 

F1 : 0.257689 

Total Learning Time : 8.192 

Total Inference Time : 4.388854026794434 

Total revision time: 15.409429857254029
Best scored revision CLL: -0.253384


Results 

CLL : -0.258965 

AUC ROC : 0.959206 

AUC PR : 0.233334 

Precision : 0.168478 

Recall : 0.547703 

F1 : 0.257689 

Total Learning Time : 15.429309436798096 

Total Inference Time : 4.388854026794434 

Run: 3
Starting experiments for fasttext using majority_vote 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.149
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1979926850995123;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15822467405555676;  // std dev = 5.446, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.17907294167801793;  // std dev = 5.300, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12850492375868883;  // std dev = 4.876, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.15631426114757424;  // std dev = 5.818, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14553782594274925;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.14866486591660635;  // std dev = 6.516, 183.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0851318453502939;  // std dev = 7.648, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07768503354978634;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7303926179629356;  // std dev = 0.014, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26947238682194224;  // std dev = 0.020, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.004025927103989132;  // std dev = 4.187, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | | else return 0.02983967786093585;  // std dev = 4.403, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02360545026150016;  // std dev = 3.864, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.036867039861487316;  // std dev = 5.963, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04432203860257194;  // std dev = 6.977, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018852289790596277;  // std dev = 7.091, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.561', 'seconds']
Parameter learned model CLL:-0.326016 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.446, 91, 44], 'false,false,false,false': [5.3, 81, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.876, 74, 35], 'false,false,false,false': [5.818, 97, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [6.516, 116, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.648, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 35], 'true,false': [0.02, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.187, 65, 24], 'false,false,false,false': [4.403, 63, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.864, 78, 35], 'false,false,false,false': [5.963, 113, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.977, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.091, 186, 87]}]
{'': [nan, 0.2243499755859384], 'false': [nan, 0.22434997558593836], 'false,false': [nan, 0.2243499755859384], 'false,false,false': [nan, 0.22434997558593836]}
{'': [nan, 0.22307359759097226], 'false': [nan, 0.22307359759097298], 'false,false': [nan, 0.22307359759097226], 'false,false,false': [0.2196982167352546, 0.22652185223725368]}
{'': [nan, 0.2235567463116251], 'false': [nan, 0.2235567463116251], 'false,false': [nan, 0.22355674631162475], 'false,false,false': [0.21815599720099138, 0.22718090059534576]}
{'': [nan, 0.23147198912015865], 'false': [nan, 0.23147198912015865], 'false,false': [nan, 0.2314719891201591], 'false,false,false': [0.22959183673469394, 0.23204504512992455]}
{'': [nan, 0.21989278847693433], 'false': [nan, 0.21989278847693433], 'false,false': [nan, 0.2198927884769351], 'false,false,false': [nan, 0.2198927884769351]}
{'': [nan, 0.22308121532094374], 'false': [nan, 0.22308121532094374], 'false,false': [nan, 0.22308121532094374], 'false,false,false': [nan, 0.22308121532094405]}
{'': [0.2168889729706375, 0.2053572692482698], 'true': [5.467112431846642e-06, 5.3577701830320735e-06], 'false': [nan, 0.2053572692482698], 'false,false': [nan, 0.2053572692482698], 'false,false,false': [0.19694483019820716, 0.2130177514792895], 'true,true': [nan, 5.467112431846642e-06], 'true,true,false': [nan, 5.467112431846642e-06]}
{'': [nan, 0.181660465249428], 'false': [nan, 0.181660465249428], 'false,false': [nan, 0.18166046524942708], 'false,false,false': [0.1320979080918952, 0.2155318207954354]}
{'': [nan, 0.1850852253248507], 'false': [nan, 0.1850852253248506], 'false,false': [nan, 0.1850852253248506], 'false,false,false': [nan, 0.1850852253248506]}
{'': [nan, 0.18420594796158607], 'false': [nan, 0.18420594796158607], 'false,false': [nan, 0.18420594796158576], 'false,false,false': [nan, 0.18420594796158576]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.099
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, E), complex(D, F) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.11901850031690354;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), interaction(I, H) )
%   | | | then return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.19743464938522665;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.27119241336038186;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.1956489350995111;  // std dev = 4.229, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6764597355478074;  // std dev = 0.257, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return -0.133739614149132;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.1430344541127943;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.17636778744612766;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0660243817772349;  // std dev = 1.957, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5823766229402713;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0063111331323454515;  // std dev = 2.038, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.2710734919585661;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.12122188822346736;  // std dev = 6.152, 183.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.7302650303028476;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.27082955297349803;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(D, A) )
%   | | then return -0.1619970340423447;  // std dev = 0.106, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(F, A), complex(F, C) )
%   | | | then return -0.05713635927279433;  // std dev = 0.661, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.03557993338581655;  // std dev = 2.774, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5119205775074321;  // std dev = 0.295, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12004279396642195;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.14604162400821658;  // std dev = 5.975, 161.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=54 */
%   | | | else return 0.3705105340122251;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5030802169962425;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.6506225806195445;  // std dev = 0.942, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -3.517778417277545E-4;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.17466042914140834;  // std dev = 0.259, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.04456234735620493;  // std dev = 3.679, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5507042636451686;  // std dev = 1.963, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.20969485847174357;  // std dev = 0.087, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.07216884812616305;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.15975778114422473;  // std dev = 3.714, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.307872720993365;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5218255599542103;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.0928575702895833;  // std dev = 0.038, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( complex(A, D) )
%   | | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.6885991760572658;  // std dev = 0.732, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.18295414586429296;  // std dev = 0.276, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, F), location(F, G) )
%   | | | then return 0.09230269828255272;  // std dev = 3.055, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.04591862751051412;  // std dev = 4.404, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.28149307529368084;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0021111854746202045;  // std dev = 0.347, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( phenotype(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.04645127586472909;  // std dev = 2.091, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.4531381912976024;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5735946896270107;  // std dev = 0.893, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.23642070710769497;  // std dev = 0.119, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then return 0.06846438962513811;  // std dev = 0.330, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.0622848144638287;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.18566131833703145;  // std dev = 3.256, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2186596746390631;  // std dev = 0.166, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.5425590092147077;  // std dev = 0.126, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.16969934435704678;  // std dev = 0.360, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6014634311409505;  // std dev = 0.156, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.21593469229647522;  // std dev = 0.058, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( location(I, J) )
%   | | | then return 0.011962225713345435;  // std dev = 3.487, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.15296506489503042;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return -0.11214885573667162;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.023833721247149685;  // std dev = 1.443, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21177380328920636;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), enzyme(A, H) )
%   | | | then return -0.24403347739188108;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.29701501389848733;  // std dev = 0.790, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.15156956063718977;  // std dev = 0.260, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07875447096886308;  // std dev = 3.742, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( function(A, K), function(J, K) )
%   | | | then return -0.001608989609124964;  // std dev = 0.405, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11465537928721278;  // std dev = 0.599, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.1070025576513712;  // std dev = 1.422, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.011136505140979115;  // std dev = 3.250, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.14003940778527119;  // std dev = 1.584, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.4764428780968035;  // std dev = 1.838, 63.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=59 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.2198788361687753;  // std dev = 0.303, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.5052202674337157;  // std dev = 0.317, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H) )
%   | | then return -0.14546957618500153;  // std dev = 0.292, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.17065701610363512;  // std dev = 0.234, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.2554355602836919;  // std dev = 0.376, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, K), interaction(K, A) )
%   | then return 0.11246601418043725;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.40327486589603195;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(D, F), complex(D, G) )
%   | | | then return 0.21053797730314888;  // std dev = 1.088, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.4289226382466668;  // std dev = 1.333, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.19453705108105745;  // std dev = 0.605, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.3905200590937906;  // std dev = 0.296, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return -0.11383021254457891;  // std dev = 0.172, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.13830499341330976;  // std dev = 0.141, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1982473192281118;  // std dev = 0.357, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then return 0.28992613302726267;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06809562776074958;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.310', 'seconds']
Refined model CLL: -0.185614


******************************************
Best model found
******************************************
Results 

CLL : -0.200101 

AUC ROC : 0.993645 

AUC PR : 0.505747 

Precision : 0.283753 

Recall : 0.879433 

F1 : 0.429066 

Total Learning Time : 18.099 

Total Inference Time : 17.4315402507782 

Total revision time: 38.475045059204106
Best scored revision CLL: -0.185614


Results 

CLL : -0.200101 

AUC ROC : 0.993645 

AUC PR : 0.505747 

Precision : 0.283753 

Recall : 0.879433 

F1 : 0.429066 

Total Learning Time : 38.495081041336064 

Total Inference Time : 17.4315402507782 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.18
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19913254165688998;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16762346045312124;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.1932507005964904;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17236598561558222;  // std dev = 5.098, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.12158735691525448;  // std dev = 6.560, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07509558302091417;  // std dev = 4.519, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | | else return 0.15087202249441553;  // std dev = 6.889, 204.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07940985400425579;  // std dev = 8.409, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05505975312071422;  // std dev = 8.468, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7351937431566425;  // std dev = 0.058, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26497609826113744;  // std dev = 0.083, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11953419381549554;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.09483014480288454;  // std dev = 5.045, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04147323710383414;  // std dev = 4.138, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.02880503147390033;  // std dev = 6.562, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06566621877739569;  // std dev = 7.513, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030267188280354355;  // std dev = 7.633, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.269', 'seconds']
Parameter learned model CLL:-0.34155 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [5.764, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.098, 71, 41], 'false,false,false,false': [6.56, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.519, 69, 29], 'false,false,false,false': [6.889, 129, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.409, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.468, 231, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.058, 0, 41], 'true,false': [0.083, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.766, 37, 23], 'false,false,false,false': [5.045, 70, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.138, 84, 41], 'false,false,false,false': [6.562, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.513, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.633, 202, 104]}]
{'': [nan, 0.2247137866165031], 'false': [nan, 0.22471378661650146], 'false,false': [nan, 0.2247137866165031], 'false,false,false': [nan, 0.22471378661650146]}
{'': [nan, 0.2268431001890372], 'false': [nan, 0.2268431001890368], 'false,false': [nan, 0.2268431001890372], 'false,false,false': [0.22293444328824227, 0.2307098765432107]}
{'': [nan, 0.22253486548542076], 'false': [nan, 0.22253486548542076], 'false,false': [nan, 0.22253486548542067], 'false,false,false': [0.23201961893831172, 0.21626813226464794]}
{'': [nan, 0.22600860649578736], 'false': [nan, 0.22600860649578736], 'false,false': [nan, 0.2260086064957896], 'false,false,false': [0.20835068721366015, 0.23262801209308998]}
{'': [nan, 0.2175604675492608], 'false': [nan, 0.2175604675492608], 'false,false': [nan, 0.2175604675492611], 'false,false,false': [nan, 0.2175604675492611]}
{'': [nan, 0.2140283468628679], 'false': [nan, 0.2140283468628679], 'false,false': [nan, 0.214028346862867], 'false,false,false': [nan, 0.21402834686286787]}
{'': [0.2214772726838992, 0.2333033670653154], 'false': [nan, 0.2333033670653154], 'false,false': [nan, 0.2333033670653154], 'false,false,false': [0.23638888888888854, 0.23140495867768593], 'true': [8.22293099804587e-05, 8.360397619344038e-05], 'true,true': [nan, 8.22293099804587e-05], 'true,true,false': [nan, 8.22293099804587e-05]}
{'': [nan, 0.185776708706274], 'false': [nan, 0.185776708706274], 'false,false': [nan, 0.18577670870627397], 'false,false,false': [0.1369937291591812, 0.21635736889362173]}
{'': [nan, 0.19807359511728576], 'false': [nan, 0.19807359511728556], 'false,false': [nan, 0.19807359511728556], 'false,false,false': [nan, 0.19807359511728556]}
{'': [nan, 0.19039027840126246], 'false': [nan, 0.19039027840126246], 'false,false': [nan, 0.1903902784012625], 'false,false,false': [nan, 0.1903902784012625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, D), location(C, E) )
%   | | | then return 0.029577506528083757;  // std dev = 2.230, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.179201566678461;  // std dev = 6.436, 190.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=61 */
%   | else return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then return 0.10008441897048011;  // std dev = 0.428, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7771893131502132;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then if ( interaction(E, C) )
%   | | | then return 0.1682385474228054;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.584905214089472;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G), complex(C, H) )
%   | | | then return 0.03490521408947199;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.21169069477293692;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7477451349371782;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then return 0.056236110272962436;  // std dev = 0.408, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.07300045218471007;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.16510043763825455;  // std dev = 5.119, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return 0.04950845319948288;  // std dev = 0.411, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( complex(C, F), phenotype(C, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.4736752980366121;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16953095655050113;  // std dev = 2.280, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.07576868050655994;  // std dev = 0.422, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.6968972978490725;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, K), location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.29402764084469823;  // std dev = 2.916, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return -0.18255809079945245;  // std dev = 0.199, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( location(A, N) )
%   | | | then return 0.1970600757252501;  // std dev = 4.435, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.06871411360598027;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), interaction(A, C) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.5332307362566674;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, C), phenotype(C, E) )
%   | | | then return 0.031978909850237255;  // std dev = 1.502, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.2414236878429688;  // std dev = 2.381, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( recursion_proteinclass(D, B), interaction(F, D) )
%   | | then return 0.5232844581782765;  // std dev = 0.360, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0.05015772290929615;  // std dev = 0.426, 224.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=59 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then return 0.1326395840097556;  // std dev = 0.433, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.11815278631512056;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.30138586760671515;  // std dev = 1.199, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5547449560796869;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), interaction(A, A) )
%   | then return -0.0440075880959267;  // std dev = 0.189, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(C, A), phenotype(C, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1496191970613081;  // std dev = 1.243, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.22683911588638606;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0380679458074139;  // std dev = 0.419, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.40871732120309395;  // std dev = 0.236, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, I), phenotype(H, J) )
%   | | | then return -0.12356978250517549;  // std dev = 0.912, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.09537093983488547;  // std dev = 3.041, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.087490196939919;  // std dev = 3.661, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.177978829242625;  // std dev = 4.497, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.31364474385360996;  // std dev = 0.157, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5285226978095993;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0.7038611143155791;  // std dev = 0.368, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.10869447586560703;  // std dev = 1.180, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, I), location(I, E) )
%   | | | then return -0.13187783673927517;  // std dev = 2.624, 92.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=8 */
%   | | | else return 0.06417164120382551;  // std dev = 5.447, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then return 0.4411250212976183;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.10814550242565917;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.18991261545279922;  // std dev = 1.820, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.25149313415735103;  // std dev = 0.138, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.5382622721424548;  // std dev = 0.392, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6955138116949166;  // std dev = 0.351, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.19580075596058172;  // std dev = 0.059, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.48718786178425655;  // std dev = 0.361, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return -0.023827912331791407;  // std dev = 3.328, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.04351709320043655;  // std dev = 2.132, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.057024603349508894;  // std dev = 1.545, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.06821929983483617;  // std dev = 4.481, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.20007511309356482;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2967480439412949;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return 0.46195643058574254;  // std dev = 2.932, 67.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=55 */
%   | | | else return 0.10521403814295929;  // std dev = 3.497, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.15276631907999919;  // std dev = 0.301, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.2660008201285122;  // std dev = 0.425, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.47465791591696765;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2841649978436289;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.35855447160135406;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.258994803093842;  // std dev = 0.185, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, G), interaction(G, A) )
%   | | | then return 0.49824812644391087;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11788920800640386;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2372977672399473;  // std dev = 0.402, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0630568230653661;  // std dev = 2.076, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(H, I), phenotype(H, J) )
%   | | | then return 0.024783830347476447;  // std dev = 1.294, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.05808074344965355;  // std dev = 0.846, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06821893071351193;  // std dev = 4.923, 154.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=57 */
%   | | | else return -0.025513079555740174;  // std dev = 1.582, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2099773056629414;  // std dev = 0.190, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), complex(D, G) )
%   | | | then return 0.3740886513725167;  // std dev = 0.311, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.026713247030218358;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15815859456250236;  // std dev = 0.408, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.04126438015864881;  // std dev = 2.446, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.282453185517216;  // std dev = 3.564, 70.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=47 */
%   | | | else return -0.2200634054792012;  // std dev = 0.312, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.019467956853170397;  // std dev = 1.439, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.15202547810090397;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.114', 'seconds']
Refined model CLL: -0.249259


******************************************
Best model found
******************************************
Results 

CLL : -0.264154 

AUC ROC : 0.949406 

AUC PR : 0.234834 

Precision : 0.227119 

Recall : 0.50566 

F1 : 0.31345 

Total Learning Time : 14.634 

Total Inference Time : 12.916204452514648 

Total revision time: 30.958153594970703
Best scored revision CLL: -0.249259


Results 

CLL : -0.264154 

AUC ROC : 0.949406 

AUC PR : 0.234834 

Precision : 0.227119 

Recall : 0.50566 

F1 : 0.31345 

Total Learning Time : 30.97818957710266 

Total Inference Time : 12.916204452514648 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.138
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2027182234890256;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15856120989134084;  // std dev = 5.859, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | | else return 0.14946759033260376;  // std dev = 5.289, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16368450047701397;  // std dev = 5.328, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.11470503750108685;  // std dev = 5.772, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13776800399547726;  // std dev = 4.091, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return 0.1137757725810769;  // std dev = 6.673, 203.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09446302648051537;  // std dev = 7.857, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07165799852399747;  // std dev = 7.894, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7280243128781716;  // std dev = 0.021, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27202233192011405;  // std dev = 0.032, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11843181474183724;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | | else return 0.10647064657038421;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08496397578686385;  // std dev = 4.082, 112.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=44 */
%   | | | else return 0.0662481318583641;  // std dev = 5.594, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01035236245998473;  // std dev = 7.187, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0012653818324965536;  // std dev = 7.232, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.467', 'seconds']
Parameter learned model CLL:-0.319587 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 105, 51], 'false,false,false,false': [5.289, 88, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.328, 80, 44], 'false,false,false,false': [5.772, 109, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.091, 47, 26], 'false,false,false,false': [6.673, 137, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.857, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.894, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 44], 'true,false': [0.032, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 41, 25], 'false,false,false,false': [3.821, 40, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.082, 68, 44], 'false,false,false,false': [5.594, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.187, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.232, 215, 92]}]
{'': [nan, 0.22584129388825896], 'false': [nan, 0.2258412938882585], 'false,false': [nan, 0.22584129388825896], 'false,false,false': [nan, 0.2258412938882585]}
{'': [nan, 0.21860264696829973], 'false': [nan, 0.21860264696829962], 'false,false': [nan, 0.21860264696829973], 'false,false,false': [0.22004437869822702, 0.2168138933958297]}
{'': [nan, 0.22018829250747468], 'false': [nan, 0.22018829250747468], 'false,false': [nan, 0.22018829250747426], 'false,false,false': [0.2289184439428873, 0.21223451298988152]}
{'': [nan, 0.22210428920553854], 'false': [nan, 0.22210428920553854], 'false,false': [nan, 0.22210428920553785], 'false,false,false': [0.22931131544379682, 0.21936035075236074]}
{'': [nan, 0.22047575647832843], 'false': [nan, 0.22047575647832843], 'false,false': [nan, 0.22047575647832932], 'false,false,false': [nan, 0.22047575647832932]}
{'': [nan, 0.21939751566200164], 'false': [nan, 0.21939751566200164], 'false,false': [nan, 0.2193975156620024], 'false,false,false': [nan, 0.2193975156620021]}
{'': [0.21057601614419275, 0.23362859791374685], 'false': [nan, 0.23362859791374685], 'false,false': [nan, 0.23362859791374685], 'false,false,false': [0.23530762167125796, 0.23179642227261296], 'true': [1.0345528432396314e-05, 1.0287871396415701e-05], 'true,true': [nan, 1.0345528432396314e-05], 'true,true,false': [nan, 1.0345528432396314e-05]}
{'': [nan, 0.1918970249992395], 'false': [nan, 0.1918970249992395], 'false,false': [nan, 0.1918970249992399], 'false,false,false': [0.1487949827544016, 0.22672146591758685]}
{'': [nan, 0.17510599871016366], 'false': [nan, 0.17510599871016289], 'false,false': [nan, 0.17510599871016289], 'false,false,false': [nan, 0.17510599871016289]}
{'': [nan, 0.1703525781079933], 'false': [nan, 0.1703525781079933], 'false,false': [nan, 0.17035257810799206], 'false,false,false': [nan, 0.17035257810799206]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.057
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( enzyme(A, D), complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.2503057978446101;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.18072958026080166;  // std dev = 5.205, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, C) )
%   | | | then return 0.7589969679088269;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7001813153306042;  // std dev = 0.918, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.8100202461187146;  // std dev = 0.175, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.14730497193440215;  // std dev = 0.166, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.11011343820259296;  // std dev = 1.638, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5897472425363812;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10324942307238848;  // std dev = 5.214, 144.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6062158658408604;  // std dev = 0.080, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(D, E), complex(A, F) )
%   | | then if ( location(A, E) )
%   | | | then return -0.07779607943019634;  // std dev = 0.929, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.19054932107727807;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(D, G) )
%   | | | then return -0.11015527333702373;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.044075798764349305;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(K, A) )
%   | | | then return 0.08054743838977924;  // std dev = 1.639, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.003947449713924573;  // std dev = 2.129, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.16910652030974127;  // std dev = 1.853, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.11393621483686595;  // std dev = 5.595, 172.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=53 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3974236199413528;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.52386156962383;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10288725568349497;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.11407462126448664;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04242683596043854;  // std dev = 1.981, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.408446869125223;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.10384686483437354;  // std dev = 6.067, 210.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then return 0.026920503016893176;  // std dev = 0.321, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.4577773391557872;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08672606984118889;  // std dev = 0.366, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.42996188281045505;  // std dev = 0.292, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, J), phenotype(I, K) )
%   | | | then return 0.14795763964240055;  // std dev = 2.038, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.022828129627672285;  // std dev = 3.164, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( interaction(A, L), enzyme(A, M) )
%   | | then return 0.43667878170604296;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.03491753095546063;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16303429858215837;  // std dev = 3.560, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.2573673642166042;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.37884539581759225;  // std dev = 0.093, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( enzyme(A, G), interaction(E, E) )
%   | | then if ( phenotype(A, H), complex(E, I) )
%   | | | then return -0.03050728074471751;  // std dev = 0.816, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.09462570000811499;  // std dev = 1.432, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( enzyme(E, J) )
%   | | | then return -0.14645022824144216;  // std dev = 0.208, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.008025132538579352;  // std dev = 2.162, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3530720018158223;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.031082377538139406;  // std dev = 2.874, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.10840252191314972;  // std dev = 4.848, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.22192359618480562;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.30442917705653016;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.47205362581455074;  // std dev = 0.268, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6247211063627773;  // std dev = 0.594, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.16447305542649596;  // std dev = 0.049, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(A, K) )
%   | | | then return 0.6180665500463616;  // std dev = 0.719, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.24990046836771473;  // std dev = 3.102, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | else return -0.23799782881233408;  // std dev = 0.036, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0.35158732015253236;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18724740092691022;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.24970026324272698;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02555245684315323;  // std dev = 1.313, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(E, J), phenotype(E, K) )
%   | | | then return -0.0047551299597908886;  // std dev = 1.516, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.1143841800627144;  // std dev = 0.516, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5086828674887097;  // std dev = 0.730, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.17439224595192285;  // std dev = 0.380, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.23643499316256322;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.014894907061427176;  // std dev = 4.062, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1506560739564449;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(C, D) )
%   | | then return -0.11196853845426333;  // std dev = 0.230, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | | then return 0.5542632681802699;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19042835161013877;  // std dev = 0.160, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.18020055898622755;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return -0.06897263228936894;  // std dev = 0.641, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07634412353408632;  // std dev = 2.265, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.03623280208922639;  // std dev = 2.247, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.02665555777329991;  // std dev = 3.695, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B), location(A, E) )
%   | then return 0.16411065177271225;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, C), enzyme(G, H) )
%   | | | then return 0.09381945123836775;  // std dev = 0.861, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.04252823715727818;  // std dev = 1.433, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( location(C, I) )
%   | | | then return 0.06749510992867998;  // std dev = 2.716, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.19396310147355975;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.16187875577194;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then return 0.025019038909400212;  // std dev = 0.214, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.10789869917768342;  // std dev = 0.892, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.012779220055025497;  // std dev = 3.759, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.986', 'seconds']
Refined model CLL: -0.212291


******************************************
Best model found
******************************************
Results 

CLL : -0.239267 

AUC ROC : 0.979382 

AUC PR : 0.268605 

Precision : 0.215711 

Recall : 0.624549 

F1 : 0.320667 

Total Learning Time : 8.057 

Total Inference Time : 4.072847604751587 

Total revision time: 15.089051790237427
Best scored revision CLL: -0.212291


Results 

CLL : -0.239267 

AUC ROC : 0.979382 

AUC PR : 0.268605 

Precision : 0.215711 

Recall : 0.624549 

F1 : 0.320667 

Total Learning Time : 15.109087772369385 

Total Inference Time : 4.072847604751587 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.177
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19540383706029707;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19885696548519688;  // std dev = 5.741, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | | else return 0.12576323066246556;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13649416412415194;  // std dev = 4.331, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.13884911711785775;  // std dev = 6.233, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14599809806087233;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.11324745581563937;  // std dev = 6.717, 205.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12094731030867238;  // std dev = 7.439, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07159313567946941;  // std dev = 7.590, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6899652674519454;  // std dev = 0.970, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.27566816121458715;  // std dev = 0.074, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03762813963748939;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.02181946121145623;  // std dev = 4.231, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.020444495805039212;  // std dev = 3.512, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.040442564329663075;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02671623461098975;  // std dev = 7.209, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03310769311616884;  // std dev = 7.127, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.539', 'seconds']
Parameter learned model CLL:-0.332883 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.741, 90, 52], 'false,false,false,false': [4.902, 82, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.331, 57, 28], 'false,false,false,false': [6.233, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [6.717, 138, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.439, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.59, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.97, 1, 28], 'true,false': [0.074, 56, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [4.231, 63, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.512, 61, 28], 'false,false,false,false': [6.294, 125, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.209, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.127, 177, 86]}]
{'': [nan, 0.22351403306420686], 'false': [nan, 0.22351403306420667], 'false,false': [nan, 0.22351403306420686], 'false,false,false': [nan, 0.22351403306420667]}
{'': [nan, 0.2222222222222225], 'false': [nan, 0.22222222222222288], 'false,false': [nan, 0.2222222222222225], 'false,false,false': [0.23209680618924858, 0.20719381688466232]}
{'': [nan, 0.2215573674973589], 'false': [nan, 0.2215573674973589], 'false,false': [nan, 0.22155736749735877], 'false,false,false': [0.2206941629610725, 0.2219748252209486]}
{'': [nan, 0.2226551245652815], 'false': [nan, 0.2226551245652815], 'false,false': [nan, 0.22265512456528186], 'false,false,false': [0.23187869822485174, 0.22009846132003674]}
{'': [nan, 0.2296050708020276], 'false': [nan, 0.2296050708020276], 'false,false': [nan, 0.22960507080202672], 'false,false,false': [nan, 0.22960507080202672]}
{'': [nan, 0.22071856588808922], 'false': [nan, 0.22071856588808922], 'false,false': [nan, 0.22071856588808877], 'false,false,false': [nan, 0.2207185658880886]}
{'': [0.22072568576191115, 0.21004281611877046], 'true': [0.0324456960835571, 9.853341285392947e-05], 'false': [nan, 0.21004281611877046], 'false,false': [nan, 0.21004281611877046], 'false,false,false': [0.21551020408163288, 0.20338326446280944], 'true,true': [nan, 0.0324456960835571], 'true,true,false': [nan, 0.0324456960835571]}
{'': [nan, 0.19109825971826233], 'false': [nan, 0.19109825971826233], 'false,false': [nan, 0.19109825971826172], 'false,false,false': [0.13860369852714743, 0.21649754442517494]}
{'': [nan, 0.1910845436367108], 'false': [nan, 0.19108454363671032], 'false,false': [nan, 0.19108454363671032], 'false,false,false': [nan, 0.19108454363671032]}
{'': [nan, 0.19313291529701707], 'false': [nan, 0.19313291529701707], 'false,false': [nan, 0.19313291529701773], 'false,false,false': [nan, 0.19313291529701773]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.813
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7470378239884012;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08037115732173458;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.25100607795665386;  // std dev = 4.476, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), complex(A, E) )
%   | | then return 0.43581833344938886;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, D), phenotype(F, G) )
%   | | | then return 0.819373492641714;  // std dev = 0.207, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.7101187666475112;  // std dev = 1.347, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return -0.16765978539914717;  // std dev = 0.159, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( enzyme(I, K), interaction(L, A) )
%   | | | then return -0.13044145021263404;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0417089031431363;  // std dev = 2.801, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.20045967933489875;  // std dev = 2.012, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.11986883370287194;  // std dev = 2.081, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6778583594827163;  // std dev = 0.050, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.15607559772322677;  // std dev = 0.313, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.646281916906975;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(F, H), complex(H, I) )
%   | | | then return -0.011564603501558504;  // std dev = 2.512, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | | else return 0.08153320581597137;  // std dev = 3.159, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7125120241421071;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17842140513686985;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.14841200244151986;  // std dev = 2.378, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.22091785234495773;  // std dev = 2.334, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.43168136229896814;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6187562171200841;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.1177477668014076;  // std dev = 0.667, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.09551164144892825;  // std dev = 0.696, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return -0.015303108952482991;  // std dev = 0.899, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), interaction(J, K) )
%   | | | then return 0.14524070616742446;  // std dev = 3.398, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.3587862699983743;  // std dev = 1.343, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06026157584194943;  // std dev = 2.764, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.11998463733650552;  // std dev = 2.831, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33252032364745476;  // std dev = 0.216, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return -0.049368581551651435;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.18779693074152637;  // std dev = 1.167, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.037768383127759084;  // std dev = 0.798, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06899517620985254;  // std dev = 1.776, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6310078017693037;  // std dev = 0.302, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1620908297364244;  // std dev = 0.161, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.19498669019112405;  // std dev = 1.449, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.06253617305531016;  // std dev = 4.588, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, G), complex(D, H) )
%   | | | then return 0.4316018356264766;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21087173567473794;  // std dev = 0.770, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.5312013869186705;  // std dev = 0.165, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | else return -0.16530565192701477;  // std dev = 0.453, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( enzyme(A, I), interaction(A, J) )
%   | then return 0.3603711204834666;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.2499526684929093;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.014328228701104695;  // std dev = 1.576, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.35027179071158643;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13616091964862512;  // std dev = 3.084, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.023728180185096627;  // std dev = 0.282, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(D, D), enzyme(A, G) )
%   | | | then return 0.2977081799580734;  // std dev = 0.522, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.023988488936601143;  // std dev = 1.404, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.36840605461994114;  // std dev = 0.525, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05846256087953834;  // std dev = 2.777, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5334369281768866;  // std dev = 0.348, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19370760906652398;  // std dev = 0.222, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.05470265700683415;  // std dev = 2.025, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return -0.022695025425386192;  // std dev = 0.888, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return -0.09697052316707681;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.24168365065759126;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return -0.12940053925386052;  // std dev = 0.166, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.04674597076865917;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.001881344545480736;  // std dev = 1.230, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0706863646351332;  // std dev = 1.236, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.008011072427965605;  // std dev = 1.558, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.06687488387184017;  // std dev = 2.422, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.0015033311726462312;  // std dev = 3.583, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2608420592854708;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.16984229683078833;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08024201947748437;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( enzyme(G, H) )
%   | | then return -0.1199933441394064;  // std dev = 0.191, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.035566332877681746;  // std dev = 0.165, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( enzyme(I, K), phenotype(I, L) )
%   | | | then return 0.022141338096146976;  // std dev = 0.970, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.1299410337745892;  // std dev = 2.454, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.2780057897528656;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.012198511886474908;  // std dev = 3.618, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1854072875519754;  // std dev = 0.072, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( phenotype(A, F), interaction(D, E) )
%   | | | then return -0.04911753465722271;  // std dev = 0.630, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.11066543662496041;  // std dev = 1.302, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( complex(A, G), phenotype(D, H) )
%   | | | then return 0.09093381507897545;  // std dev = 1.497, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.010907063015005306;  // std dev = 3.684, 149.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=42 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.19825347547723973;  // std dev = 1.067, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.15257996409080382;  // std dev = 0.174, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.16780412174593612;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3086332140536909;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.240', 'seconds']
Refined model CLL: -0.221658


******************************************
Best model found
******************************************
Results 

CLL : -0.246097 

AUC ROC : 0.940018 

AUC PR : 0.241175 

Precision : 0.21232 

Recall : 0.572438 

F1 : 0.309751 

Total Learning Time : 6.813 

Total Inference Time : 3.3213675022125244 

Total revision time: 13.180027475357056
Best scored revision CLL: -0.221658


Results 

CLL : -0.246097 

AUC ROC : 0.940018 

AUC PR : 0.241175 

Precision : 0.21232 

Recall : 0.572438 

F1 : 0.309751 

Total Learning Time : 13.200063457489014 

Total Inference Time : 3.3213675022125244 

Run: 4
Starting experiments for fasttext using majority_vote 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.108
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1993254056877476;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1679905104721115;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.181706143811651;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13963226284163738;  // std dev = 4.831, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.1271165416391892;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16202178416085017;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.13746640928284984;  // std dev = 6.586, 190.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09823757793877838;  // std dev = 7.585, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0779706527054224;  // std dev = 7.599, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.723013873539006;  // std dev = 0.006, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2770143090666734;  // std dev = 0.009, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05822876710590082;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.08117677672560251;  // std dev = 4.252, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036174126815138055;  // std dev = 3.787, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.05807446204672388;  // std dev = 5.840, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05788786992098843;  // std dev = 6.850, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05898490037049617;  // std dev = 6.766, 231.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.469', 'seconds']
Parameter learned model CLL:-0.355431 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.288, 80, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.831, 70, 35], 'false,false,false,false': [5.942, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.529, 33, 20], 'false,false,false,false': [6.586, 123, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.585, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.599, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.006, 0, 35], 'true,false': [0.009, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [4.252, 51, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.787, 70, 35], 'false,false,false,false': [5.84, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.85, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.766, 144, 87]}]
{'': [nan, 0.2247750865051912], 'false': [nan, 0.22477508650519115], 'false,false': [nan, 0.2247750865051912], 'false,false,false': [nan, 0.22477508650519115]}
{'': [nan, 0.2251999503999015], 'false': [nan, 0.22519995039990195], 'false,false': [nan, 0.2251999503999015], 'false,false,false': [0.22306392401375277, 0.22737788353493277]}
{'': [nan, 0.21971239429957523], 'false': [nan, 0.21971239429957523], 'false,false': [nan, 0.21971239429957592], 'false,false,false': [0.22229138410638116, 0.21797922554340876]}
{'': [nan, 0.2298316383223701], 'false': [nan, 0.2298316383223701], 'false,false': [nan, 0.2298316383223701], 'false,false,false': [0.23495906016375911, 0.22826984629508743]}
{'': [nan, 0.22386551201663116], 'false': [nan, 0.22386551201663116], 'false,false': [nan, 0.22386551201663055], 'false,false,false': [nan, 0.22386551201663055]}
{'': [nan, 0.22382077689646915], 'false': [nan, 0.22382077689646915], 'false,false': [nan, 0.2238207768964684], 'false,false,false': [nan, 0.22382077689646918]}
{'': [0.21485700659583123, 0.22503630559730703], 'false': [nan, 0.22503630559730703], 'false,false': [nan, 0.22503630559730703], 'false,false,false': [0.2206793019328207, 0.2288094856593488], 'true': [1.1532644498808102e-06, 1.1437333385024637e-06], 'true,true': [nan, 1.1532644498808102e-06], 'true,true,false': [nan, 1.1532644498808102e-06]}
{'': [nan, 0.18935639730806628], 'false': [nan, 0.18935639730806628], 'false,false': [nan, 0.1893563973080663], 'false,false,false': [0.1365904634959525, 0.2258512196258591]}
{'': [nan, 0.19471456807716395], 'false': [nan, 0.19471456807716347], 'false,false': [nan, 0.19471456807716347], 'false,false,false': [nan, 0.19471456807716347]}
{'': [nan, 0.19815510997203534], 'false': [nan, 0.19815510997203534], 'false,false': [nan, 0.19815510997203453], 'false,false,false': [nan, 0.19815510997203453]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.708
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(D, G), complex(G, C) )
%   | | then return -0.09837280403092258;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.016851064900487777;  // std dev = 0.331, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.2114822684328468;  // std dev = 5.854, 150.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=53 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.733145937083513;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.14728923240313163;  // std dev = 0.139, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5627773554069038;  // std dev = 4.337, 99.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=73 */
%   | | | else return -0.16512682652828065;  // std dev = 0.173, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return 0.33040745607291194;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.5930742935682923;  // std dev = 0.193, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14297191378558036;  // std dev = 0.228, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.08279731818574139;  // std dev = 5.165, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
%   | else if ( interaction(A, F), interaction(C, C) )
%   | | then return -0.003559433891164349;  // std dev = 0.345, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.07948987864081693;  // std dev = 1.086, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2842304769320884;  // std dev = 2.301, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return 0.21445177748652183;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return -0.06197342905426584;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.018763168602321557;  // std dev = 0.372, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(E, F), location(E, C) )
%   | | | then return 0.4702205344479227;  // std dev = 2.325, 41.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | else return 0.643024609383832;  // std dev = 1.315, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.26676380748814366;  // std dev = 0.265, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.44252784495561387;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.1510440779100158;  // std dev = 0.298, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.11967625056004856;  // std dev = 0.956, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return -0.10744118520905166;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.13125070901857547;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.09944499332623183;  // std dev = 0.321, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.42283884891434376;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.043828562967438714;  // std dev = 0.348, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6346687987214399;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12263715305277309;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.07300034603066594;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11253792311315387;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, I) )
%   | | | then return 0.20946399017651446;  // std dev = 0.698, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08455350671999735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3893423552406668;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), phenotype(F, E) )
%   | | then if ( interaction(D, F) )
%   | | | then return -0.05838656719341658;  // std dev = 0.923, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.16352707880663753;  // std dev = 1.478, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.08748795109203511;  // std dev = 1.324, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.007571880740637705;  // std dev = 1.877, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.0328791500090726;  // std dev = 2.018, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.09399189851098655;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.08337758285044372;  // std dev = 3.603, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
%   | | | else return 0.33653876088642076;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2806925865205642;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5202409081887793;  // std dev = 0.089, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1670557116120564;  // std dev = 0.091, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.014540936565695512;  // std dev = 1.631, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.365429741681533;  // std dev = 2.281, 47.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | else return -0.168698760318396;  // std dev = 0.069, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.04295612045950142;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.013720065532923629;  // std dev = 0.966, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.19250346319565775;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.026665020298031927;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, E), location(A, F) )
%   | | then return 0.2090387780921756;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.364162639205416;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), phenotype(A, J) )
%   | | | then return 0.2922197279931834;  // std dev = 1.658, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | | else return 0.10655866682744915;  // std dev = 3.028, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else return -0.1297202762558433;  // std dev = 0.278, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18740865771876125;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3015696955863552;  // std dev = 1.204, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( location(A, E), interaction(F, C) )
%   | then if ( complex(C, G), interaction(F, F) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.1829017858640874;  // std dev = 0.668, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06547022342061107;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.32618566718937153;  // std dev = 0.249, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.021101769263910927;  // std dev = 1.922, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else return 0.17169585708555637;  // std dev = 0.421, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.28911774667912027;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4184718818476849;  // std dev = 0.411, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20106558148425716;  // std dev = 0.517, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.0014048712848047367;  // std dev = 0.253, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.20316276829719;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.0017293655451116607;  // std dev = 0.607, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( location(A, F), complex(E, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.053160504757124555;  // std dev = 1.009, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.04394162581532406;  // std dev = 2.259, 88.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.2554163401392688;  // std dev = 0.615, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.002561492972378221;  // std dev = 2.983, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return -0.23860605269295324;  // std dev = 0.651, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.002637782221023245;  // std dev = 0.637, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.09632509048666638;  // std dev = 0.804, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '43.577', 'seconds']
Refined model CLL: -0.196022


******************************************
Best model found
******************************************
Results 

CLL : -0.2167 

AUC ROC : 0.985198 

AUC PR : 0.293157 

Precision : 0.158574 

Recall : 0.914894 

F1 : 0.270299 

Total Learning Time : 18.708 

Total Inference Time : 13.35053539276123 

Total revision time: 34.95138908958435
Best scored revision CLL: -0.196022


Results 

CLL : -0.2167 

AUC ROC : 0.985198 

AUC PR : 0.293157 

Precision : 0.158574 

Recall : 0.914894 

F1 : 0.270299 

Total Learning Time : 34.971062913894656 

Total Inference Time : 13.35053539276123 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.259
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2130977405602637;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18634420976884203;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.14725299693890528;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11944827659202553;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.14129023885356065;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1238150957267811;  // std dev = 4.371, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.13618075321182385;  // std dev = 6.971, 213.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10687703476566154;  // std dev = 8.245, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08465514860958191;  // std dev = 8.258, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7021065710521581;  // std dev = 0.984, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2745202480136031;  // std dev = 0.021, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.0021215658565309687;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | | else return 0.06423130876076773;  // std dev = 5.142, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03408159044761077;  // std dev = 4.158, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.05689117688482126;  // std dev = 6.435, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03317589959876888;  // std dev = 7.679, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02228095435795975;  // std dev = 7.716, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.381', 'seconds']
Parameter learned model CLL:-0.336474 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [5.959, 112, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.298, 89, 41], 'false,false,false,false': [6.472, 125, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.371, 56, 29], 'false,false,false,false': [6.971, 138, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.245, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.258, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.984, 1, 41], 'true,false': [0.021, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.068, 59, 23], 'false,false,false,false': [5.142, 78, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.158, 85, 41], 'false,false,false,false': [6.435, 121, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.679, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.716, 213, 104]}]
{'': [nan, 0.2289601509627392], 'false': [nan, 0.22896015096273745], 'false,false': [nan, 0.2289601509627392], 'false,false,false': [nan, 0.22896015096273745]}
{'': [nan, 0.22293444328823858], 'false': [nan, 0.2229344432882395], 'false,false': [nan, 0.22293444328823858], 'false,false,false': [0.2293113154437952, 0.21653777513384606]}
{'': [nan, 0.22010822256481574], 'false': [nan, 0.22010822256481574], 'false,false': [nan, 0.2201082225648176], 'false,false,false': [0.21592637814468718, 0.2228048943395229]}
{'': [nan, 0.2272308930224204], 'false': [nan, 0.2272308930224204], 'false,false': [nan, 0.22723089302241975], 'false,false,false': [0.22477508650518999, 0.22816729458612772]}
{'': [nan, 0.22659827486288364], 'false': [nan, 0.22659827486288364], 'false,false': [nan, 0.22659827486288445], 'false,false,false': [nan, 0.22659827486288445]}
{'': [nan, 0.22583076656919718], 'false': [nan, 0.22583076656919718], 'false,false': [nan, 0.22583076656919676], 'false,false,false': [nan, 0.22583076656919784]}
{'': [0.21605244737498425, 0.21601230635986973], 'true': [0.02307421731297757, 4.942493423966031e-06], 'false': [nan, 0.21601230635986973], 'false,false': [nan, 0.21601230635986973], 'false,false,false': [0.201814396192743, 0.22407354208560776], 'true,true': [nan, 0.02307421731297757], 'true,true,false': [nan, 0.02307421731297757]}
{'': [nan, 0.18946576485427957], 'false': [nan, 0.18946576485427957], 'false,false': [nan, 0.18946576485428032], 'false,false,false': [0.13722798455986468, 0.22502582079607347]}
{'': [nan, 0.18662430034083524], 'false': [nan, 0.1866243003408359], 'false,false': [nan, 0.1866243003408359], 'false,false,false': [nan, 0.1866243003408359]}
{'': [nan, 0.18783069587231485], 'false': [nan, 0.18783069587231485], 'false,false': [nan, 0.1878306958723142], 'false,false,false': [nan, 0.1878306958723142]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.671
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.8126943896449667;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.044505932157124846;  // std dev = 0.296, 113.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=11 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8010060779566543;  // std dev = 1.373, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.18373033044834955;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(C, D), recursion_proteinclass(E, B) )
%   | | then return 0.7464327909212516;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, E), phenotype(C, D) )
%   | | | then return -0.014789028148617267;  // std dev = 1.403, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.159464719414602;  // std dev = 2.237, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.04839216240597153;  // std dev = 0.364, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.7292768226510624;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8442101773534655;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13997158398146903;  // std dev = 3.222, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.15825397775967007;  // std dev = 3.811, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.1121252779296058;  // std dev = 3.932, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.5738933961579923;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7086083240985123;  // std dev = 0.149, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.16246790952263968;  // std dev = 0.059, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.6974726124465319;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1423247919052318;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.022271949873047765;  // std dev = 2.756, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5628175840938452;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.005683186529893479;  // std dev = 2.076, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.12561899958561515;  // std dev = 5.378, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.49940519445358417;  // std dev = 0.226, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, F), interaction(G, A) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.006301666476945665;  // std dev = 1.353, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.1589539777661383;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(D, I), phenotype(D, J) )
%   | | | then return 0.16134025628516785;  // std dev = 1.406, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.026062028340380454;  // std dev = 1.381, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.0782013198734629;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.435674929169465;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.0774916094353631;  // std dev = 5.383, 194.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=54 */
%   | | | else return 0.18476803447733708;  // std dev = 2.797, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.35920676396406126;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.513183994268332;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.16216670744251122;  // std dev = 0.063, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(G, H), enzyme(A, I) )
%   | | then return 0.0801098762760961;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3654300868093371;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6824516230490222;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.015384657554410775;  // std dev = 3.575, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.22079529954319363;  // std dev = 2.724, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.09678260631420008;  // std dev = 3.801, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2763210938015032;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(C, E), enzyme(C, F) )
%   | | then if ( enzyme(A, G), phenotype(A, D) )
%   | | | then return 0.40996150936746995;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11762177969767561;  // std dev = 2.529, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else if ( complex(A, H), complex(C, H) )
%   | | | then return -0.04255122077281424;  // std dev = 1.278, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.04473326763623262;  // std dev = 4.950, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   else if ( complex(A, I) )
%   | then return 0.06396434356262526;  // std dev = 0.335, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then return 0.06605794660773699;  // std dev = 0.373, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22744520785745767;  // std dev = 1.291, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.7055445960051788;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.404341714578021;  // std dev = 0.162, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.15429244711546566;  // std dev = 0.047, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.2546402098925697;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(E, F), complex(E, G) )
%   | | | then return 0.07428474507693601;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07433627648576073;  // std dev = 1.759, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6452456985973679;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1957984368923653;  // std dev = 0.166, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05741667759594298;  // std dev = 4.665, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | | | else return 0.16609121560894724;  // std dev = 1.673, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(A, E), location(A, F) )
%   | then return 0.029724063313824278;  // std dev = 0.305, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then return 0.285624954384919;  // std dev = 0.403, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.026580161748384012;  // std dev = 1.610, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.1519098352129558;  // std dev = 2.320, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   else if ( complex(A, K), interaction(A, L) )
%   | then return 0.20117439105982476;  // std dev = 0.326, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, M), interaction(N, A) )
%   | | then if ( interaction(N, M) )
%   | | | then return -0.24609488188567585;  // std dev = 0.732, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.15350123913160485;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.04053008167946416;  // std dev = 1.857, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.04131330826310024;  // std dev = 1.980, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.18083938629702592;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.01801650143450944;  // std dev = 0.266, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( enzyme(C, G), phenotype(C, D) )
%   | | | then return -0.18104636111089975;  // std dev = 0.778, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.09013944302029261;  // std dev = 1.282, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.36116850782942983;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), interaction(K, I) )
%   | | | then return 0.03107933630902609;  // std dev = 1.177, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.21029480269178663;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.047426490532243855;  // std dev = 4.647, 154.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=54 */
%   | | | else return 0.15753494060078738;  // std dev = 1.433, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.15580396449053335;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2868603865645474;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( complex(E, G), phenotype(E, H) )
%   | | then if ( enzyme(E, I) )
%   | | | then return 0.00823094157688977;  // std dev = 0.895, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.16638887812358166;  // std dev = 1.500, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.07980268450773716;  // std dev = 0.746, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08958848030885559;  // std dev = 1.045, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12432165995504262;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.17906737895831945;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0038603355509603246;  // std dev = 5.559, 243.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=70 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.835', 'seconds']
Refined model CLL: -0.246711


******************************************
Best model found
******************************************
Results 

CLL : -0.285641 

AUC ROC : 0.898119 

AUC PR : 0.203881 

Precision : 0.101201 

Recall : 0.445283 

F1 : 0.16492 

Total Learning Time : 12.671 

Total Inference Time : 8.47026538848877 

Total revision time: 24.59398310661316
Best scored revision CLL: -0.246711


Results 

CLL : -0.285641 

AUC ROC : 0.898119 

AUC PR : 0.203881 

Precision : 0.101201 

Recall : 0.445283 

F1 : 0.16492 

Total Learning Time : 24.61365693092346 

Total Inference Time : 8.47026538848877 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.134
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21199508894566638;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1531200329808911;  // std dev = 5.877, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
%   | | | else return 0.14571983823892418;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16005585082441884;  // std dev = 5.340, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.11987095407738729;  // std dev = 5.748, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.18781827695821926;  // std dev = 3.929, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return 0.16237313392090047;  // std dev = 6.422, 176.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07832940699774635;  // std dev = 7.896, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08314392376380796;  // std dev = 7.779, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7188808469126607;  // std dev = 0.022, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.28125306906920816;  // std dev = 0.031, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.030523275017634206;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | | else return 0.02191610964589703;  // std dev = 4.038, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.056783546813824776;  // std dev = 4.141, 121.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=44 */
%   | | | else return 0.06038857938315525;  // std dev = 5.647, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0298345306539729;  // std dev = 7.086, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031257891438212844;  // std dev = 7.035, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.482', 'seconds']
Parameter learned model CLL:-0.328537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.877, 107, 51], 'false,false,false,false': [5.298, 89, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.34, 81, 44], 'false,false,false,false': [5.748, 106, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.929, 38, 26], 'false,false,false,false': [6.422, 110, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.896, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.779, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 44], 'true,false': [0.031, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.18, 58, 25], 'false,false,false,false': [4.038, 56, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.141, 77, 44], 'false,false,false,false': [5.647, 95, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.086, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.035, 181, 92]}]
{'': [nan, 0.22863905325443928], 'false': [nan, 0.2286390532544387], 'false,false': [nan, 0.22863905325443928], 'false,false,false': [nan, 0.2286390532544387]}
{'': [nan, 0.21739969135802598], 'false': [nan, 0.21739969135802484], 'false,false': [nan, 0.21739969135802598], 'false,false,false': [0.2185947764781287, 0.21591715976331377]}
{'': [nan, 0.22104568597237126], 'false': [nan, 0.22104568597237126], 'false,false': [nan, 0.22104568597237167], 'false,false,false': [0.22814885530669335, 0.21455663812940431]}
{'': [nan, 0.23627560315678192], 'false': [nan, 0.23627560315678192], 'false,false': [nan, 0.2362756031567813], 'false,false,false': [0.24121093750000006, 0.2343082813750997]}
{'': [nan, 0.21875479151966498], 'false': [nan, 0.21875479151966498], 'false,false': [nan, 0.21875479151966423], 'false,false,false': [nan, 0.21875479151966423]}
{'': [nan, 0.2249532385673882], 'false': [nan, 0.2249532385673882], 'false,false': [nan, 0.2249532385673895], 'false,false,false': [nan, 0.2249532385673883]}
{'': [0.22060866872262305, 0.20849799710300573], 'true': [1.0622230415015885e-05, 1.0442895511906e-05], 'false': [nan, 0.20849799710300573], 'false,false': [nan, 0.20849799710300573], 'false,false,false': [0.21048047612135326, 0.2063771831437265], 'true,true': [nan, 1.0622230415015885e-05], 'true,true,false': [nan, 1.0622230415015885e-05]}
{'': [nan, 0.18577578065540015], 'false': [nan, 0.18577578065540015], 'false,false': [nan, 0.18577578065540018], 'false,false,false': [0.1417361770774631, 0.22303410398687545]}
{'': [nan, 0.17932869569443244], 'false': [nan, 0.17932869569443224], 'false,false': [nan, 0.17932869569443224], 'false,false,false': [nan, 0.17932869569443224]}
{'': [nan, 0.18130498064216916], 'false': [nan, 0.18130498064216916], 'false,false': [nan, 0.18130498064216904], 'false,false,false': [nan, 0.18130498064216904]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.425
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(C, D), phenotype(A, D) )
%   | | then return -0.08921948595311938;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08542166237223962;  // std dev = 2.780, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.16481560176617796;  // std dev = 5.647, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8367120644586721;  // std dev = 0.059, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.16082848411743378;  // std dev = 0.169, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8285214297455288;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.073118110583216;  // std dev = 0.941, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.09854301567416911;  // std dev = 5.502, 157.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return 0.15669464077715684;  // std dev = 0.396, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( location(A, D), phenotype(A, G) )
%   | | then return 0.05237278790448665;  // std dev = 0.381, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( enzyme(A, H), interaction(I, C) )
%   | | | then return 0.04229627212784346;  // std dev = 1.928, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.12851115214936804;  // std dev = 4.249, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   else if ( interaction(J, A) )
%   | then return 0.6306150623352326;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.7067327937517599;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13055483387308026;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.10128934301071987;  // std dev = 2.700, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.18122144498776088;  // std dev = 1.972, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then return 0.05010982449958031;  // std dev = 0.346, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else return 0.12412282032128823;  // std dev = 0.377, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then if ( enzyme(H, I), interaction(H, J) )
%   | | then return 0.16934241683470633;  // std dev = 0.331, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.589859509936011;  // std dev = 0.272, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.046195949443687614;  // std dev = 1.929, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( phenotype(A, L), complex(A, M) )
%   | | then if ( complex(N, M), recursion_proteinclass(N, B) )
%   | | | then return 0.7684321276357915;  // std dev = 0.248, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1867378552291124;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.29135482377208993;  // std dev = 1.714, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.14601359490504173;  // std dev = 4.552, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4389679363850281;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, E), interaction(C, F) )
%   | | then return -0.032011145200903236;  // std dev = 0.335, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else if ( interaction(C, C), complex(A, D) )
%   | | | then return -0.05075973984768391;  // std dev = 1.063, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.10407079215799467;  // std dev = 2.878, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6773935159664285;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.205029815074745;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5022532412815367;  // std dev = 0.196, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.010317890756609285;  // std dev = 1.343, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.144036917256054;  // std dev = 4.692, 112.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.39129465030727534;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.291801262339105;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5581321335092333;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.37306315300844267;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.13993602996589014;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.027271422883223394;  // std dev = 1.182, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.14442611934241686;  // std dev = 2.510, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.056722792050169855;  // std dev = 5.618, 176.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.08855304809433574;  // std dev = 0.361, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( phenotype(E, G), location(A, H) )
%   | | | then return -0.011016939406970136;  // std dev = 1.383, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.16371501694446336;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.6732804465302744;  // std dev = 0.237, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.29874282425740134;  // std dev = 0.418, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6761777990226814;  // std dev = 0.483, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.2387703673530051;  // std dev = 0.125, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.002355139882513708;  // std dev = 2.296, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.10571901528528826;  // std dev = 2.381, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), complex(D, F) )
%   | then if ( interaction(G, D), complex(A, F) )
%   | | then return 0.03485023487916842;  // std dev = 0.370, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5234472973925114;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21155147137245364;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.04822821656574406;  // std dev = 0.329, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   else if ( enzyme(A, I) )
%   | then return 0.027746683805829283;  // std dev = 0.318, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.3525175502131819;  // std dev = 0.367, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03936136867829966;  // std dev = 2.905, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.04707049160734348;  // std dev = 2.076, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.2310406627942209;  // std dev = 2.052, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, C) )
%   | then return 0.30999991998922627;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1970424947798469;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.2645754312324084;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return -0.04619133624748038;  // std dev = 2.865, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | | else return -0.2830016863128458;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( complex(J, I) )
%   | | | then return -0.07939765117659264;  // std dev = 1.454, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.05820838751844874;  // std dev = 2.564, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1870417151818671;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.08864113721655502;  // std dev = 3.584, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.3493506494234247;  // std dev = 0.389, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05497168908435402;  // std dev = 0.315, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then return -0.11667936103946744;  // std dev = 0.195, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, G) )
%   | | | then return 0.09552487761747419;  // std dev = 1.570, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.042910308905146355;  // std dev = 2.200, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6913808867098599;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.30404746568259605;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.01663047355461223;  // std dev = 4.128, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return -0.06068246527533379;  // std dev = 1.420, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.260', 'seconds']
Refined model CLL: -0.265604


******************************************
Best model found
******************************************
Results 

CLL : -0.24326 

AUC ROC : 0.958107 

AUC PR : 0.224745 

Precision : 0.205521 

Recall : 0.483755 

F1 : 0.288482 

Total Learning Time : 6.425 

Total Inference Time : 2.7692105770111084 

Total revision time: 12.234224781036376
Best scored revision CLL: -0.265604


Results 

CLL : -0.24326 

AUC ROC : 0.958107 

AUC PR : 0.224745 

Precision : 0.205521 

Recall : 0.483755 

F1 : 0.288482 

Total Learning Time : 12.253898605346679 

Total Inference Time : 2.7692105770111084 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.256
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2063270727513346;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17550309178946677;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0.1816476947798384;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1591759754780783;  // std dev = 4.252, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.14584134877497154;  // std dev = 6.181, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15140187736293917;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.11033124028457326;  // std dev = 6.700, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07973568088670463;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04885727896012599;  // std dev = 7.732, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6947985315913218;  // std dev = 0.978, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.27038433406525825;  // std dev = 0.026, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08494377633150858;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | | else return 0.10403134235411159;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07010162803084467;  // std dev = 3.376, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.09507476978784715;  // std dev = 6.015, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027417935812594482;  // std dev = 7.106, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0174013397212906;  // std dev = 7.131, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.552', 'seconds']
Parameter learned model CLL:-0.346532 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.839, 99, 52], 'false,false,false,false': [4.699, 63, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.252, 51, 28], 'false,false,false,false': [6.181, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.453, 32, 19], 'false,false,false,false': [6.7, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.732, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.978, 1, 28], 'true,false': [0.026, 61, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.641, 62, 33], 'false,false,false,false': [3.976, 43, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.376, 47, 28], 'false,false,false,false': [6.015, 96, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.106, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.131, 180, 86]}]
{'': [nan, 0.22695012211313167], 'false': [nan, 0.22695012211313143], 'false,false': [nan, 0.22695012211313167], 'false,false,false': [nan, 0.22695012211313143]}
{'': [nan, 0.2265218522372511], 'false': [nan, 0.22652185223725127], 'false,false': [nan, 0.2265218522372511], 'false,false,false': [0.22577957107144267, 0.22765437347220657]}
{'': [nan, 0.22607876022681767], 'false': [nan, 0.22607876022681767], 'false,false': [nan, 0.22607876022681786], 'false,false,false': [0.22880628177691964, 0.22475485058380104]}
{'': [nan, 0.2239349992375052], 'false': [nan, 0.2239349992375052], 'false,false': [nan, 0.22393499923750523], 'false,false,false': [0.23375624759707803, 0.22112890438136434]}
{'': [nan, 0.21790141286978762], 'false': [nan, 0.21790141286978762], 'false,false': [nan, 0.21790141286978784], 'false,false,false': [nan, 0.21790141286978784]}
{'': [nan, 0.2119786898677251], 'false': [nan, 0.2119786898677251], 'false,false': [nan, 0.2119786898677256], 'false,false,false': [nan, 0.21197868986772544]}
{'': [0.2140909521422864, 0.22920309773394823], 'false': [nan, 0.22920309773394823], 'false,false': [nan, 0.22920309773394823], 'false,false,false': [0.22670360110803395, 0.2324826989619382], 'true': [0.03299360667791048, 1.128967747762767e-05], 'true,true': [nan, 0.03299360667791048], 'true,true,false': [nan, 0.03299360667791048]}
{'': [nan, 0.20788057995299145], 'false': [nan, 0.20788057995299145], 'false,false': [nan, 0.20788057995299114], 'false,false,false': [0.151981122036253, 0.23490008718441918]}
{'': [nan, 0.19201922571673694], 'false': [nan, 0.19201922571673802], 'false,false': [nan, 0.19201922571673802], 'false,false,false': [nan, 0.19201922571673802]}
{'': [nan, 0.19119147131845066], 'false': [nan, 0.19119147131845066], 'false,false': [nan, 0.19119147131845118], 'false,false,false': [nan, 0.19119147131845118]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.128
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(A, G), interaction(E, H) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.023206997103877556;  // std dev = 2.484, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.09624417319475045;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.22005369700427305;  // std dev = 4.924, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1440632272348891;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6554919823432218;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.16609018686743385;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8216190401231076;  // std dev = 0.162, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.15375295771028855;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08595281345216149;  // std dev = 4.698, 118.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | | | else return 0.2000378958394372;  // std dev = 3.218, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.5676884565689925;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.09918569727830208;  // std dev = 0.137, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7292049482962355;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1470923745183276;  // std dev = 0.053, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.038397904202267484;  // std dev = 0.883, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6282083714139367;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.16139826074921626;  // std dev = 3.791, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.08475454043650787;  // std dev = 4.858, 130.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5093300190354805;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11577336246716494;  // std dev = 0.031, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.1948728548272784;  // std dev = 0.345, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12022921617919301;  // std dev = 5.358, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6003645060592862;  // std dev = 0.270, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.18511945310260705;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A) )
%   | | then return 0.2040096752040832;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.4150252510560548;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.460613397258914;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3671967480138817;  // std dev = 0.097, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.029703153418011295;  // std dev = 1.219, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.14033785906282778;  // std dev = 0.921, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10135769456322313;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.1903668862505364;  // std dev = 1.632, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), phenotype(G, I) )
%   | | | then return 0.4856309927382984;  // std dev = 0.378, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1290235493417239;  // std dev = 4.105, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.010163333123129413;  // std dev = 2.091, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.10123761830170516;  // std dev = 2.818, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), interaction(D, F) )
%   | then if ( phenotype(F, G), enzyme(F, H) )
%   | | then return 0.016160478493145045;  // std dev = 0.313, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(F, E) )
%   | | | then return 0.28682163358636964;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.01104957092031443;  // std dev = 0.557, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(D, I) )
%   | | then return 0.49229425109614144;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1715498896423079;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.01563541206652138;  // std dev = 0.367, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.22448804229979796;  // std dev = 0.300, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return -0.03670089058944796;  // std dev = 1.699, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.0882125856361785;  // std dev = 3.964, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4144154792981839;  // std dev = 0.244, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.18145879777740312;  // std dev = 0.067, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.30601537823960256;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( phenotype(F, G), enzyme(F, H) )
%   | | | then return -0.1697246293550472;  // std dev = 1.218, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.011883970943730874;  // std dev = 2.903, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7662593142298475;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23157688129225226;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2420877754501948;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.04955201800364238;  // std dev = 3.467, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21608329242823726;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(F, E), enzyme(A, G) )
%   | | | then return 0.0553832830422768;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11659309402468573;  // std dev = 1.583, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.08165936983587299;  // std dev = 0.792, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.08801586491177946;  // std dev = 1.051, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.10300442347554761;  // std dev = 1.029, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.03645068842664387;  // std dev = 1.953, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.04304918634421217;  // std dev = 3.700, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.08958039756943477;  // std dev = 3.043, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.2519305495876518;  // std dev = 0.142, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.06246316443137212;  // std dev = 0.292, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | else if ( enzyme(A, H), interaction(C, C) )
%   | | then return -0.10164871639599789;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(I, C), enzyme(I, J) )
%   | | | then return -0.011851690030549472;  // std dev = 1.800, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.1174737233938543;  // std dev = 3.069, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.022543114991098033;  // std dev = 0.292, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then return 0.255097256970973;  // std dev = 0.567, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, P), interaction(A, Q) )
%   | | | then return -0.022305891735589126;  // std dev = 1.957, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.12345770118256215;  // std dev = 2.095, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then return 0.0951170173691419;  // std dev = 0.464, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.03800191086452811;  // std dev = 0.278, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.26643099248042607;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(C, I) )
%   | | | then return 0.04786986332688178;  // std dev = 3.897, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | | else return 0.1794567879098539;  // std dev = 1.832, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return 0.0021278966613043995;  // std dev = 0.295, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(A, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.043352245516245405;  // std dev = 0.825, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.11797006462300778;  // std dev = 1.823, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return 0.02187707137078514;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.819', 'seconds']
Refined model CLL: -0.270243


******************************************
Best model found
******************************************
Results 

CLL : -0.265782 

AUC ROC : 0.914984 

AUC PR : 0.211043 

Precision : 0.286026 

Recall : 0.462898 

F1 : 0.353576 

Total Learning Time : 7.128 

Total Inference Time : 3.093980073928833 

Total revision time: 13.277542766571045
Best scored revision CLL: -0.270243


Results 

CLL : -0.265782 

AUC ROC : 0.914984 

AUC PR : 0.211043 

Precision : 0.286026 

Recall : 0.462898 

F1 : 0.353576 

Total Learning Time : 13.297216590881348 

Total Inference Time : 3.093980073928833 

