Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using majority_vote 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.787
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1856343152164726;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21239500079099025;  // std dev = 5.900, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14189035952337783;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11436927619732114;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08621203080741696;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10623115888596767;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024474598372665368;  // std dev = 6.249, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07580475900582856;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.007139660536543417;  // std dev = 6.298, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038016771626364076;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.222', 'seconds']
Parameter learned model CLL:-0.377983 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.9, 92, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.082, 109, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.97, 98, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.249, 129, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.48, 100, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.298, 136, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
{'': [nan, 0.2202387059266102], 'false': [nan, 0.2202387059266102]}
{'': [nan, 0.23520818115412528], 'false': [nan, 0.23520818115412528]}
{'': [nan, 0.2242056932966018], 'false': [nan, 0.2242056932966018]}
{'': [nan, 0.22288357416902577], 'false': [nan, 0.22288357416902577]}
{'': [nan, 0.22023870592661232], 'false': [nan, 0.22023870592661232]}
{'': [nan, 0.23140495867768432], 'false': [nan, 0.23140495867768432]}
{'': [nan, 0.21107377647918343], 'false': [nan, 0.21107377647918343]}
{'': [nan, 0.23011176857330698]}
{'': [nan, 0.20659722222222324], 'false': [nan, 0.20659722222222324]}
{'': [nan, 0.2228835741690262], 'false': [nan, 0.2228835741690262]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.465
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 8.30e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0926912761892609;  // std dev = 6.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0787767547310916;  // std dev = 5.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420265;  // std dev = 5.27e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.345', 'seconds']
Refined model CLL: -0.065541


******************************************
Best model found
******************************************
Results 

CLL : -0.085093 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.465 

Total Inference Time : 0.9075253009796143 

Total revision time: 3.9935719032287595
Best scored revision CLL: -0.065541


Results 

CLL : -0.085093 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 30.2272197265625 

Total Inference Time : 0.9075253009796143 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.678
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15107822802880633;  // std dev = 6.404, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13771434373717742;  // std dev = 6.377, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16654546793788227;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10847294505227376;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11016007625319738;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10450289988593593;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07247904910232345;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06411874590494614;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.059357583930996285;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04272294470590206;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.104', 'seconds']
Parameter learned model CLL:-0.389494 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.404, 140, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.377, 136, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.302, 126, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
{'': [nan, 0.20712172227323788], 'false': [nan, 0.20712172227323788]}
{'': [nan, 0.209586566053779], 'false': [nan, 0.209586566053779]}
{'': [nan, 0.22668435583921914], 'false': [nan, 0.22668435583921914]}
{'': [nan, 0.21585538752363026], 'false': [nan, 0.21585538752363026]}
{'': [nan, 0.2228607704901599], 'false': [nan, 0.2228607704901599]}
{'': [nan, 0.2273189142110603], 'false': [nan, 0.2273189142110603]}
{'': [nan, 0.22349918875067826], 'false': [nan, 0.22349918875067826]}
{'': [nan, 0.22541227548055148]}
{'': [nan, 0.2279522497704311], 'false': [nan, 0.2279522497704311]}
{'': [nan, 0.22668435583921942], 'false': [nan, 0.22668435583921942]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.504
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12665621625699014;  // std dev = 0.154, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11352426319818383;  // std dev = 0.143, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10137570697023074;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09250635023951742;  // std dev = 1.84e-05, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08502794150648724;  // std dev = 4.59e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0786418622536456;  // std dev = 2.72e-05, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07312940581153154;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06832471344827346;  // std dev = 3.65e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.06410160446215858;  // std dev = 2.47e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.1139762238245975;  // std dev = 0.323, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.435', 'seconds']
Refined model CLL: -0.063634


******************************************
Best model found
******************************************
Results 

CLL : -0.06819 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.504 

Total Inference Time : 0.9355361461639404 

Total revision time: 3.9439807720184326
Best scored revision CLL: -0.063634


Results 

CLL : -0.06819 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.17762859535217 

Total Inference Time : 0.9355361461639404 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.911
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1914822684328412;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17551318353924422;  // std dev = 10.820, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1425856000253288;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10726709384682014;  // std dev = 10.977, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10848128690891932;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08517876990649212;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05800786384001665;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03867588541596441;  // std dev = 0.467, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03607481961336757;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030390964729471906;  // std dev = 10.934, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.071', 'seconds']
Parameter learned model CLL:-0.402537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.893, 356, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.82, 342, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.977, 373, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.814, 341, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.841, 346, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.929, 363, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 376, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.948, 367, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.934, 364, 178]}]
{'': [nan, 0.2222222222222253], 'false': [nan, 0.2222222222222253]}
{'': [nan, 0.2251331360946781], 'false': [nan, 0.2251331360946781]}
{'': [nan, 0.22284642202290014], 'false': [nan, 0.22284642202290014]}
{'': [nan, 0.21868834424128616], 'false': [nan, 0.21868834424128616]}
{'': [nan, 0.2253407137633133], 'false': [nan, 0.2253407137633133]}
{'': [nan, 0.2243021968416734], 'false': [nan, 0.2243021968416734]}
{'': [nan, 0.22076595337586177], 'false': [nan, 0.22076595337586177]}
{'': [nan, 0.21806618097459854]}
{'': [nan, 0.2199343489605243], 'false': [nan, 0.2199343489605243]}
{'': [nan, 0.22055799893792571], 'false': [nan, 0.22055799893792571]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 2.285
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.14185106490048807;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.12544463852839174;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.11231637819360693;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.10159632948783645;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.09269127618926074;  // std dev = 8.16e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.08518475138839678;  // std dev = 8.43e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.07877675473109146;  // std dev = 5.96e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333689;  // std dev = 1.07e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.06842697784420286;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.360', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.285 

Total Inference Time : 1.0734527111053467 

Total revision time: 5.080751558303833
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.31439938163757 

Total Inference Time : 1.0734527111053467 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.633
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16636811318170394;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19099727226204757;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1472081697360673;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.147967480786078;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11337718900186548;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06617362073703674;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05316950556582328;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030870265754601736;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03609035653369244;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04893803448913724;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.390029 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.465, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
{'': [nan, 0.21322011634453095], 'false': [nan, 0.21322011634453095]}
{'': [nan, 0.2287804575609152], 'false': [nan, 0.2287804575609152]}
{'': [nan, 0.22386794052801062], 'false': [nan, 0.22386794052801062]}
{'': [nan, 0.23120447450572318], 'false': [nan, 0.23120447450572318]}
{'': [nan, 0.2287804575609144], 'false': [nan, 0.2287804575609144]}
{'': [nan, 0.22057648249773537], 'false': [nan, 0.22057648249773537]}
{'': [nan, 0.220576482497736], 'false': [nan, 0.220576482497736]}
{'': [nan, 0.21647490577266496]}
{'': [nan, 0.22057648249773615], 'false': [nan, 0.22057648249773615]}
{'': [nan, 0.22714981070849175], 'false': [nan, 0.22714981070849175]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.35
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(A) )
%   | | | then return 0.22680915973966553;  // std dev = 0.326, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.24544775702783567;  // std dev = 0.335, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109162;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21213775592580292;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10592238743930783;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1788405014537933;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09616719983252486;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07378552753651686;  // std dev = 0.033, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06839260820044706;  // std dev = 1.67e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15406578492616038;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08832612454596546;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06416151485280162;  // std dev = 2.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13503833739788396;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08144774069545305;  // std dev = 0.002, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.414', 'seconds']
Refined model CLL: -0.067131


******************************************
Best model found
******************************************
Results 

CLL : -0.075405 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.35 

Total Inference Time : 0.8198385238647461 

Total revision time: 3.5149416522979737
Best scored revision CLL: -0.067131


Results 

CLL : -0.075405 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 29.748589475631714 

Total Inference Time : 0.8198385238647461 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.611
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.177297871269725;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13516744933520472;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1728508102186061;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11917823411178846;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1220550049049033;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049306630286940815;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08461622332724252;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052337593944068214;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0343969412575837;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0248937673229118;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.197', 'seconds']
Parameter learned model CLL:-0.380141 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
{'': [nan, 0.2172928927116352], 'false': [nan, 0.2172928927116352]}
{'': [nan, 0.21000000000000127], 'false': [nan, 0.21000000000000127]}
{'': [nan, 0.22959183673469422], 'false': [nan, 0.22959183673469422]}
{'': [nan, 0.2213992214532877], 'false': [nan, 0.2213992214532877]}
{'': [nan, 0.22878045756091442], 'false': [nan, 0.22878045756091442]}
{'': [nan, 0.2116051862673494], 'false': [nan, 0.2116051862673494]}
{'': [nan, 0.22714981070849152], 'false': [nan, 0.22714981070849152]}
{'': [nan, 0.22222222222222252]}
{'': [nan, 0.21975425330812784], 'false': [nan, 0.21975425330812784]}
{'': [nan, 0.21893276745510076], 'false': [nan, 0.21893276745510076]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.333
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360621;  // std dev = 7.45e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.18065305191124983;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10506339106919245;  // std dev = 0.314, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09240010915232938;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1554365418980227;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08493758512227133;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1361056733226526;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07856447608563052;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12087984648100789;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07306204348609127;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( female(A) )
%   | | then return 0.16519200314791446;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.16467441642628997;  // std dev = 0.058, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06826573545531725;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(A) )
%   | | | then return 0.14262586230196728;  // std dev = 0.274, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.1421857743377125;  // std dev = 0.274, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06404955674357432;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13663861555082996;  // std dev = 0.000379, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1420771216697449;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.498', 'seconds']
Refined model CLL: -0.068102


******************************************
Best model found
******************************************
Results 

CLL : -0.080274 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.333 

Total Inference Time : 0.8140759468078613 

Total revision time: 3.495236629486084
Best scored revision CLL: -0.068102


Results 

CLL : -0.080274 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.728884452819823 

Total Inference Time : 0.8140759468078613 

Starting experiments for fasttext using borda_count 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


