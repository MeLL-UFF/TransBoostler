Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.151
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1264416180263402;  // std dev = 4.914, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.20766349820630722;  // std dev = 4.839, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6390809633223202;  // std dev = 3.684, 86.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=69 */
%   | | | else return -0.16342981619065786;  // std dev = 0.068, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( location(A, I) )
%   | | | then return 0.072474413562445;  // std dev = 1.753, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307462;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08681407245031963;  // std dev = 4.408, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5987598266966345;  // std dev = 2.096, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.15073875337721554;  // std dev = 0.296, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5013758111357406;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07129586130220758;  // std dev = 1.363, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4291538603088888;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4559907657749296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7111494679167956;  // std dev = 0.128, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.058711754601101535;  // std dev = 5.097, 215.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5376987666928743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1309310436461135;  // std dev = 1.599, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3204028135495095;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14888983990825802;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0991294873518866;  // std dev = 5.324, 207.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40453195960538757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.04926901383297934;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.013693435789096884;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2599820076543532;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.20996567245423425;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3119220240671676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.05744060946496448;  // std dev = 2.032, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.0828071027991734;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05509775098687773;  // std dev = 4.845, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
%   | | | else return 0.026248135011613407;  // std dev = 1.919, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2495193451813825;  // std dev = 0.233, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24916493152404295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4946713258385666;  // std dev = 1.745, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.1978448091758642;  // std dev = 0.629, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.08153378861683788;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.040461380598986144;  // std dev = 4.201, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1676717973471803;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.271613178385761;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4492025923657379;  // std dev = 2.158, 76.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=71 */
%   | | else return -0.15790408725491875;  // std dev = 0.217, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20550507145598995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11393712252868692;  // std dev = 1.367, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16407916435888392;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.4076576704093522;  // std dev = 0.222, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.17927652589105572;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.050194038076767505;  // std dev = 1.309, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.29651888199873955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.022133307061028527;  // std dev = 1.648, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26015352849522183;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04501093162606883;  // std dev = 3.395, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.10722177157556376;  // std dev = 1.357, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12771023120632632;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2506695688818842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0887431532979725;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.022483959246376896;  // std dev = 2.293, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.187274097800514;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05788408649911469;  // std dev = 3.436, 100.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=40 */
%   | | | else return -0.016360094830877248;  // std dev = 1.460, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.728', 'seconds']
Parameter learned model CLL:-0.203568 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.914, 90, 33], 'false,false,true,false': [4.839, 67, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.684, 17, 69], 'false,false,true,false': [0.068, 152, 0], 'false,false,false,true': [1.753, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.05, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.408, 94, 34], 'false,true,false,true': [2.096, 5, 37], 'false,true,false,false': [0.296, 87, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.363, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.055, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.128, 0, 14], 'false,true,false': [5.097, 158, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.599, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.89, 1, 4], 'false,true': [5.324, 136, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.058, 0, 7], 'true,true,false': [0.611, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.032, 24, 12], 'false,false,true': [1.091, 2, 3], 'false,false,false,true': [4.845, 133, 55], 'false,false,false,false': [1.919, 17, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.233, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.745, 3, 33], 'true,false': [0.629, 86, 0], 'false,true': [0.873, 1, 3], 'false,false,true': [4.201, 94, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.122, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.158, 5, 71], 'false,true,false': [0.217, 159, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.367, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.127, 0, 8], 'true,false,true': [0.222, 2, 0], 'true,false,false': [0.014, 0, 3], 'false,true,true': [1.309, 44, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.648, 39, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.395, 79, 40], 'false,false,false,false': [1.357, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.009, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.228, 1, 3], 'false,true': [2.293, 86, 29], 'false,false,true': [1.097, 2, 3], 'false,false,false,true': [3.436, 60, 40], 'false,false,false,false': [1.46, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.21494013446459734], 'false': [1.4802973661668753e-16, 0.21164930555555686], 'false,false': [0.2120957005247085, 0.20408163265306106], 'false,false,true': [0.1963117192147544, 0.2273541332830628], 'false,false,false': [0.18750000000000003, 0.22222222222222224], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888899, 0.20590923029284044], 'false': [0.0, 0.2041939851496799], 'false,false': [0.20567436489771587, 0.18073913428100707], 'false,false,true': [0.1578282061284987, 3.0825422664731106e-05], 'false,false,false': [0.18073913428100707, nan], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true': [0.0, nan]}
{'': [0.00041042114951209385, 0.15814165353610282], 'false': [0.15495894504626176, 0.21145865856892818], 'false,false': [0.2222222222222222, 0.1688869776556214], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [0.1688869776556214, nan], 'false,true': [0.1517997337211339, 0.1580728175608236], 'false,true,false': [0.10457554321964964, 0.0010043506892132446], 'true': [0.0003103809943186264, 0.0]}
{'': [0.00033497870694806665, 0.14194076629555644], 'false': [0.1379476649339068, 0.20845045420612632], 'false,false': [0.0, 0.21309363458130504], 'false,false,false': [0.21309363458130504, nan], 'false,true': [0.0011721504770506438, 0.12083018022549304], 'false,true,true': [nan, 0.0011721504770507072], 'true': [0.000303002078098058, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07319606791725765, 0.1407239464008262], 'false': [0.13695487577163798, 0.17357459186398633], 'false,false': [0.0, 0.17383057368844257], 'false,false,false': [0.17283950617283958, 0.17283950617283947], 'true': [0.00011743597636910368, 0.15834641089359738], 'true,true': [0.00011743597636910368, nan], 'false,false,true': [nan, 0.0]}
{'': [0.032313329610425705, 0.12929243806259472], 'false': [0.11473729276711879, 0.1317077125668276], 'false,false': [0.23789802682499056, 0.12877097739619814], 'false,false,false': [0.12484498507695903, 0.1601201215629229], 'true': [0.03484107963123848, 0.0], 'true,true': [0.00047259516691755543, 0.09339397867034965], 'true,false': [nan, 0.0]}
{'': [0.12227613728896292, 0.1334670338471049], 'false': [0.19058901959374647, 0.13171300305435396], 'false,false': [0.13171300305435396, nan], 'true': [0.07674642226325247, 0.004606094685648646], 'true,true': [0.004936201281062929, 0.08461889781172009], 'true,true,false': [nan, 0.08461889781171975], 'true,true,true': [0.005429809990165535, 0.0]}
{'': [0.004023738656459482, 0.10368356751622915], 'false': [0.10066352560975272, 0.15625103907676255], 'false,false': [0.0, 0.1697569548869358], 'false,false,false': [0.1697569548869358, nan], 'false,true': [0.061261315495799364, 0.0002974244893999982], 'false,true,true': [nan, 0.06126131549579932], 'true': [4.625929269271485e-18, 0.002959237393915859], 'false,false,true': [0.0, nan]}
{'': [0.048254852129681725, 0.07567010711173817], 'false': [0.04170218248990382, 0.10251918244199842], 'false,false': [7.702564122811598e-06, 0.1038978402572688], 'false,false,false': [0.09684825291792246, 0.18421775560898343], 'true': [0.0020241029900946034, 0.09255404522562982], 'true,false': [0.024584941480313094, 7.008074111865732e-05], 'false,true': [0.03117046620745934, 0.04894211984605372], 'false,true,false': [0.0, 0.04849525392566734]}
{'': [0.006090834724688088, 0.08915057061768104], 'false': [0.04570781688932856, 0.1289698928975459], 'false,false': [0.24066839205027918, 0.12180309973210991], 'false,false,false': [0.11805059901539458, 0.14202655512352155], 'true': [0.0016639061559929197, 0.012976352503124016], 'true,true': [0.0016639061559929197, nan], 'true,true,true': [1.1732195218996139e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.439
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.12130682983635446;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.13474467978036264;  // std dev = 6.133, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7346284156694423;  // std dev = 2.670, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.15837662335345298;  // std dev = 0.165, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.04273140774930177;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.43270848221559605;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.38202967550590483;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.005566164371008698;  // std dev = 2.048, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.09076957754042636;  // std dev = 3.867, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5931018597009808;  // std dev = 2.092, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14079602243369443;  // std dev = 0.043, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.17031803784875285;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0023598640765872814;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08327539928728221;  // std dev = 1.323, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.45400217635562456;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.08418025082497664;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.41751358415830986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.619867631216525;  // std dev = 0.248, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.03337664942077867;  // std dev = 1.937, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
%   | | | else return 0.0847397561641848;  // std dev = 4.537, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5347195976744366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.11985694374488412;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.3911877371104749;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3380515896497864;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3821293253532475;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.566204463873241;  // std dev = 0.740, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.15342409198517554;  // std dev = 0.286, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.09722889625860243;  // std dev = 2.315, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.1318822521232223;  // std dev = 3.679, 111.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.40236577395989903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1601743051955631;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09913126690494624;  // std dev = 1.239, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.2512506650031987;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29481559259163836;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3367179940680227;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3104571146615207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.1907053880715671;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3493497501849797;  // std dev = 1.314, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.023245803566329503;  // std dev = 4.625, 221.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=55 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.09256023939949054;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.16983365255129057;  // std dev = 0.922, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23552118509310785;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5060947880688138;  // std dev = 0.109, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.15851382960953628;  // std dev = 0.062, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(E, E), enzyme(A, G) )
%   | | then return 0.32078964931912396;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.05483590516487202;  // std dev = 1.983, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.009920597677327333;  // std dev = 2.119, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5552026423698679;  // std dev = 0.214, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1543502397423638;  // std dev = 0.043, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.016148790498074116;  // std dev = 0.604, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18210087589615895;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.27401038623288454;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2606760517401632;  // std dev = 2.010, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return 0.2964335501391919;  // std dev = 2.392, 48.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=40 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.126664584480398;  // std dev = 0.188, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.15444298500305584;  // std dev = 0.212, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2068593596204611;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1624179926373186;  // std dev = 1.035, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.06410127166693767;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16142571006314504;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.8837057252117895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1722697767580759;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02175745749811788;  // std dev = 0.151, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23584452625501884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.023829957671118875;  // std dev = 1.603, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.037117185770422334;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.016127589378002922;  // std dev = 1.648, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.04946330107395233;  // std dev = 3.009, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.04218680067771641;  // std dev = 0.727, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1490765368463293;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.05061958528333463;  // std dev = 0.352, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.01906287748924121;  // std dev = 0.452, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, H), interaction(I, A) )
%   | then return -2.0040086150142024E-4;  // std dev = 0.244, 243.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=69 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.1013695405571971;  // std dev = 0.596, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.13634450168511664;  // std dev = 0.777, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.07629109988828171;  // std dev = 0.791, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07197503958154813;  // std dev = 0.968, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.009', 'seconds']
Refined model CLL: -0.189397


******************************************
Best model found
******************************************
Results 

CLL : -0.192831 

AUC ROC : 0.984318 

AUC PR : 0.27564 

Precision : 0.182026 

Recall : 0.847518 

F1 : 0.299687 

Total Learning Time : 5.439 

Total Inference Time : 6.39101505279541 

Total revision time: 20.51179489135742
Best scored revision CLL: -0.189397


Results 

CLL : -0.192831 

AUC ROC : 0.984318 

AUC PR : 0.27564 

Precision : 0.182026 

Recall : 0.847518 

F1 : 0.299687 

Total Learning Time : 20.52287682533264 

Total Inference Time : 6.39101505279541 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.222
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09123164186642853;  // std dev = 4.876, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.17283424978482617;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5190209441156064;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6100122940520396;  // std dev = 0.955, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6756153235823672;  // std dev = 3.535, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.15889649952619264;  // std dev = 0.072, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13379530847388582;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6052528714453924;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6386811456633409;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0733965716485986;  // std dev = 4.392, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6394801173019152;  // std dev = 1.918, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14355618202885093;  // std dev = 7.60e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8300291027813623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08017427664510285;  // std dev = 1.621, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3065201452419067;  // std dev = 1.586, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return -0.006914525649637571;  // std dev = 0.711, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5256995327498687;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5672514425112117;  // std dev = 1.608, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.024384811807587222;  // std dev = 5.193, 254.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5625861471498967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09427595504783569;  // std dev = 1.636, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.360210935753869;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3230833585003207;  // std dev = 1.021, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07373351963425356;  // std dev = 5.673, 268.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42288978979451797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04496026137486489;  // std dev = 1.674, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2929261642261184;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3196006374843189;  // std dev = 0.777, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3243588904403901;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.005595970193328058;  // std dev = 2.716, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.24421048810387389;  // std dev = 0.880, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.03571346565308586;  // std dev = 4.751, 194.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=51 */
%   | | | else return 0.05307754686664654;  // std dev = 2.234, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22315780420346204;  // std dev = 1.023, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.25765926163515696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2795272372174147;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5014368279435715;  // std dev = 1.461, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18007953817457312;  // std dev = 0.662, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.30355306895406986;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0905230011109341;  // std dev = 4.254, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return -0.024498527286684595;  // std dev = 1.204, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.23549381183629578;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38640981270933294;  // std dev = 3.106, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.1457573988867892;  // std dev = 0.275, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21151297700694682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.016755159225940043;  // std dev = 1.471, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20898504714823238;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.05143484896475171;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21861233224376733;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.0061876287015803725;  // std dev = 1.566, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20553870712829164;  // std dev = 0.456, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.036670076794206155;  // std dev = 1.387, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20300070692102637;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01430201822287361;  // std dev = 3.933, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | | else return 0.05134455423034878;  // std dev = 1.412, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16311514000654204;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18847893601144672;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7447382495771284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04944829787043262;  // std dev = 0.515, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.04571344281980396;  // std dev = 2.613, 150.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.011106710913456755;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019729205229456294;  // std dev = 3.917, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return -0.01009001252904928;  // std dev = 1.467, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.817', 'seconds']
Parameter learned model CLL:-0.195416 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.876, 102, 31], 'false,false,true,false': [5.553, 98, 45], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.518, 3, 10], 'false,true,true': [0.955, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.535, 15, 76], 'false,false,true,false': [0.072, 174, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.095, 0, 11], 'true,false': [0.005, 0, 6], 'false,true,true': [4.392, 103, 34], 'false,true,false,true': [1.918, 4, 48], 'false,true,false,false': [7.6e-08, 93, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.621, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.586, 3, 16], 'true,false': [0.711, 1, 1], 'false,true,true,true': [0.047, 0, 3], 'false,true,true,false': [1.608, 3, 21], 'false,true,false': [5.193, 196, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.636, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.021, 1, 10], 'false,true': [5.673, 186, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.674, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.061, 0, 9], 'true,true,false': [0.777, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.716, 63, 19], 'false,false,true': [0.88, 1, 8], 'false,false,false,true': [4.751, 143, 51], 'false,false,false,false': [2.234, 25, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.023, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.461, 3, 33], 'true,false': [0.662, 83, 0], 'false,true': [0.063, 0, 5], 'false,false,true': [4.254, 93, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.204, 2, 7], 'true,false': [0.061, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.106, 11, 82], 'false,true,false': [0.275, 178, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.471, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.115, 0, 9], 'true,false,true': [0.32, 1, 2], 'true,false,false': [0.114, 0, 5], 'false,true,true': [1.566, 31, 13], 'false,true,false,true': [0.456, 1, 8], 'false,true,false,false': [1.387, 47, 11], 'false,false,true': [0.049, 0, 5], 'false,false,false,true': [3.933, 117, 47], 'false,false,false,false': [1.412, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.097, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.515, 1, 3], 'false,true': [2.613, 118, 32], 'false,false,true': [0.883, 1, 5], 'false,false,false,true': [3.917, 106, 47], 'false,false,false,false': [1.467, 14, 4]}]
{'': [0.12749999999999959, 0.20508968904872646], 'false': [0.10937499999999978, 0.19806562080614667], 'false,false': [0.199537912203319, 0.17283950617283936], 'false,false,true': [0.17875515857312568, 0.21565846740672032], 'false,false,false': [0.17283950617283936, nan], 'true': [0.1224489795918365, 0.1388888888888887], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.1270800133458332, 0.20797469811828337], 'false': [0.11398409100688517, 0.20419294399462148], 'false,false': [0.2041969429516092, 0.2040816326530613], 'false,false,true': [0.13731730999882794, 2.966208610205132e-05], 'false,false,false': [0.2040816326530613, nan], 'true': [-6.344131569286608e-17, 0.17725533362160528], 'false,true': [0.11398409100688517, nan]}
{'': [0.0007904955690974739, 0.1572706203868582], 'false': [0.1549849922267663, 0.19714510330081936], 'false,false': [0.19714510330081936, nan], 'false,false,true': [0.0, 0.1751454689200506], 'false,true': [0.14081305218108825, 0.16639381133474415], 'false,true,false': [0.07072368325202749, 6.207698632312703e-17], 'true': [0.0008250041345666436, 4.174295790286091e-06]}
{'': [0.15236539592786055, 0.1335959593055462], 'true': [0.1324176039668298, 0.2529844402518942], 'false': [0.13034610511694972, 0.19216044244252906], 'false,false': [0.0, 0.1912652259295032], 'false,false,false': [0.1912652259295032, nan], 'false,true': [0.09600421875234481, 0.10615944808902594], 'false,true,true': [0.0007431969231909141, 0.1077200063471208], 'false,false,true': [nan, 0.0]}
{'': [0.058283335453936685, 0.12324931867314055], 'false': [0.12010436733321962, 0.17278830529878167], 'false,false': [0.0, 0.17518576682398485], 'false,false,false': [0.17518576682398485, nan], 'true': [1.586032892321652e-17, 0.09483666413452617], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03595097553570333, 0.11310526829422149], 'false': [0.08997741074588742, 0.12065222551451495], 'false,false': [0.08602922374816896, 0.12041067533019277], 'false,false,false': [0.11636220279248762, 0.14259535145268737], 'true': [0.038174937265252715, 0.0], 'true,true': [0.0004193399800266833, 0.0863176138285169], 'true,false': [nan, 0.0]}
{'': [0.11530326442339797, 0.12633227793280544], 'false': [0.0007985980248953583, 0.12925073365051767], 'false,false': [0.12925073365051767, nan], 'true': [0.07347916567089552, 0.005285390279460308], 'true,true': [0.06162942960417146, 0.05825231499847396], 'true,true,true': [0.0654112483329668, 0.0], 'true,true,false': [-9.25185853854297e-18, 0.05931868485427621]}
{'': [0.09338021596675149, 0.10147120987358782], 'false': [0.09971308803004267, 0.12942722465314394], 'false,false': [0.0, 0.13528521398297602], 'false,false,false': [0.13528521398297602, nan], 'false,true': [0.10373413437596314, 0.00042482226462231353], 'false,true,true': [nan, 0.10373413437596274], 'true': [0.1611406087399807, 0.0003766968064373266], 'false,false,true': [0.0, nan]}
{'': [0.01134147140557105, 0.07731378604678177], 'false': [0.04543979443827512, 0.09645885769897795], 'false,false': [0.00048591213536492984, 0.09821166269444029], 'false,false,false': [0.0943282229153825, 0.14243915821541178], 'false,true': [0.055768258688266785, 0.03861468724730125], 'false,true,false': [0.023065209944675022, 0.033147151276810574], 'true': [0.0014719961123919908, 0.02095390453163655], 'true,false': [0.03409034454584793, 0.0025914239297951335]}
{'': [0.05963605895977667, 0.07777143221573667], 'false': [0.045501204772703294, 0.10334906737884156], 'false,false': [0.13008397115173606, 0.1024099812513121], 'false,false,false': [0.10030590896158162, 0.11949900846605299], 'true': [0.05690215359042115, 0.06643355201059149], 'true,true': [0.0008799461395932718, 0.0], 'true,true,true': [3.96508223080413e-18, 0.001560145735699602], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.647
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.0636283871543069;  // std dev = 3.452, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.12975387337111682;  // std dev = 4.003, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.2638093124580024;  // std dev = 5.055, 106.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7175835450789306;  // std dev = 2.952, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.16352177304664522;  // std dev = 0.186, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.02291028078780515;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2744683354123684;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4015202829001308;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1116760223194771;  // std dev = 3.737, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | | else return -0.004378809423560246;  // std dev = 1.992, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5886437102927103;  // std dev = 2.320, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14409229277690003;  // std dev = 0.119, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.21182360351778814;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3506210124802924;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.18702013115966712;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4381427553814348;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.04466626859929437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4458786945901067;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5623336101546462;  // std dev = 0.295, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return -0.06893456835735723;  // std dev = 2.112, 101.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
%   | | | else return 0.09095047618716819;  // std dev = 4.375, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.46798302824769666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.4644575995134001;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02841537297007763;  // std dev = 1.142, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3832999506583002;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32938147181737676;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(F, H), complex(A, G) )
%   | | | then return -0.020886684585012055;  // std dev = 1.520, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.09167106901853847;  // std dev = 4.728, 179.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=62 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.05300883679687818;  // std dev = 1.631, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.010400300320481781;  // std dev = 1.769, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3552075104927188;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.07871118701335711;  // std dev = 1.357, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.11133607193328066;  // std dev = 0.866, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.28008354169478705;  // std dev = 0.281, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.278596544849013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5414767346547612;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, I) )
%   | | | then return -0.07065780765381449;  // std dev = 2.176, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   | | | else return 0.05855125493673076;  // std dev = 0.824, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.010483581419889624;  // std dev = 1.376, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.13501712872433455;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.03927042422168451;  // std dev = 2.593, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return 0.08777112573928031;  // std dev = 4.049, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28632181434562065;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.24236012472216906;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48319217444959683;  // std dev = 1.227, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.1741502465267619;  // std dev = 0.123, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.26145044056023214;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.04635631840650976;  // std dev = 3.733, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return -0.00868630093128548;  // std dev = 1.806, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15908177525298056;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19516069490948507;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19536540864746246;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.11745205977751712;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.198542764715199;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.19644140675623795;  // std dev = 1.544, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3757906453010587;  // std dev = 2.867, 72.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=63 */
%   | | else return -0.15651498429062025;  // std dev = 0.038, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.17999929619147437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.06935269780429586;  // std dev = 1.020, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09989389347208388;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19460637536112968;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E) )
%   | | then return 0.21561612939012298;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.3146849482442669;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10870556006885546;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.005536841651124823;  // std dev = 2.416, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return -0.07267851648387105;  // std dev = 0.597, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18269504098306039;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.05362056563519151;  // std dev = 1.987, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return -0.007800840051683213;  // std dev = 3.367, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.10572999446416421;  // std dev = 0.231, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.7554853869428617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.05164483048983162;  // std dev = 0.503, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.32237087079647336;  // std dev = 0.225, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.19250852537531535;  // std dev = 0.162, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J), interaction(K, H) )
%   | | | then return 0.04005839769468983;  // std dev = 2.465, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return -0.012880390646037269;  // std dev = 3.022, 147.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.21734767971566155;  // std dev = 1.248, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.017233722520178702;  // std dev = 1.058, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.426', 'seconds']
Refined model CLL: -0.199315


******************************************
Best model found
******************************************
Results 

CLL : -0.17086 

AUC ROC : 0.98849 

AUC PR : 0.315527 

Precision : 0.255689 

Recall : 0.720755 

F1 : 0.37747 

Total Learning Time : 5.647 

Total Inference Time : 6.901491403579712 

Total revision time: 21.97325305366516
Best scored revision CLL: -0.195416


Results 

CLL : -0.17086 

AUC ROC : 0.98849 

AUC PR : 0.315527 

Precision : 0.255689 

Recall : 0.720755 

F1 : 0.37747 

Total Learning Time : 21.98433498764038 

Total Inference Time : 6.901491403579712 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.465
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.13144086056534987;  // std dev = 5.655, 161.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7876572576907702;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15739975114568272;  // std dev = 0.026, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12425888996497862;  // std dev = 3.587, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.12627946409820293;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07802256463057328;  // std dev = 2.080, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6943721914874698;  // std dev = 0.290, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13872038844331372;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.195488423999471;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2887808282405143;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.16751358415830994;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3841442717994037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5972150943356245;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.056567366723013886;  // std dev = 4.293, 190.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5067219021656388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.13692279274728453;  // std dev = 3.426, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.19260033323104406;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3320540012616526;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33331424060626397;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05117245827521091;  // std dev = 4.292, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3822916377312794;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10666020754814028;  // std dev = 3.550, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.042613083333867006;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25292050361356105;  // std dev = 0.000312, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.18550688105561255;  // std dev = 0.699, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30310481077342766;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2968957073226176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.10165262018166166;  // std dev = 1.009, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26946918359784633;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0738051754678217;  // std dev = 3.990, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
%   | | | else return 0.0554129522180024;  // std dev = 3.715, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24199125199772098;  // std dev = 0.159, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22430155706571114;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20533370409730123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6130847905780161;  // std dev = 1.137, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.20075437139978597;  // std dev = 0.627, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22285011936631482;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.041136917988899006;  // std dev = 3.428, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17109478813073428;  // std dev = 0.000206, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1849794445210543;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4526740037219534;  // std dev = 0.764, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13875474230052018;  // std dev = 0.227, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1877314947721877;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019610331255038714;  // std dev = 3.109, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15559088236613391;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1280818310245069;  // std dev = 0.384, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.04857334916363774;  // std dev = 0.561, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07194976785099855;  // std dev = 0.405, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1937283131272799;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.006890323312683092;  // std dev = 1.225, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16029984508723183;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.038597344131383465;  // std dev = 2.679, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.02126856243694916;  // std dev = 3.084, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13413129991006206;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1539570178101423;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12949693864467093;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16563334377759678;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03851909632977656;  // std dev = 1.586, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1399165364321529;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0017599448954071864;  // std dev = 2.766, 135.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=36 */
%   | | | else return 0.015178382253189538;  // std dev = 3.090, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.688', 'seconds']
Parameter learned model CLL:-0.175312 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.473, 26, 8], 'false,false,true,false': [5.655, 117, 44], 'false,false,false,true': [3.7, 49, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.026, 144, 0], 'false,false,false,true': [3.587, 45, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.08, 24, 8], 'false,true,false,true': [0.29, 0, 48], 'false,true,false,false': [0.0, 118, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.491, 33, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.866, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.124, 0, 3], 'false,true,false': [4.293, 138, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.426, 34, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.051, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.071, 0, 9], 'false,true': [4.292, 147, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.55, 37, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.000312, 0, 7], 'true,true,false': [0.699, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.009, 31, 3], 'false,false,true': [0.058, 0, 6], 'false,false,false,true': [3.99, 107, 49], 'false,false,false,false': [3.715, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.159, 0, 12], 'true,true,true,false': [0.021, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.137, 1, 36], 'true,false': [0.627, 98, 0], 'false,true': [0.048, 0, 5], 'false,false,true': [3.428, 92, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.000206, 0, 6], 'true,false': [0.049, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.764, 0, 56], 'false,true,false': [0.227, 128, 0], 'false,false,true,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.109, 47, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.042, 0, 9], 'true,false,true': [0.384, 1, 1], 'true,false,false': [0.561, 1, 4], 'false,true,true': [0.405, 11, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.225, 40, 14], 'false,false,true': [0.037, 0, 5], 'false,false,false,true': [2.679, 75, 36], 'false,false,false,false': [3.084, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.02, 0, 5], 'true,true,true,false': [0.028, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.034, 0, 4], 'false,true': [1.586, 64, 17], 'false,false,true': [0.033, 0, 5], 'false,false,false,true': [2.766, 99, 36], 'false,false,false,false': [3.09, 46, 20]}]
{'': [-2.5376526277146434e-16, 0.20498086899688253], 'false': [-1.4802973661668753e-16, 0.19787824848700739], 'false,false': [0.1955555555555564, 0.20408163265306076], 'false,false,false': [0.20134083044982648, 0.25], 'false,false,true': [0.179930795847751, 0.19860344894101387], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.19958063907295545], 'false': [7.401486830834377e-17, 0.1959057391083849], 'false,false': [0.19285379548716244, 0.204266092254982], 'false,false,false': [0.20428617949432373, 0.20408163265306128], 'false,false,true': [0.051481012319607215, 4.609702606859593e-06], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.16313697874950928], 'false': [0.1419519022906024, 0.2291205358322235], 'false,false': [0.22807920770900975, 0.25000000000000006], 'false,false,false': [0.25000000000000006, nan], 'false,false,true': [0.0, 0.2299842152076753], 'false,true': [0.13516941472143124, 0.14316510154606354], 'false,true,false': [0.0017565999864696351, -6.39789539614497e-17], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [0.06222222222222236, 0.13003831796161175], 'false': [0.10003944249346186, 0.22300106883464113], 'false,false': [0.0019895310004241773, 0.22727792376126307], 'false,false,false': [0.22578271838280034, 0.24000000000000005], 'false,true': [0.012370729069864306, 0.09698738238468961], 'true': [1.6148698540002277e-16, 0.18749999999999997], 'false,true,true': [0.0, 0.005144511572420241], 'false,false,true': [0.0, 0.0]}
{'': [0.0005414881592926214, 0.12117036808223117], 'false': [0.09073365406867293, 0.21965775206615612], 'false,false': [0.0009480176516960537, 0.22505352001982346], 'false,false,false': [0.22499661868144433, 0.22222222222222224], 'false,false,true': [0.0, 0.0], 'true': [0.0005145778386488997, 0.000555871121997336], 'true,true': [0.0005145778386488997, nan]}
{'': [0.034102434048887985, 0.12225393626309983], 'false': [0.02992808891259661, 0.1320764442940439], 'false,false': [0.0005567614318651622, 0.13457846560835202], 'false,false,false': [0.10207266273782872, 0.2123536109380282], 'true': [0.041789358014149645, 0.000452992396810394], 'true,true': [1.38852677054681e-08, 0.09764342516585939], 'true,false': [0.000574382773656304, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13417718671951714, 0.08957221458736189], 'true': [0.054379861721883, 0.0040173206524418015], 'false': [0.0004602372058147841, 0.091811809566429], 'false,false': [0.091811809566429, nan], 'true,true': [0.001868690715653146, 0.03827124326958384], 'true,true,false': [0.0, 0.03493031307667849], 'true,true,true': [0.0021001816657344186, 0.0002115233236333544]}
{'': [0.0002171538606573526, 0.0948598381110354], 'false': [0.07751181970150318, 0.14091688499366173], 'false,false': [0.00016242419542983333, 0.14429924327978755], 'false,false,false': [0.14429924327978755, nan], 'false,true': [0.010434230067670016, 0.00040105945534808785], 'false,true,true': [nan, 0.010434230067670016], 'true': [7.096705491778839e-09, 0.00029739235515958973], 'false,false,true': [0.00016242419542983333, nan]}
{'': [0.03790055849010222, 0.07476744564484113], 'false': [0.026400657290495608, 0.09220852881644455], 'false,false': [0.0002794485652206913, 0.0943541308872261], 'false,false,false': [0.06463393657704633, 0.14414977867278972], 'true': [0.00019569077974891194, 0.0724264234585394], 'true,false': [0.07369236317903331, 0.06300374680254016], 'false,true': [0.013691411207181607, 0.028203532455888688], 'false,true,false': [0.0, 0.02781068497178161]}
{'': [0.0003812258960405601, 0.06949097264610708], 'false': [0.031056023765651686, 0.08395534146597264], 'false,false': [0.00022372507481137062, 0.08560401345978037], 'false,false,false': [0.056655922151389905, 0.1446950863080055], 'true': [0.00021790219467126282, 0.0002886394400402302], 'true,true': [0.00024324556469386416, 0.0], 'true,true,true': [8.07205686810808e-05, 0.00026845862664003534], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.732
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.09814893509951127;  // std dev = 4.775, 125.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | | else return 0.2140811384893424;  // std dev = 5.201, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8376061402664783;  // std dev = 0.057, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15911602576989037;  // std dev = 0.149, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2083193070576864;  // std dev = 2.366, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.13244174574340084;  // std dev = 2.783, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.03505389345779595;  // std dev = 1.329, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.12529487627148891;  // std dev = 1.566, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6815332806559797;  // std dev = 0.246, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14134502212802094;  // std dev = 0.070, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.17477936808410266;  // std dev = 0.532, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1428196696080312;  // std dev = 3.601, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.16103271907094782;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5057474536670201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2240159674530687;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return -0.01311496810846698;  // std dev = 1.507, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.07946949453102495;  // std dev = 3.805, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5074356367576838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5154212169585191;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08707365351394923;  // std dev = 3.547, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.28762314961425406;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( enzyme(A, G), enzyme(F, G) )
%   | | | then return -0.075145168416618;  // std dev = 0.622, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.03972289724472896;  // std dev = 2.477, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else return 0.06949876145712777;  // std dev = 0.315, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.3827975343604054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3884774329010461;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07227240575791144;  // std dev = 2.490, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.11969595824702461;  // std dev = 2.676, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2973886000705397;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.28449413669457874;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.09034082140330384;  // std dev = 0.587, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.030251705166626598;  // std dev = 0.487, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11838200837567514;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.005172242569489449;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.05186039841113756;  // std dev = 3.911, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
%   | | | else return 0.01677813689803779;  // std dev = 3.866, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23790360262797403;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.58652423508083;  // std dev = 1.520, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | else return -0.18617043610473016;  // std dev = 0.061, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2364173591596272;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.520840019060894;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14686289098732297;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.025204409709286217;  // std dev = 2.703, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | | else return 0.11615677595961268;  // std dev = 1.236, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16707421661275745;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then return -0.07579236136942302;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19440093407497944;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.2955503663895114;  // std dev = 0.998, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.4429163574263488;  // std dev = 1.003, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.1373501921075656;  // std dev = 0.027, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2020204357808883;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08489213210615011;  // std dev = 2.878, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return -0.01793115409406439;  // std dev = 0.991, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15471405699002683;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18494228994067227;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.05879782561371865;  // std dev = 0.386, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07913851743794345;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.13312244526910233;  // std dev = 0.340, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.024153571433646968;  // std dev = 1.411, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1825603371715327;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.01515739080576472;  // std dev = 2.540, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.04421284421352475;  // std dev = 3.053, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13682434090558732;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16149801771036415;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.05960122833094426;  // std dev = 0.265, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.018396707235096278;  // std dev = 1.219, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -2.9250044673205245E-4;  // std dev = 0.717, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.08433050791059017;  // std dev = 0.391, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15687655280011317;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.017707485654188206;  // std dev = 3.873, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | | | else return -0.09432319833358156;  // std dev = 1.047, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.974', 'seconds']
Refined model CLL: -0.175857


******************************************
Best model found
******************************************
Results 

CLL : -0.193407 

AUC ROC : 0.982398 

AUC PR : 0.199092 

Precision : 0.134769 

Recall : 0.790614 

F1 : 0.230284 

Total Learning Time : 2.732 

Total Inference Time : 2.929309129714966 

Total revision time: 10.044983598709106
Best scored revision CLL: -0.175312


Results 

CLL : -0.193407 

AUC ROC : 0.982398 

AUC PR : 0.199092 

Precision : 0.134769 

Recall : 0.790614 

F1 : 0.230284 

Total Learning Time : 10.056065532684325 

Total Inference Time : 2.929309129714966 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.661
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05814893509951237;  // std dev = 3.225, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return 0.16767274462332127;  // std dev = 5.189, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6311337978940015;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7853543786392231;  // std dev = 1.691, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1584505859633812;  // std dev = 0.085, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( location(A, K) )
%   | | | then return 0.16353188134455032;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5697828891465814;  // std dev = 0.109, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6238099792159979;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.045991711092198864;  // std dev = 2.810, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6035470547207715;  // std dev = 1.907, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14297738433513585;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4368867229893272;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.005053014621216882;  // std dev = 2.668, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11487963270010981;  // std dev = 1.393, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4404401907924857;  // std dev = 0.169, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5439825124894695;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5047243112798585;  // std dev = 0.713, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.025522698637149135;  // std dev = 4.494, 222.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.1132440916567398;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0566138490372482;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06295458115914755;  // std dev = 2.852, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.6593575610594146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31477485391890214;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37045933373087614;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.055141464413648505;  // std dev = 4.533, 207.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4187874136805353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4806940418453011;  // std dev = 0.088, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08847225219696758;  // std dev = 2.523, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.08525826425905453;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2499337499580897;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.38887864320450594;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.32157555885309375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.36568309665495735;  // std dev = 0.081, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07685635771116262;  // std dev = 1.328, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29641532399669057;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0805343345300604;  // std dev = 4.060, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
%   | | | else return 0.065940209043219;  // std dev = 3.084, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23537359270200595;  // std dev = 0.159, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27637454844872583;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22353877045954182;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5810558542726861;  // std dev = 1.107, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1731038879873428;  // std dev = 0.745, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2684995264081225;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.059504936065773166;  // std dev = 3.404, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16967566554297764;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07715592395483174;  // std dev = 0.916, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4185979596633772;  // std dev = 1.891, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13850629503226472;  // std dev = 0.209, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.04435336120620487;  // std dev = 0.936, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009130949844027176;  // std dev = 2.582, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15725960236175496;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18761410747370155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.040098607032695056;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08270676284182826;  // std dev = 0.318, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2612198156962164;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.019108549544869395;  // std dev = 1.471, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20621990074787613;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.064411766197961;  // std dev = 2.687, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.05083255578386249;  // std dev = 2.432, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12843551656956287;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17418353891423577;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15808755218492632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1682588741625926;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.029551989488692566;  // std dev = 0.676, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.011360385197102479;  // std dev = 1.681, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1745002927703193;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0187364998443073;  // std dev = 2.796, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return -0.05048986909555045;  // std dev = 2.698, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.185', 'seconds']
Parameter learned model CLL:-0.178565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.225, 52, 13], 'false,false,true,false': [5.189, 87, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.901, 1, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [1.691, 3, 52], 'false,false,true,false': [0.085, 154, 0], 'false,false,false,true': [2.728, 23, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.109, 0, 11], 'true,false': [0.093, 0, 4], 'false,true,true': [2.81, 52, 14], 'false,true,false,true': [1.907, 4, 42], 'false,true,false,false': [0.0, 86, 0], 'false,false,true,true': [0.746, 1, 3], 'false,false,true,false': [2.668, 39, 9], 'false,false,false,true': [1.393, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.169, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.713, 1, 6], 'false,true,false': [4.494, 173, 49], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.852, 33, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.018, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.115, 0, 6], 'false,true': [4.533, 151, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.088, 0, 2], 'false,false,false,true': [2.523, 23, 9], 'false,false,false,false': [1.361, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.006, 0, 9], 'true,true,false': [0.008, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.081, 0, 2], 'false,true': [1.328, 36, 5], 'false,false,true': [0.094, 0, 5], 'false,false,false,true': [4.06, 100, 46], 'false,false,false,false': [3.084, 32, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.159, 0, 13], 'true,true,true,false': [0.076, 0, 3], 'true,true,false,true': [0.071, 0, 3], 'true,true,false,false': [1.107, 1, 33], 'true,false': [0.745, 109, 0], 'false,true': [0.009, 0, 3], 'false,false,true': [3.404, 74, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.916, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.891, 3, 56], 'false,true,false': [0.209, 144, 0], 'false,false,true,true': [0.936, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.582, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.068, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.894, 1, 5], 'false,true,true': [0.318, 15, 1], 'false,true,false,true': [0.174, 0, 6], 'false,true,false,false': [1.471, 57, 17], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [2.687, 59, 31], 'false,false,false,false': [2.432, 27, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.021, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.011, 0, 2], 'true,false': [0.676, 2, 3], 'false,true': [1.681, 69, 24], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [2.796, 76, 31], 'false,false,false,false': [2.698, 42, 12]}]
{'': [0.10380622837370206, 0.20831597222222256], 'false': [-2.5376526277146434e-16, 0.19923004660244376], 'false,false': [0.19813053370247607, 0.2040816326530607], 'false,false,false': [0.19834710743801665, 0.2222222222222221], 'false,false,true': [0.15999999999999945, 0.2137188208616785], 'true': [-1.4802973661668753e-16, 0.23999999999999994], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05272791559325102, 0.19779421827456373], 'false': [0.10937500000000006, 0.19303203265964844], 'false,false': [0.18643896900587695, 0.2250340453800622], 'false,false,false': [0.21883947252276223, 0.0], 'false,false,true': [0.051980029793389546, 4.743682764164668e-05], 'false,true': [-6.344131569286608e-17, 0.0], 'true': [1.1102230246251565e-16, 0.10155388745766808], 'false,true,false': [nan, 0.0]}
{'': [0.0019485900228165321, 0.15046463357214906], 'false': [0.14370566044115168, 0.17035028246392778], 'false,false': [0.16141559990960702, 0.21567729830721474], 'false,false,false': [0.21567729830721474, nan], 'false,false,true': [0.13903744257193051, 0.14825654391754595], 'false,true': [0.11959603616855367, 0.15407144896833488], 'false,true,false': [0.0790294991551466, -4.3892538182855024e-17], 'true': [0.0010840496889893718, 0.002185529869171088]}
{'': [0.0018982533740181514, 0.11507002799392024], 'false': [0.09789601526485221, 0.19304777575031712], 'false,false': [0.2341030095843275, 0.1884653931165166], 'false,false,true': [0.2222222222222222, 0.25], 'false,false,false': [0.18484433051810817, 0.0], 'false,true': [0.06379743956966255, 0.09097309136769355], 'false,true,true': [0.0, 0.07271870871290893], 'true': [0.0018982533740181514, nan]}
{'': [0.001643252653528678, 0.11712488297533181], 'false': [0.09925581229733493, 0.20029686062924165], 'false,false': [0.003406604987316042, 0.20539703945959165], 'false,false,false': [0.19885063208420037, 0.23157440518638356], 'false,false,true': [0.0, 0.0038324306107306028], 'true': [3.67522395869408e-05, 0.002192546499283299], 'true,true': [3.67522395869408e-05, nan]}
{'': [0.004359034373405721, 0.12129529569852573], 'false': [0.04302596935065657, 0.13320436716525028], 'false,false': [0.0017629613173668402, 0.13540583600256664], 'false,false,false': [0.11287511674208639, 0.20675441973811193], 'true': [0.004120049627487491, 0.0026335522329397434], 'true,true': [3.748270541935482e-06, 1.6254585743835648e-05], 'true,false': [0.0, 0.0033018367190953413], 'true,false,true': [0.0, nan]}
{'': [0.1078960710592293, 0.10844024641162517], 'false': [2.522639202473531e-05, 0.11032452011239721], 'false,false': [0.11032452011239721, nan], 'true': [0.050659034190863136, 0.005097967572539369], 'true,true': [0.002192268516161361, 0.042791930729787514], 'true,true,false': [0.0016751712485670034, 0.03605622075375718], 'true,true,true': [0.0019404845241475148, 0.0019174563041872983]}
{'': [0.05461950778945264, 0.09632257691659789], 'false': [0.08181856915581703, 0.1573785124154414], 'false,false': [0.21886339217791861, 0.15155059693087003], 'false,false,true': [0.21886339217791861, nan], 'false,false,false': [0.15155059693087003, nan], 'false,true': [0.06060839354167272, 0.00030419976039825245], 'false,true,true': [nan, 0.060608393541672745], 'true': [-3.469446951953614e-18, 0.10495906428713668]}
{'': [0.05057896802930535, 0.07168735546540411], 'false': [0.02944715028300515, 0.09998762600601992], 'false,false': [1.7561461330769152e-05, 0.10182863070893723], 'false,false,false': [0.0802021348862341, 0.15160728111797764], 'true': [0.00046615408836175876, 0.11673765558773849], 'true,false': [0.0, 0.13308524253754814], 'false,true': [0.00630253370886747, 0.03288256940342406], 'false,true,false': [0.005066586226186544, 0.02924411996386216]}
{'': [0.03171279976976636, 0.0708029361603091], 'false': [0.03036792956552407, 0.09369524706828557], 'false,false': [1.361485442967029e-05, 0.09485486579724785], 'false,false,false': [0.07308436713367814, 0.1348077675631204], 'true': [0.00043703822068801555, 0.09130598858793597], 'true,true': [0.0003779746989056615, 6.131728889388159e-05], 'true,true,true': [-3.469446951953614e-18, 0.00021556825576934946], 'true,true,false': [0.0, 5.74906697497074e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;location(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.322
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.17890365208064443;  // std dev = 5.886, 159.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.50517232473028;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return 0.7636491318785207;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.24386620210599835;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8194753086567705;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15774588044733262;  // std dev = 0.146, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1897849837704703;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.3349462740930512;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5690592191305822;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3015936510922452;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return -0.028208538855231575;  // std dev = 1.550, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.24177389284628514;  // std dev = 1.958, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6437524553350804;  // std dev = 1.391, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14099480093953567;  // std dev = 0.049, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5765064962816556;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.02932778148314074;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.2323040274232582;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.4832855284014508;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F) )
%   | | then return 0.4474623960946394;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1280115764480159;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6696075207249412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3867011744539701;  // std dev = 1.033, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.04020284079702643;  // std dev = 0.305, 196.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.06094221739159793;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.07579568260293838;  // std dev = 2.800, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.07484609479765048;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32917496456543416;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.30810566232591363;  // std dev = 0.333, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.4903597518148452;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0040755671356310415;  // std dev = 2.369, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.042594852629542546;  // std dev = 1.830, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.11809404306390209;  // std dev = 2.800, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4198405610736704;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0044950839177965995;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.21399363467447596;  // std dev = 1.789, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2622374740470714;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4008406055206831;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32306717965745774;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11070824216813112;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.0304481813839777;  // std dev = 0.358, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10293337159991635;  // std dev = 0.834, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.212462963315171;  // std dev = 0.950, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.012914175730423054;  // std dev = 2.895, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return 0.0569543504674798;  // std dev = 4.146, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24705633341185537;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3287415661344702;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5026586178476259;  // std dev = 1.702, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.15923323982400142;  // std dev = 0.058, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3278872318279363;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4773195076144231;  // std dev = 0.680, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.17530060458572677;  // std dev = 0.157, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.0330267011489904;  // std dev = 1.278, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.1312607496416197;  // std dev = 2.001, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1737791506772539;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2514300885289708;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), interaction(A, H) )
%   | | | then return 0.32578248800009413;  // std dev = 0.779, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.4383350632237441;  // std dev = 0.975, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.13982885247268034;  // std dev = 0.404, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.09779856600304428;  // std dev = 1.590, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.023899185121745124;  // std dev = 1.542, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.26884106263121527;  // std dev = 1.122, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.013490145766470526;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1530406253663903;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1935296772812275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.057340875302304105;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( complex(A, H), location(A, I) )
%   | | then return -0.03480006583494115;  // std dev = 0.150, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.02144794236844514;  // std dev = 0.815, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.03437799452733477;  // std dev = 1.235, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.026501470334863886;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.265550129868827;  // std dev = 0.784, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.024806591963655096;  // std dev = 3.170, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13432859974133646;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.18646797645746502;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22139003059979234;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B), phenotype(G, I) )
%   | | | then return 0.20071579074097276;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04069620843730879;  // std dev = 1.733, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | else return 0.11955967144965769;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.21953680953456947;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.05969789173929722;  // std dev = 1.312, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -1.1698764999182342E-4;  // std dev = 3.243, 131.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.509', 'seconds']
Refined model CLL: -0.181791


******************************************
Best model found
******************************************
Results 

CLL : -0.187775 

AUC ROC : 0.982731 

AUC PR : 0.221293 

Precision : 0.150982 

Recall : 0.787986 

F1 : 0.253409 

Total Learning Time : 3.322 

Total Inference Time : 3.5691912174224854 

Total revision time: 11.585170944213868
Best scored revision CLL: -0.178565


Results 

CLL : -0.187775 

AUC ROC : 0.982731 

AUC PR : 0.221293 

Precision : 0.150982 

Recall : 0.787986 

F1 : 0.253409 

Total Learning Time : 11.596252878189087 

Total Inference Time : 3.5691912174224854 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.167
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19276431971489688;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18502724318693772;  // std dev = 5.340, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.1826207391218969;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11558882437536319;  // std dev = 4.915, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.15963333991596707;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.06863708584660766;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.10659794289602707;  // std dev = 6.724, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11660305654733355;  // std dev = 7.513, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08402941919767487;  // std dev = 7.577, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7353697079849232;  // std dev = 0.020, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26466935339854725;  // std dev = 0.030, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01848506103915789;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.060020726165683574;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03163607101515111;  // std dev = 3.858, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.07020089722778951;  // std dev = 5.788, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023335652674463078;  // std dev = 7.065, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020705188285891327;  // std dev = 7.071, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.593', 'seconds']
Parameter learned model CLL:-0.331794 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.34, 81, 44], 'false,false,false,false': [5.288, 80, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.915, 78, 35], 'false,false,false,false': [5.797, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.79, 51, 20], 'false,false,false,false': [6.724, 139, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.513, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.577, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 35], 'true,false': [0.03, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.307, 55, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.858, 76, 35], 'false,false,false,false': [5.788, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.065, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.071, 181, 87]}]
{'': [nan, 0.22264792899408373], 'false': [nan, 0.22264792899408373], 'false,false': [nan, 0.22264792899408373], 'false,false,false': [nan, 0.22264792899408373]}
{'': [nan, 0.22774128511966765], 'false': [nan, 0.22774128511966726], 'false,false': [nan, 0.22774128511966765], 'false,false,false': [0.22809599999999972, 0.22737788353493196]}
{'': [nan, 0.22264457834488782], 'false': [nan, 0.22264457834488782], 'false,false': [nan, 0.222644578344888], 'false,false,false': [0.21379377258359936, 0.22860514017003164]}
{'': [nan, 0.21537883698258994], 'false': [nan, 0.21537883698258994], 'false,false': [nan, 0.2153788369825899], 'false,false,false': [0.20234080539575533, 0.2195031668548897]}
{'': [nan, 0.22759940297488396], 'false': [nan, 0.22759940297488396], 'false,false': [nan, 0.22759940297488357], 'false,false,false': [nan, 0.22759940297488357]}
{'': [nan, 0.22424910245891522], 'false': [nan, 0.22424910245891522], 'false,false': [nan, 0.22424910245891483], 'false,false,false': [nan, 0.22424910245891538]}
{'': [0.2159202096699284, 0.21654773723996482], 'false': [nan, 0.21654773723996482], 'false,false': [nan, 0.21654773723996482], 'false,false,false': [0.20850480109739428, 0.22354478153578222], 'true': [1.1750630313400735e-05, 1.1787757911739161e-05], 'true,true': [nan, 1.1750630313400735e-05], 'true,true,false': [nan, 1.1750630313400735e-05]}
{'': [nan, 0.1886074842515122], 'false': [nan, 0.1886074842515122], 'false,false': [nan, 0.18860748425151208], 'false,false,false': [0.13408137018424635, 0.22941991829620126]}
{'': [nan, 0.1821795335236128], 'false': [nan, 0.1821795335236133], 'false,false': [nan, 0.1821795335236133], 'false,false,false': [nan, 0.1821795335236133]}
{'': [nan, 0.1865695870934344], 'false': [nan, 0.1865695870934344], 'false,false': [nan, 0.18656958709343555], 'false,false,false': [nan, 0.18656958709343555]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.244
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( enzyme(A, D), phenotype(A, E) )
%   | | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.11529179224236952;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.21189043169815078;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(C, A), recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.10916198268713116;  // std dev = 0.431, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), enzyme(A, G) )
%   | | | then return 0.4191836965373271;  // std dev = 1.482, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.15261381649673805;  // std dev = 2.292, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7933911149472092;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.11583501966427219;  // std dev = 3.431, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.20432021943778675;  // std dev = 4.407, 83.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5353339659463708;  // std dev = 0.400, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16244367890172404;  // std dev = 0.164, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( complex(A, F), complex(C, F) )
%   | | | then return 0.022520830122127744;  // std dev = 1.084, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.149541872737031;  // std dev = 4.767, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( complex(A, I), complex(G, I) )
%   | | then return 0.03394292256613399;  // std dev = 0.330, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.2781163982817404;  // std dev = 0.461, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then return 0.019597719757348964;  // std dev = 0.359, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.1385024353198544;  // std dev = 1.886, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.07452225460828167;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( complex(C, E) )
%   | then return -0.010354808619817876;  // std dev = 0.358, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5457853471529392;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.7135618893573978;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1688999377602896;  // std dev = 0.116, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5109547043465763;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6633616943789287;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15747704024336068;  // std dev = 0.001, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.18092450217664335;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return 0.10869340008497484;  // std dev = 3.815, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4103884956140652;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.6092088580866108;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.05089088792729685;  // std dev = 0.331, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6259225909940931;  // std dev = 0.127, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.19609145078750626;  // std dev = 0.052, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7009463438731472;  // std dev = 0.358, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.23419561659099225;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.49141249067290743;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11667704664155366;  // std dev = 3.106, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.4659554058668195;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(F, A), interaction(F, D) )
%   | | then return -0.09946588579722121;  // std dev = 0.259, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.15088060510738288;  // std dev = 0.994, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5053151453752072;  // std dev = 0.803, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(K, J) )
%   | | | then return 0.44041014751076624;  // std dev = 0.487, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.04803131259385636;  // std dev = 1.008, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( location(I, L), interaction(M, I) )
%   | | | then return 0.02050810004073099;  // std dev = 4.824, 163.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=45 */
%   | | | else return 0.24127645624609784;  // std dev = 1.580, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return -0.13966018580450773;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2331931239028992;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.5629484077702316;  // std dev = 0.685, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.3841076431831245;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.20464817254145135;  // std dev = 0.081, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(A, A) )
%   | then return -0.054925642620336494;  // std dev = 0.130, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.09559535126067253;  // std dev = 1.811, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.45457688617934944;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.04166755521413938;  // std dev = 4.145, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.3159216370545998;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22448084860640163;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.1741021261193132;  // std dev = 0.440, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3730405171203833;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14413123947617598;  // std dev = 0.199, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.050708947321069786;  // std dev = 2.811, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.06301518030085144;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.028678067087315566;  // std dev = 2.035, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05612734442575621;  // std dev = 2.042, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.002116537849759742;  // std dev = 3.721, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.03036621307698026;  // std dev = 0.230, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F), location(A, E) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.13546768150057856;  // std dev = 1.158, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.027115659254316814;  // std dev = 3.010, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return -0.13523921460236193;  // std dev = 0.833, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06143429048970759;  // std dev = 3.894, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L) )
%   | | | then return 0.22468498210924823;  // std dev = 0.411, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03919422321112036;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.015814472527234665;  // std dev = 0.568, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.22892428786828672;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then return 0.01753290595772892;  // std dev = 0.279, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(E, G) )
%   | | | then return -0.07752565800441398;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.1729923760971479;  // std dev = 0.766, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6154443653994034;  // std dev = 0.396, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.24850209538374263;  // std dev = 0.220, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.28936750593833743;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09159499007443589;  // std dev = 1.598, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.12686181868579804;  // std dev = 2.421, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.038757214548287865;  // std dev = 1.337, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.132', 'seconds']
Refined model CLL: -0.248155


******************************************
Best model found
******************************************
Results 

CLL : -0.262939 

AUC ROC : 0.969012 

AUC PR : 0.344324 

Precision : 0.290816 

Recall : 0.606383 

F1 : 0.393103 

Total Learning Time : 9.244 

Total Inference Time : 6.745368003845215 

Total revision time: 18.912618623733522
Best scored revision CLL: -0.248155


Results 

CLL : -0.262939 

AUC ROC : 0.969012 

AUC PR : 0.344324 

Precision : 0.290816 

Recall : 0.606383 

F1 : 0.393103 

Total Learning Time : 18.94072173690796 

Total Inference Time : 6.745368003845215 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.156
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18830766525824297;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1566275787494076;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.19475732340089116;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14528967587686628;  // std dev = 5.216, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.15504945398131278;  // std dev = 6.409, 181.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10969773843033107;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.08295884120158668;  // std dev = 7.238, 249.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11870779925196365;  // std dev = 8.215, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08088159950103255;  // std dev = 8.317, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7304974422523048;  // std dev = 0.007, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26952578717572023;  // std dev = 0.010, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09955828538043705;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.044437023302025404;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03596476701567102;  // std dev = 4.134, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.053674377554515235;  // std dev = 6.464, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06605169510433301;  // std dev = 7.481, 286.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043042400438866056;  // std dev = 7.529, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.312', 'seconds']
Parameter learned model CLL:-0.346991 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.933, 109, 52], 'false,false,false,false': [5.764, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.216, 81, 41], 'false,false,false,false': [6.409, 118, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.238, 174, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.215, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.317, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 41], 'true,false': [0.01, 99, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.821, 40, 23], 'false,false,false,false': [5.225, 86, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 85, 41], 'false,false,false,false': [6.464, 124, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.481, 182, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.529, 190, 104]}]
{'': [nan, 0.22115394305870698], 'false': [nan, 0.2211539430587056], 'false,false': [nan, 0.22115394305870698], 'false,false,false': [nan, 0.2211539430587056]}
{'': [nan, 0.22471378661650257], 'false': [nan, 0.22471378661650224], 'false,false': [nan, 0.22471378661650257], 'false,false,false': [0.21866440337950052, 0.2307098765432113]}
{'': [nan, 0.2253863408362593], 'false': [nan, 0.2253863408362593], 'false,false': [nan, 0.22538634083625844], 'false,false,false': [0.22301138587492408, 0.2269487864067487]}
{'': [nan, 0.21266281116200017], 'false': [nan, 0.21266281116200017], 'false,false': [nan, 0.21266281116199887], 'false,false,false': [0.21839506172839482, 0.21040109868771056]}
{'': [nan, 0.2280206133484612], 'false': [nan, 0.2280206133484612], 'false,false': [nan, 0.22802061334846066], 'false,false,false': [nan, 0.22802061334846066]}
{'': [nan, 0.22312123590241678], 'false': [nan, 0.22312123590241678], 'false,false': [nan, 0.22312123590241742], 'false,false,false': [nan, 0.22312123590241711]}
{'': [0.20710251635045074, 0.2223935066304389], 'false': [nan, 0.2223935066304389], 'false,false': [nan, 0.2223935066304389], 'false,false,false': [0.23179642227261307, 0.21667926429831272], 'true': [1.0433453497583053e-06, 1.0644285408734975e-06], 'true,true': [nan, 1.0433453497583053e-06], 'true,true,false': [nan, 1.0433453497583053e-06]}
{'': [nan, 0.18816475262560903], 'false': [nan, 0.18816475262560903], 'false,false': [nan, 0.18816475262560878], 'false,false,false': [0.13565087344181928, 0.2234221821927368]}
{'': [nan, 0.19568233077250083], 'false': [nan, 0.195682330772501], 'false,false': [nan, 0.195682330772501], 'false,false,false': [nan, 0.195682330772501]}
{'': [nan, 0.19283410326083317], 'false': [nan, 0.19283410326083317], 'false,false': [nan, 0.19283410326083306], 'false,false,false': [nan, 0.19283410326083306]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.749
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(E, A) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0.04862512557570285;  // std dev = 3.599, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.19148226843284438;  // std dev = 5.033, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7990140941127611;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.146494689569978;  // std dev = 0.058, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.7339281331150419;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(F, H) )
%   | | | then return 0.39898871968125443;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.8120167449579145;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4110529074294769;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.1546071349646919;  // std dev = 6.732, 223.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5727251922993736;  // std dev = 0.152, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.6608167633644946;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.23064547734021007;  // std dev = 1.118, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1511707237258813;  // std dev = 1.799, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.011948535875963557;  // std dev = 2.267, 50.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17532392374884212;  // std dev = 4.981, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
%   | | | else return 0.0714088459914241;  // std dev = 4.057, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then if ( complex(A, D) )
%   | | then return 0.4874753396818252;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.33494527035062927;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.4842371038673075;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(F, I), interaction(H, F) )
%   | | | then return 0.6633216137551079;  // std dev = 0.171, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.23415662453444125;  // std dev = 1.273, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else return -0.06387177570906641;  // std dev = 0.289, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then return 0.390718532026267;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.07393962434909086;  // std dev = 3.272, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.2105795931626577;  // std dev = 4.248, 81.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5768752218580165;  // std dev = 0.251, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return -0.2139179700584865;  // std dev = 0.114, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, F) )
%   | | | then return 0.49778101933248026;  // std dev = 0.873, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.17240926204945967;  // std dev = 0.251, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.15996405002886085;  // std dev = 0.296, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5573451130985426;  // std dev = 2.412, 45.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | | else return -0.2112093504358512;  // std dev = 0.329, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.199486900419259;  // std dev = 2.062, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.08216004933681656;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.04327427815794673;  // std dev = 0.369, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.27968929829334827;  // std dev = 0.068, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.31679836758779145;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5639816133975187;  // std dev = 0.477, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.15280652915870693;  // std dev = 0.255, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(J, L), location(A, M) )
%   | | | then return 0.035624216041347787;  // std dev = 2.417, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.23246392934473672;  // std dev = 1.598, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.015288572356040593;  // std dev = 4.417, 148.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=35 */
%   | | | else return 0.08729447529964174;  // std dev = 1.807, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3630245012803881;  // std dev = 0.169, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.15357920853101667;  // std dev = 0.068, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), complex(F, G) )
%   | | then if ( phenotype(E, H), complex(E, G) )
%   | | | then return 0.13600699279192954;  // std dev = 0.810, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.025769897921715988;  // std dev = 2.983, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else if ( phenotype(E, I) )
%   | | | then return 0.07061868642613994;  // std dev = 3.480, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.25310108080105864;  // std dev = 1.129, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.15922907314456852;  // std dev = 0.292, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.09615725219965351;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04941018753719707;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.2031233238431421;  // std dev = 0.203, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.053552207358134075;  // std dev = 0.233, 121.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=17 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), location(A, I) )
%   | | | then return 0.18371006799797465;  // std dev = 1.186, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.6256121752516676;  // std dev = 0.224, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.22668412011067704;  // std dev = 0.073, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.10347964898261064;  // std dev = 1.773, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.03784290070643487;  // std dev = 0.326, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( location(A, M) )
%   | | | then return 0.1566940090547542;  // std dev = 2.255, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.6723826938628984;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3351850176704263;  // std dev = 0.222, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.14184040706034787;  // std dev = 0.057, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.21641267775129205;  // std dev = 0.129, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( interaction(I, F), interaction(I, I) )
%   | | | then return -0.05574886190865013;  // std dev = 2.243, 88.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
%   | | | else return 0.014384484149005228;  // std dev = 3.316, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4738513558176279;  // std dev = 0.493, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18974108048973368;  // std dev = 0.273, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.038071256730784174;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.144132794402219;  // std dev = 0.964, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, C) )
%   | then return -0.030276508149754883;  // std dev = 0.225, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | else if ( complex(C, E), complex(A, E) )
%   | | then return -0.020528770447890678;  // std dev = 0.154, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(F, C), complex(F, G) )
%   | | | then return 0.059940307313672274;  // std dev = 3.862, 133.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=52 */
%   | | | else return 0.15335593659580446;  // std dev = 1.159, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(H, A) )
%   | then if ( complex(A, I), location(A, J) )
%   | | then return -0.05623844065794355;  // std dev = 0.171, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5133632838021267;  // std dev = 0.382, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.22763110901396227;  // std dev = 0.257, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( phenotype(A, L) )
%   | | then return -0.032367653126723614;  // std dev = 0.283, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return -0.23755534217227928;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.225', 'seconds']
Refined model CLL: -0.200636


******************************************
Best model found
******************************************
Results 

CLL : -0.20326 

AUC ROC : 0.974235 

AUC PR : 0.462992 

Precision : 0.393939 

Recall : 0.637736 

F1 : 0.487032 

Total Learning Time : 13.749 

Total Inference Time : 11.30483865737915 

Total revision time: 28.3230383682251
Best scored revision CLL: -0.200636


Results 

CLL : -0.20326 

AUC ROC : 0.974235 

AUC PR : 0.462992 

Precision : 0.393939 

Recall : 0.637736 

F1 : 0.487032 

Total Learning Time : 28.351141481399537 

Total Inference Time : 11.30483865737915 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.185
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16085033392683773;  // std dev = 5.850, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
%   | | | else return 0.13778822511605174;  // std dev = 5.334, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1923152286230788;  // std dev = 5.211, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   | | | else return 0.16536615798363402;  // std dev = 5.562, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1278542481494556;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.1408587944965503;  // std dev = 6.508, 184.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0945710374643081;  // std dev = 7.802, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07059897785315036;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.700177277923846;  // std dev = 0.990, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2776201683323977;  // std dev = 0.009, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06222366168792065;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.04841073536752002;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.042044435337222755;  // std dev = 4.268, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.06566208566900754;  // std dev = 5.585, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02126047571185385;  // std dev = 7.149, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015227204405927024;  // std dev = 7.149, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.477', 'seconds']
Parameter learned model CLL:-0.326674 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.85, 104, 51], 'false,false,false,false': [5.334, 93, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.211, 71, 44], 'false,false,false,false': [5.562, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.107, 48, 26], 'false,false,false,false': [6.508, 118, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.802, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 44], 'true,false': [0.009, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.069, 49, 25], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.268, 85, 44], 'false,false,false,false': [5.585, 89, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.149, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.149, 197, 92]}]
{'': [nan, 0.22543996435731922], 'false': [nan, 0.22543996435731875], 'false,false': [nan, 0.22543996435731922], 'false,false,false': [nan, 0.22543996435731875]}
{'': [nan, 0.21699931753690793], 'false': [nan, 0.21699931753690815], 'false,false': [nan, 0.21699931753690793], 'false,false,false': [0.22077003121748284, 0.21235241701938215]}
{'': [nan, 0.2325207335007185], 'false': [nan, 0.2325207335007185], 'false,false': [nan, 0.2325207335007184], 'false,false,false': [0.23610533816651336, 0.22913310527017244]}
{'': [nan, 0.22954425602148176], 'false': [nan, 0.22954425602148176], 'false,false': [nan, 0.229544256021483], 'false,false,false': [0.22790357925493088, 0.23015558663881483]}
{'': [nan, 0.22381553627269615], 'false': [nan, 0.22381553627269615], 'false,false': [nan, 0.22381553627269687], 'false,false,false': [nan, 0.22381553627269687]}
{'': [nan, 0.22181559910233342], 'false': [nan, 0.22181559910233342], 'false,false': [nan, 0.2218155991023335], 'false,false,false': [nan, 0.22181559910233362]}
{'': [0.2264469218771492, 0.22064242885669522], 'true': [0.02176521084013285, 9.67122613115552e-07], 'false': [nan, 0.22064242885669522], 'false,false': [nan, 0.22064242885669522], 'false,false,false': [0.2237034331628925, 0.21739969135802462], 'true,true': [nan, 0.02176521084013285], 'true,true,false': [nan, 0.02176521084013285]}
{'': [nan, 0.1858953167765942], 'false': [nan, 0.1858953167765942], 'false,false': [nan, 0.18589531677659318], 'false,false,false': [0.14122508666235342, 0.22768655746740812]}
{'': [nan, 0.1787075190828317], 'false': [nan, 0.17870751908283292], 'false,false': [nan, 0.17870751908283292], 'false,false,false': [nan, 0.17870751908283292]}
{'': [nan, 0.17682862258031845], 'false': [nan, 0.17682862258031845], 'false,false': [nan, 0.17682862258031773], 'false,false,false': [nan, 0.17682862258031773]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.436
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( location(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8248156017661784;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.17698951480965647;  // std dev = 5.475, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(D, C), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7619767299959268;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7988571465639955;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15495373901513124;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( interaction(D, D), location(G, H) )
%   | | | then return 0.12371434585354864;  // std dev = 1.043, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3491199819959428;  // std dev = 1.464, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.08745443394872537;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16409496404037535;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.7690747616159549;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10484530888297287;  // std dev = 0.424, 220.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6298048795827301;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, D), enzyme(C, E) )
%   | | then return -0.06455052121284006;  // std dev = 0.288, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | else if ( complex(A, F), interaction(C, C) )
%   | | | then return -0.03342214769024873;  // std dev = 1.286, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.1328664935534109;  // std dev = 5.288, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6465631051034019;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7057014024895083;  // std dev = 0.236, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14976613353972565;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14458043137985627;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17717581432229845;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then if ( enzyme(C, D) )
%   | | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.5558976106015203;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13293113029359443;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.13794549052322422;  // std dev = 1.264, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.05979051675651278;  // std dev = 0.381, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.0353415653730196;  // std dev = 0.307, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5799291383777588;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12316786435873033;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.4045305487909219;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.09810511704450449;  // std dev = 5.946, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37064994052319283;  // std dev = 0.246, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.17329399800763967;  // std dev = 0.549, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.1809076681651895;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(D, F) )
%   | | | then return 0.4408939465998183;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14182726951110697;  // std dev = 2.830, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, G), enzyme(A, I) )
%   | | | then return 0.10662892553256342;  // std dev = 1.213, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.04609329230966647;  // std dev = 1.687, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4920003140155873;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07362743181434403;  // std dev = 5.196, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), complex(E, D) )
%   | then return -0.010368105986448833;  // std dev = 0.354, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(F, C), phenotype(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.19307492835012505;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3602347481297603;  // std dev = 0.663, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(C, I) )
%   | | | then return -0.040484286509172206;  // std dev = 0.954, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.038258675040699026;  // std dev = 2.695, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   else if ( interaction(A, J), enzyme(A, K) )
%   | then return 0.010614733845890687;  // std dev = 0.292, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.4126326856160597;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.044598455250523604;  // std dev = 2.827, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.1655873088927467;  // std dev = 3.447, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.519296670214522;  // std dev = 0.182, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.19743319224195172;  // std dev = 0.074, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), enzyme(A, G) )
%   | | then return 0.11556343781422897;  // std dev = 0.355, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( phenotype(A, H), complex(E, I) )
%   | | | then return -0.07560336362727983;  // std dev = 1.317, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.05078723158668641;  // std dev = 3.145, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6216099728618136;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.22624229746858884;  // std dev = 0.147, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.3343961032646522;  // std dev = 1.221, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09296239701972436;  // std dev = 1.837, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.19138194813344517;  // std dev = 0.131, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4472197193429846;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.2790227661687383;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.005826885462676858;  // std dev = 2.063, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.082265138973668;  // std dev = 1.713, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.04611597802677485;  // std dev = 1.905, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.03590888302098436;  // std dev = 4.872, 168.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20075370754583327;  // std dev = 0.067, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return -0.016410442501759364;  // std dev = 1.357, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.13940330184400926;  // std dev = 0.950, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( interaction(J, D), complex(J, K) )
%   | | | then return 0.05525108229434805;  // std dev = 1.751, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.0480856341924739;  // std dev = 1.472, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(L, N), recursion_proteinclass(N, B) )
%   | | | then return 0.5926673150766455;  // std dev = 0.405, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.19091158215278875;  // std dev = 0.172, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return -0.04206990034319279;  // std dev = 1.456, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.012095271445928764;  // std dev = 4.311, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then return -0.0369597005026083;  // std dev = 0.228, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(C, I) )
%   | | | then return 0.02566026406654298;  // std dev = 1.020, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13095430054480484;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.0019029675172198733;  // std dev = 0.335, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   else if ( complex(A, J), phenotype(A, K) )
%   | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | then return 0.483346230048208;  // std dev = 0.133, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.21251431786884206;  // std dev = 0.193, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(M, A), interaction(A, N) )
%   | | then return -0.022018757603274652;  // std dev = 0.244, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.03655186088465336;  // std dev = 1.825, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.11154608680390202;  // std dev = 3.426, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.480', 'seconds']
Refined model CLL: -0.235907


******************************************
Best model found
******************************************
Results 

CLL : -0.245513 

AUC ROC : 0.970992 

AUC PR : 0.252445 

Precision : 0.215364 

Recall : 0.566787 

F1 : 0.312127 

Total Learning Time : 6.436 

Total Inference Time : 2.8779406547546387 

Total revision time: 12.288616844177247
Best scored revision CLL: -0.235907


Results 

CLL : -0.245513 

AUC ROC : 0.970992 

AUC PR : 0.252445 

Precision : 0.215364 

Recall : 0.566787 

F1 : 0.312127 

Total Learning Time : 12.316719957351685 

Total Inference Time : 2.8779406547546387 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.147
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18891816586874352;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16689486402701753;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
%   | | | else return 0.15431624767481444;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13531368047647233;  // std dev = 4.345, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.1395493145466717;  // std dev = 6.235, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09879996522195891;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.12109608276883695;  // std dev = 6.683, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10868952740670097;  // std dev = 7.529, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11373457986076822;  // std dev = 7.383, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7280043679947774;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27210333725068747;  // std dev = 0.007, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05007815781266312;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | | else return 0.046368412507662486;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06774405071170238;  // std dev = 3.303, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.05981446628479009;  // std dev = 6.163, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020312940077121668;  // std dev = 7.154, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031278806486755344;  // std dev = 7.041, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.634', 'seconds']
Parameter learned model CLL:-0.345319 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.888, 104, 52], 'false,false,false,false': [4.806, 72, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.345, 58, 28], 'false,false,false,false': [6.235, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [6.683, 134, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.529, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.383, 149, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.007, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.714, 68, 33], 'false,false,false,false': [4.122, 53, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.303, 48, 28], 'false,false,false,false': [6.163, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.154, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.041, 172, 86]}]
{'': [nan, 0.22136094674556292], 'false': [nan, 0.22136094674556275], 'false,false': [nan, 0.22136094674556292], 'false,false,false': [nan, 0.22136094674556275]}
{'': [nan, 0.22049997086416678], 'false': [nan, 0.22049997086416745], 'false,false': [nan, 0.22049997086416678], 'false,false,false': [0.22222222222222093, 0.2178711285154852]}
{'': [nan, 0.22046975790162426], 'false': [nan, 0.22046975790162426], 'false,false': [nan, 0.2204697579016247], 'false,false,false': [0.21957373940448716, 0.22090169622390093]}
{'': [nan, 0.22051161177614906], 'false': [nan, 0.22051161177614906], 'false,false': [nan, 0.2205116117761494], 'false,false,false': [0.21445847890352002, 0.2222328912524019]}
{'': [nan, 0.2249287937473482], 'false': [nan, 0.2249287937473482], 'false,false': [nan, 0.22492879374734828], 'false,false,false': [nan, 0.22492879374734828]}
{'': [nan, 0.23194134102825356], 'false': [nan, 0.23194134102825356], 'false,false': [nan, 0.23194134102825326], 'false,false,false': [nan, 0.23194134102825398]}
{'': [0.22623460774572438, 0.2190257372088028], 'true': [8.088451290331835e-07, 8.713196795938899e-07], 'false': [nan, 0.2190257372088028], 'false,false': [nan, 0.2190257372088028], 'false,false,false': [0.2199784334869125, 0.21778435239973687], 'true,true': [nan, 8.088451290331835e-07], 'true,true,false': [nan, 8.088451290331835e-07]}
{'': [nan, 0.2003940149489443], 'false': [nan, 0.2003940149489443], 'false,false': [nan, 0.20039401494894415], 'false,false,false': [0.1435313806583924, 0.22609800255707105]}
{'': [nan, 0.19094344097255864], 'false': [nan, 0.19094344097255866], 'false,false': [nan, 0.19094344097255866], 'false,false,false': [nan, 0.19094344097255866]}
{'': [nan, 0.1921494379591893], 'false': [nan, 0.1921494379591893], 'false,false': [nan, 0.19214943795918926], 'false,false,false': [nan, 0.19214943795918926]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.0
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( location(A, D), enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8196873966379734;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11601057031963713;  // std dev = 5.516, 159.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.31947341221095443;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8091148609153833;  // std dev = 0.144, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.057098469236919455;  // std dev = 3.924, 102.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=22 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16547860259972344;  // std dev = 3.881, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.2860208792382304;  // std dev = 2.729, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6153780845528709;  // std dev = 0.086, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(D, D), interaction(A, F) )
%   | | then return -0.11475732263304904;  // std dev = 0.032, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1596263165896789;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.15850235988708708;  // std dev = 5.285, 144.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=51 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7972611144010231;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16462400772165836;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5871639962407985;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.005348062833299197;  // std dev = 2.145, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.10499147580006442;  // std dev = 1.599, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, E) )
%   | then if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.39765353221230904;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6606145997436208;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.2566233778322099;  // std dev = 0.548, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4441183444275087;  // std dev = 0.225, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10137375003205337;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.140117937450248;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5128927638110305;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.03143583700299168;  // std dev = 3.010, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return 0.07707550707203144;  // std dev = 5.430, 166.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(C, D) )
%   | | then return 0.3099854298415605;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.43342658582392507;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10730923817113128;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.09250488106920442;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(A, G), phenotype(E, H) )
%   | | | then return 0.09336922406368567;  // std dev = 1.894, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.0020458604115050224;  // std dev = 2.289, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.08197242959288162;  // std dev = 4.704, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.21653345115056075;  // std dev = 2.509, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.5401735502890076;  // std dev = 0.207, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.19215063294286036;  // std dev = 0.128, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.17674282240385134;  // std dev = 0.045, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( enzyme(A, H), interaction(F, F) )
%   | | then return 0.3546603637877812;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0.02092309778972179;  // std dev = 2.222, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.18066416776115063;  // std dev = 1.902, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then return -0.014913752675695079;  // std dev = 0.335, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.022673378010519323;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.04065952268622112;  // std dev = 3.687, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17681860797305848;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5483300723935574;  // std dev = 0.143, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.15459411567465764;  // std dev = 0.073, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(F, H), recursion_proteinclass(G, B) )
%   | | then return 0.44914259813610397;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3698935530207097;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.009128975705626947;  // std dev = 3.583, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then return 0.37610349507244617;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.0635972180673541;  // std dev = 1.760, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.17780747561456153;  // std dev = 2.472, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22460552305995232;  // std dev = 0.119, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(F, H) )
%   | | | then return -0.032941342378637814;  // std dev = 0.860, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.1461629018726202;  // std dev = 1.185, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3058868041653463;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.05184144008396902;  // std dev = 2.010, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5754807023838427;  // std dev = 0.238, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06835153059827236;  // std dev = 3.685, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return -0.03420696175791003;  // std dev = 2.158, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.07890150112873433;  // std dev = 1.893, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), interaction(E, A) )
%   | | then return -0.13873835654871286;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.30478781585946657;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, G), phenotype(G, H) )
%   | | then return -0.05806916677114401;  // std dev = 0.246, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | else return 0.02686266676900796;  // std dev = 0.370, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.24413785049877745;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.051474453675175676;  // std dev = 3.075, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return -0.11296219708494581;  // std dev = 1.162, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.029472476512263358;  // std dev = 1.273, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.16428187554712204;  // std dev = 2.195, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1418858511249941;  // std dev = 0.147, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07741892949356345;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.20739510820074197;  // std dev = 0.784, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.10451588652888355;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.045173678958003095;  // std dev = 1.751, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4830321432493066;  // std dev = 0.710, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.19277008332107795;  // std dev = 0.468, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.028369063092997984;  // std dev = 1.548, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.019532166771966092;  // std dev = 4.133, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.982', 'seconds']
Refined model CLL: -0.235688


******************************************
Best model found
******************************************
Results 

CLL : -0.230949 

AUC ROC : 0.922712 

AUC PR : 0.270139 

Precision : 0.268657 

Recall : 0.572438 

F1 : 0.365688 

Total Learning Time : 8.0 

Total Inference Time : 3.8281235694885254 

Total revision time: 14.682020589828491
Best scored revision CLL: -0.235688


Results 

CLL : -0.230949 

AUC ROC : 0.922712 

AUC PR : 0.270139 

Precision : 0.268657 

Recall : 0.572438 

F1 : 0.365688 

Total Learning Time : 14.71012370300293 

Total Inference Time : 3.8281235694885254 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12005369700427287;  // std dev = 4.935, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | | | else return 0.14847151574467235;  // std dev = 5.055, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6928258672205172;  // std dev = 3.196, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15919126513386325;  // std dev = 0.023, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16653882456488167;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4442553256351734;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.30536643674628444;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09807319501709488;  // std dev = 4.354, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5611540397502209;  // std dev = 2.421, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return -0.14055116000900528;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30876090948223145;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1586299135163513;  // std dev = 1.288, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.2867172808405609;  // std dev = 1.305, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.444757028945841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6346538520374997;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.09324721393178653;  // std dev = 4.932, 188.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5693203793643093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.00423794120221835;  // std dev = 1.752, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.37034122138300923;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.40033977613933447;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05189124713741151;  // std dev = 5.641, 243.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4279447397785163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08898395632183671;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.017701580138206396;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29669412260919337;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.41448676850485855;  // std dev = 0.204, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32779250566007667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.016938548583453283;  // std dev = 2.176, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3067187513092008;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05971380764659457;  // std dev = 4.873, 186.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=55 */
%   | | | else return 0.11796675656847694;  // std dev = 1.806, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2641632509015425;  // std dev = 0.220, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25999803537586597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5874617576741201;  // std dev = 0.409, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1798241541833613;  // std dev = 0.419, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24564660428925986;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0697787304386752;  // std dev = 4.063, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19157732076683653;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19410976344738262;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4107978023737995;  // std dev = 2.600, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.1569502356449508;  // std dev = 0.278, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21316084950172787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11364942743551856;  // std dev = 1.293, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17511946181076912;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18762449053556496;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.029595442074289227;  // std dev = 1.305, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3073162991983842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.002678751082966078;  // std dev = 1.805, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17344264237153717;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03613634633795266;  // std dev = 3.520, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | | else return -0.07448915235553051;  // std dev = 1.514, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13670779622452064;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25538974044335194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06341072873617344;  // std dev = 0.614, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.006790114865150844;  // std dev = 2.287, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.10292217116240499;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06496356765337392;  // std dev = 3.277, 106.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=40 */
%   | | | else return 0.018651639553723183;  // std dev = 1.410, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.879', 'seconds']
Parameter learned model CLL:-0.203967 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.935, 93, 33], 'false,false,true,false': [5.055, 88, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.196, 12, 69], 'false,false,true,false': [0.023, 151, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.354, 84, 34], 'false,true,false,true': [2.421, 7, 37], 'false,true,false,false': [0.0, 61, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.288, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.305, 2, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.964, 1, 14], 'false,true,false': [4.932, 131, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.752, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.034, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [5.641, 172, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.021, 0, 7], 'true,true,false': [0.204, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.176, 33, 12], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [4.873, 131, 55], 'false,false,false,false': [1.806, 10, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.22, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.409, 0, 33], 'true,false': [0.419, 74, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [4.063, 83, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.05, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.6, 8, 71], 'false,true,false': [0.278, 149, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.293, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.127, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.021, 0, 3], 'false,true,true': [1.305, 35, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.805, 40, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.52, 83, 40], 'false,false,false,false': [1.514, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.028, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.614, 2, 3], 'false,true': [2.287, 68, 29], 'false,false,true': [0.876, 1, 3], 'false,false,false,true': [3.277, 66, 40], 'false,false,false,false': [1.41, 9, 4]}]
{'': [-1.6148698540002277e-16, 0.20454254182983295], 'false': [1.4802973661668753e-16, 0.20099353184546484], 'false,false': [0.19982400000000036, 0.22222222222222207], 'false,false,false': [0.22222222222222224, 0.22222222222222224], 'false,false,true': [0.19331065759637314, 0.20603537981269632], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [-8.074349270001139e-17, 0.21064896003424857], 'false': [0.13910247278836857, 0.2096792717838521], 'false,false': [0.20899122563483483, 0.2222222222222224], 'false,false,false': [0.2222222222222224, nan], 'false,false,true': [0.12610310898479318, 3.574184997269093e-06], 'false,true': [0.13910247278836857, nan], 'true': [7.401486830834377e-17, 0.0]}
{'': [0.1301775147928993, 0.17183107033892425], 'false': [0.16851938704362587, 0.22659688604458542], 'false,false': [0.25, 0.2073822237503094], 'false,false,true': [nan, 0.25], 'false,false,false': [0.2073822237503094, nan], 'false,true': [0.1606783038968626, 0.17570585081160445], 'false,true,false': [0.13324280136345742, -4.7320981377465686e-17], 'true': [0.0987654320987654, 0.1875]}
{'': [0.13283914484261322, 0.14865023419152812], 'false': [0.14445558414074994, 0.18720285378806528], 'false,false': [0.0, 0.1804748884794331], 'false,false,false': [0.1804748884794331, nan], 'false,true': [0.062000211264789114, 0.12937527216228378], 'true': [0.14198779958094532, 0.0], 'false,true,true': [nan, 0.062000211264789114], 'false,false,true': [nan, 0.0]}
{'': [0.00038541556416209086, 0.13443906515258594], 'false': [0.13095784762552212, 0.18416936951188684], 'false,false': [0.0, 0.18600094357312258], 'false,false,false': [0.2222222222222222, 0.16000000000000003], 'true': [0.0001611024208173812, 0.00020529147299006012], 'true,true': [0.0001611024208173812, nan], 'false,false,true': [nan, 0.0]}
{'': [0.006477081403872497, 0.12825949071073164], 'false': [0.10520615634959338, 0.13285296319366482], 'false,false': [0.00019014210972869336, 0.13396339837612703], 'false,false,false': [0.12767414837288313, 0.2039513082440068], 'true': [0.007123155671238402, 0.0], 'true,true': [6.51755484532319e-05, 0.013879200758766067], 'true,false': [nan, 0.0]}
{'': [0.12079870285571204, 0.13171718249493367], 'false': [0.00014355537580741187, 0.13418987846928998], 'false,false': [0.13418987846928998, nan], 'true': [0.024540981973222378, 0.0023689377771533827], 'true,true': [0.004391966910460227, 0.005065593909328979], 'true,true,false': [nan, 0.005065593909329032], 'true,true,true': [0.004829586417835774, 0.0]}
{'': [0.00023111423336299251, 0.10555581889818133], 'false': [0.10296536568637502, 0.15268855967041403], 'false,false': [0.0, 0.16705718626276095], 'false,false,false': [0.16705718626276095, nan], 'false,true': [0.08553919816906891, 0.0005175109051561718], 'false,true,true': [nan, 0.0855391981690688], 'true': [-4.625929269271485e-18, 0.0005049531683457287], 'false,false,true': [0.0, nan]}
{'': [0.0015369252875635205, 0.08108062391756078], 'false': [0.04886533118028801, 0.1037801749713255], 'false,false': [8.532764081123818e-05, 0.10550872641835257], 'false,false,false': [0.1007599455266258, 0.1272830262123481], 'false,true': [0.03699584958023101, 0.05781870408741616], 'false,true,false': [0.0, 0.05717622367565898], 'true': [0.0020167979056239307, 0.0001435371593481588], 'true,false': [nan, 0.0001435371593481588]}
{'': [0.04094956424082409, 0.08661607529252249], 'false': [0.0539145981658513, 0.1107428772718698], 'false,false': [0.19192713768137987, 0.10715180095436483], 'false,false,false': [0.10130845973842383, 0.15288701687091585], 'true': [0.001640164507494657, 0.07541068235429915], 'true,true': [0.001640164507494657, nan], 'true,true,true': [0.00011379823740581155, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 6.959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, G), interaction(H, A) )
%   | | | then return 0.175456627407206;  // std dev = 6.713, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
%   | | | else return 0.3581489350995123;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6120465143490742;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6872507675376175;  // std dev = 3.173, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16351863384622958;  // std dev = 0.136, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.23731256435706363;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.066258864214365;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5798459865986513;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2747623810808858;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.12015105832029584;  // std dev = 3.061, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.243805621267658;  // std dev = 2.548, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6166170742243191;  // std dev = 1.894, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14501920377776284;  // std dev = 0.056, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.1130938364409011;  // std dev = 1.328, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.019331173383146723;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.0640021599501866;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.48930306718918537;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.43781330031699994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3958234963503765;  // std dev = 3.610, 95.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=68 */
%   | | | else return -0.15460196685246846;  // std dev = 0.538, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0613046377946995;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.034258264266775966;  // std dev = 0.623, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5888670551192061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.42106337674714456;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.124275661929394;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3137387287853542;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4685439480572789;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2827550896553772;  // std dev = 3.647, 101.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=68 */
%   | | | else return -0.12937621561291998;  // std dev = 0.325, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.08568080948510474;  // std dev = 0.801, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.19062198307333725;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4428549722773518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.101772221106382;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12044732745189912;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2743003962604007;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.33795109970244774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.1137090676932575;  // std dev = 1.282, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.04224002648727918;  // std dev = 1.528, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( location(A, J) )
%   | | | then return -0.15337801397128903;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11819920326048744;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.37688174638699995;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.04952592544294153;  // std dev = 3.142, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.08556665897637372;  // std dev = 2.644, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22762147966205876;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.42146034792665665;  // std dev = 0.807, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5030797480747898;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.19163869614664242;  // std dev = 0.112, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.043242728919855034;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3493473973784678;  // std dev = 1.432, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return -0.16224280688199746;  // std dev = 0.464, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.0490127566244078;  // std dev = 1.332, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.023698271387798075;  // std dev = 1.868, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16631019114912862;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24731228354075646;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.20794724972541523;  // std dev = 2.381, 51.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=41 */
%   | | | else return 0.3831575747456056;  // std dev = 0.354, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return -0.11862721069691927;  // std dev = 0.441, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.1445621473164004;  // std dev = 0.579, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2247824262228305;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.16150586857674426;  // std dev = 0.801, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.0549754800960448;  // std dev = 1.260, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15674843824534856;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17677476441704756;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.0553631026115944;  // std dev = 1.148, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.01494253118679146;  // std dev = 0.936, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.10717319892470328;  // std dev = 0.522, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.02763867560430898;  // std dev = 1.693, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.16318868412175178;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return -8.079777279834011E-4;  // std dev = 2.628, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return 0.052137024666607704;  // std dev = 1.459, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.08892371801625935;  // std dev = 0.176, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F), enzyme(A, G) )
%   | | then if ( location(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.17268392368536273;  // std dev = 1.066, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.04171342461258107;  // std dev = 0.852, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( interaction(A, I), location(I, E) )
%   | | | then return -0.021212422779895615;  // std dev = 1.670, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.0363402246954455;  // std dev = 2.321, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(L, K) )
%   | | | then return -0.07414556012191113;  // std dev = 1.040, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.040156241943050626;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.028926749199474924;  // std dev = 0.388, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06762184073423337;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.306', 'seconds']
Refined model CLL: -0.183097


******************************************
Best model found
******************************************
Results 

CLL : -0.193299 

AUC ROC : 0.98682 

AUC PR : 0.270607 

Precision : 0.163493 

Recall : 0.882979 

F1 : 0.2759 

Total Learning Time : 6.959 

Total Inference Time : 15.69535493850708 

Total revision time: 31.00246458816528
Best scored revision CLL: -0.183097


Results 

CLL : -0.193299 

AUC ROC : 0.98682 

AUC PR : 0.270607 

Precision : 0.163493 

Recall : 0.882979 

F1 : 0.2759 

Total Learning Time : 31.023792322158812 

Total Inference Time : 15.69535493850708 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10033643509951119;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.1542015666784588;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7194734122109543;  // std dev = 5.96e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6587640315674476;  // std dev = 3.721, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.15815416053077677;  // std dev = 0.048, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( location(A, I) )
%   | | | then return 0.24808102275960012;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5748487639902972;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3053664367462846;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05223051102365722;  // std dev = 4.475, 149.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.549676652532316;  // std dev = 2.863, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14432879525997813;  // std dev = 0.306, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8132925330446111;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0802699945452633;  // std dev = 1.596, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.2498507696721716;  // std dev = 1.804, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.4127833115686962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.510720474520098;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.615521537517854;  // std dev = 1.333, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.035055189784181255;  // std dev = 5.274, 249.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5310472382476192;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09757094631407458;  // std dev = 1.610, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.382884723147303;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3884243815218486;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05421285560974943;  // std dev = 5.905, 299.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.399704069947595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.16995764729249702;  // std dev = 1.497, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12375148359704577;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.1916598539883774;  // std dev = 1.158, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30865765777223975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.01024289171663016;  // std dev = 2.852, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1812594944746113;  // std dev = 0.970, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05846377475889251;  // std dev = 4.800, 183.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=51 */
%   | | | else return 0.03405152928026652;  // std dev = 2.265, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3184678310263885;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24692874654751218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.28853220795977474;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.511736022831552;  // std dev = 1.380, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17364523108819213;  // std dev = 0.739, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.07380773273603614;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0942941679165874;  // std dev = 4.418, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.2137570219143281;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2315609778477627;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3659522534047274;  // std dev = 3.477, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.14342554633509105;  // std dev = 0.302, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.3115020861986556;  // std dev = 0.729, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0020767296223510113;  // std dev = 1.421, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19776101919889488;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18958059544765526;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23593697890787907;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03164313288838817;  // std dev = 1.780, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08948094473448247;  // std dev = 1.156, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.03708759974540484;  // std dev = 1.450, 63.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18999409422101204;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0543317396329563;  // std dev = 3.765, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | | else return -0.02543998839340126;  // std dev = 1.448, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15265286551974144;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.194599788872012;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1956096770937772;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.016506727741043885;  // std dev = 2.539, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16253603106257092;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02832043115309265;  // std dev = 3.954, 150.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=47 */
%   | | | else return 0.035177202290817854;  // std dev = 1.369, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.155', 'seconds']
Parameter learned model CLL:-0.20041 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.847, 97, 31], 'false,false,true,false': [5.628, 107, 45], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [5.96e-08, 0, 10], 'false,true,true': [0.074, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.721, 17, 76], 'false,false,true,false': [0.048, 177, 0], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.049, 0, 11], 'true,false': [1.225, 2, 6], 'false,true,true': [4.475, 115, 34], 'false,true,false,true': [2.863, 10, 48], 'false,true,false,false': [0.306, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.596, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.804, 4, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.033, 0, 3], 'false,true,true,false': [1.333, 2, 21], 'false,true,false': [5.274, 191, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.61, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.117, 0, 10], 'false,true': [5.905, 217, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.497, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [1.27, 2, 9], 'true,true,false': [1.158, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.852, 64, 19], 'false,false,true': [0.97, 1, 8], 'false,false,false,true': [4.8, 132, 51], 'false,false,false,false': [2.265, 28, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.25, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.38, 3, 33], 'true,false': [0.739, 97, 0], 'false,true': [0.919, 1, 5], 'false,false,true': [4.418, 93, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.057, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.477, 16, 82], 'false,true,false': [0.302, 202, 0], 'false,false,true,true': [0.729, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.421, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.12, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.094, 0, 5], 'false,true,true': [1.78, 45, 13], 'false,true,false,true': [1.156, 2, 8], 'false,true,false,false': [1.45, 52, 11], 'false,false,true': [0.049, 0, 5], 'false,false,false,true': [3.765, 101, 47], 'false,false,false,false': [1.448, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.091, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.078, 0, 3], 'false,true': [2.539, 92, 32], 'false,false,true': [0.044, 0, 5], 'false,false,false,true': [3.954, 103, 47], 'false,false,false,false': [1.369, 9, 4]}]
{'': [-2.0898315757650005e-16, 0.20347943098808202], 'false': [0.10937499999999978, 0.19638755011035647], 'false,false': [0.19775510204081673, 0.17283950617283936], 'false,false,true': [0.18353271484375117, 0.2084054709141286], 'false,false,false': [0.17283950617283936, nan], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [-1.4802973661668753e-16, 0.0]}
{'': [0.0524691358024694, 0.20776283370180232], 'false': [0.0007884305269265011, 0.2038751372359048], 'false,false': [0.2019804620541801, 0.24000000000000013], 'false,false,false': [0.24000000000000013, nan], 'false,false,true': [0.14888195127364626, 1.284280502234324e-05], 'true': [0.10937500000000011, 3.552713678800501e-16], 'false,true': [0.0007884305269265011, nan]}
{'': [0.09677549642731587, 0.1519764194713433], 'false': [0.14939204870699335, 0.2031867618139004], 'false,false': [0.2031867618139004, nan], 'false,false,true': [0.0, 0.18187863248026287], 'false,true': [0.13442007462356095, 0.16187147450465963], 'false,true,false': [0.14130429422703408, 0.0009013452623858503], 'true': [0.00021689204276720275, 0.1874999999999999]}
{'': [0.15625122986654758, 0.13847459557666528], 'true': [0.1627996478737386, 0.0], 'false': [0.13539028617092055, 0.19755639220445484], 'false,false': [0.0, 0.1993314880680397], 'false,false,false': [0.1993314880680397, nan], 'false,true': [0.0695554540897767, 0.11172179995340298], 'false,true,true': [0.00037272898487764977, 0.07731198824463541], 'false,false,true': [nan, 0.0]}
{'': [0.0008140810863441631, 0.12050266613653884], 'false': [0.11661477901374732, 0.20817693561034886], 'false,false': [0.0, 0.2241961365602188], 'false,false,false': [0.2241961365602188, nan], 'true': [-3.172065784643304e-17, 0.0013713016877058947], 'false,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.14982786001560638, 0.12044888453541693], 'true': [0.15649184640716438, 0.0], 'true,true': [0.14652700470658794, 0.16752366087907433], 'false': [0.098031352533178, 0.12725862099654997], 'false,false': [0.10461759656981623, 0.12754958546948197], 'false,false,false': [0.12588950730630377, 0.13505068705364498], 'true,false': [nan, 0.0]}
{'': [0.10743435790624938, 0.13946610956837813], 'false': [0.1407837057743913, 0.13939239345983367], 'false,false': [0.13939239345983367, nan], 'true': [0.04506748014833416, 0.005635446423054687], 'true,true': [0.004204835105661914, 0.05234641327983042], 'true,true,false': [9.25185853854297e-18, 0.05287631108084348], 'true,true,true': [0.0041652924080346635, 0.0]}
{'': [0.0002704391143040284, 0.10150650828149692], 'false': [0.09766518402553241, 0.17010314760248524], 'false,false': [0.26565710667888004, 0.1441611228036799], 'false,false,true': [0.26565710667888004, nan], 'false,false,false': [0.1441611228036799, nan], 'false,true': [0.12333508405571626, 0.00045266081269523475], 'false,true,true': [nan, 0.12333508405571626], 'true': [0.0, 0.0003292249691310478]}
{'': [0.0017956865765475782, 0.07879230188863058], 'false': [0.05153210183378594, 0.09741350279376117], 'false,false': [0.00048374542150887435, 0.09975990740089802], 'false,false,false': [0.09575624223225654, 0.13105111367630692], 'false,true': [0.054620568994110094, 0.04901562013022832], 'false,true,false': [0.13361500529102927, 0.03339268102781658], 'true': [0.0016007849819489512, 0.0016966419705512017], 'true,false': [0.0, 0.0017613232480541807]}
{'': [0.0013365174536217987, 0.08293809247788385], 'false': [0.05197069310287122, 0.10476066749182648], 'false,false': [0.00038060662370825726, 0.10743074400797196], 'false,false,false': [0.10423492049407548, 0.1442623650836778], 'true': [0.0010704745522413304, 0.0020369668368562985], 'true,true': [0.0010704745522413304, nan], 'true,true,true': [-3.96508223080413e-18, 0.0013719145566986196]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.398
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H), location(A, J) )
%   | | | then return -0.011416282291792045;  // std dev = 2.284, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | | else return 0.14847151574467363;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17875962212241253;  // std dev = 5.342, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | | | else return 0.1287371703936294;  // std dev = 4.096, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6285643213018633;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.39649933343834465;  // std dev = 1.120, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7028097136591493;  // std dev = 3.217, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.15863068432786542;  // std dev = 0.109, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.053402327113682424;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.5016327887138062;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.49949667822910543;  // std dev = 0.262, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.44308335042116637;  // std dev = 0.330, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12238384223507498;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.07198495043896078;  // std dev = 4.376, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6393042330974037;  // std dev = 1.913, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13841756192309093;  // std dev = 0.070, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.5426835770663555;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4205825876803675;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1866571830427603;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.40022383038728754;  // std dev = 0.238, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.45358156550132267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.517915499226265;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5474894476333172;  // std dev = 1.563, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.14795640648912928;  // std dev = 0.361, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.07285641203295497;  // std dev = 4.916, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5006670382032239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.14219327547193464;  // std dev = 1.067, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.050542789804818855;  // std dev = 1.146, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35913496130638656;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2033192981684709;  // std dev = 0.360, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H), enzyme(F, I) )
%   | | | then return 0.2518380414632456;  // std dev = 0.690, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.028816446153551653;  // std dev = 3.096, 104.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=26 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2374218901523109;  // std dev = 1.623, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08707105606752853;  // std dev = 4.257, 133.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3780110536452983;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.12217508228546747;  // std dev = 1.469, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.11970634541805496;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.11659428271114125;  // std dev = 0.371, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.43890666716579263;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2940052996975966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.46974365182364397;  // std dev = 0.240, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return -0.022207210266340052;  // std dev = 0.286, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5857581893107676;  // std dev = 0.190, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20029111948577;  // std dev = 0.596, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.09824696893720207;  // std dev = 2.802, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.03114416933511547;  // std dev = 2.756, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.39683103749685694;  // std dev = 0.186, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | else return -0.149000604258337;  // std dev = 0.075, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(A, G), phenotype(E, H) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return -0.469431621179345;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08907961418119408;  // std dev = 2.751, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | else if ( enzyme(E, I) )
%   | | | then return 0.14526828363743147;  // std dev = 1.094, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.03126701906781032;  // std dev = 2.692, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.08172529584751387;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11813340503470408;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12699922348479237;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19036894600890447;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return -0.11328272093914471;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.27330316365698976;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.3191868738133558;  // std dev = 3.015, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return 0.3416193870412868;  // std dev = 0.858, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.14406359784699027;  // std dev = 0.037, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.2104215926029298;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03531225532014783;  // std dev = 0.697, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11044696599287321;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18298101343513867;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2956933428334062;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21504243706202417;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then return -0.022594348682008474;  // std dev = 0.227, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.15710580039824143;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.038203829545490356;  // std dev = 0.544, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.23740188416495128;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.015102969085640227;  // std dev = 2.286, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.045858954525771725;  // std dev = 2.995, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15873143390931263;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2053425712971532;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H), phenotype(A, I) )
%   | | | then return -0.1199794224370502;  // std dev = 1.548, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return -0.010789021589336822;  // std dev = 0.836, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.04808542861492305;  // std dev = 1.342, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.01504985185572067;  // std dev = 1.334, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.19715338294599905;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.025812942610212213;  // std dev = 2.211, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.059503657015970414;  // std dev = 3.082, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.089', 'seconds']
Refined model CLL: -0.20105


******************************************
Best model found
******************************************
Results 

CLL : -0.179299 

AUC ROC : 0.988591 

AUC PR : 0.296169 

Precision : 0.255659 

Recall : 0.724528 

F1 : 0.377953 

Total Learning Time : 6.398 

Total Inference Time : 11.000288248062134 

Total revision time: 26.799505353927614
Best scored revision CLL: -0.20041


Results 

CLL : -0.179299 

AUC ROC : 0.988591 

AUC PR : 0.296169 

Precision : 0.255659 

Recall : 0.724528 

F1 : 0.377953 

Total Learning Time : 26.820833087921145 

Total Inference Time : 11.000288248062134 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.562
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.053270886319024574;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.15746866299066772;  // std dev = 5.552, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5735252546657348;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8399807272339271;  // std dev = 0.036, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15943017541775503;  // std dev = 0.062, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11903634370733734;  // std dev = 3.598, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.5042374912085715;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5719988521761975;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07464699368035874;  // std dev = 2.072, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6831021384041515;  // std dev = 0.189, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14161245898717337;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.032678245684577355;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10395704269338403;  // std dev = 3.730, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07818449889164703;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.34627386396569926;  // std dev = 0.949, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.42037926479283466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4219493215324114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4077991641353322;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04444342780594353;  // std dev = 4.245, 202.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.6612749276454615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.56570992675028;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11078364141700459;  // std dev = 3.536, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.023031148119433742;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3479893795463612;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23993581018218163;  // std dev = 0.934, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05404011786796494;  // std dev = 4.234, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.5019264830263237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4252296584513421;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1347696429667351;  // std dev = 3.502, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.1329414008820111;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28662462029704716;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.10853060687061371;  // std dev = 0.977, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.37889982791202104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2639788353397462;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3259476884944691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06702001167300924;  // std dev = 1.013, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.279951382317537;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.030346251581215376;  // std dev = 4.117, 189.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=49 */
%   | | | else return 0.04603947024423502;  // std dev = 3.772, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27434193126234213;  // std dev = 0.251, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2766736054643669;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24670756794426274;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6466625541100122;  // std dev = 0.748, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18199712031948345;  // std dev = 0.569, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.05533308141986254;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08479101788229218;  // std dev = 3.252, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1846240691202071;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20551287566645252;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4300621572004595;  // std dev = 1.199, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13862802991244041;  // std dev = 0.239, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22490987623077374;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.008074117308215997;  // std dev = 3.170, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1765184877954258;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16746505937955813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.192802592233601;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05682847679120609;  // std dev = 0.427, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20552799266835686;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.024622559165096907;  // std dev = 1.354, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.01355662881449691;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04006261432461728;  // std dev = 2.636, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.026736885216286733;  // std dev = 3.115, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13038961684930298;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1929563022091603;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.16514421166913548;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1638860917739523;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013052541806804175;  // std dev = 1.356, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17928240557476968;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027993591708245467;  // std dev = 2.663, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.0342339199297247;  // std dev = 3.059, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.501', 'seconds']
Parameter learned model CLL:-0.174698 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.538, 33, 8], 'false,false,true,false': [5.552, 103, 44], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.938, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.036, 0, 52], 'false,false,true,false': [0.062, 132, 0], 'false,false,false,true': [3.598, 46, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.072, 25, 8], 'false,true,false,true': [0.189, 0, 48], 'false,true,false,false': [0.0, 121, 0], 'false,false,true,true': [0.734, 3, 1], 'false,false,true,false': [3.73, 48, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.949, 1, 11], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.63, 1, 3], 'false,true,false': [4.245, 150, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.536, 41, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.012, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.934, 1, 9], 'false,true': [4.234, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.502, 35, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.032, 0, 7], 'true,true,false': [0.977, 2, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.013, 21, 3], 'false,false,true': [0.03, 0, 6], 'false,false,false,true': [4.117, 140, 49], 'false,false,false,false': [3.772, 50, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.251, 0, 12], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.748, 0, 36], 'true,false': [0.569, 100, 0], 'false,true': [0.92, 1, 5], 'false,false,true': [3.252, 69, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.041, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.199, 1, 56], 'false,true,false': [0.239, 154, 0], 'false,false,true,true': [0.022, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.17, 53, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.13, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.047, 0, 4], 'false,true,true': [0.427, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.354, 46, 14], 'false,false,true': [0.919, 1, 5], 'false,false,false,true': [2.636, 73, 36], 'false,false,false,false': [3.115, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.006, 0, 5], 'true,true,true,false': [0.079, 0, 3], 'true,true,false,true': [0.761, 1, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.043, 0, 4], 'false,true': [1.356, 53, 17], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.663, 75, 36], 'false,false,false,false': [3.059, 45, 20]}]
{'': [0.06222222222222188, 0.20907872501602534], 'false': [0.12244897959183662, 0.2026297577854685], 'false,false': [0.2000905387052973, 0.2094007574069944], 'false,false,false': [0.21063240110859105, 0.18750000000000003], 'false,false,true': [0.1570493753718027, 0.2097274283863215], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [0.08999999999999977, 0.0]}
{'': [8.940649933978204e-05, 0.20813304465367014], 'false': [0.12831133071993397, 0.20442120185634768], 'false,false': [0.20253026362489465, 0.2094850969800871], 'false,false,false': [0.20224416703870823, 0.2222222222222222], 'false,false,true': [2.4293004996887536e-05, 2.9517298969810977e-05], 'false,true': [0.14665357183646888, 0.0], 'true': [0.0, 9.126913474255538e-05], 'false,true,false': [nan, 0.0]}
{'': [0.00011808527048527497, 0.154475415482716], 'false': [0.13719681807089715, 0.20033913807945053], 'false,false': [0.20102738195027225, 0.1875], 'false,false,true': [0.13477997058146318, 0.20464202922898855], 'false,false,false': [0.1875, nan], 'false,true': [0.13012644096899242, 0.1385246169148297], 'false,true,false': [0.0007478033648051774, -1.1377492153183421e-16], 'true': [6.936680898717018e-05, 0.00013402688233110638]}
{'': [0.06099492966275251, 0.12279873859527284], 'false': [0.09212737773889293, 0.2131548888481119], 'false,false': [0.0022831673490239512, 0.21183434544131496], 'false,false,false': [0.211937439117524, 0.2040816326530612], 'false,true': [0.07952201701789378, 0.08920045402040402], 'false,true,true': [0.0, 0.09936247588149483], 'true': [0.07511434509854158, 0.00012397957419552075], 'false,false,true': [0.0, 0.0]}
{'': [0.060729442821836434, 0.12188691068685467], 'false': [0.09006674228208945, 0.22271494512193366], 'false,false': [0.0014706007249714048, 0.22681084459223644], 'false,false,false': [0.22706559213780989, 0.22222222222222224], 'true': [3.106759831310591e-05, 0.0871867724828183], 'false,false,true': [0.0, 0.0], 'true,true': [3.106759831310591e-05, nan]}
{'': [0.0687316171063019, 0.11355035513771893], 'false': [0.042717464569943436, 0.11901172698878673], 'false,false': [0.00014776449642003864, 0.12040223746202589], 'false,false,false': [0.08966644067595586, 0.20320917305403263], 'true': [0.08145018536476173, 0.002205655818222685], 'true,true': [0.00014680905137290763, 0.15922548260256078], 'true,false': [0.00330170863344921, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13160917552802084, 0.10293925840191971], 'true': [0.041234090914785373, 0.0032418690666113957], 'false': [0.1410015841305009, 0.10071736187268521], 'false,false': [0.10071736187268521, nan], 'true,true': [0.004533657643290675, 0.01931107500747601], 'true,true,false': [0.0, 0.015524142650688195], 'true,true,true': [0.005234898802300492, 0.0003215506567309373]}
{'': [0.00025400158033976405, 0.08772710891902544], 'false': [0.07084500458545591, 0.13522113231183658], 'false,false': [0.00024388586047185967, 0.1376653324946615], 'false,false,false': [0.1376653324946615, nan], 'false,true': [0.02520360858493136, 0.00037196349638339294], 'false,true,true': [nan, 0.02520360858493136], 'true': [6.8133264548025e-05, 0.00020639900050076904], 'false,false,true': [0.00024388586047185967, nan]}
{'': [0.0014294009547179726, 0.07825346971418957], 'false': [0.029983373104518866, 0.09618810282227074], 'false,false': [0.14069099368562266, 0.09465581446117897], 'false,false,false': [0.0637676439121232, 0.14479674332627027], 'false,true': [0.02022070862680905, 0.031201450639011006], 'false,true,false': [0.0, 0.03053281265463685], 'true': [0.0018749055433539676, 0.0005466135087829005], 'true,false': [0.0, 0.0005548687717526826]}
{'': [0.05625941551198296, 0.07375860893980002], 'false': [0.026266517463912373, 0.09149737337100174], 'false,false': [3.1034658901873954e-05, 0.09348269210383665], 'false,false,false': [0.06391197244358657, 0.14395582278073843], 'true': [0.07403909485915733, 0.0004606728563436198], 'true,true': [0.0016997274537584421, 0.192937774911951], 'true,true,false': [0.192937774911951, nan], 'true,true,true': [7.21253457663662e-06, 0.0020739668293201646]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.53
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.15038637802188537;  // std dev = 6.730, 219.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=64 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7353395955528769;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7313730497173963;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8209737145431077;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15713057263077118;  // std dev = 0.123, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.29481811138255976;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.2055054901590026;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.590740418098581;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5715406026790919;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.020635330704902588;  // std dev = 1.404, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.05827728884035472;  // std dev = 1.634, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6650341148556014;  // std dev = 1.016, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1402054204103837;  // std dev = 0.032, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4782872097403581;  // std dev = 2.450, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return -0.20514525993358954;  // std dev = 0.247, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.4757566798423851;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.15790485007533317;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.443938579788452;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.445397063526422;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.539082104059567;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.028327735001493423;  // std dev = 1.439, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.10795065070514882;  // std dev = 3.783, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.43636949419475035;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.37174957518091417;  // std dev = 0.970, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06417432225579055;  // std dev = 3.220, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36280467225269797;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.34431371873076405;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3321580622970739;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11109450833503072;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1150498765803062;  // std dev = 2.249, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.05677635974165145;  // std dev = 3.424, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.33352627886357633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.005903313507633545;  // std dev = 2.393, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.09299976654138706;  // std dev = 2.502, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2722280413041322;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3262256996073172;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2696689853917565;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.11342640183042334;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.08139601159231855;  // std dev = 0.689, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06808328423241876;  // std dev = 0.486, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2708138942106414;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03241496766604627;  // std dev = 3.219, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | | | else return 0.07857905687367413;  // std dev = 4.040, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4676036632145849;  // std dev = 0.232, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.19028413389077095;  // std dev = 0.076, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(F, G), enzyme(A, H) )
%   | | then if ( phenotype(E, I) )
%   | | | then return 0.05165305354729792;  // std dev = 0.883, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.03138395407956167;  // std dev = 1.041, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(F, J), phenotype(E, K) )
%   | | | then return 0.0113048164356137;  // std dev = 1.698, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.09020610517200085;  // std dev = 2.028, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else if ( complex(A, L) )
%   | | then return 0.2783873387766092;  // std dev = 0.522, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.11775663325248716;  // std dev = 0.830, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.04111014816572027;  // std dev = 1.055, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.15036167022246635;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19231656488636836;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.42980676730857387;  // std dev = 0.571, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.4447495138398337;  // std dev = 0.519, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11561202794400698;  // std dev = 0.193, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.16383599570566687;  // std dev = 0.124, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1464052636582318;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.08496487312173001;  // std dev = 1.567, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.06124531720920141;  // std dev = 2.421, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12989147084280056;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.06984071421592215;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.006742362949694085;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.07118211103732804;  // std dev = 0.311, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016553378749041156;  // std dev = 1.345, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.38978134392724423;  // std dev = 0.358, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1568898299573942;  // std dev = 0.236, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.13008484796555353;  // std dev = 1.646, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.05467552544483494;  // std dev = 2.951, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.11592499805857882;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.046026352003981856;  // std dev = 0.458, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.07481220529009493;  // std dev = 0.333, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.038506174829002364;  // std dev = 1.075, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.037859291341847304;  // std dev = 0.709, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.33459927859353883;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1729903428434386;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, N), interaction(A, P) )
%   | | | then return 0.12179290049975894;  // std dev = 1.446, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.001148937545589982;  // std dev = 3.421, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.196', 'seconds']
Refined model CLL: -0.174918


******************************************
Best model found
******************************************
Results 

CLL : -0.191681 

AUC ROC : 0.981849 

AUC PR : 0.220345 

Precision : 0.134356 

Recall : 0.790614 

F1 : 0.22968 

Total Learning Time : 3.53 

Total Inference Time : 3.1568427085876465 

Total revision time: 11.107486478805543
Best scored revision CLL: -0.174698


Results 

CLL : -0.191681 

AUC ROC : 0.981849 

AUC PR : 0.220345 

Precision : 0.134356 

Recall : 0.790614 

F1 : 0.22968 

Total Learning Time : 11.128814212799073 

Total Inference Time : 3.1568427085876465 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.585
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.1778210662470527;  // std dev = 5.151, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6123228684706172;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8194721128863307;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1603926820268908;  // std dev = 0.071, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1809624208877471;  // std dev = 2.663, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05772365420304711;  // std dev = 2.771, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.684186255378024;  // std dev = 0.156, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14398588201400372;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6947475131025302;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12748485434539283;  // std dev = 2.398, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.21065203912769892;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5675358637012089;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5861881708775935;  // std dev = 0.196, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07154184763951489;  // std dev = 4.119, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4712269951049255;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5503397066708267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.03997587202580488;  // std dev = 2.810, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.7635890035092296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.0477387342661759;  // std dev = 4.350, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3574506501684178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38562312963651413;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.02831014793094746;  // std dev = 2.555, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.03305609998140416;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4066459575999106;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.280113846953309;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.02562045545543523;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07015770477019102;  // std dev = 1.216, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04436948118114982;  // std dev = 4.003, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | | else return 0.05670949247214154;  // std dev = 2.994, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24170051983111518;  // std dev = 0.179, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27893523744522664;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22941639358594498;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5572512054186243;  // std dev = 1.050, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1821065442369835;  // std dev = 0.689, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.19024228436746446;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.049602073302106725;  // std dev = 3.310, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17248927920944812;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1004836276486507;  // std dev = 0.831, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4286702283923992;  // std dev = 1.315, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14053895511178524;  // std dev = 0.225, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22681185461461517;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.00658616429092635;  // std dev = 2.466, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1558540858879395;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19458528607633674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.04389068101070729;  // std dev = 0.965, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09757639902653431;  // std dev = 0.328, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.233082259241591;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.01976025910330158;  // std dev = 1.434, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22502351114202024;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05865983483069761;  // std dev = 2.627, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.05464640437950355;  // std dev = 2.365, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13051302281258392;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1603506986270416;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.16456046226505916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17362991691391122;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.013108967661888571;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.021408652241823197;  // std dev = 1.573, 101.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18821489121182255;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00773014989969121;  // std dev = 2.671, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | | else return 0.02860549959078252;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.328', 'seconds']
Parameter learned model CLL:-0.183901 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.151, 83, 39], 'false,false,false,true': [2.4, 16, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [0.957, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.995, 1, 52], 'false,false,true,false': [0.071, 129, 0], 'false,false,false,true': [2.663, 20, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.771, 46, 14], 'false,true,false,true': [0.156, 0, 42], 'false,true,false,false': [0.0, 97, 0], 'false,false,true,true': [0.132, 0, 3], 'false,false,true,false': [2.398, 18, 9], 'false,false,false,true': [1.318, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.71e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.196, 0, 6], 'false,true,false': [4.119, 118, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.81, 30, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true': [4.35, 141, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.04, 0, 2], 'false,false,false,true': [2.555, 26, 9], 'false,false,false,false': [1.509, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.83e-08, 0, 9], 'true,true,false': [0.05, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.797, 1, 2], 'false,true': [1.216, 30, 5], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.003, 114, 46], 'false,false,false,false': [2.994, 32, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.179, 0, 13], 'true,true,true,false': [0.073, 0, 3], 'true,true,false,true': [0.048, 0, 3], 'true,true,false,false': [1.05, 1, 33], 'true,false': [0.689, 115, 0], 'false,true': [1.095, 2, 3], 'false,false,true': [3.31, 73, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 8], 'true,false': [0.831, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.315, 1, 56], 'false,true,false': [0.225, 158, 0], 'false,false,true,true': [0.063, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.466, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.061, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.965, 2, 5], 'false,true,true': [0.328, 18, 1], 'false,true,false,true': [0.17, 0, 6], 'false,true,false,false': [1.434, 50, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.627, 55, 31], 'false,false,false,false': [2.365, 24, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.04, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.011, 0, 2], 'true,false': [0.756, 1, 3], 'false,true': [1.573, 77, 24], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.671, 81, 31], 'false,false,false,false': [2.39, 26, 12]}]
{'': [-2.3684757858670006e-16, 0.21857438016528954], 'false': [0.10937499999999978, 0.2107511569953734], 'false,false': [0.20475565458929898, 0.23725286160249692], 'false,false,false': [0.23040000000000005, 0.24999999999999992], 'false,false,true': [0.1717897155989653, 0.21748185971513107], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [1.1842378929335003e-16, 0.21201681334679667], 'false': [0.11436836921285842, 0.20740462591136358], 'false,false': [0.2036416482440585, 0.22548968566265912], 'false,false,false': [0.22868437572607134, 0.18750000000000003], 'false,false,true': [0.018666757231144165, 3.932658960665738e-05], 'false,true': [0.11436836921285842, nan], 'true': [1.1102230246251565e-16, 6.344131569286608e-17]}
{'': [-2.3684757858670006e-16, 0.15500622853575313], 'false': [0.14021940534397118, 0.2265043125452994], 'false,false': [0.22129465776223653, 0.24826454864085543], 'false,false,false': [0.24826454864085543, nan], 'false,false,true': [0.0057864433288551025, 0.21306132251947948], 'false,true': [0.12796836270133105, 0.14479754027136849], 'false,true,false': [0.0005828376800123587, -5.036063204485246e-17], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [1.4802973661668753e-16, 0.12658610047120403], 'false': [0.10785851757042407, 0.19897473113149272], 'false,false': [0.00139084914029101, 0.20015812420806192], 'false,false,false': [0.19257298291333094, 0.0], 'false,true': [0.005532995012100742, 0.10160234187768682], 'false,true,true': [0.0, 0.006405459624164722], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, nan]}
{'': [-1.4802973661668754e-17, 0.11483543169477316], 'false': [0.09607180302108721, 0.1917563791043825], 'false,false': [0.0007055009772269361, 0.1963227929246129], 'false,false,false': [0.18655009410685583, 0.227598270488998], 'false,false,true': [0.0, 0.00079368859938031], 'true': [-3.700743415417188e-17, 0.0], 'true,true': [-3.700743415417188e-17, nan]}
{'': [0.05670105505271558, 0.11028864510781891], 'false': [0.042214175721436105, 0.11945558422368395], 'false,false': [0.0, 0.12132931275033818], 'false,false,false': [0.10013560096722522, 0.1949282985992667], 'true': [0.005082742008304745, 0.17629622730755368], 'true,false': [0.0, 0.21169327049273123], 'true,true': [3.700743415417188e-17, 0.000634405595755283], 'true,false,true': [0.0, nan]}
{'': [0.10176496739123192, 0.11405441903050452], 'false': [0.24, 0.10536056706336813], 'false,false': [0.10536056706336813, nan], 'true': [0.04396368638404322, 0.004124452509765814], 'true,true': [0.002533749415871492, 0.03787413688960819], 'true,true,false': [0.0007729272377517323, 0.032433530020546456], 'true,true,true': [0.0024524473845365722, 0.0017595885592332678]}
{'': [0.0444216564032517, 0.08235325016812588], 'false': [0.07140367666371834, 0.1323550805061888], 'false,false': [0.0013342272615513573, 0.13819261701002142], 'false,false,false': [0.13819261701002142, nan], 'false,true': [0.03033749955803784, 0.0003212555448807375], 'true': [3.469446951953614e-18, 0.08625090587815593], 'false,true,true': [nan, 0.030337499558037776], 'false,false,true': [0.0013342272615513573, nan]}
{'': [0.06182639717098052, 0.07196598573267972], 'false': [0.0292669233015484, 0.1006219924002297], 'false,false': [0.0, 0.1024225679767357], 'false,false,false': [0.08024837227678726, 0.15538290314977687], 'true': [0.0003758850728511259, 0.1225962059968743], 'true,false': [0.0, 0.1330011013509509], 'false,true': [0.005672054824444664, 0.033400350351971315], 'false,true,false': [0.004806327918264981, 0.03070654285137891]}
{'': [0.038455885898606136, 0.06107873301076461], 'false': [0.024507333750202864, 0.08465059754418051], 'false,false': [0.0, 0.08574177125333983], 'false,false,false': [0.06371488741310566, 0.15033773053044563], 'true': [0.0004556370432849143, 0.14299568646833802], 'true,true': [0.0003060962605370837, 5.826168007671643e-05], 'true,true,true': [0.0, 0.0008182517842784572], 'true,true,false': [0.0, 5.9974184239211525e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.587
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.1462845283198504;  // std dev = 6.025, 177.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7630121803805879;  // std dev = 1.937, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.1623148463670544;  // std dev = 0.162, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.05367828925126312;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.30093103650401054;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5642598783471598;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6042803655510989;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.10869257556542801;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.10023605764175632;  // std dev = 2.645, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.667948403382498;  // std dev = 1.003, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.143493565249989;  // std dev = 0.067, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1633040291466082;  // std dev = 2.126, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.047383866484941084;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.46294608392369047;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.41320027528641096;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5304974932721137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4411397064138419;  // std dev = 1.005, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.008760887027510631;  // std dev = 2.399, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return 0.08863130219556628;  // std dev = 3.550, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.11899856723198064;  // std dev = 2.733, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.12007582014964897;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3253652095690105;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19413418548898478;  // std dev = 0.362, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return -0.0487725550973709;  // std dev = 1.037, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.06338505315144781;  // std dev = 3.654, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0934441991066375;  // std dev = 1.851, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.28402953113736135;  // std dev = 0.723, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05393137629983967;  // std dev = 2.397, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.2712505399788451;  // std dev = 1.432, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25316945032410265;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.1001428055355127;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07816109076384388;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return -0.0747665444412677;  // std dev = 0.182, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.07708760019042393;  // std dev = 0.279, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3033965028471489;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1259606264619151;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.03509445271633817;  // std dev = 4.747, 188.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25124608015056676;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.07920838016395168;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5284981840157956;  // std dev = 1.603, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.16792567134046957;  // std dev = 0.064, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( enzyme(G, H), phenotype(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.19551478260407612;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4467356391159068;  // std dev = 0.293, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(G, K) )
%   | | | then return 0.12203233160227744;  // std dev = 2.042, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.005189908901368344;  // std dev = 1.201, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else return 0.015256926795537858;  // std dev = 0.284, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16751737381948784;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.2609299052829324;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10610850193123265;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.5649318870663512;  // std dev = 0.169, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.37497699821871694;  // std dev = 1.608, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else return -0.14801679058380457;  // std dev = 0.043, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.1795164750072345;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.017377095362641155;  // std dev = 1.878, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.05093736848825912;  // std dev = 1.684, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15831846960673374;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1376796912558768;  // std dev = 0.211, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.05662365358062171;  // std dev = 0.467, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return -0.11308589227794827;  // std dev = 0.725, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.007757480695181265;  // std dev = 0.887, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.01396601356952029;  // std dev = 1.378, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.21342513223611248;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.12475698992893164;  // std dev = 1.827, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.02190752478352196;  // std dev = 2.955, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13843835647181452;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return 0.13560989723347106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0866546551883803;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2107265578837908;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.012683503204526056;  // std dev = 0.188, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | else return -0.03123469667349457;  // std dev = 0.130, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.06372389553055643;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.0884321404517848;  // std dev = 1.551, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.022393875756941642;  // std dev = 3.438, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.019', 'seconds']
Refined model CLL: -0.186609


******************************************
Best model found
******************************************
Results 

CLL : -0.193135 

AUC ROC : 0.98306 

AUC PR : 0.217502 

Precision : 0.146119 

Recall : 0.791519 

F1 : 0.246696 

Total Learning Time : 3.587 

Total Inference Time : 3.4384946823120117 

Total revision time: 11.792957136154175
Best scored revision CLL: -0.183901


Results 

CLL : -0.193135 

AUC ROC : 0.98306 

AUC PR : 0.217502 

Precision : 0.146119 

Recall : 0.791519 

F1 : 0.246696 

Total Learning Time : 11.814284870147706 

Total Inference Time : 3.4384946823120117 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.318
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.15083186192877934;  // std dev = 5.046, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6704949847586875;  // std dev = 3.411, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16083986393280778;  // std dev = 0.005, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1706611768321634;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.480472721690639;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06522045711831712;  // std dev = 4.450, 136.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6475579010137004;  // std dev = 1.667, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14063715862236373;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.20242767013678542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08328661557750029;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1688798283994738;  // std dev = 1.265, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4649788793582868;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4771588082843301;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5815720560150112;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.07278259321968338;  // std dev = 5.000, 199.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5133712671582369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10158491838614805;  // std dev = 1.663, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.23421773002875151;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3446338041237541;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.055037130187064756;  // std dev = 5.490, 256.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38701584715948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2660819582603593;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03595699783755202;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30105201263770764;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3939761166525346;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3000858067859309;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.012167879059000047;  // std dev = 2.229, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.027261357822480292;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06807593616483679;  // std dev = 4.802, 180.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=55 */
%   | | | else return 0.033726565495998756;  // std dev = 1.904, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26136812101105117;  // std dev = 0.164, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2410420276088544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5666933536823064;  // std dev = 0.965, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18744457596106842;  // std dev = 0.575, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.02183541380045656;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03854093529609031;  // std dev = 4.105, 145.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20151462875198334;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23019511903897644;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34375124996777184;  // std dev = 3.360, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return -0.1512994609274471;  // std dev = 0.209, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1997245003259468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.037379211846250086;  // std dev = 1.405, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18213522023907225;  // std dev = 0.100, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.41648891154025;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16173871853764935;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.042180638750259895;  // std dev = 1.573, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.34523691698686587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.015786718385853167;  // std dev = 1.682, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22156656210449685;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05499501027294246;  // std dev = 3.367, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.11779233089996269;  // std dev = 1.277, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03784930856300481;  // std dev = 0.801, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.24014344573740265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14102134203583105;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.001670983024747929;  // std dev = 2.315, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1857269424107171;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0451429445698691;  // std dev = 3.411, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | | else return -0.019165639977095358;  // std dev = 1.412, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.610', 'seconds']
Parameter learned model CLL:-0.197635 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [5.046, 87, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.411, 14, 69], 'false,false,true,false': [0.005, 158, 0], 'false,false,false,true': [1.634, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.944, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.45, 102, 34], 'false,true,false,true': [1.667, 3, 37], 'false,true,false,false': [0.0, 63, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.265, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.035, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.317, 2, 14], 'false,true,false': [5.0, 142, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.663, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.936, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 4], 'false,true': [5.49, 185, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.144, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.229, 37, 12], 'false,false,true': [0.853, 1, 3], 'false,false,false,true': [4.802, 125, 55], 'false,false,false,false': [1.904, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.164, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.965, 1, 33], 'true,false': [0.575, 72, 0], 'false,true': [0.853, 1, 3], 'false,false,true': [4.105, 105, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.095, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.36, 16, 71], 'false,true,false': [0.209, 156, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.405, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.1, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.026, 0, 3], 'false,true,true': [1.573, 39, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.682, 43, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.367, 87, 40], 'false,false,false,false': [1.277, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.801, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 3], 'false,true': [2.315, 76, 29], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [3.411, 83, 40], 'false,false,false,false': [1.412, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.2087402343750002], 'false': [1.4802973661668753e-16, 0.20528363198925284], 'false,false': [0.20586469882070507, 0.1955555555555554], 'false,false,true': [0.20461247637051175, 0.20701963117192268], 'false,false,false': [0.24000000000000005, 0.16000000000000003], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.13017751479289943, 0.20692796133327854], 'false': [0.0, 0.20527660175676965], 'false,false': [0.2043267714588803, 0.22240702419719027], 'false,false,false': [0.22240702419719027, nan], 'false,false,true': [0.1401880177647153, 1.49309990379981e-07], 'true': [0.1224489795918368, 0.13888888888888884], 'false,true': [0.0, nan]}
{'': [0.07679591119663887, 0.16286036123147218], 'false': [0.16054915208812298, 0.1973840129025254], 'false,false': [0.18750000000000006, 0.1999102712044887], 'false,false,false': [0.1999102712044887, nan], 'false,false,true': [0.0, 0.20408163265306126], 'false,true': [0.1456239159009207, 0.1745388160566023], 'false,true,false': [0.0694486991303525, -4.229421046191072e-17], 'true': [0.09905487018427649, 0.0]}
{'': [0.00012168219454743546, 0.14624387897344784], 'false': [0.14215047433302738, 0.208717988474818], 'false,false': [0.0, 0.2126612185692786], 'false,false,false': [0.2126612185692786, nan], 'false,true': [0.10833334735757355, 0.12560493941260611], 'false,true,true': [nan, 0.10833334735757344], 'true': [0.00012036398958015226, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07572561603818358, 0.12239545225876498], 'false': [0.11772261357452567, 0.20851525718664018], 'false,false': [0.0, 0.22010166609102208], 'false,false,false': [0.24999999999999997, 0.1875], 'true': [0.10945954112237792, 0.00012995959075948194], 'true,true': [0.10945954112237792, nan], 'false,false,true': [nan, 0.0]}
{'': [0.003743397919671164, 0.12800624263386956], 'false': [0.10141524960093401, 0.13384863523091425], 'false,false': [0.18184636470674453, 0.13286641725636125], 'false,false,false': [0.12810669945458547, 0.17260739011711487], 'true': [0.004042106451527716, 0.0], 'true,true': [0.00020845778912814694, 0.00694286428892249], 'true,false': [nan, 0.0]}
{'': [0.12687079297011078, 0.11799235873444619], 'true': [0.03874517762637611, 0.0045991073641823916], 'false': [0.1819138198715295, 0.11622151615088695], 'false,false': [0.11622151615088695, nan], 'true,true': [0.0024898032936510857, 0.027410231507429095], 'true,true,false': [nan, 0.0274102315074292], 'true,true,true': [0.0027012245254712463, 0.0]}
{'': [0.0010177838649948984, 0.10516681166538443], 'false': [0.10297228437113351, 0.14275585579163894], 'false,false': [0.0, 0.15185450456137914], 'false,false,false': [0.15185450456137914, nan], 'false,true': [0.12977826897320105, 0.00027981784266386877], 'false,true,true': [nan, 0.12977826897320102], 'true': [-4.625929269271485e-18, 0.0017904496722057183], 'false,false,true': [0.0, nan]}
{'': [0.02783573034704165, 0.07533283496903152], 'false': [0.04974472924466055, 0.09342836795313691], 'false,false': [9.012564140945904e-05, 0.09490998430028019], 'false,false,false': [0.08925064157047455, 0.16312798046007151], 'false,true': [0.04949869243480408, 0.048137603155250216], 'false,true,false': [0.0, 0.047160594354970296], 'true': [0.0012543038187870087, 0.06285883192781964], 'true,false': [0.0, 0.00022497785738353113]}
{'': [0.0577245188759781, 0.07804717349756983], 'false': [0.05105219165751585, 0.09747974677288856], 'false,false': [6.947745775687242e-05, 0.0991339974170098], 'false,false,false': [0.09457126917543557, 0.13286229604348812], 'true': [0.07527844246025671, 0.00017899709679922854], 'true,true': [0.07527844246025671, nan], 'true,true,true': [0.08014125688610724, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 9.38
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.124203980971072;  // std dev = 4.614, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.19638422921715865;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.1308762078267851;  // std dev = 3.908, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7238843948845243;  // std dev = 2.812, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.15686996032122325;  // std dev = 0.117, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09145896494019373;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17479229827352707;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5699288238094847;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.06486112378946908;  // std dev = 2.760, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.15600840237700034;  // std dev = 3.181, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6863693265932846;  // std dev = 0.993, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.13946522547123436;  // std dev = 0.052, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.17112645371406565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22887354628593437;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.009408591732996486;  // std dev = 1.115, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06672751621375006;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4304702252026161;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.22520054559297797;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -6.364217096757635E-4;  // std dev = 1.913, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.13446676853672734;  // std dev = 2.440, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.29449559770971095;  // std dev = 1.551, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.07376764886581645;  // std dev = 4.116, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5576885164365762;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.043931947170919756;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4038101910007831;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3476867564920022;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.04562746420384003;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.012172750462440148;  // std dev = 1.782, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.06162347912739993;  // std dev = 2.881, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.09144841842319568;  // std dev = 4.021, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
%   | | | else return 0.004931695712592105;  // std dev = 0.857, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4192379962517663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.09375771567035013;  // std dev = 1.400, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0927770607112452;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3056467687701521;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3218811328144142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(H, J) )
%   | | | then return 0.38909053205686644;  // std dev = 0.689, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6532559717497345;  // std dev = 0.238, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.17741584503712746;  // std dev = 0.050, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.09383699030779279;  // std dev = 1.096, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.053526265201777556;  // std dev = 1.532, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.13247272890702544;  // std dev = 2.192, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.04494250429755331;  // std dev = 4.048, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24721956332281836;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.3409045510948203;  // std dev = 1.444, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.5764740937940684;  // std dev = 0.388, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.19459921036431993;  // std dev = 0.073, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(G, I) )
%   | | | then return 0.41962289343002457;  // std dev = 1.948, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return -0.11723505812853705;  // std dev = 1.343, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return -0.16616938762586206;  // std dev = 0.375, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.05492961366379726;  // std dev = 1.044, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.08697087234925593;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16551184810760114;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.005621482472887167;  // std dev = 0.559, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.014108561557056948;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.416089694617627;  // std dev = 1.068, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.2789662875736728;  // std dev = 2.842, 63.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=53 */
%   | | else if ( location(A, I) )
%   | | | then return -0.14367243384978853;  // std dev = 0.329, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return -0.13555925780534137;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2117780426452115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14367417139340372;  // std dev = 0.366, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17698948853364443;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.6703102516835755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.18918373843481284;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.01804564331422268;  // std dev = 1.801, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.10917675840270398;  // std dev = 0.000865, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.006403333063187494;  // std dev = 0.214, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.008024057089726422;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.10935652381329906;  // std dev = 1.290, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.033887139320980655;  // std dev = 2.943, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.16785879594615574;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02022734200653864;  // std dev = 0.614, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.25391423910775857;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -3.596654973091473E-4;  // std dev = 0.562, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09578208614710758;  // std dev = 0.013, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 1.2370924948206443E-4;  // std dev = 0.229, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21816251659129227;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.03493240485586177;  // std dev = 2.926, 101.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=38 */
%   | | | else return 0.17108309115286585;  // std dev = 1.124, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.678', 'seconds']
Refined model CLL: -0.188855


******************************************
Best model found
******************************************
Results 

CLL : -0.188729 

AUC ROC : 0.988229 

AUC PR : 0.31347 

Precision : 0.187023 

Recall : 0.868794 

F1 : 0.307789 

Total Learning Time : 9.38 

Total Inference Time : 11.099172115325928 

Total revision time: 29.359982774734497
Best scored revision CLL: -0.188855


Results 

CLL : -0.188729 

AUC ROC : 0.988229 

AUC PR : 0.31347 

Precision : 0.187023 

Recall : 0.868794 

F1 : 0.307789 

Total Learning Time : 40.08048109817505 

Total Inference Time : 11.099172115325928 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.356
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08117051783332424;  // std dev = 4.908, 139.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=31 */
%   | | | else return 0.19905802600860248;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.559165218950025;  // std dev = 1.301, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.4194734122109544;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6923070792204111;  // std dev = 3.338, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.15972439431333801;  // std dev = 0.108, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08673855063232913;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42733048716429817;  // std dev = 1.286, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.6098546201699294;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05210068734580471;  // std dev = 4.506, 149.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5808107115556457;  // std dev = 2.463, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.1467069015202438;  // std dev = 1.12e-07, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8245408171453051;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11709179834523266;  // std dev = 1.591, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4053793046210687;  // std dev = 1.018, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4888406931437542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16342794113907608;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5366686882621431;  // std dev = 1.807, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.032187249128044604;  // std dev = 5.168, 250.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5999569783256082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07356509219045813;  // std dev = 1.665, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.36617317380600173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, E) )
%   | | | then return -0.592208044646713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2775415840062872;  // std dev = 0.979, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.050565498543201026;  // std dev = 5.915, 298.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04851466494516543;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18139542580342502;  // std dev = 1.500, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28978014434735555;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5140801087424977;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.46352579142644723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.05513844186326429;  // std dev = 2.667, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20072196826784766;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06588594837842733;  // std dev = 4.602, 177.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=51 */
%   | | | else return 0.028359963342040623;  // std dev = 2.294, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22887742777203662;  // std dev = 1.100, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.3521316842913528;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2623309216541144;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.540589251647524;  // std dev = 1.090, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17689296431650767;  // std dev = 0.774, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27283483122689783;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06634804362088986;  // std dev = 4.363, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19255390697094685;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.12707708692663067;  // std dev = 0.940, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.5473923611014581;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3703948567918636;  // std dev = 3.295, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.14948931610763144;  // std dev = 0.460, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2765151619468539;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04035415149684834;  // std dev = 1.363, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18873642814957764;  // std dev = 0.155, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2583712940337906;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.24399536357460788;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03596027804143343;  // std dev = 1.857, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1945554103260305;  // std dev = 0.546, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.03271379123574973;  // std dev = 1.381, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20103518009805538;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036831204558285265;  // std dev = 3.806, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.014914675604893662;  // std dev = 1.380, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14006014907887554;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23350037483935812;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19263751753084288;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.03332662320285839;  // std dev = 2.661, 123.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17069349814902687;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0291670528889837;  // std dev = 4.048, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | | else return 0.050689954245152345;  // std dev = 1.332, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.932', 'seconds']
Parameter learned model CLL:-0.198698 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.908, 108, 31], 'false,false,true,false': [5.446, 87, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.301, 2, 10], 'false,true,true': [1.449, 3, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.338, 13, 76], 'false,false,true,false': [0.108, 187, 0], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.286, 2, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.506, 115, 34], 'false,true,false,true': [2.463, 7, 48], 'false,true,false,false': [1.12e-07, 103, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.591, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.018, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [1.006, 2, 3], 'false,true,true,false': [1.807, 4, 21], 'false,true,false': [5.168, 192, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.665, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'location(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.979, 1, 10], 'false,true': [5.915, 216, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.5, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.021, 0, 9], 'true,true,false': [0.178, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.667, 45, 19], 'false,false,true': [0.929, 1, 8], 'false,false,false,true': [4.602, 126, 51], 'false,false,false,false': [2.294, 26, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.1, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.09, 1, 33], 'true,false': [0.774, 116, 0], 'false,true': [0.032, 0, 5], 'false,false,true': [4.363, 109, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 7], 'true,false': [0.94, 1, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.295, 14, 82], 'false,true,false': [0.46, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.363, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.155, 0, 9], 'true,false,true': [0.903, 3, 2], 'true,false,false': [0.13, 0, 5], 'false,true,true': [1.857, 35, 13], 'false,true,false,true': [0.546, 1, 8], 'false,true,false,false': [1.381, 42, 11], 'false,false,true': [0.025, 0, 5], 'false,false,false,true': [3.806, 108, 47], 'false,false,false,false': [1.38, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.086, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.101, 0, 3], 'false,true': [2.661, 91, 32], 'false,false,true': [0.022, 0, 5], 'false,false,false,true': [4.048, 91, 47], 'false,false,false,false': [1.332, 8, 4]}]
{'': [0.05246913580246885, 0.2095865660537788], 'false': [-2.5376526277146434e-16, 0.20234080539575586], 'false,false': [0.20179463787257834, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.17328295636871913, 0.22469008264462922], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09626608830081022, 0.20180985957163036], 'false': [0.21000000000000013, 0.19842887665297887], 'false,true': [0.21000000000000013, nan], 'false,false': [0.199018592707598, 0.18749999999999994], 'false,false,true': [0.1251871530307567, 6.258667492777374e-05], 'false,false,false': [0.18749999999999994, nan], 'true': [-1.2688263138573217e-16, 0.14106498228180675]}
{'': [0.09419859935559882, 0.15162837991524025], 'false': [0.14844625768239303, 0.2140847617906463], 'false,false': [0.2140847617906463, nan], 'false,false,true': [0.0, 0.19480395508984213], 'false,true': [0.13626807492037157, 0.1584922147912652], 'false,true,false': [0.11026672208777219, 1.2072328034758983e-16], 'true': [0.12713262686008656, 4.702562133377756e-05]}
{'': [0.05788489267734609, 0.1350872606696909], 'false': [0.13145321691903802, 0.20211987211210458], 'false,false': [0.0, 0.19808444464846975], 'false,false,false': [0.19808444464846975, nan], 'false,true': [0.16198117574658571, 0.10683198355081526], 'false,true,true': [0.20244224024716284, 0.13067085362763958], 'true': [0.06090289728790796, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09292882648881333, 0.12232535959794366], 'false': [0.11739214016210238, 0.2366065426439793], 'false,false': [0.25, 0.22511807620143762], 'false,false,true': [nan, 0.25], 'false,false,false': [0.22511807620143762, nan], 'true': [0.10046034248719324, 0.08704238201251749], 'true,true': [-4.7580986769649563e-17, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.01373578649264115, 0.12109180692740415], 'false': [0.11115456565151656, 0.1239336406161131], 'false,false': [0.09585992839787899, 0.12431182602905382], 'false,false,false': [0.1196373305547534, 0.14612456811632515], 'true': [0.014210236107123226, 0.0], 'true,true': [4.975106531297019e-05, 0.005264679253241626], 'true,false': [nan, 0.0]}
{'': [0.10405688491497604, 0.1195415338562221], 'false': [0.0001991998316228094, 0.12204248464433487], 'false,false': [0.12204248464433487, nan], 'true': [0.06576797225490542, 0.005162444706782728], 'true,true': [0.07205389398625431, 0.0378622496371872], 'true,true,true': [0.07566363813979937, 0.0], 'true,true,false': [9.25185853854297e-18, 0.03492511489333553]}
{'': [0.050122596804810245, 0.10345288746134884], 'false': [0.10175777640559434, 0.13641915685369008], 'false,false': [0.0, 0.14292922223178722], 'false,false,false': [0.14292922223178722, nan], 'false,true': [0.12054825436216426, 0.001164166406527487], 'false,true,true': [0.0, 0.11312011609429558], 'true': [7.93016446160826e-18, 0.08035154489696264], 'false,false,true': [0.0, nan]}
{'': [0.0878902887882196, 0.0803650228645165], 'true': [0.0026808993314759474, 0.14639572291565953], 'true,false': [0.16323589086409557, 0.0033694256289064973], 'false': [0.055338705406922935, 0.09500084402632995], 'false,false': [0.00012932356472822315, 0.09701566817949461], 'false,false,false': [0.09345419932066126, 0.13600567302031383], 'false,true': [0.07186850802798635, 0.041968435360788245], 'false,true,false': [0.03316158144573764, 0.03596617095568776]}
{'': [0.002874805724222315, 0.09230152361340264], 'false': [0.057547574348887964, 0.1177907154151387], 'false,false': [0.00010004406887573758, 0.12108324328178442], 'false,false,false': [0.11871644723814274, 0.14787522132349953], 'true': [0.0027403555805747227, 0.003384847679396924], 'true,true': [0.0027403555805747227, nan], 'true,true,true': [3.96508223080413e-18, 0.0012360885888460516]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.309
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return 0.011995088945666163;  // std dev = 2.253, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.13592671287729013;  // std dev = 4.249, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.22178529873587477;  // std dev = 5.045, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6592071560241172;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4208934929686716;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7611775091202151;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7197842351420172;  // std dev = 2.964, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.1619771665524997;  // std dev = 0.131, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.1264983216051074;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2535028060304595;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5083439864973442;  // std dev = 0.273, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.46732315625149035;  // std dev = 0.343, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.05682268683686495;  // std dev = 3.197, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return 0.11541304031603278;  // std dev = 2.845, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6110900175060655;  // std dev = 2.143, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14262547631043793;  // std dev = 0.079, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.05385590788585584;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5674091501768603;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.1771866458402387;  // std dev = 0.000366, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41697686881277185;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 7.851579658300356E-4;  // std dev = 0.685, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(G, H), phenotype(A, I) )
%   | | | then return 0.10414914197621941;  // std dev = 1.442, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.02930961059576381;  // std dev = 1.547, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.1145857207171688;  // std dev = 4.367, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return 0.05759145827095284;  // std dev = 3.280, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.40450338626803684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.16791772094285337;  // std dev = 1.278, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.026454112326617613;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.23451795769536748;  // std dev = 0.316, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39744417960616657;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.6653547881298932;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.17275049450423688;  // std dev = 0.159, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.018911974840817476;  // std dev = 3.525, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1444793463107834;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.1777198328007953;  // std dev = 1.637, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.06941303367567055;  // std dev = 4.399, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3188747075577753;  // std dev = 0.245, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(D, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.06260069252266821;  // std dev = 0.489, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08406264729727102;  // std dev = 1.556, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(D, J), interaction(A, J) )
%   | | | then return -0.15753126939126008;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.030101064413879757;  // std dev = 1.700, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( enzyme(K, M), phenotype(K, N) )
%   | | | then return -0.00457474875726166;  // std dev = 1.619, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.14659566517007908;  // std dev = 2.358, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15683850527130844;  // std dev = 0.164, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.06539748055115963;  // std dev = 4.354, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.30614970766383337;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.30693287588367146;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5039428081122421;  // std dev = 1.582, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1688699641630002;  // std dev = 0.055, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3006133801915404;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5188896317501661;  // std dev = 1.051, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.2097756556148706;  // std dev = 0.678, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.03227939256045528;  // std dev = 2.236, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.07553141296014196;  // std dev = 1.439, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18844443387488743;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then return 0.2254687083668622;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.027200435232128894;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.006078148286654511;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.3497705921061525;  // std dev = 0.297, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.14685275986652263;  // std dev = 0.371, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1845715587118164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.1821243214653361;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.044520379902393166;  // std dev = 1.064, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.27223777125099935;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1337748651769416;  // std dev = 0.176, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(G, I), enzyme(A, J) )
%   | | | then return -0.09536959902055828;  // std dev = 1.195, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.031740029341391675;  // std dev = 2.108, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.0703144142233454;  // std dev = 0.549, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.21936205208104637;  // std dev = 0.623, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.24505707996809;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return -0.06198068168099356;  // std dev = 1.431, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.02743275286572629;  // std dev = 3.151, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.13184939601227463;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15906434286544827;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.23568087319423056;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09742301753676859;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.07467070653414601;  // std dev = 0.404, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return -0.019001371599253122;  // std dev = 0.255, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20278154312369107;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.0534003053751895;  // std dev = 1.969, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.020566737200272217;  // std dev = 3.004, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.357', 'seconds']
Refined model CLL: -0.191713


******************************************
Best model found
******************************************
Results 

CLL : -0.169304 

AUC ROC : 0.990393 

AUC PR : 0.375714 

Precision : 0.282493 

Recall : 0.803774 

F1 : 0.418057 

Total Learning Time : 6.309 

Total Inference Time : 22.995559215545654 

Total revision time: 38.777114667892455
Best scored revision CLL: -0.191713


Results 

CLL : -0.169304 

AUC ROC : 0.990393 

AUC PR : 0.375714 

Precision : 0.282493 

Recall : 0.803774 

F1 : 0.418057 

Total Learning Time : 49.49761299133301 

Total Inference Time : 22.995559215545654 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.422
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.12808758540625984;  // std dev = 5.668, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8431290445313413;  // std dev = 0.022, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15682669130747395;  // std dev = 0.035, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, K) )
%   | | | then return 0.20079931395102746;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.2405651783839172;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42650449553076764;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.018576880246195027;  // std dev = 2.156, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6843700199136538;  // std dev = 0.269, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13838855006375894;  // std dev = 4.71e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18357490750464725;  // std dev = 0.526, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.09330730823021016;  // std dev = 3.739, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14956941549756583;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4419563987890562;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44427419676681046;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38651328553103625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.59262333005783;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03544570900759114;  // std dev = 4.336, 213.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5096994693238089;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5322228647253667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06168778511322857;  // std dev = 3.637, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return -0.009396529867662312;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3626660108915667;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2282002653041927;  // std dev = 0.910, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05950119932253875;  // std dev = 4.249, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.38440402300345144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40055514921782787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10396475888291315;  // std dev = 3.604, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -0.01758519768397023;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.283234563275257;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.18924839486737383;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.29832208836408747;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2852703258635566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.2002384375949579;  // std dev = 0.721, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06626057631253998;  // std dev = 0.944, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27278739729166873;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05152101755012537;  // std dev = 4.044, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | | | else return 0.06840968481093952;  // std dev = 3.748, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2543181058272051;  // std dev = 0.136, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2966891847378059;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23271695834442185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6488577514755884;  // std dev = 0.790, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17929789888685937;  // std dev = 0.521, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2200439123072231;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06945874386124101;  // std dev = 3.316, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1873381669060664;  // std dev = 0.000720, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18680496094568932;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4291255462787961;  // std dev = 1.240, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13824675170667325;  // std dev = 0.213, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.23948574711948134;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06621284145381266;  // std dev = 3.038, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16373125145428283;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.144216855669698;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1976344167227732;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05688296841870396;  // std dev = 0.392, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.05833288759721606;  // std dev = 0.297, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.010350482165659263;  // std dev = 1.189, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15814913121850754;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.039551981932000366;  // std dev = 2.669, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.026270642415696096;  // std dev = 3.106, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13998697719651548;  // std dev = 0.000918, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17077612178648957;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13928982442785787;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14812795707681878;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02644953647472282;  // std dev = 1.358, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13822036035480045;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018738245252102118;  // std dev = 2.759, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.009748878487818274;  // std dev = 3.118, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.322', 'seconds']
Parameter learned model CLL:-0.172527 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.522, 31, 8], 'false,false,true,false': [5.668, 119, 44], 'false,false,false,true': [3.7, 49, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.022, 0, 52], 'false,false,true,false': [0.035, 132, 0], 'false,false,false,true': [3.394, 32, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.156, 37, 8], 'false,true,false,true': [0.269, 0, 48], 'false,true,false,false': [4.71e-08, 122, 0], 'false,false,true,true': [0.526, 1, 1], 'false,false,true,false': [3.739, 50, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.074, 0, 11], 'true,false': [0.042, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.139, 0, 3], 'false,true,false': [4.336, 161, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.637, 50, 18], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.91, 1, 9], 'false,true': [4.249, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.604, 41, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.002, 0, 7], 'true,true,false': [0.7, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.721, 1, 1], 'false,true': [0.944, 20, 3], 'false,false,true': [0.028, 0, 6], 'false,false,false,true': [4.044, 126, 49], 'false,false,false,false': [3.748, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.136, 0, 12], 'true,true,true,false': [0.08, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.79, 0, 36], 'true,false': [0.521, 100, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [3.316, 78, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.00072, 0, 6], 'true,false': [0.021, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.24, 1, 56], 'false,true,false': [0.213, 138, 0], 'false,false,true,true': [0.07, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.038, 40, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.032, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.058, 0, 4], 'false,true,true': [0.392, 8, 1], 'false,true,false,true': [0.297, 1, 2], 'false,true,false,false': [1.189, 32, 14], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [2.669, 76, 36], 'false,false,false,false': [3.106, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000918, 0, 5], 'true,true,true,false': [0.051, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.033, 0, 4], 'false,true': [1.358, 64, 17], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [2.759, 83, 36], 'false,false,false,false': [3.118, 50, 20]}]
{'': [0.06222222222222188, 0.20096938775510276], 'false': [-1.4802973661668753e-16, 0.19372369332409956], 'false,false': [0.19115772963435043, 0.20061728395061681], 'false,false,false': [0.20134083044982648, 0.18750000000000003], 'false,false,true': [0.1630506245890863, 0.1970717753773203], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933984548e-05, 0.21318584626278567], 'false': [7.401486830834377e-17, 0.21042378540552903], 'false,false': [0.20273252935579814, 0.23139284393903436], 'false,false,false': [0.23038837160802, 0.24000000000000005], 'false,false,true': [9.272353954186814e-06, 9.529024347032511e-06], 'true': [0.0, 9.126913474255538e-05], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0641498407185366, 0.14899708291427488], 'false': [0.13134602749554922, 0.19930569554289185], 'false,false': [0.19823525766570957, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.1382289412158352, 0.1997233838644703], 'false,true': [0.10325538286269881, 0.1375936716019413], 'false,true,false': [0.0015129022245465122, 1.8200377452871417e-17], 'true': [0.1270711041588514, 0.00013402688233110638]}
{'': [0.0005204967156064999, 0.11845410750919179], 'false': [0.09149900296149206, 0.19129150018922392], 'false,false': [0.0001268258351037055, 0.19070850468482986], 'false,false,false': [0.1945766433283973, 0.16000000000000003], 'false,true': [0.012767640363321564, 0.08826449332423456], 'false,true,true': [0.0, 0.006403182870719541], 'true': [0.0005029558989213937, 0.0005805920390148378], 'false,false,true': [0.0, 0.0]}
{'': [0.0592850285601924, 0.12282465820626794], 'false': [0.0925741568343851, 0.2094259153819264], 'false,false': [6.521471949816338e-05, 0.21321932180180858], 'false,false,false': [0.21651777359749177, 0.16000000000000003], 'true': [8.589022759464271e-07, 0.0829001011436945], 'false,false,true': [0.0, 0.0], 'true,true': [8.589022759464271e-07, nan]}
{'': [0.08718190045857753, 0.1178105588228794], 'false': [0.03874376279727505, 0.12375940766730809], 'false,false': [0.00013011156015119152, 0.12568964155895257], 'false,false,false': [0.0934501563511129, 0.2096909929230429], 'true': [0.04297020454940309, 0.1903263748381453], 'true,false': [4.2587126092563654e-05, 0.2595611167533505], 'true,true': [5.981468791700044e-07, 0.0979748369326062], 'true,false,true': [0.0, 0.0]}
{'': [0.1306243032665901, 0.09329795220586337], 'true': [0.044431428918335375, 0.0027119987829847814], 'false': [9.225358623264901e-05, 0.09643315283197383], 'false,false': [0.09643315283197383, nan], 'true,true': [0.002004628649467916, 0.021419403538923548], 'true,true,false': [0.0, 0.01733403130278097], 'true,true,true': [0.001543394698171922, 0.0032331966474881957]}
{'': [3.1322214546424574e-05, 0.0932003498083903], 'false': [0.07470639251153642, 0.14988437685913603], 'false,false': [0.0024534385077457296, 0.1538302414760805], 'false,false,false': [0.1538302414760805, nan], 'false,true': [0.026967329193398414, 0.00032754487483805875], 'false,true,true': [nan, 0.026967329193398445], 'false,false,true': [0.0024534385077457296, nan], 'true': [8.634192065944586e-08, 5.4627272474530586e-05]}
{'': [0.0005954587340198936, 0.07721409814632534], 'false': [0.029304778935124027, 0.0920934168283181], 'false,false': [5.608501239409702e-05, 0.09426186059884684], 'false,false,false': [0.06360431232762812, 0.1461758015283396], 'false,true': [0.017048074088486007, 0.03079194300288989], 'false,true,false': [0.02938470173771425, 0.03074276177667119], 'true': [0.00011073721703274636, 0.0011213595650858498], 'true,false': [0.0, 0.000831012290585513]}
{'': [0.00040948394445092636, 0.07043104767784422], 'false': [0.022761245349398995, 0.0897373375873069], 'false,false': [4.504039170503682e-05, 0.09172142115052796], 'false,false,false': [0.06397226823168897, 0.13884410155136948], 'true': [0.00046513779276226573, 0.0002696960574598249], 'true,true': [0.0005514436296305721, 0.0], 'true,true,true': [1.6868641390666017e-07, 0.0008777530612943859], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.275
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), enzyme(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.11621345122854461;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.21153239374612778;  // std dev = 5.513, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8154584752638261;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16295722824981607;  // std dev = 0.139, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, J) )
%   | | | then return 0.22961283543733343;  // std dev = 3.300, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.012218578580548138;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.018373269696157574;  // std dev = 1.336, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.15322222208576616;  // std dev = 1.492, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6598804557569561;  // std dev = 1.016, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1417141350042818;  // std dev = 0.117, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.5575384858379749;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18851074061147718;  // std dev = 2.022, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.004426495078293358;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15862692058914418;  // std dev = 2.539, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38642492697685293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.59179214799355;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11885800993996856;  // std dev = 0.076, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.08026185954520623;  // std dev = 4.105, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5847583474308664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41095398762739865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return 0.025973434375748557;  // std dev = 3.646, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.4716320338037842;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( phenotype(E, G), complex(F, H) )
%   | | | then return 0.09390265670557559;  // std dev = 2.414, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.008912273779345772;  // std dev = 2.803, 109.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=24 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1426255180045275;  // std dev = 0.856, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07519065110493343;  // std dev = 1.649, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.43968998913033863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31626779258854765;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.044534947385802694;  // std dev = 1.756, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.10575481279604299;  // std dev = 3.241, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29244670836775244;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return -0.046471844001587465;  // std dev = 0.612, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.1116780066590072;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.03952403435494045;  // std dev = 0.474, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.061556663119827215;  // std dev = 0.418, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07816109076384388;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.04036678687662315;  // std dev = 3.324, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.0747636609425833;  // std dev = 4.218, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2366040935530631;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.263068805169728;  // std dev = 0.669, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6113575886429311;  // std dev = 1.033, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19502292979731262;  // std dev = 0.097, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.06327496053498544;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.08094245197918769;  // std dev = 1.695, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.025930384169377794;  // std dev = 0.983, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0064369124304969475;  // std dev = 2.377, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.005012109438182033;  // std dev = 1.327, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16794457830294174;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then return 0.23804985334515924;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19856491480221822;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.39488434168051234;  // std dev = 1.025, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.411544159073824;  // std dev = 1.108, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.14021212817052453;  // std dev = 0.034, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.08772479440896246;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.04091737625832786;  // std dev = 2.172, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.025477984398299867;  // std dev = 2.278, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.1450108108613578;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1939474869478733;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.14205847501334745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1703182249984784;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then return -0.002750501847291555;  // std dev = 0.164, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18807566289458513;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.04464865038253889;  // std dev = 2.576, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.005009324101535153;  // std dev = 3.163, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.15137377566666482;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.05564594348326457;  // std dev = 0.438, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1403707422985413;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07807989972064402;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.009417232938986572;  // std dev = 1.046, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.026536021693118875;  // std dev = 0.836, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16112081223431035;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.005673852913338976;  // std dev = 2.400, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.04811342937718639;  // std dev = 3.240, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.695', 'seconds']
Refined model CLL: -0.180363


******************************************
Best model found
******************************************
Results 

CLL : -0.189603 

AUC ROC : 0.98169 

AUC PR : 0.196225 

Precision : 0.133945 

Recall : 0.790614 

F1 : 0.229079 

Total Learning Time : 3.275 

Total Inference Time : 2.8347532749176025 

Total revision time: 10.399021121978759
Best scored revision CLL: -0.172527


Results 

CLL : -0.189603 

AUC ROC : 0.98169 

AUC PR : 0.196225 

Precision : 0.133945 

Recall : 0.790614 

F1 : 0.229079 

Total Learning Time : 21.11951944541931 

Total Inference Time : 2.8347532749176025 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.649
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.03148226843284571;  // std dev = 3.278, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return 0.14919371121891478;  // std dev = 5.258, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.748592982892723;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7883422738769741;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15515321733995577;  // std dev = 0.084, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1554299097838609;  // std dev = 2.745, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.337786654782979;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5734183503905235;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5880862353656813;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04345396593339004;  // std dev = 2.819, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6476427847628151;  // std dev = 1.389, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14112716537887757;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2610630600346648;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13159936788791557;  // std dev = 2.412, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3107034534889804;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4341581804458535;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return -0.03006524585942183;  // std dev = 0.813, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4813299581265194;  // std dev = 0.846, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.03646341021220788;  // std dev = 4.426, 207.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4903298541303601;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5226789991090492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.13581237975817484;  // std dev = 2.683, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.07024873715304066;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32627690932466613;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34086639021572074;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05832125804070489;  // std dev = 4.518, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3707465919297521;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05269723064045658;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03313397390867543;  // std dev = 2.579, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.07418641323395543;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2586581248577316;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.41402939769043545;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.289099439031857;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.36985281070643;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07252410201042651;  // std dev = 1.409, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27201920037615085;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.08563598236717226;  // std dev = 3.989, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
%   | | | else return 0.058564634654262614;  // std dev = 3.055, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24544541699274489;  // std dev = 0.223, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2701776115598095;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2258532248561863;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5778387827776826;  // std dev = 1.066, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18010553769121515;  // std dev = 0.601, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.233801303757983;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09551792260069952;  // std dev = 3.215, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17452131075867894;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06940912367318813;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3821509907384833;  // std dev = 2.182, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.1432007845086663;  // std dev = 0.439, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2204660067845922;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04421739301030236;  // std dev = 2.430, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15368673669296004;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.29091214244212293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18111180222799947;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08025198215919087;  // std dev = 0.307, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20878743078749812;  // std dev = 0.444, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.019446569881324375;  // std dev = 1.549, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06628870432674672;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.039714632881569394;  // std dev = 2.797, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.015739171950767333;  // std dev = 2.452, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13214502402011208;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.145163992059329;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13789479994100695;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13501541541621445;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1640853615025549;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02962386102497263;  // std dev = 1.775, 116.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1940525219320364;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017358584269823476;  // std dev = 2.847, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return 0.019729454223540357;  // std dev = 2.474, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.704', 'seconds']
Parameter learned model CLL:-0.180629 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.278, 62, 13], 'false,false,true,false': [5.258, 95, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.042, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.084, 128, 0], 'false,false,false,true': [2.745, 24, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.038, 0, 11], 'true,false': [0.042, 0, 4], 'false,true,true': [2.819, 55, 14], 'false,true,false,true': [1.389, 2, 42], 'false,true,false,false': [0.0, 93, 0], 'false,false,true,true': [1.085, 2, 3], 'false,false,true,false': [2.412, 19, 9], 'false,false,false,true': [1.213, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.061, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.813, 1, 1], 'false,true,true,false': [0.846, 1, 6], 'false,true,false': [4.426, 158, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.683, 21, 11], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.048, 0, 6], 'false,true': [4.518, 146, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.807, 1, 2], 'false,false,false,true': [2.579, 26, 9], 'false,false,false,false': [1.413, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.005, 0, 9], 'true,true,false': [0.143, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.016, 0, 2], 'false,true': [1.409, 28, 5], 'false,false,true': [0.038, 0, 5], 'false,false,false,true': [3.989, 95, 46], 'false,false,false,false': [3.055, 32, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.223, 0, 13], 'true,true,true,false': [0.047, 0, 3], 'true,true,false,true': [0.055, 0, 3], 'true,true,false,false': [1.066, 1, 33], 'true,false': [0.601, 110, 0], 'false,true': [0.002, 0, 3], 'false,false,true': [3.215, 59, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.894, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.182, 5, 56], 'false,true,false': [0.439, 147, 0], 'false,false,true,true': [0.041, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.43, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.022, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.036, 0, 5], 'false,true,true': [0.307, 14, 1], 'false,true,false,true': [0.444, 1, 6], 'false,true,false,false': [1.549, 54, 17], 'false,false,true': [0.867, 1, 3], 'false,false,false,true': [2.797, 66, 31], 'false,false,false,false': [2.452, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.01, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.803, 1, 2], 'true,false': [0.021, 0, 3], 'false,true': [1.775, 92, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.847, 75, 31], 'false,false,false,false': [2.474, 27, 12]}]
{'': [0.10380622837370206, 0.19898331867443883], 'false': [-2.5376526277146434e-16, 0.18946837994457164], 'false,false': [0.18690048304755016, 0.20118983234180587], 'false,false,false': [0.19834710743801665, 0.20999999999999988], 'false,false,true': [0.14328888888888835, 0.2063377144130101], 'true': [0.07100591715976314, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.00016732161202218283, 0.20944688710857828], 'false': [-6.344131569286608e-17, 0.20556294367746697], 'false,false': [0.20264454991552913, 0.21886602052729526], 'false,false,false': [0.21528942342131263, 0.24999999999999997], 'false,false,true': [0.05148323760343126, 5.5114512383786646e-05], 'true': [-2.220446049250313e-16, 0.0002561045081969558], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.0002533606516578857, 0.15341450470248075], 'false': [0.13919843369708207, 0.22220196248664775], 'false,false': [0.21409265269790953, 0.24527993877065346], 'false,false,false': [0.24527993877065346, nan], 'false,false,true': [0.23561833960417258, 0.20770925767482407], 'false,true': [0.11514717483006508, 0.1497288362290659], 'false,true,false': [0.043860293803342915, -4.775152794086695e-17], 'true': [0.00012853581483553776, 0.0004388545965131607]}
{'': [0.00024514277302545295, 0.12184659280812578], 'false': [0.10334222230622504, 0.21535623335826792], 'false,false': [0.00023254826241151752, 0.22120637447554706], 'false,false,false': [0.22503187266266225, 0.16], 'false,true': [0.19806707262666992, 0.09465255105947427], 'false,true,true': [0.3302539012942293, 0.1021827284797878], 'true': [0.00024514277302545295, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.00020356248585742993, 0.11933742379202697], 'false': [0.10105215431509172, 0.19621904249469624], 'false,false': [0.18189991037179748, 0.19683556580637998], 'false,false,false': [0.19004816308091907, 0.22189043909735037], 'false,false,true': [0.0, 0.21724436477493111], 'true': [9.132374330459806e-07, 0.00037982458689163795], 'true,true': [9.132374330459806e-07, nan]}
{'': [0.005942485651647983, 0.12501545072421633], 'false': [0.06016450522188128, 0.13256822617822428], 'false,false': [0.0002938615220948515, 0.13513452079501004], 'false,false,false': [0.11285836051187342, 0.20286321203659766], 'true': [0.006710327645075714, 0.0015344751347765584], 'true,true': [2.907692525175618e-06, 0.005089553938707331], 'true,false': [0.0, 0.00012801035656095916], 'true,false,true': [0.0, nan]}
{'': [0.10738804795836716, 0.11173487373825167], 'false': [1.5382334212499238e-06, 0.11484247007752157], 'false,false': [0.11484247007752157, nan], 'true': [0.04782506892258148, 0.003288298361506194], 'true,true': [0.003340885001362273, 0.04003335522898755], 'true,true,false': [0.001004959741210722, 0.033431591266063876], 'true,true,true': [0.0038263541361375306, 0.0007401942407523806]}
{'': [0.052764389448923706, 0.09204504091315734], 'false': [0.08102909622777442, 0.14614435522877162], 'false,false': [0.0005584446954227107, 0.15536503531597512], 'false,false,false': [0.15536503531597512, nan], 'false,true': [0.0780830106335503, 0.0013109304218304856], 'false,true,true': [nan, 0.07808301063355028], 'true': [0.0, 0.10000449296089979], 'false,false,true': [0.0005584446954227107, nan]}
{'': [0.001227446516199708, 0.07562604480026001], 'false': [0.033404440383202255, 0.10239688755637051], 'false,false': [0.18777649955484063, 0.09966709986090057], 'false,false,false': [0.08066551154141709, 0.14315058521931642], 'false,true': [0.006288470386303109, 0.03755328694231787], 'false,true,false': [0.02810340797509559, 0.03381015343972469], 'true': [4.6817817404740115e-05, 0.0018884192619259648], 'true,false': [0.0, 0.0002567506624549409]}
{'': [0.049180269080068444, 0.06681577885903989], 'false': [0.02715150954444333, 0.09675264737782918], 'false,false': [1.1729128007453848e-06, 0.09812610867602005], 'false,false,false': [0.07647668303253417, 0.1569640281854395], 'true': [0.05835437739790367, 0.00014614932003283176], 'true,true': [3.779301924431156e-05, 0.17513367186960596], 'true,true,false': [0.0, 0.2148915660812267], 'true,true,true': [3.469446951953614e-18, 5.337027317665194e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.517
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.10376297018723067;  // std dev = 4.596, 114.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=28 */
%   | | | else return 0.2043027812533573;  // std dev = 4.852, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.75517232473028;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8174331917649024;  // std dev = 0.997, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15886090269098957;  // std dev = 0.152, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.001111216041642563;  // std dev = 2.253, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.19157134661868186;  // std dev = 1.969, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5028780778522347;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.04432052282348234;  // std dev = 1.536, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.18746497390740013;  // std dev = 2.041, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6008549485699951;  // std dev = 1.923, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14201631674821955;  // std dev = 0.053, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, L) )
%   | | | then return 0.042493745584416945;  // std dev = 1.427, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.16707660181939868;  // std dev = 1.823, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.21826931548336;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4720763742186073;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.43033109443731205;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E) )
%   | | then return 0.4855804685047806;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.030331094437312123;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11080936629407562;  // std dev = 0.129, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.045541172314662606;  // std dev = 2.439, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.1490585443609137;  // std dev = 3.574, 101.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=41 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5593093368367573;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.22410625631855055;  // std dev = 2.282, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.032509100863511685;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3365323863460288;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.38482473672818623;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.47922828568701736;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.04561380797091352;  // std dev = 1.630, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.06336272443541456;  // std dev = 4.073, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.4368371704590229;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41353407752591975;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.2307827989577057;  // std dev = 1.480, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.002062949420005858;  // std dev = 2.446, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2908997890046621;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.3237732719656496;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.12442850152367571;  // std dev = 0.714, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.1004279014858298;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.003045138838982686;  // std dev = 0.582, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11092119941597417;  // std dev = 1.103, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.31103237703445225;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10033461868992273;  // std dev = 2.823, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.012752531001078062;  // std dev = 4.116, 143.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23987072002145013;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.0190410851122641;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5886325954608306;  // std dev = 1.001, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16909900407206638;  // std dev = 0.075, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.011825966598405069;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(H, I), location(H, J) )
%   | | | then return -0.028864756696012156;  // std dev = 1.589, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.06584913424154717;  // std dev = 2.157, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1734312096815267;  // std dev = 0.659, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07939070279283712;  // std dev = 1.524, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17105985664663093;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.26584783053053346;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23243715760275327;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.4330867666002755;  // std dev = 1.128, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return 0.35603340061462513;  // std dev = 0.993, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.15081266846290853;  // std dev = 0.042, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2145808283973963;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1019316158819317;  // std dev = 1.476, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.05337875375714497;  // std dev = 1.984, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.1481488527497018;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09697900779169555;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.2744962666071197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.04716108069381031;  // std dev = 0.608, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then return -0.008808311504309246;  // std dev = 0.183, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3863952071196024;  // std dev = 1.035, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.1768677425267085;  // std dev = 0.272, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.057948607427443004;  // std dev = 1.336, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.013661723121963032;  // std dev = 2.041, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14805421211807993;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1642309667425038;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), enzyme(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, H) )
%   | | | then return 0.00518260767004184;  // std dev = 0.343, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20237378767986308;  // std dev = 0.405, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.014146361410338504;  // std dev = 1.436, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | | else return -0.08225495048487594;  // std dev = 0.958, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15751181232286995;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.03426022022602867;  // std dev = 2.144, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.019840923690888364;  // std dev = 2.650, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.366', 'seconds']
Refined model CLL: -0.174683


******************************************
Best model found
******************************************
Results 

CLL : -0.190672 

AUC ROC : 0.986085 

AUC PR : 0.250324 

Precision : 0.165477 

Recall : 0.90106 

F1 : 0.279605 

Total Learning Time : 3.517 

Total Inference Time : 3.1631922721862793 

Total revision time: 11.422221771240235
Best scored revision CLL: -0.174683


Results 

CLL : -0.190672 

AUC ROC : 0.986085 

AUC PR : 0.250324 

Precision : 0.165477 

Recall : 0.90106 

F1 : 0.279605 

Total Learning Time : 22.142720094680787 

Total Inference Time : 3.1631922721862793 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.211
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.115961435099511;  // std dev = 4.949, 128.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   | | | else return 0.20430278125335727;  // std dev = 4.852, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7217344757168282;  // std dev = 2.823, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.162311285202783;  // std dev = 0.076, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1677237046513005;  // std dev = 1.627, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12926987300130072;  // std dev = 4.174, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5430649756610898;  // std dev = 2.421, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return -0.14703993610112304;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04804617229667296;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12023179454688365;  // std dev = 1.309, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5314957708083576;  // std dev = 1.411, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.052269981348256174;  // std dev = 5.028, 216.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5255142841978959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.15696189421369214;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.08091906271972009;  // std dev = 5.350, 223.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39571099699295287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0963191203720389;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4371813008601808;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24410420343414427;  // std dev = 0.492, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3059591077616026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.009444084590497172;  // std dev = 2.220, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.005172242569489449;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.08895243053424073;  // std dev = 4.626, 163.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=55 */
%   | | | else return 0.09266855425550655;  // std dev = 1.788, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24415903167922443;  // std dev = 0.227, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24507788429555943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7902422843674645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5531403790216161;  // std dev = 0.815, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18953445110160083;  // std dev = 0.493, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25419045484435504;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04280693812560671;  // std dev = 4.103, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17213864177908222;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1946104286587708;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34200075966725985;  // std dev = 3.240, 86.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=71 */
%   | | else return -0.15741301909668254;  // std dev = 0.224, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20260103847062405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.04815101636112183;  // std dev = 1.451, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16706859112747408;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.178273793866065;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04663638181409136;  // std dev = 1.553, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.33537674361628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.006028731059695545;  // std dev = 1.862, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17869892672000776;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03589537053430088;  // std dev = 3.538, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return -0.02164455694971271;  // std dev = 1.429, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12882635293455375;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.26164930139218745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15376404355779194;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.02030324519468109;  // std dev = 2.395, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15395837743386395;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06138811820678724;  // std dev = 3.231, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | | else return -0.053774375479091294;  // std dev = 1.467, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.754', 'seconds']
Parameter learned model CLL:-0.204793 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.949, 95, 33], 'false,false,true,false': [4.852, 68, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.823, 9, 69], 'false,false,true,false': [0.076, 161, 0], 'false,false,false,true': [1.627, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.174, 73, 34], 'false,true,false,true': [2.421, 7, 37], 'false,true,false,false': [0.0, 69, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [1.309, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.411, 3, 14], 'false,true,false': [5.028, 159, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.596, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [5.35, 152, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.492, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.22, 34, 12], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [4.626, 108, 55], 'false,false,false,false': [1.788, 10, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.227, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.815, 1, 33], 'true,false': [0.493, 91, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [4.103, 90, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.04, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.24, 15, 71], 'false,true,false': [0.224, 144, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.451, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.137, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.051, 0, 3], 'false,true,true': [1.553, 34, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.862, 41, 17], 'false,false,true': [3.73e-09, 0, 3], 'false,false,false,true': [3.538, 81, 40], 'false,false,false,false': [1.429, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.001, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.045, 0, 3], 'false,true': [2.395, 86, 29], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.231, 73, 40], 'false,false,false,false': [1.467, 13, 4]}]
{'': [-1.6148698540002277e-16, 0.21253902185223744], 'false': [0.18750000000000006, 0.20967145928513972], 'false,false': [0.20895882877526778, 0.22222222222222207], 'false,false,false': [0.24000000000000005, 0.20408163265306126], 'false,false,true': [0.19134521484375125, 0.2263313609467468], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.20765291846924935], 'false': [0.0, 0.2060055114310855], 'false,false': [0.20519519985992457, 0.22050288555675046], 'false,false,false': [0.22050288555675046, nan], 'false,false,true': [0.10219004042418334, 3.606628245728209e-05], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, nan]}
{'': [-1.2111523905001707e-16, 0.16598048333377105], 'false': [0.16399164807183625, 0.190298767342208], 'false,false': [0.18749999999999997, 0.19033443627191673], 'false,false,false': [0.19033443627191673, nan], 'false,false,true': [nan, 0.18749999999999997], 'false,true': [0.16279420762540872, 0.16509744191161274], 'false,true,false': [0.13319590821436236, -6.436075505073371e-18], 'true': [0.0, 0.0]}
{'': [1.6148698540002277e-16, 0.1374687267770704], 'false': [0.13258415046759872, 0.22271690751438286], 'false,false': [0.0, 0.23164466042634374], 'false,false,false': [0.23164466042634374, nan], 'false,true': [0.11706017726930712, 0.11704982845784008], 'false,true,true': [nan, 0.11706017726930702], 'true': [1.3322676295501878e-16, 0.0], 'false,false,true': [nan, 0.0]}
{'': [-6.055761952500853e-17, 0.13344530964848642], 'false': [0.12834449199124043, 0.22634338802596435], 'false,false': [0.0, 0.24804156135269576], 'false,false,false': [0.2222222222222223, 0.2222222222222222], 'false,false,true': [nan, 0.0], 'true': [-3.172065784643304e-17, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.02045851280380991, 0.13330019197001053], 'false': [0.10710806281096963, 0.13866182989737372], 'false,false': [0.1875, 0.13741583177282418], 'false,false,false': [0.13130008898585432, 0.19970738621503234], 'true': [0.0220680182517743, 0.0], 'true,true': [2.3790493384824782e-17, 0.06060909469855103], 'true,false': [nan, 0.0]}
{'': [0.11550089460863007, 0.1275676899794568], 'false': [-9.25185853854297e-18, 0.12950367273000932], 'false,false': [0.12950367273000932, nan], 'true': [0.06697216910604295, 0.0026721164958891726], 'true,true': [0.004675590929220077, 0.06905186071376904], 'true,true,false': [0.0, 0.019520598356604506], 'true,true,true': [0.005143073268493836, 0.0]}
{'': [0.00026775065250649423, 0.10650085493814787], 'false': [0.10425420837407996, 0.1352251814994889], 'false,false': [0.0, 0.1403104065368084], 'false,false,false': [0.1403104065368084, nan], 'false,true': [0.12207977978450804, 0.0003491874037107169], 'false,true,true': [nan, 0.12207977978450796], 'true': [-4.625929269271485e-18, 0.0003136071415691333], 'false,false,true': [0.0, nan]}
{'': [0.001963199820013099, 0.08629670611757305], 'false': [0.05814913407704902, 0.10628027598376115], 'false,false': [4.625929269271485e-18, 0.1081609140421119], 'false,false,false': [0.1034556080703544, 0.14586070482249097], 'false,true': [0.05358945939798912, 0.06069551633299439], 'false,true,false': [0.0, 0.05976643654678762], 'true': [0.0023449600076282905, 0.0008538587851025561], 'true,false': [nan, 0.0008538587851025561]}
{'': [0.0016013139258172972, 0.07603756631633239], 'false': [0.04989773403316856, 0.09642815263820836], 'false,false': [0.0, 0.09839211971948292], 'false,false,false': [0.09240456835391682, 0.12666363974322495], 'true': [0.0019297611507984869, 0.0006749315618390326], 'true,true': [0.0019297611507984869, nan], 'true,true,true': [1.993605758611659e-07, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 4.986
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), interaction(A, H) )
%   | | | then return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.18650714405473506;  // std dev = 5.436, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.13863673997756112;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7447686395743578;  // std dev = 2.523, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.16119106667370547;  // std dev = 0.087, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.14776106857399196;  // std dev = 1.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.007087586288911411;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5988021120811818;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6535348237864018;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.05991742318482829;  // std dev = 3.202, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.11369397957595555;  // std dev = 2.865, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.654509682112388;  // std dev = 1.388, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1422401192424369;  // std dev = 0.033, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8304090493027682;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17391679521935943;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.011057918327424398;  // std dev = 0.349, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3755065015433662;  // std dev = 0.274, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.48922888512487384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5959101631540343;  // std dev = 1.150, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.15766249739217084;  // std dev = 0.542, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.1452091177277325;  // std dev = 2.982, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.02510640856502168;  // std dev = 2.677, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5526342096440116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03812675446210683;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06599706233272837;  // std dev = 1.336, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3493262131996245;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4085498137554995;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.44031917409184823;  // std dev = 0.872, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.0672616664292692;  // std dev = 1.531, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.052552394535292736;  // std dev = 4.458, 186.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=54 */
%   | | | else return 0.2438006394515987;  // std dev = 0.977, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return -0.061757656976143105;  // std dev = 0.675, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.271362388920972;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.01417305018521126;  // std dev = 1.153, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27495182125995205;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2765510604137659;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4305624313046582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.13768446215619604;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.20865630271973012;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I), location(G, J) )
%   | | | then return 0.028046971015413397;  // std dev = 1.375, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.19850146499150426;  // std dev = 1.859, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.008836447533558826;  // std dev = 1.929, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.057497053318870714;  // std dev = 4.054, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23372072111775;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44382550313084596;  // std dev = 1.549, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.16204282339566647;  // std dev = 0.075, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3117063689121702;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4663358416481199;  // std dev = 0.889, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.19661886456538963;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.00994299441852278;  // std dev = 1.623, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.07237323324605205;  // std dev = 2.654, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18377563163298094;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06488001168851722;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.28403820537972785;  // std dev = 1.621, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return 0.37665051751266004;  // std dev = 2.026, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else if ( location(A, H) )
%   | | | then return -0.14059690460781218;  // std dev = 0.406, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return -0.1551215427484044;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.28012533938094275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.07775628120100696;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.127674465074273;  // std dev = 1.044, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16098585792756398;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18312716640317414;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.00434951110141674;  // std dev = 1.380, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.11489702257146425;  // std dev = 0.202, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.3994080431568102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.02834753156041373;  // std dev = 1.694, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.01792997779354058;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.07394770672421662;  // std dev = 0.627, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.02230737415030427;  // std dev = 3.222, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), interaction(A, A) )
%   | | | then return 0.14043271336538804;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17716665379234972;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13206283276087194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15753250039272804;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.06745887190834807;  // std dev = 0.205, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | else return 0.022263054319324453;  // std dev = 0.222, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24034761713465713;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.0223521859429044;  // std dev = 3.046, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return 0.10473639059372586;  // std dev = 1.195, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.231', 'seconds']
Refined model CLL: -0.180409


******************************************
Best model found
******************************************
Results 

CLL : -0.179109 

AUC ROC : 0.989531 

AUC PR : 0.334276 

Precision : 0.19058 

Recall : 0.932624 

F1 : 0.316486 

Total Learning Time : 4.986 

Total Inference Time : 8.236173868179321 

Total revision time: 21.521952125549316
Best scored revision CLL: -0.180409


Results 

CLL : -0.179109 

AUC ROC : 0.989531 

AUC PR : 0.334276 

Precision : 0.19058 

Recall : 0.932624 

F1 : 0.316486 

Total Learning Time : 21.534495565414428 

Total Inference Time : 8.236173868179321 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.285
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09123164186642853;  // std dev = 4.876, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.2300497615457926;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5829516338317234;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5270070978469591;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6708336371161502;  // std dev = 3.537, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.16259177937737224;  // std dev = 0.136, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( location(A, I) )
%   | | | then return 0.22895152751901957;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5998705824481875;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.48160814045038824;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06606801138614818;  // std dev = 4.419, 144.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5660880325952989;  // std dev = 2.615, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1502627165257561;  // std dev = 2.11e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7940091400167522;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.032024118799726;  // std dev = 1.657, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41206277657126045;  // std dev = 0.968, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.48143242091155625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5863174825000289;  // std dev = 3.97e-06, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48666268979925714;  // std dev = 2.016, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.018836126035521365;  // std dev = 5.277, 259.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.594553035611046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04516410481227706;  // std dev = 1.652, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3374655591095204;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30221893517595044;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.0682664422829037;  // std dev = 5.789, 281.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44726357474670375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03332555625976128;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2813607471913466;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2444567442010191;  // std dev = 1.149, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.340965011020253;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.012565710102330893;  // std dev = 2.866, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2078574705739259;  // std dev = 0.966, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05636785421801667;  // std dev = 4.714, 177.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=51 */
%   | | | else return 0.03928237532850689;  // std dev = 2.257, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30280500383591635;  // std dev = 0.393, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2689489372963326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2886415697385615;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5814834328082127;  // std dev = 0.483, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16972582986066845;  // std dev = 0.591, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2717357093159068;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04932601300483943;  // std dev = 4.529, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.168507727639561;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14089435700618824;  // std dev = 0.874, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.5791326008326246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3466868631293293;  // std dev = 3.665, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.1475333798818583;  // std dev = 0.209, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21944377752386912;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11968394344570021;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.07744376853799781;  // std dev = 0.987, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.23151496023777152;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23045166201665354;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03444270783230198;  // std dev = 1.906, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.10698135984979104;  // std dev = 1.033, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.04582105505704437;  // std dev = 1.363, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19810375163032895;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.051663270697036544;  // std dev = 3.890, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return 0.005198952662108958;  // std dev = 1.359, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1367922676572998;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21504907641997506;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7974162097667363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20636126408072872;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.003223089583165531;  // std dev = 2.449, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.0015935438107966642;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.059061395548582064;  // std dev = 3.702, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | | | else return -0.010990834672290195;  // std dev = 1.376, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.168', 'seconds']
Parameter learned model CLL:-0.202425 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.876, 102, 31], 'false,false,true,false': [5.316, 76, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.291, 2, 10], 'false,true,true': [1.23, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.537, 15, 76], 'false,false,true,false': [0.136, 208, 0], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.072, 0, 11], 'true,false': [0.922, 1, 6], 'false,true,true': [4.419, 110, 34], 'false,true,false,true': [2.615, 8, 48], 'false,true,false,false': [2.11e-08, 101, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.657, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.968, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [3.97e-06, 0, 3], 'false,true,true,false': [2.016, 6, 21], 'false,true,false': [5.277, 201, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.652, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.955, 1, 10], 'false,true': [5.789, 199, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.694, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.083, 0, 9], 'true,true,false': [1.149, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.866, 57, 19], 'false,false,true': [0.966, 1, 8], 'false,false,false,true': [4.714, 126, 51], 'false,false,false,false': [2.257, 25, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.393, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.483, 0, 33], 'true,false': [0.591, 99, 0], 'false,true': [0.027, 0, 5], 'false,false,true': [4.529, 114, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [0.874, 1, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.665, 17, 82], 'false,true,false': [0.209, 165, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.259, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.987, 1, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.135, 0, 5], 'false,true,true': [1.906, 39, 13], 'false,true,false,true': [1.033, 2, 8], 'false,true,false,false': [1.363, 53, 11], 'false,false,true': [0.022, 0, 5], 'false,false,false,true': [3.89, 94, 47], 'false,false,false,false': [1.359, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.137, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.111, 0, 3], 'false,true': [2.449, 76, 32], 'false,false,true': [0.914, 1, 5], 'false,false,false,true': [3.702, 90, 47], 'false,false,false,false': [1.376, 11, 4]}]
{'': [0.12749999999999959, 0.21670041025094625], 'false': [0.17283950617283939, 0.21075115699537308], 'false,false': [0.209684419368839, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.17875515857312568, 0.23359060173485532], 'false,true': [0.25, 0.0], 'true': [0.1224489795918365, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09401383753707593, 0.1956646096317212], 'false': [0.16799791030927935, 0.1912012068789719], 'false,false': [0.18895379299086815, 0.2399999999999999], 'false,false,false': [0.2399999999999999, nan], 'false,false,true': [0.1374455770692274, 8.926902172482573e-05], 'false,true': [0.16799791030927935, nan], 'true': [-6.344131569286608e-17, 0.13889388128488603]}
{'': [0.050787977089844775, 0.15176156372031377], 'false': [0.14938663059787377, 0.19372354428157487], 'false,false': [0.19372354428157487, nan], 'false,false,true': [0.0, 0.17167707917804909], 'false,true': [0.13558120612819635, 0.16131443466802198], 'false,true,false': [0.12213553385781196, 4.3969228698026e-18], 'true': [0.0004666803681775714, 0.12131729733960052]}
{'': [0.052314463628442526, 0.13472625295875926], 'false': [0.13175203969954039, 0.18833192662801698], 'false,false': [0.0, 0.1820231260729547], 'false,false,false': [0.1820231260729547, nan], 'false,true': [0.13637769720795606, 0.1075188198718787], 'false,true,true': [5.240474720835664e-12, 0.15053766690410114], 'true': [0.05512444348746768, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05100101189618214, 0.12344769404198348], 'false': [0.11925185397638947, 0.2019985492296552], 'false,false': [0.0, 0.20500403815518034], 'false,false,false': [0.20500403815518034, nan], 'true': [3.172065784643304e-17, 0.08297307509071718], 'true,true': [3.172065784643304e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.07433200182805003, 0.1239212072259551], 'false': [0.10807872663407667, 0.12879762832720112], 'false,false': [0.10369970196827888, 0.12889339996358498], 'false,false,false': [0.12555208462077028, 0.145547188675262], 'true': [0.07837533295247778, 0.0], 'true,true': [0.0007652639026331201, 0.16496565187294193], 'true,false': [nan, 0.0]}
{'': [0.10605151503322949, 0.1249929399471447], 'false': [0.00014611791089761406, 0.12738022848693642], 'false,false': [0.12738022848693642, nan], 'true': [0.026020595540253284, 0.003522630009306161], 'true,true': [0.009731809577811723, 0.01303349706244239], 'true,true,false': [0.0, 0.007071997367913445], 'true,true,true': [0.010308957305403392, 0.0]}
{'': [0.04266686819789786, 0.11106375592556442], 'false': [0.10931066896064065, 0.14494250967539307], 'false,false': [0.0, 0.1585320311433593], 'false,false,false': [0.1585320311433593, nan], 'false,true': [0.14279693404228397, 0.0002657030917810531], 'false,true,true': [0.0, 0.1356679105169303], 'true': [3.96508223080413e-18, 0.06952198450410724], 'false,false,true': [0.0, nan]}
{'': [0.0640914602009835, 0.08509377465751189], 'false': [0.05364875543804975, 0.10695393078731694], 'false,false': [9.477347546609227e-05, 0.10969188839328257], 'false,false,false': [0.10729904528958868, 0.1318273043308126], 'true': [0.09745007460606599, 0.002610134881944694], 'false,true': [0.06984454473317642, 0.04223246135308833], 'false,true,false': [0.10666159601478216, 0.02901019581877157], 'true,false': [0.0, 0.003653865805263434]}
{'': [0.05595323988051306, 0.08531630736456057], 'false': [0.055510819986684466, 0.10452966220940645], 'false,false': [0.1393772750008512, 0.1030570433031816], 'false,false,false': [0.10004221842912295, 0.12616940336319074], 'true': [0.0652040180020438, 0.004086863986453221], 'true,true': [0.0029672477123802807, 0.0], 'true,true,true': [0.0, 0.003131429262155261], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.85
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.572434649385226;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return -0.044505932157124846;  // std dev = 3.151, 113.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=11 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.28672036367094095;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.1279902049407813;  // std dev = 4.983, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.42757709712051506;  // std dev = 0.867, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6285643213018633;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6410917047480361;  // std dev = 3.713, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.15344596483969508;  // std dev = 0.227, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.16424316233928055;  // std dev = 1.628, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.13651925493507522;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5897919453662486;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5776873145590465;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.04037669086751345;  // std dev = 4.084, 143.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=32 */
%   | | | else return 0.29915666806734315;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6436743189657965;  // std dev = 1.928, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13679348629514712;  // std dev = 0.115, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.1762726563677527;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.713876889177412;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1468175106255647;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3391713154581982;  // std dev = 0.295, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4313107798302359;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.500473909576868;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4290188985085805;  // std dev = 1.791, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.1374217181804945;  // std dev = 0.496, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0.10428470122429849;  // std dev = 4.811, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.37954044950489185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06974207757349378;  // std dev = 1.580, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.1441952462165437;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3730161591677209;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18398597467237365;  // std dev = 0.372, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.15577837250767068;  // std dev = 1.455, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.021761548116421493;  // std dev = 2.386, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.03054950673436583;  // std dev = 2.869, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.10048408350304941;  // std dev = 3.892, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2950380110347729;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.13223077919297233;  // std dev = 1.088, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.012259904618719083;  // std dev = 1.105, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33209383139604676;  // std dev = 0.081, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.00411072366950425;  // std dev = 1.822, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.24657368822966624;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, H), interaction(H, E) )
%   | | | then return -0.03868152428095488;  // std dev = 1.202, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return -0.12746527206643385;  // std dev = 0.540, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), phenotype(J, L) )
%   | | | then return 0.07112830527967323;  // std dev = 4.227, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | | else return 0.008428228231870559;  // std dev = 2.610, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.12993332919220463;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.31692434021527155;  // std dev = 1.077, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2647599756225788;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.42454029647813707;  // std dev = 0.291, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | else return -0.13926295415636708;  // std dev = 0.047, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.3047573561309919;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22367630613354106;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4653691151076694;  // std dev = 1.479, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.18694853421987903;  // std dev = 0.114, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( location(A, J) )
%   | | | then return 0.03295329299832289;  // std dev = 3.473, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | | | else return -0.028706846642337663;  // std dev = 0.857, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( complex(A, E) )
%   | | then return 0.1575653799041803;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2251816325629085;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2461673275083586;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3838472800431633;  // std dev = 2.642, 90.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | | else return -0.13665943562765379;  // std dev = 0.039, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.14642356965741798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0634504936287718;  // std dev = 1.229, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.1306624956452709;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1596125484721503;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06241998096179713;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.011069546361998472;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.023462358858141314;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.03766346477237986;  // std dev = 0.227, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else return 0.03408294876363368;  // std dev = 0.209, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2243141043603977;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.03670862752975657;  // std dev = 3.171, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return -0.018516848263418276;  // std dev = 2.130, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16640005222062654;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.02221544787234111;  // std dev = 0.571, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1236655207774993;  // std dev = 0.864, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.014744309454051419;  // std dev = 1.749, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.07873739457591614;  // std dev = 0.500, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, K), phenotype(J, L) )
%   | | | then return 0.010153331039415979;  // std dev = 0.945, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.07304177096515836;  // std dev = 0.970, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( location(A, M), phenotype(A, N) )
%   | | | then return 0.04861108069103612;  // std dev = 2.693, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return -0.003703014026924279;  // std dev = 2.476, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.538', 'seconds']
Refined model CLL: -0.196286


******************************************
Best model found
******************************************
Results 

CLL : -0.17235 

AUC ROC : 0.986075 

AUC PR : 0.353115 

Precision : 0.266414 

Recall : 0.796226 

F1 : 0.399243 

Total Learning Time : 5.85 

Total Inference Time : 8.096233129501343 

Total revision time: 23.55578638076782
Best scored revision CLL: -0.196286


Results 

CLL : -0.17235 

AUC ROC : 0.986075 

AUC PR : 0.353115 

Precision : 0.266414 

Recall : 0.796226 

F1 : 0.399243 

Total Learning Time : 23.568329820632933 

Total Inference Time : 8.096233129501343 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.412
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07436515131572859;  // std dev = 2.504, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.14953966357633247;  // std dev = 5.584, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21663950113724814;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8404763274274623;  // std dev = 0.026, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15948716059825654;  // std dev = 0.044, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( location(A, K) )
%   | | | then return 0.22983661222935656;  // std dev = 3.287, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.32967992018274295;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5719988521761975;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08489297829696892;  // std dev = 2.046, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6857074267677952;  // std dev = 0.161, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1406444713135605;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13065882102847473;  // std dev = 3.615, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2987790987069394;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4288622466621297;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42037926479283466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4263734162429115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.584029906490831;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05281677784585995;  // std dev = 4.207, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.564239370196429;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11771766572336251;  // std dev = 3.428, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.15454879118640216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33313446335588115;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22284352638270385;  // std dev = 0.959, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.03513142134140824;  // std dev = 4.306, 217.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.11903649808675482;  // std dev = 0.652, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4241270829746352;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07012403964715586;  // std dev = 3.592, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.2235589361468848;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2731831797497492;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2340198141343353;  // std dev = 0.770, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3690245585637799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26687515803520223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32519890676013563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07332530489867872;  // std dev = 0.950, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.12888410675310252;  // std dev = 0.929, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07735397891359987;  // std dev = 3.911, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | | | else return 0.05027000164612403;  // std dev = 3.693, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26457172885365154;  // std dev = 0.239, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.03102617125224157;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26295255836257014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5843542139107738;  // std dev = 1.274, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.20631351308504822;  // std dev = 0.666, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24440678312091313;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06314562583488473;  // std dev = 3.284, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17813319405917658;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19921479300590408;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4119007959918817;  // std dev = 1.479, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14034691472456337;  // std dev = 0.270, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.27927911906618097;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.026840011908390533;  // std dev = 3.212, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1694675171400261;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15860287951718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21693380995067374;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07538536108239081;  // std dev = 0.413, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1950044374463331;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.020463940896832896;  // std dev = 1.374, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17189018413503257;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.016765885936545676;  // std dev = 2.808, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.04639063323898688;  // std dev = 3.024, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12836462113421884;  // std dev = 0.000606, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19249053659895454;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14191393206722158;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17242305438951358;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03671852651086145;  // std dev = 1.520, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14878278774428239;  // std dev = 0.000934, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03460974735392345;  // std dev = 2.700, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return -0.015630691265606032;  // std dev = 3.177, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.653', 'seconds']
Parameter learned model CLL:-0.176598 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.504, 29, 8], 'false,false,true,false': [5.584, 107, 44], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [0.026, 0, 52], 'false,false,true,false': [0.044, 146, 0], 'false,false,false,true': [3.287, 27, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.046, 23, 8], 'false,true,false,true': [0.161, 0, 48], 'false,true,false,false': [0.0, 110, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.615, 38, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.032, 0, 11], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.13, 0, 3], 'false,true,false': [4.207, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.428, 34, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.959, 1, 9], 'false,true': [4.306, 161, 56], 'false,false,true,true': [0.652, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.592, 40, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.032, 0, 7], 'true,true,false': [0.77, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.95, 21, 3], 'false,false,true': [0.929, 1, 6], 'false,false,false,true': [3.911, 102, 49], 'false,false,false,false': [3.693, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.239, 0, 12], 'true,true,true,false': [0.745, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.274, 2, 36], 'true,false': [0.666, 93, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.284, 77, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.03, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.479, 2, 56], 'false,true,false': [0.27, 163, 0], 'false,false,true,true': [0.021, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.212, 58, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.081, 0, 4], 'false,true,true': [0.413, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.374, 44, 14], 'false,false,true': [0.001, 0, 5], 'false,false,false,true': [2.808, 84, 36], 'false,false,false,false': [3.024, 40, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000606, 0, 5], 'true,true,true,false': [0.023, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.081, 0, 4], 'false,true': [1.52, 68, 17], 'false,false,true': [0.000934, 0, 5], 'false,false,false,true': [2.7, 72, 36], 'false,false,false,false': [3.177, 52, 20]}]
{'': [0.06222222222222188, 0.2146560000000006], 'false': [-1.4802973661668753e-16, 0.2080085998387544], 'false,false': [0.2000905387052973, 0.22959183673469347], 'false,false,false': [0.22997508009967915, 0.22222222222222224], 'false,false,true': [0.16946676406135883, 0.2064821718345696], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933978204e-05, 0.20897740676474583], 'false': [0.1875000000000001, 0.20605508943807022], 'false,false': [0.1936525098448503, 0.24159293155605677], 'false,false,false': [0.24003186628586792, 0.25], 'false,false,true': [1.2758597770211001e-05, 1.30075111157671e-05], 'false,true': [0.13888888888888892, 0.25], 'false,true,false': [nan, 0.25], 'true': [0.0, 9.126913474255538e-05]}
{'': [0.00011808527048508464, 0.16378223286055113], 'false': [0.1431083463458827, 0.22676945224269174], 'false,false': [0.22514019332449942, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.22535088035867232], 'false,true': [0.13500012299065123, 0.1445924939565037], 'false,true,false': [0.0005432005758612135, -6.863196879500968e-17], 'true': [6.936680898717018e-05, 0.0001340268823311619]}
{'': [0.00011162114085592836, 0.1256635440223338], 'false': [0.09484916170083482, 0.2246500675073885], 'false,false': [0.003352839905211402, 0.22738019479997423], 'false,false,false': [0.22604775797448345, 0.23999999999999994], 'false,true': [0.008874028404514012, 0.09172003964925379], 'false,true,true': [0.0, 0.005618145643362234], 'false,false,true': [0.0, 0.0], 'true': [9.283044873707105e-05, 0.00012397957419552075]}
{'': [0.06407752561674053, 0.11632033189604594], 'false': [0.08545060142737007, 0.21978875838273707], 'false,false': [0.20711994284989102, 0.2204037255757763], 'false,false,false': [0.21862858441420546, 0.25], 'false,false,true': [0.21233768901102545, 0.0], 'true': [3.435931314244023e-06, 0.09205987353331326], 'true,true': [3.435931314244023e-06, nan]}
{'': [0.04085682372630151, 0.12736779848576835], 'false': [0.037638980028995066, 0.13506412411599195], 'false,false': [0.1233978453276651, 0.13533358375306603], 'false,false,false': [0.10127813988767215, 0.21644094391392338], 'true': [0.04982686158580701, 0.0017507608277434656], 'true,true': [0.00014374172262408637, 0.11848853069057261], 'true,false': [0.0026086250070869593, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1377636656561088, 0.09275340772294614], 'true': [0.07472178534748462, 0.004774445205516893], 'false': [3.7075737242542316e-07, 0.09546533765959005], 'false,false': [0.09546533765959005, nan], 'true,true': [0.05481064631159682, 0.04421614499933778], 'true,true,true': [0.004759432447211044, 0.18511300693152885], 'true,true,false': [0.0, 0.042731034834552074]}
{'': [0.0002008370292810313, 0.08585204744445878], 'false': [0.06926507291726718, 0.1312585848246966], 'false,false': [0.0002268041119139197, 0.1322756510150266], 'false,false,false': [0.1322756510150266, nan], 'false,true': [0.03773104808822682, 0.00044641605644142135], 'false,true,true': [nan, 0.037731048088226846], 'false,false,true': [0.0002268041119139197, nan], 'true': [6.703379221885408e-05, 0.00011071782244167355]}
{'': [0.001616395362532239, 0.07539463985707806], 'false': [0.02963966159630987, 0.09281346579983592], 'false,false': [2.2042076397998933e-07, 0.09482141196165907], 'false,false,false': [0.065730510740794, 0.15241813063490023], 'false,true': [0.012184338300493919, 0.03298289235426569], 'false,true,false': [0.0, 0.032572679401068894], 'true': [0.0010303842043068569, 0.0018472991064082788], 'true,false': [0.0, 0.00162862439396292]}
{'': [0.0011674930865490216, 0.0743189243755415], 'false': [0.02717378970739546, 0.09503269522073018], 'false,false': [1.7452281679541937e-07, 0.0971852382103984], 'false,false,false': [0.06750959613477665, 0.14018424032022142], 'true': [0.0008397397190070905, 0.0016376712777347487], 'true,true': [0.0010276334369446888, 0.0], 'true,true,true': [7.334000904080095e-08, 0.00017015045213506405], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.544
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, H), location(H, I) )
%   | | | then return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.13592671287729025;  // std dev = 6.009, 180.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=50 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8416665320548566;  // std dev = 0.032, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15670636564270188;  // std dev = 0.081, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.09119220819199221;  // std dev = 3.216, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.20603737724367233;  // std dev = 1.939, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12470785159099863;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.15642265379801748;  // std dev = 1.915, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6301946190986601;  // std dev = 1.683, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.13800017462354666;  // std dev = 0.052, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6507591152298267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09210338434067518;  // std dev = 3.745, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else return 0.06119622237179165;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3341802508249765;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49804576834881276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.43055438993036255;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.07137334812744751;  // std dev = 4.141, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | | else return -0.061168697409661944;  // std dev = 0.648, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.512713847295903;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.015238555984288119;  // std dev = 1.991, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.17055745620048401;  // std dev = 3.063, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3351840628631743;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.11402228007606593;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.010093878650733547;  // std dev = 1.068, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.12180686595705084;  // std dev = 2.124, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.0749478189615327;  // std dev = 3.385, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.36793282208693334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40553863529785983;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.013016143236761988;  // std dev = 2.632, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.12268654612545817;  // std dev = 2.663, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30613903826016836;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), complex(A, G) )
%   | | then if ( location(D, H), location(A, H) )
%   | | | then return -0.002874592511384869;  // std dev = 2.141, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.07570539005136818;  // std dev = 1.413, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5076789573021433;  // std dev = 0.425, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.14218972134525112;  // std dev = 0.096, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, J), complex(A, L) )
%   | | | then return 0.3447694091895697;  // std dev = 1.218, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.005602140114187577;  // std dev = 2.215, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.18089303274510846;  // std dev = 2.541, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.11319719108778603;  // std dev = 1.522, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2460735677113813;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.230956034181936;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5902654072362882;  // std dev = 1.228, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19138443377362796;  // std dev = 0.072, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2252694774673815;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(H, I) )
%   | | | then return 0.07509783698515335;  // std dev = 2.504, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return -0.19118472568754322;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.008990823622730702;  // std dev = 1.448, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.10053486987106171;  // std dev = 0.699, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17442781663550078;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then return -0.0020511673933260033;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18282658824141745;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.3155979154456353;  // std dev = 0.232, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.44483243482460794;  // std dev = 0.417, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.13329614082965383;  // std dev = 0.030, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.15656172989414818;  // std dev = 0.868, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.1602922162617095;  // std dev = 1.398, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.035263034241791384;  // std dev = 2.843, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1604608356795315;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.208690741821475;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.07319808867800397;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.012376998066566412;  // std dev = 0.383, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.23030748798155143;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.014679731619430841;  // std dev = 1.221, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17285665381751125;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.016531130902323568;  // std dev = 2.705, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | | else return 0.05090581791595677;  // std dev = 2.868, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09018266459311276;  // std dev = 0.178, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.1709579472182119;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.16899586156488203;  // std dev = 0.565, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0140569837732012;  // std dev = 0.930, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.08704862749118164;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.018030254530398193;  // std dev = 0.816, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14971293681365422;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.022435510909393573;  // std dev = 2.583, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return -0.015577569041735202;  // std dev = 3.040, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.634', 'seconds']
Refined model CLL: -0.171323


******************************************
Best model found
******************************************
Results 

CLL : -0.187695 

AUC ROC : 0.981229 

AUC PR : 0.201528 

Precision : 0.129583 

Recall : 0.931408 

F1 : 0.227513 

Total Learning Time : 3.544 

Total Inference Time : 2.93710994720459 

Total revision time: 10.741585641860961
Best scored revision CLL: -0.171323


Results 

CLL : -0.187695 

AUC ROC : 0.981229 

AUC PR : 0.201528 

Precision : 0.129583 

Recall : 0.931408 

F1 : 0.227513 

Total Learning Time : 10.754129081726074 

Total Inference Time : 2.93710994720459 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.593
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.13872447466785714;  // std dev = 5.297, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08891816586874314;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7388712365344279;  // std dev = 2.321, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.15654686765632175;  // std dev = 0.048, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12806278918514474;  // std dev = 2.812, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.3444674378357556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5835280543999044;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.385981522415447;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03305009815257736;  // std dev = 2.865, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6612442277049355;  // std dev = 1.386, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13969537374991114;  // std dev = 1.01e-07, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6671982361120389;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06006192295022909;  // std dev = 2.560, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.24598349688150403;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.45250781818468205;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.509649769073503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5779412151149982;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41238105283363685;  // std dev = 1.024, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.0493265183831076;  // std dev = 4.480, 190.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42071947366825124;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.003970836916263321;  // std dev = 0.814, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09698857542679495;  // std dev = 2.775, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.2505223558844145;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3315903967290519;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05715614967042374;  // std dev = 1.314, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.056271005052300725;  // std dev = 4.617, 201.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3228860594354872;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.009954822259597151;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10252959160901955;  // std dev = 2.481, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.11147919870533832;  // std dev = 1.399, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26888844495627134;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2409735528559957;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2566552639682801;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44529308359516934;  // std dev = 0.176, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.038114550513827346;  // std dev = 1.306, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3573599041476391;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06439634670091961;  // std dev = 4.141, 156.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=46 */
%   | | | else return 0.04286376925057409;  // std dev = 3.066, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25850637669789694;  // std dev = 0.218, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3007104549021885;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.282753093929736;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5856175926250823;  // std dev = 1.203, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17721449334995398;  // std dev = 0.634, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.02820792775665895;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05706947646987108;  // std dev = 3.431, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17342687799262313;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15265248963211953;  // std dev = 0.693, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4275499722003694;  // std dev = 1.822, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14077076444906908;  // std dev = 0.205, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.24464072662542005;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09373684293933174;  // std dev = 2.343, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15401499822820033;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22323469892118863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11636781789377548;  // std dev = 0.568, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09161732470304064;  // std dev = 0.295, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2137976138658948;  // std dev = 0.445, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.010954519470374166;  // std dev = 1.674, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.24047484259287133;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01356126181548953;  // std dev = 2.963, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return -0.03509427704581418;  // std dev = 2.547, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13136147435933943;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14976287358742563;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.17621140496970056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18747496753579473;  // std dev = 0.000785, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20919437403176977;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01243271392102646;  // std dev = 1.773, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1993742517978866;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027233566713097537;  // std dev = 2.910, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | | else return 0.005502742911607334;  // std dev = 2.496, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.034', 'seconds']
Parameter learned model CLL:-0.173346 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.297, 100, 39], 'false,false,false,true': [2.631, 30, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.321, 6, 52], 'false,false,true,false': [0.048, 156, 0], 'false,false,false,true': [2.812, 28, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.005, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.865, 57, 14], 'false,true,false,true': [1.386, 2, 42], 'false,true,false,false': [1.01e-07, 106, 0], 'false,false,true,true': [0.199, 0, 3], 'false,false,true,false': [2.56, 29, 9], 'false,false,false,true': [1.306, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.089, 0, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.024, 2, 6], 'false,true,false': [4.48, 141, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.814, 1, 1], 'false,false,false,true': [2.775, 28, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.314, 3, 6], 'false,true': [4.617, 145, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.893, 2, 2], 'false,false,false,true': [2.481, 21, 9], 'false,false,false,false': [1.399, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.056, 0, 9], 'true,true,false': [0.723, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.176, 0, 2], 'false,true': [1.306, 24, 5], 'false,false,true': [0.04, 0, 5], 'false,false,false,true': [4.141, 110, 46], 'false,false,false,false': [3.066, 40, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.218, 0, 13], 'true,true,true,false': [0.195, 0, 3], 'true,true,false,true': [0.013, 0, 3], 'true,true,false,false': [1.203, 1, 33], 'true,false': [0.634, 90, 0], 'false,true': [0.855, 1, 3], 'false,false,true': [3.431, 76, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [0.693, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.822, 3, 56], 'false,true,false': [0.205, 140, 0], 'false,false,true,true': [0.173, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.343, 22, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.057, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.568, 1, 5], 'false,true,true': [0.295, 16, 1], 'false,true,false,true': [0.445, 1, 6], 'false,true,false,false': [1.674, 42, 17], 'false,false,true': [0.029, 0, 3], 'false,false,false,true': [2.963, 84, 31], 'false,false,false,false': [2.547, 44, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.046, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.000785, 0, 2], 'true,false': [0.123, 0, 3], 'false,true': [1.773, 65, 24], 'false,false,true': [0.025, 0, 3], 'false,false,false,true': [2.91, 73, 31], 'false,false,false,false': [2.496, 34, 12]}]
{'': [-2.3684757858670006e-16, 0.2004241943359379], 'false': [-2.5376526277146434e-16, 0.1909646618602938], 'false,false': [0.19365370880522478, 0.17993079584775032], 'false,false,true': [0.1717897155989653, 0.20185290616427778], 'false,false,false': [0.17751479289940844, 0.1874999999999999], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.10380622837370253, 0.19275514136260782], 'false': [0.10937500000000006, 0.18776951350374957], 'false,false': [0.18359191918536694, 0.20726296541720982], 'false,false,false': [0.20278688496162436, 0.25], 'false,false,true': [0.09288053815303096, 1.4825297795409776e-05], 'false,true': [0.10937500000000006, nan], 'true': [0.09876543209876552, 0.10937500000000022]}
{'': [0.05838575024921788, 0.14797099000193234], 'false': [0.13692871241963087, 0.19676935558707723], 'false,false': [0.1858254194248833, 0.2437679480495881], 'false,false,false': [0.2437679480495881, nan], 'false,false,true': [0.013192309167348556, 0.17248255629719983], 'false,true': [0.11560061670131201, 0.1457812080013341], 'false,true,false': [0.043651724320725886, 9.635897949576831e-17], 'true': [2.2573144888243295e-06, 0.16]}
{'': [0.0547327958630717, 0.12953842338906954], 'false': [0.11254860309301457, 0.20285920014506678], 'false,false': [0.210581084343764, 0.2011463398889668], 'false,false,true': [0.0, 0.33098123873534235], 'false,false,false': [0.19749113999844103, 0.24999999999999994], 'false,true': [0.1192616102990876, 0.10565002726328122], 'false,true,true': [0.0, 0.13112373743818126], 'true': [0.0005224475007040634, 0.0]}
{'': [0.1147742348555836, 0.12448711832026453], 'false': [0.10603325542070041, 0.20912157232877754], 'false,false': [0.17511507592551812, 0.21347798739892399], 'false,false,false': [0.20516632832369847, 0.24458347566745783], 'false,false,true': [0.0, 0.19930865306681103], 'true': [9.392917965891614e-07, 0.19189045244005254], 'true,true': [9.392917965891614e-07, nan]}
{'': [0.03655122110898314, 0.11878779091148055], 'false': [0.05882508821768987, 0.12559235534523297], 'false,false': [0.0003173010492403705, 0.12650294236014392], 'false,false,false': [0.10991819187740133, 0.1740700166352187], 'true': [0.037780630363116345, 0.018254324643333857], 'true,true': [0.0003490817434747119, 0.10465647710641901], 'true,false': [0.0, 0.015520077967138557], 'true,false,true': [0.0, nan]}
{'': [0.12045553887836088, 0.11267458834992422], 'true': [0.052068677281396275, 0.0044609082116708046], 'false': [0.1829378188869311, 0.11001790790470098], 'false,false': [0.11001790790470098, nan], 'true,true': [0.005598893417773351, 0.045955858699915565], 'true,true,false': [5.288598788788512e-05, 0.04256880441128013], 'true,true,true': [0.003644597815611046, 0.012620295517437355]}
{'': [0.030147536704610952, 0.0955165475143844], 'false': [0.08425658129345662, 0.15091434937587575], 'false,false': [0.010027121804440644, 0.16149919841009816], 'false,false,false': [0.16149919841009816, nan], 'false,true': [0.056244691348693275, 0.00030119445468762394], 'false,true,true': [nan, 0.056244691348693275], 'true': [6.938893903907228e-18, 0.0600792858033454], 'false,false,true': [0.010027121804440644, nan]}
{'': [0.0198634772280973, 0.07426109955940371], 'false': [0.04280022157933309, 0.0892338033385823], 'false,false': [0.00027873092443084224, 0.08977760939187482], 'false,false,false': [0.07632822267818624, 0.11580480048524931], 'false,true': [0.005136047927067781, 0.05026491539343754], 'false,true,false': [0.028289184040023767, 0.04751471085591466], 'true': [0.00032784866574087914, 0.047476879195394], 'true,false': [0.0, 0.05375818807169386]}
{'': [0.002057300040447272, 0.07448437715482956], 'false': [0.0353055674278992, 0.0967844869519715], 'false,false': [0.0002116822776906946, 0.09808905759308907], 'false,false,false': [0.08140220586211201, 0.13548844091014023], 'true': [0.0006322390626685117, 0.005016031111560182], 'true,true': [0.0002665570573160608, 2.8398233493293068e-05], 'true,true,true': [0.0, 0.0010618960917391923], 'true,true,false': [0.0, 3.080696798218874e-07]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.732
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(J, A), interaction(H, J) )
%   | | | then return -0.06185106490048781;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.1369950889456662;  // std dev = 4.573, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.35814893509951234;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8076905217325577;  // std dev = 0.960, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16605974484981972;  // std dev = 0.254, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.03508540877046992;  // std dev = 2.375, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.1697209871873067;  // std dev = 1.820, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4377193779227552;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.011584514535972517;  // std dev = 1.443, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.11670950247609017;  // std dev = 2.156, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5876344914303745;  // std dev = 1.880, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14968030677922867;  // std dev = 0.162, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7826935088453751;  // std dev = 0.250, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17123116814432696;  // std dev = 0.041, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11754140812199626;  // std dev = 1.565, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.21226132011647134;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.38387164679561514;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5582251881646731;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41013816707130957;  // std dev = 1.007, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.40968763180406387;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023385315098706675;  // std dev = 4.248, 198.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=46 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.46406284146432064;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.2217795060607205;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.055507487170112634;  // std dev = 2.386, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.35452368247045124;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.06767692365724856;  // std dev = 0.772, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.04230939921047768;  // std dev = 1.411, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return 0.11366327752629087;  // std dev = 1.856, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.046113507026409435;  // std dev = 3.619, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.26417536132014163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09398781128726137;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.024270470979504362;  // std dev = 1.827, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.20531306032177213;  // std dev = 1.905, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3016063548303033;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.04126126789562558;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.12132174238147352;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.1219812493986981;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12510352017616275;  // std dev = 0.893, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.22186610848837907;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.27813389151162093;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.03801379740323857;  // std dev = 4.124, 177.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=48 */
%   | | | else return 0.12802998134728807;  // std dev = 2.553, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43056149623775114;  // std dev = 0.257, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.16804329680789462;  // std dev = 0.085, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), complex(E, H) )
%   | | | then return 0.1385501566237768;  // std dev = 1.121, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.49549488028403366;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14848415182240973;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.505247652786285;  // std dev = 0.254, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1775317364476675;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.04265866754053093;  // std dev = 2.478, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return -0.026111033768283793;  // std dev = 1.047, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17729319756776005;  // std dev = 0.031, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), location(A, G) )
%   | | | then return 0.29008565404184483;  // std dev = 1.464, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.40327319454079585;  // std dev = 1.252, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.10824931302544737;  // std dev = 0.116, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.16528411582845545;  // std dev = 0.203, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, K), interaction(J, L) )
%   | | | then return -0.04985686932732788;  // std dev = 0.716, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.05071426453232711;  // std dev = 1.816, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.4221575209699302;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.013095098218155146;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13236595728065023;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.199595257343414;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1694151247000621;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( complex(A, J), complex(I, J) )
%   | | | then return -0.08824053478798867;  // std dev = 1.074, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.011662798325024447;  // std dev = 1.578, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else return 0.22043812953689293;  // std dev = 0.431, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.19525980977874433;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.026963059059947052;  // std dev = 1.587, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.036085925719804075;  // std dev = 2.955, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.12084490074438882;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.03898235203143585;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3541404730627594;  // std dev = 0.188, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09854019009357019;  // std dev = 0.051, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.020654233474019398;  // std dev = 1.366, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.13911728176645066;  // std dev = 0.713, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.05431799218030339;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0516900656117181;  // std dev = 1.785, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.008877071136345921;  // std dev = 2.828, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.213', 'seconds']
Refined model CLL: -0.176647


******************************************
Best model found
******************************************
Results 

CLL : -0.182674 

AUC ROC : 0.983609 

AUC PR : 0.230862 

Precision : 0.147629 

Recall : 0.780919 

F1 : 0.248315 

Total Learning Time : 3.732 

Total Inference Time : 3.283860445022583 

Total revision time: 11.887278985977172
Best scored revision CLL: -0.173346


Results 

CLL : -0.182674 

AUC ROC : 0.983609 

AUC PR : 0.230862 

Precision : 0.147629 

Recall : 0.780919 

F1 : 0.248315 

Total Learning Time : 11.899822425842284 

Total Inference Time : 3.283860445022583 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.168
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2147063121486927;  // std dev = 7.482, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15831113621594384;  // std dev = 5.436, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.19129746507584597;  // std dev = 5.240, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1471713155018492;  // std dev = 4.796, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.15493543405841909;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11575097625705176;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.10154431929706183;  // std dev = 6.730, 207.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10008203694792278;  // std dev = 7.579, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11492357473981152;  // std dev = 7.383, 233.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7192990411829182;  // std dev = 0.011, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.28082140172221565;  // std dev = 0.015, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.075160538195186;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.06123244626113314;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.046527945330530035;  // std dev = 3.733, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.027706524267106247;  // std dev = 5.934, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019848349537062566;  // std dev = 7.024, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024107088495816383;  // std dev = 7.006, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.814', 'seconds']
Parameter learned model CLL:-0.339749 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.482, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.436, 90, 44], 'false,false,false,false': [5.24, 76, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.796, 67, 35], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 40, 20], 'false,false,false,false': [6.73, 140, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.383, 146, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.011, 0, 35], 'true,false': [0.015, 63, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 44, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.733, 65, 35], 'false,false,false,false': [5.934, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.024, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.006, 172, 87]}]
{'': [nan, 0.2294242139209899], 'false': [nan, 0.2294242139209898], 'false,false': [nan, 0.2294242139209899], 'false,false,false': [nan, 0.2294242139209898]}
{'': [nan, 0.22562452155165724], 'false': [nan, 0.22562452155165685], 'false,false': [nan, 0.22562452155165724], 'false,false,false': [0.2205390955669414, 0.23077466280629894]}
{'': [nan, 0.22696700558136065], 'false': [nan, 0.22696700558136065], 'false,false': [nan, 0.22696700558135932], 'false,false,false': [0.22551578490499816, 0.22794257631555537]}
{'': [nan, 0.21962747092935678], 'false': [nan, 0.21962747092935678], 'false,false': [nan, 0.21962747092935647], 'false,false,false': [0.22222222222222182, 0.2188300142509594]}
{'': [nan, 0.224358946213895], 'false': [nan, 0.224358946213895], 'false,false': [nan, 0.22435894621389446], 'false,false,false': [nan, 0.22435894621389446]}
{'': [nan, 0.23397367670522273], 'false': [nan, 0.23397367670522273], 'false,false': [nan, 0.23397367670522207], 'false,false,false': [nan, 0.23397367670522298]}
{'': [0.2296507031983949, 0.22723201747516072], 'true': [3.5250778952087914e-06, 3.5758506223784604e-06], 'false': [nan, 0.22723201747516072], 'false,false': [nan, 0.22723201747516072], 'false,false,false': [0.2283737024221457, 0.22618503276939517], 'true,true': [nan, 3.5250778952087914e-06], 'true,true,false': [nan, 3.5250778952087914e-06]}
{'': [nan, 0.1883665566517583], 'false': [nan, 0.1883665566517583], 'false,false': [nan, 0.18836655665175853], 'false,false,false': [0.13932874606269732, 0.21868909770341996]}
{'': [nan, 0.18138964703241592], 'false': [nan, 0.18138964703241653], 'false,false': [nan, 0.18138964703241653], 'false,false,false': [nan, 0.18138964703241653]}
{'': [nan, 0.1895234423102087], 'false': [nan, 0.1895234423102087], 'false,false': [nan, 0.18952344231020934], 'false,false,false': [nan, 0.18952344231020934]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.477
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.8278459047964812;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.21959471823204113;  // std dev = 4.377, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | else if ( interaction(I, A) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7251239146986216;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(D, G), interaction(A, H) )
%   | | | then return 0.08894447707164826;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.39622777067089576;  // std dev = 1.411, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13331482557064148;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.08793722980351623;  // std dev = 2.494, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, I) )
%   | | | then return 0.0530732673941974;  // std dev = 1.131, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.15481150504888155;  // std dev = 3.319, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.266514842157627;  // std dev = 4.010, 74.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   | | | else return 0.14215741363350348;  // std dev = 1.411, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), phenotype(D, E) )
%   | then return 0.593449308217122;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.34451329960502225;  // std dev = 0.475, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.0636178014589844;  // std dev = 0.359, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   else if ( location(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.06336522323367245;  // std dev = 0.380, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.7975414360490546;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26987249343745234;  // std dev = 3.674, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.33032568536159285;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.014472274107303333;  // std dev = 0.993, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1995872812923178;  // std dev = 1.461, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4893245011520472;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.5789729458394534;  // std dev = 0.795, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.036769084784056605;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.15818511054368184;  // std dev = 0.286, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.057483595279999904;  // std dev = 3.388, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7008425136727301;  // std dev = 0.239, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.19580040758898679;  // std dev = 0.165, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1026038055448861;  // std dev = 3.856, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return 0.3597840933308219;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.29607757530583256;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46338914158545347;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11725092946654857;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.07904642872743774;  // std dev = 1.719, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.03431281324214168;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4507505047178248;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.053305287487889264;  // std dev = 5.522, 191.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=60 */
%   | | | else return -0.04024039457788095;  // std dev = 1.478, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.23828151497990283;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3530997630467257;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.6625388529055315;  // std dev = 0.217, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.48129657845088486;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1619614104421379;  // std dev = 0.156, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(J, L), interaction(M, J) )
%   | | | then return -0.06106229625219707;  // std dev = 1.258, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.06369916924268433;  // std dev = 3.947, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1383330348547316;  // std dev = 0.950, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.016731020634805527;  // std dev = 3.656, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.257676408864517;  // std dev = 0.187, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.49616923025601806;  // std dev = 0.475, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.6073122791608836;  // std dev = 0.342, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.20161942463311014;  // std dev = 0.075, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), interaction(K, A) )
%   | | | then return -0.04383803793372764;  // std dev = 1.132, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.4384752304223612;  // std dev = 2.334, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return -0.20737260496927462;  // std dev = 0.079, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, L), interaction(L, A) )
%   | | then return 0.22597254412223755;  // std dev = 0.438, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15326818661452565;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), phenotype(C, F) )
%   | then return -0.005663139506910748;  // std dev = 0.294, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | else if ( interaction(A, G) )
%   | | then return -0.016016307991410298;  // std dev = 0.175, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.42796547773924737;  // std dev = 0.693, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.21604633789559066;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( complex(A, K), enzyme(I, L) )
%   | | then return 0.059743954558747286;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.3171123516520498;  // std dev = 0.655, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then return 0.006900709155060716;  // std dev = 0.284, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.048181891333867084;  // std dev = 2.603, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.2454609802533078;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), interaction(C, D) )
%   | then if ( enzyme(D, F), recursion_proteinclass(D, B) )
%   | | then return 0.2399612992567084;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06010971984414428;  // std dev = 0.254, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | else if ( interaction(A, G), recursion_proteinclass(D, B) )
%   | | then return 0.3040111021935503;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.12262087192277721;  // std dev = 0.662, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.030747186454044922;  // std dev = 3.863, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
%   else if ( interaction(A, H) )
%   | then if ( complex(H, I), complex(A, I) )
%   | | then return 0.008478672678810417;  // std dev = 0.607, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(H, J) )
%   | | | then return -0.05916798005232346;  // std dev = 0.906, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0017359705537015363;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.1449278531694958;  // std dev = 0.383, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.011051619742253441;  // std dev = 0.225, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | else return -0.03252559955066885;  // std dev = 0.294, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), location(G, I) )
%   | | then if ( phenotype(G, J), location(A, I) )
%   | | | then return -0.014753076370665062;  // std dev = 1.065, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.05504001590476011;  // std dev = 2.739, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6108645930959252;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.27482914811566006;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.05515670890988553;  // std dev = 0.264, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.08093188423638878;  // std dev = 0.481, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15207274663590944;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.802', 'seconds']
Refined model CLL: -0.22479


******************************************
Best model found
******************************************
Results 

CLL : -0.232172 

AUC ROC : 0.98434 

AUC PR : 0.370818 

Precision : 0.3126 

Recall : 0.695035 

F1 : 0.431243 

Total Learning Time : 12.477 

Total Inference Time : 7.85582971572876 

Total revision time: 23.324358959197998
Best scored revision CLL: -0.22479


Results 

CLL : -0.232172 

AUC ROC : 0.98434 

AUC PR : 0.370818 

Precision : 0.3126 

Recall : 0.695035 

F1 : 0.431243 

Total Learning Time : 23.35370566368103 

Total Inference Time : 7.85582971572876 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.381
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20251979602666517;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2030944856176582;  // std dev = 5.717, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
%   | | | else return 0.13575948144054834;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11958495662443265;  // std dev = 5.300, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.13939410754774706;  // std dev = 6.491, 190.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1037856736724756;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.11344562280701548;  // std dev = 7.109, 229.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13329211886622666;  // std dev = 8.113, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09749384503981817;  // std dev = 8.182, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.722511901588554;  // std dev = 0.034, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2774605085386224;  // std dev = 0.041, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06700181585577646;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.041690694745420136;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02032396165256879;  // std dev = 4.157, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.056858964370241245;  // std dev = 6.426, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02755131173736451;  // std dev = 7.696, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056819639467296346;  // std dev = 7.476, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.600', 'seconds']
Parameter learned model CLL:-0.347229 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.717, 88, 52], 'false,false,false,false': [6.016, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.3, 89, 41], 'false,false,false,false': [6.491, 127, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.109, 154, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.113, 179, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.182, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 41], 'true,false': [0.041, 61, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.855, 42, 23], 'false,false,false,false': [5.235, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.157, 90, 41], 'false,false,false,false': [6.426, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.696, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.476, 179, 104]}]
{'': [nan, 0.22577957107144642], 'false': [nan, 0.22577957107144478], 'false,false': [nan, 0.22577957107144642], 'false,false,false': [nan, 0.22577957107144478]}
{'': [nan, 0.22257834389635853], 'false': [nan, 0.22257834389636277], 'false,false': [nan, 0.22257834389635853], 'false,false,false': [0.23346938775510376, 0.21162066960774467]}
{'': [nan, 0.21953056637341092], 'false': [nan, 0.21953056637341092], 'false,false': [nan, 0.2195305663734109], 'false,false,false': [0.21604367451770431, 0.22175692098571212]}
{'': [nan, 0.2200794976565863], 'false': [nan, 0.2200794976565863], 'false,false': [nan, 0.22007949765658513], 'false,false,false': [0.21839506172839457, 0.22071517603519877]}
{'': [nan, 0.23256762233366424], 'false': [nan, 0.23256762233366424], 'false,false': [nan, 0.23256762233366474], 'false,false,false': [nan, 0.23256762233366474]}
{'': [nan, 0.22925055464602073], 'false': [nan, 0.22925055464602073], 'false,false': [nan, 0.22925055464602104], 'false,false,false': [nan, 0.2292505546460203]}
{'': [0.2404025061772435, 0.2202638437530441], 'true': [2.738014920159649e-05, 2.7510948920640777e-05], 'false': [nan, 0.2202638437530441], 'false,false': [nan, 0.2202638437530441], 'false,false,false': [0.22863905325443823, 0.2157604315208628], 'true,true': [nan, 2.738014920159649e-05], 'true,true,false': [nan, 2.738014920159649e-05]}
{'': [nan, 0.18746624533111642], 'false': [nan, 0.18746624533111642], 'false,false': [nan, 0.1874662453311166], 'false,false,false': [0.13191003229326934, 0.22689585156009268]}
{'': [nan, 0.18682257681585615], 'false': [nan, 0.186822576815856], 'false,false': [nan, 0.186822576815856], 'false,false,false': [nan, 0.186822576815856]}
{'': [nan, 0.19747955007675463], 'false': [nan, 0.19747955007675463], 'false,false': [nan, 0.19747955007675508], 'false,false,false': [nan, 0.19747955007675508]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.206
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( enzyme(A, I), interaction(A, G) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.20646354184108465;  // std dev = 4.495, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.05814893509951238;  // std dev = 2.683, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.1544452313958083;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return 0.42335330026154505;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7543231594613558;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F) )
%   | then if ( phenotype(F, G) )
%   | | then if ( complex(F, H), complex(A, H) )
%   | | | then return 0.006957384413037376;  // std dev = 2.020, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.1473218220739694;  // std dev = 4.186, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | else if ( interaction(F, I), interaction(A, I) )
%   | | | then return -0.14829724763550187;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07458647690031533;  // std dev = 1.147, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.18280006443048644;  // std dev = 4.096, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.121180256429654;  // std dev = 3.698, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), interaction(F, C) )
%   | then if ( enzyme(F, D), enzyme(A, G) )
%   | | then if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7936480535044077;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17136557526342247;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.11206994647102728;  // std dev = 0.425, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else return 0.06816083368110767;  // std dev = 0.400, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.6008781342698112;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4593836792302376;  // std dev = 3.857, 75.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=50 */
%   | | | else return -0.1655819934547566;  // std dev = 0.225, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.3223190821166926;  // std dev = 1.010, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.48267075087565275;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return 0.15118106864045472;  // std dev = 0.372, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( complex(F, G) )
%   | | then if ( location(A, H), phenotype(F, I) )
%   | | | then return 0.044942816661551054;  // std dev = 4.309, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | | | else return -0.0417840716031624;  // std dev = 1.483, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.52280201531072;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17007297137030816;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.5878583511451431;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.011128841675807587;  // std dev = 2.133, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.49059901340502965;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11141800564819132;  // std dev = 3.140, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4565184313483789;  // std dev = 0.094, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.683291031830118;  // std dev = 0.444, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.4054391175835376;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.17910856683911708;  // std dev = 0.393, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.018198480023813964;  // std dev = 2.717, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4771235929945623;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07642256163631843;  // std dev = 4.585, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11021094628171893;  // std dev = 1.436, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.19911047443954868;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.32203734393423117;  // std dev = 0.244, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1489079461085899;  // std dev = 0.058, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.012096029342268529;  // std dev = 0.321, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5969500443867071;  // std dev = 0.106, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.19763516299320155;  // std dev = 0.050, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4883115726998574;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07748827739566444;  // std dev = 4.488, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.036468120008376625;  // std dev = 1.572, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.0694524394366585;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4060761927133006;  // std dev = 0.151, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.16802204908103455;  // std dev = 0.079, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), interaction(A, I) )
%   | | | then return -0.37853330479456143;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.39217678969958686;  // std dev = 0.645, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.07612585587490539;  // std dev = 1.627, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.06874935500305865;  // std dev = 4.457, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.34545609728259313;  // std dev = 1.181, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.17984636702125648;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.6013196278542382;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24295414048050734;  // std dev = 0.153, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( complex(D, E) )
%   | | then if ( location(D, F), interaction(A, G) )
%   | | | then return -0.048024823662429106;  // std dev = 1.199, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return -0.15411923339334654;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, H), enzyme(D, I) )
%   | | | then return -0.09835508977849391;  // std dev = 0.352, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.02834249096436085;  // std dev = 1.868, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2949031823693006;  // std dev = 3.711, 82.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=55 */
%   | | | else return -0.19819274963494252;  // std dev = 0.431, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.025189054719067145;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17711551877226228;  // std dev = 1.445, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.334393421314903;  // std dev = 0.112, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.1622618117461028;  // std dev = 0.092, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, G) )
%   | | | then return 0.3580391188751528;  // std dev = 1.857, 49.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | | | else return -0.32101743687084283;  // std dev = 0.449, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.15032237249830807;  // std dev = 0.056, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.19463203703735432;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.312473880410762;  // std dev = 0.264, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.013423171089471114;  // std dev = 1.475, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.11861079921462873;  // std dev = 2.665, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return -0.064951348117439;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.15670473451811603;  // std dev = 0.183, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.3010010533200788;  // std dev = 2.566, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1893228935895219;  // std dev = 1.269, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else return -0.13286799674521502;  // std dev = 0.523, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.118267997232207;  // std dev = 0.814, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.2226745739597698;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3074375967560255;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08898747280557359;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.307', 'seconds']
Refined model CLL: -0.194494


******************************************
Best model found
******************************************
Results 

CLL : -0.20056 

AUC ROC : 0.987717 

AUC PR : 0.553007 

Precision : 0.189502 

Recall : 0.803774 

F1 : 0.306695 

Total Learning Time : 14.206 

Total Inference Time : 16.258032083511353 

Total revision time: 34.15125786018372
Best scored revision CLL: -0.194494


Results 

CLL : -0.20056 

AUC ROC : 0.987717 

AUC PR : 0.553007 

Precision : 0.189502 

Recall : 0.803774 

F1 : 0.306695 

Total Learning Time : 34.18060456466675 

Total Inference Time : 16.258032083511353 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21893324882500279;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1481055429059458;  // std dev = 5.894, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | | else return 0.1710222095726137;  // std dev = 5.195, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12711540252884115;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.14129471396380755;  // std dev = 5.647, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11593110264380556;  // std dev = 4.176, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return 0.08940983416180191;  // std dev = 6.765, 215.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07887465127613119;  // std dev = 7.956, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09590122536383139;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7120836551861133;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.26568585033950975;  // std dev = 0.003, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05288289795661694;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.07019028568868776;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.061868641208076496;  // std dev = 4.233, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.06256707516684644;  // std dev = 5.627, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04568741579658096;  // std dev = 7.041, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022713701912652574;  // std dev = 7.115, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.608', 'seconds']
Parameter learned model CLL:-0.326339 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.894, 109, 51], 'false,false,false,false': [5.195, 79, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.647, 95, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.176, 53, 26], 'false,false,false,false': [6.765, 149, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.956, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.989, 1, 44], 'true,false': [0.003, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.233, 81, 44], 'false,false,false,false': [5.627, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.041, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.115, 191, 92]}]
{'': [nan, 0.2306189926951187], 'false': [nan, 0.23061899269511807], 'false,false': [nan, 0.2306189926951187], 'false,false,false': [nan, 0.23061899269511807]}
{'': [nan, 0.22061224489795753], 'false': [nan, 0.22061224489795817], 'false,false': [nan, 0.22061224489795753], 'false,false,false': [0.21714843749999826, 0.22493055555555597]}
{'': [nan, 0.22060040167370862], 'false': [nan, 0.22060040167370862], 'false,false': [nan, 0.2206004016737083], 'false,false,false': [0.21798772791625845, 0.22300508045755799]}
{'': [nan, 0.21515153668462308], 'false': [nan, 0.21515153668462308], 'false,false': [nan, 0.21515153668462253], 'false,false,false': [0.2207979490466271, 0.21288780557487835]}
{'': [nan, 0.2145856649210329], 'false': [nan, 0.2145856649210329], 'false,false': [nan, 0.21458566492103365], 'false,false,false': [nan, 0.21458566492103365]}
{'': [nan, 0.22541883718772165], 'false': [nan, 0.22541883718772165], 'false,false': [nan, 0.2254188371877205], 'false,false,false': [nan, 0.22541883718772127]}
{'': [0.2239061105290812, 0.21986491491433016], 'true': [0.02174101401176437, 1.1975277234157868e-07], 'false': [nan, 0.21986491491433016], 'false,false': [nan, 0.21986491491433016], 'false,false,false': [0.2163114885435024, 0.22383217993079643], 'true,true': [nan, 0.02174101401176437], 'true,true,false': [nan, 0.02174101401176437]}
{'': [nan, 0.18639579388343908], 'false': [nan, 0.18639579388343908], 'false,false': [nan, 0.1863957938834389], 'false,false,false': [0.14333580007530528, 0.2245693180254238]}
{'': [nan, 0.18295153524290086], 'false': [nan, 0.18295153524290045], 'false,false': [nan, 0.18295153524290045], 'false,false,false': [nan, 0.18295153524290045]}
{'': [nan, 0.17889111522995627], 'false': [nan, 0.17889111522995627], 'false,false': [nan, 0.17889111522995574], 'false,false,false': [nan, 0.17889111522995574]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.655
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.04419544672741935;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.14649249338172024;  // std dev = 5.783, 163.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(D, F) )
%   | | then return 0.6055706263947289;  // std dev = 0.299, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.7745212656704358;  // std dev = 0.059, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14165614209360888;  // std dev = 0.165, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.06320974688990887;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.25170486793379887;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.16488365520330087;  // std dev = 3.554, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.09577479306956323;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.599457583644959;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.013563291461727574;  // std dev = 0.310, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | else return 0.0969668229115372;  // std dev = 0.400, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6758541466784749;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.139515930810504;  // std dev = 0.131, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6901244027313498;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14244081112217796;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.19366590040267118;  // std dev = 1.935, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.27021152348586736;  // std dev = 2.497, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.4285706558624449;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.47716244284289017;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then if ( interaction(E, H), interaction(H, E) )
%   | | | then return 0.04166442622821554;  // std dev = 2.100, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return -0.08249136639054934;  // std dev = 1.011, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( interaction(I, A), interaction(E, J) )
%   | | | then return 0.4050846842135625;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0906511111505469;  // std dev = 1.356, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.476028281837218;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.0672965552320002;  // std dev = 4.980, 151.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
%   | | | else return 0.16544756190317;  // std dev = 2.484, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.37054861225424085;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D), interaction(A, A) )
%   | | then return -0.12934018811079573;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(C, E), location(A, E) )
%   | | | then return 0.1087975645015352;  // std dev = 3.109, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.004525162969452279;  // std dev = 2.460, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then return 9.415727301096688E-4;  // std dev = 0.246, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.13402710194522882;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.5485078948563694;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.1998541757393739;  // std dev = 1.957, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.07603238183331613;  // std dev = 3.933, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.2627106480844899;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, D), interaction(E, C) )
%   | | then return 0.28969316264902234;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38020486978627044;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( enzyme(A, H), enzyme(F, H) )
%   | | then return -0.17832947031893318;  // std dev = 0.045, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(F, F) )
%   | | | then return -0.08673706152902348;  // std dev = 1.175, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.06986859390899007;  // std dev = 3.037, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.34989066131438396;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13345258598654464;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0724322525331429;  // std dev = 5.152, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03929394203554837;  // std dev = 0.330, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.11112643153844262;  // std dev = 2.428, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.013547086055748449;  // std dev = 0.490, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.64210492822213;  // std dev = 0.540, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22862352099647276;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.025896638071103047;  // std dev = 0.825, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.11804338202845813;  // std dev = 1.454, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.04878526991489515;  // std dev = 1.844, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.03382398109298214;  // std dev = 3.148, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( location(C, D), recursion_proteinclass(C, B) )
%   | then return 0.2640567254552703;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, C), enzyme(A, E) )
%   | | then if ( complex(A, F), location(C, D) )
%   | | | then return 0.12205497411162067;  // std dev = 1.503, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.013894400762596936;  // std dev = 0.960, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( complex(A, G), interaction(C, H) )
%   | | | then return -0.07995212169461534;  // std dev = 1.673, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.011177052837244565;  // std dev = 3.303, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2362135298321084;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), phenotype(K, L) )
%   | | | then return 0.03282814960984853;  // std dev = 3.186, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.09739351941026793;  // std dev = 2.760, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else return 0.20856940432021953;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2014144935601562;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.07464272511177485;  // std dev = 1.267, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.038411048497904936;  // std dev = 1.663, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.2045322877638469;  // std dev = 0.647, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.11879658345712868;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( complex(A, L), phenotype(A, M) )
%   | | | then return -0.011707625143027048;  // std dev = 0.641, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.15037222279421938;  // std dev = 1.557, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.16248153507504343;  // std dev = 1.610, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.0355085481651461;  // std dev = 5.081, 178.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.42282697298342403;  // std dev = 0.206, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.17253912235750293;  // std dev = 0.044, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.052836728447277964;  // std dev = 1.496, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.0718377281444514;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(K, F), phenotype(K, L) )
%   | | | then return 0.18892295399811262;  // std dev = 1.970, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.08429117471175293;  // std dev = 1.856, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( phenotype(A, M), location(A, N) )
%   | | then return -0.004254556519605648;  // std dev = 0.269, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( complex(A, P), interaction(A, Q) )
%   | | | then return 0.17919175192408665;  // std dev = 1.037, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05400730009335008;  // std dev = 3.534, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.708', 'seconds']
Refined model CLL: -0.254835


******************************************
Best model found
******************************************
Results 

CLL : -0.260943 

AUC ROC : 0.933829 

AUC PR : 0.166889 

Precision : 0.197289 

Recall : 0.472924 

F1 : 0.278427 

Total Learning Time : 6.655 

Total Inference Time : 2.753009557723999 

Total revision time: 12.383911901473999
Best scored revision CLL: -0.254835


Results 

CLL : -0.260943 

AUC ROC : 0.933829 

AUC PR : 0.166889 

Precision : 0.197289 

Recall : 0.472924 

F1 : 0.278427 

Total Learning Time : 12.413258605957031 

Total Inference Time : 2.753009557723999 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17087620782678548;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.10547962354413144;  // std dev = 6.164, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | | | else return 0.18298834724086252;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13227156214624697;  // std dev = 4.379, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.15107229089535038;  // std dev = 6.212, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17336030115640313;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.10668352920290003;  // std dev = 6.773, 213.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12428838090129567;  // std dev = 7.470, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053455179749042805;  // std dev = 7.744, 284.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7382284112024308;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2616911141159643;  // std dev = 0.007, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11066957475165083;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | | else return 0.038022658353021786;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06597367570680272;  // std dev = 3.365, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.0397232741362629;  // std dev = 6.310, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05391156435624585;  // std dev = 7.030, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03459234346798623;  // std dev = 7.088, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.623', 'seconds']
Parameter learned model CLL:-0.3367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.164, 141, 52], 'false,false,false,false': [4.712, 64, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.379, 61, 28], 'false,false,false,false': [6.212, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.453, 32, 19], 'false,false,false,false': [6.773, 146, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.47, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.744, 198, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.007, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.586, 58, 33], 'false,false,false,false': [4.169, 57, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.365, 50, 28], 'false,false,false,false': [6.31, 127, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.03, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.088, 171, 86]}]
{'': [nan, 0.21492892561983545], 'false': [nan, 0.21492892561983537], 'false,false': [nan, 0.21492892561983545], 'false,false,false': [nan, 0.21492892561983537]}
{'': [nan, 0.20819310116791107], 'false': [nan, 0.20819310116791262], 'false,false': [nan, 0.20819310116791107], 'false,false,false': [0.19683749899326172, 0.22657226155768476]}
{'': [nan, 0.22054482235244394], 'false': [nan, 0.22054482235244394], 'false,false': [nan, 0.22054482235244494], 'false,false,false': [0.21544238029205168, 0.22304970710696542]}
{'': [nan, 0.21963374999410687], 'false': [nan, 0.21963374999410687], 'false,false': [nan, 0.2196337499941071], 'false,false,false': [0.23375624759707792, 0.2153934607400688]}
{'': [nan, 0.22777424591500303], 'false': [nan, 0.22777424591500303], 'false,false': [nan, 0.2277742459150029], 'false,false,false': [nan, 0.2277742459150029]}
{'': [nan, 0.21116354670335122], 'false': [nan, 0.21116354670335122], 'false,false': [nan, 0.2111635467033512], 'false,false,false': [nan, 0.21116354670335014]}
{'': [0.2261495437096874, 0.2233448159432275], 'true': [9.574512540894936e-07, 8.907580199735562e-07], 'false': [nan, 0.2233448159432275], 'false,false': [nan, 0.2233448159432275], 'false,false,false': [0.23113150585678116, 0.21192742415229057], 'true,true': [nan, 9.574512540894936e-07], 'true,true,false': [nan, 9.574512540894936e-07]}
{'': [nan, 0.19457325002857953], 'false': [nan, 0.19457325002857953], 'false,false': [nan, 0.1945732500285796], 'false,false,false': [0.14514060236158385, 0.21521075610490523]}
{'': [nan, 0.19534501333749568], 'false': [nan, 0.1953450133374957], 'false,false': [nan, 0.1953450133374957], 'false,false,false': [nan, 0.1953450133374957]}
{'': [nan, 0.19547968329765633], 'false': [nan, 0.19547968329765633], 'false,false': [nan, 0.19547968329765616], 'false,false,false': [nan, 0.19547968329765616]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.854
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19828498952128004;  // std dev = 5.744, 147.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=50 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.06403128804068885;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.4613297674262617;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8159614493346169;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.29869987936419373;  // std dev = 2.022, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.11640891456985417;  // std dev = 6.279, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.5616168894734997;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.682277628806087;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7854087802349798;  // std dev = 0.246, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1848214207104007;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09422248858748204;  // std dev = 6.266, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4632353198228536;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return -0.0030682614526825053;  // std dev = 0.320, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else return 0.10392847838801637;  // std dev = 0.434, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then if ( enzyme(A, I) )
%   | | then return 0.763417755383457;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10499488099390375;  // std dev = 0.323, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7411570881842834;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2050650392413736;  // std dev = 0.281, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.1512591138565593;  // std dev = 4.351, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return 0.07313224963457808;  // std dev = 2.356, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3795155835592191;  // std dev = 0.037, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5527674580414532;  // std dev = 0.268, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.01809054064411068;  // std dev = 2.784, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( interaction(E, G), phenotype(G, D) )
%   | | | then return 0.16615982486645042;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0807856937882902;  // std dev = 1.945, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7226503751601892;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19215310194951832;  // std dev = 0.350, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.05338489253161772;  // std dev = 1.894, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.12478955251559366;  // std dev = 4.296, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32582363644178414;  // std dev = 0.097, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.36990540513934417;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5939112225106894;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(E, H), phenotype(D, I) )
%   | | | then return 0.041276398268677024;  // std dev = 3.401, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return -0.07247337339068514;  // std dev = 2.919, 94.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return -0.003627139980062841;  // std dev = 2.481, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.32875282386278976;  // std dev = 1.174, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.7607566192244278;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10965247480131896;  // std dev = 2.628, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48438509115545253;  // std dev = 0.284, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.19553268639585514;  // std dev = 0.085, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then return -0.021307155032198904;  // std dev = 0.312, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.004119455180015009;  // std dev = 1.112, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.15370008189080636;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), interaction(A, L) )
%   | | | then return 0.4181354174212883;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0727661878974273;  // std dev = 3.392, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.22987517198623833;  // std dev = 2.144, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09032472452351659;  // std dev = 1.830, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21390407972965578;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( complex(A, H), phenotype(D, G) )
%   | | | then return -0.016239223731859074;  // std dev = 0.616, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07775584803335153;  // std dev = 1.416, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( complex(E, I), location(A, J) )
%   | | | then return -0.10566428472025763;  // std dev = 1.567, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return -0.011741555068997276;  // std dev = 2.345, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( location(A, M) )
%   | | | then return -0.021178264750930122;  // std dev = 1.943, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.11929931618040042;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.022062848713106546;  // std dev = 1.623, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.08518216287539344;  // std dev = 3.945, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.06744940265563312;  // std dev = 0.481, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.48946503399867136;  // std dev = 0.217, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.2582148827703538;  // std dev = 0.146, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.23263918986670487;  // std dev = 0.172, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.0666008442392038;  // std dev = 0.263, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6069652332269895;  // std dev = 0.296, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2065201665167952;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.24098875246268003;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.028690043237549857;  // std dev = 4.357, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16477098401684706;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.008374064416548976;  // std dev = 0.443, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13350853915484057;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.06041735308371039;  // std dev = 0.448, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.038311726823574276;  // std dev = 0.406, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), enzyme(K, L) )
%   | | | then return 0.2545855718976334;  // std dev = 0.885, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.050797804952602756;  // std dev = 2.180, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.27099505044616023;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.004868626584770605;  // std dev = 4.725, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.487', 'seconds']
Refined model CLL: -0.260468


******************************************
Best model found
******************************************
Results 

CLL : -0.255751 

AUC ROC : 0.91152 

AUC PR : 0.209709 

Precision : 0.222388 

Recall : 0.526502 

F1 : 0.312697 

Total Learning Time : 6.854 

Total Inference Time : 2.6935935020446777 

Total revision time: 12.369353467941284
Best scored revision CLL: -0.260468


Results 

CLL : -0.255751 

AUC ROC : 0.91152 

AUC PR : 0.209709 

Precision : 0.222388 

Recall : 0.526502 

F1 : 0.312697 

Total Learning Time : 12.398700172424316 

Total Inference Time : 2.6935935020446777 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.37
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12214893509951097;  // std dev = 4.928, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | | else return 0.20430278125335719;  // std dev = 4.852, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7102229544900395;  // std dev = 2.955, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16286113786340334;  // std dev = 0.066, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11744047782378754;  // std dev = 1.691, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08170905973164237;  // std dev = 4.361, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6304492775094104;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14697098740702394;  // std dev = 5.37e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.010058207455796745;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20626949991117177;  // std dev = 1.233, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6977162649482956;  // std dev = 0.139, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.04696704527924274;  // std dev = 5.059, 218.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5576029263445255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06666826135599664;  // std dev = 1.712, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12071184716014967;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0630678010776598;  // std dev = 5.366, 240.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41917435689318605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10060177499257596;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.04549411748078479;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26086216675461044;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24806614790396825;  // std dev = 0.614, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32183797226299093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.00519927649259998;  // std dev = 2.103, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2950017118653367;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07380721456269239;  // std dev = 4.702, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | | else return 0.03480298030888728;  // std dev = 1.898, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2572756727096116;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25594050489775855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5308594917434848;  // std dev = 1.203, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1754028309429411;  // std dev = 0.358, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.012460345837984166;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07621588607128545;  // std dev = 3.874, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16947507780724302;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05500168668769401;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3726414975109716;  // std dev = 2.906, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.1568580277470527;  // std dev = 0.253, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2103002583202186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08304501830353814;  // std dev = 1.422, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1740367306896493;  // std dev = 0.186, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20109406321180814;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04490979292447918;  // std dev = 1.394, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.027021989140662932;  // std dev = 0.417, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.007316140020063913;  // std dev = 1.763, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.020078988095167505;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03133562785665669;  // std dev = 3.437, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.023120444062302545;  // std dev = 1.482, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12853928773659626;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30873174874423914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17081608515585014;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.009509045352081058;  // std dev = 2.418, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.016504592321487932;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.013193593622843326;  // std dev = 3.400, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
%   | | | else return 0.09086315465454906;  // std dev = 1.376, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.959', 'seconds']
Parameter learned model CLL:-0.196218 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.928, 92, 33], 'false,false,true,false': [4.852, 68, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [2.955, 10, 69], 'false,false,true,false': [0.066, 139, 0], 'false,false,false,true': [1.691, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.361, 95, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [5.37e-08, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.291, 10, 2], 'false,false,false,true': [1.233, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.139, 0, 14], 'false,true,false': [5.059, 161, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.712, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.894, 1, 4], 'false,true': [5.366, 169, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.037, 0, 7], 'true,true,false': [0.614, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.103, 37, 12], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [4.702, 118, 55], 'false,false,false,false': [1.898, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.295, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.203, 2, 33], 'true,false': [0.358, 98, 0], 'false,true': [0.866, 1, 3], 'false,false,true': [3.874, 81, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.895, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.906, 11, 71], 'false,true,false': [0.253, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.422, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.186, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.042, 0, 3], 'false,true,true': [1.394, 42, 11], 'false,true,false,true': [0.417, 2, 1], 'false,true,false,false': [1.763, 50, 17], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [3.437, 85, 40], 'false,false,false,false': [1.482, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.014, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.038, 0, 3], 'false,true': [2.418, 73, 29], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [3.4, 99, 40], 'false,false,false,false': [1.376, 7, 4]}]
{'': [-1.6148698540002277e-16, 0.2144584789035207], 'false': [1.4802973661668753e-16, 0.21115338923228036], 'false,false': [0.21052230125283675, 0.22222222222222207], 'false,false,false': [0.20408163265306126, 0.24000000000000005], 'false,false,true': [0.19430400000000128, 0.22633136094674688], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.21579703685469923], 'false': [0.17805116516911185, 0.21555583332556938], 'false,false': [0.21621000233447538, 0.20414551331075453], 'false,false,true': [0.1105366853464827, 3.136562581804469e-05], 'false,false,false': [0.20414551331075453, nan], 'false,true': [0.13910247278836857, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.0185873175002846e-16, 0.15508552119063237], 'false': [0.1532116891212073, 0.17867954225123092], 'false,false': [0.13888888888888898, 0.21733566330945248], 'false,false,false': [0.21733566330945248, nan], 'false,true': [0.14742939265806274, 0.1588986261839463], 'false,true,false': [0.06924402412726938, 3.700743415417188e-17], 'false,false,true': [nan, 0.13888888888888898], 'true': [-1.1102230246251565e-16, 0.0]}
{'': [1.6148698540002277e-16, 0.13847210309290894], 'false': [0.13441203622319217, 0.19722749412050428], 'false,false': [0.0, 0.19531244089807545], 'false,false,false': [0.19531244089807545, nan], 'false,true': [0.0013874911624269157, 0.11740039839534763], 'false,true,true': [nan, 0.0013874911624267888], 'true': [1.3322676295501878e-16, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07638888888888887, 0.12465843427723819], 'false': [0.11997036113126489, 0.19863922923516067], 'false,false': [0.0, 0.20484084613217032], 'false,false,false': [0.20408163265306126, 0.2040816326530612], 'true': [-1.586032892321652e-17, 0.16], 'false,false,true': [nan, 0.0], 'true,true': [-1.586032892321652e-17, nan]}
{'': [0.03184376136603504, 0.12246087212233643], 'false': [0.09021834051781202, 0.12947043332638153], 'false,false': [-1.850371707708594e-17, 0.13067628845423493], 'false,false,false': [0.12778755381147588, 0.1501632601117918], 'true': [0.03437971935088748, 0.0], 'true,true': [0.0001942514233945758, 0.09410009125227435], 'true,false': [nan, 0.0]}
{'': [0.10517619271344308, 0.12629509688393498], 'false': [0.1875, 0.12402016313020564], 'false,false': [0.12402016313020564, nan], 'true': [0.046999624096984174, 0.001307265585766691], 'true,true': [0.007893678891228838, 0.041375718603836834], 'true,true,false': [nan, 0.041375718603836785], 'true,true,true': [0.008682884719162088, 0.0]}
{'': [0.07006000592219977, 0.09562426065685845], 'false': [0.09227319291454054, 0.1567541029072551], 'false,false': [0.0, 0.1685712604999082], 'false,false,false': [0.1685712604999082, nan], 'false,true': [0.10300745479059004, 0.000352334418267467], 'false,true,true': [nan, 0.10300745479059023], 'true': [-4.625929269271485e-18, 0.1335679332071949], 'false,false,true': [0.0, nan]}
{'': [0.0034411028191745556, 0.07602942158734], 'false': [0.04281385042714213, 0.10329620194153373], 'false,false': [0.1875, 0.10080148886562676], 'false,false,false': [0.09451982170508835, 0.1568271110321214], 'false,true': [0.036648180943610144, 0.046900221321306605], 'false,true,false': [0.057995319512504, 0.046386783573214116], 'true': [0.0043061844581206155, 0.0006017826354046824], 'true,false': [nan, 0.0006017826354046824]}
{'': [0.0028052111905060243, 0.07876242806632489], 'false': [0.0573332765965608, 0.09265490199264982], 'false,false': [0.1875, 0.09009316088659342], 'false,false,false': [0.08315755615003198, 0.17214381145047478], 'true': [0.0035746029377156825, 0.00046973933418328895], 'true,true': [0.0035746029377156825, nan], 'true,true,true': [2.6595124747623234e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.093
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, G), location(G, H) )
%   | | | then return 0.12310620005677604;  // std dev = 4.774, 117.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=31 */
%   | | | else return 0.20525637311604045;  // std dev = 5.237, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6982665834148593;  // std dev = 3.078, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.1607303064262785;  // std dev = 0.137, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2710642093638011;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03250721920762748;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.16715911539363418;  // std dev = 2.937, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.09055832650996466;  // std dev = 2.937, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6355062185300702;  // std dev = 1.674, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14445914244346694;  // std dev = 0.041, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.741172104578868;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18442088699956957;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.028241422472816247;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.24915308250835674;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21751358415830996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.41751358415830986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5217830733355653;  // std dev = 0.366, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.031912197732206465;  // std dev = 0.333, 233.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=57 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3731341743377551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.05600700878589748;  // std dev = 0.767, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.10052944731555924;  // std dev = 1.299, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34976577729391795;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.35448885947466924;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.1884807988900477;  // std dev = 0.204, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12971172059474134;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.15669004481822194;  // std dev = 2.709, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.09526324561257953;  // std dev = 4.402, 155.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.29071198708516166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24114536765088068;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05904618549096528;  // std dev = 1.118, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28129236542010333;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.37298916294022916;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2345777391528654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11333713667253494;  // std dev = 0.003, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.10522346325034257;  // std dev = 0.988, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.007844272164360393;  // std dev = 1.938, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2749525387711444;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.01953841982207374;  // std dev = 3.261, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | | else return 0.09494866231225256;  // std dev = 3.728, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24336924977689325;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, E), interaction(E, E) )
%   | | | then return 0.39392716634622577;  // std dev = 1.137, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.5806162315884551;  // std dev = 0.329, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.16943216009757514;  // std dev = 0.056, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5250771504235188;  // std dev = 0.099, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1693681707150054;  // std dev = 0.025, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.15610862151246394;  // std dev = 2.682, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return -0.1068578876927716;  // std dev = 1.214, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else return 0.18574010568583027;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1882034121928057;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17690789665389808;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.4401703232508785;  // std dev = 0.713, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.31421317953066075;  // std dev = 2.710, 65.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=55 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.13907797320608664;  // std dev = 0.254, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.16119611452658936;  // std dev = 0.232, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.15968313410328805;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.02383186608512629;  // std dev = 0.747, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08416573523687272;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1697542485179233;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16442587020457536;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.33481721477837184;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14555774584819411;  // std dev = 0.945, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.11628849511895746;  // std dev = 0.029, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2714079183025024;  // std dev = 1.148, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.12446897068684903;  // std dev = 0.129, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.0230635280578943;  // std dev = 1.755, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.029343906097712674;  // std dev = 2.835, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14747560440334834;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.10504207909413996;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, E) )
%   | | then return -0.08085001223900917;  // std dev = 0.175, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( enzyme(E, F), enzyme(A, G) )
%   | | | then return -0.11868729881985543;  // std dev = 0.594, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.01262815086041953;  // std dev = 1.869, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.027413805173448397;  // std dev = 1.660, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | | else return 0.009209750294319535;  // std dev = 0.917, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return -0.010165555872870116;  // std dev = 1.486, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.028273681362623853;  // std dev = 2.388, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.061', 'seconds']
Refined model CLL: -0.182993


******************************************
Best model found
******************************************
Results 

CLL : -0.175674 

AUC ROC : 0.987979 

AUC PR : 0.270598 

Precision : 0.181282 

Recall : 0.87234 

F1 : 0.300183 

Total Learning Time : 5.093 

Total Inference Time : 7.799386739730835 

Total revision time: 21.34817689704895
Best scored revision CLL: -0.182993


Results 

CLL : -0.175674 

AUC ROC : 0.987979 

AUC PR : 0.270598 

Precision : 0.181282 

Recall : 0.87234 

F1 : 0.300183 

Total Learning Time : 21.369450986862184 

Total Inference Time : 7.799386739730835 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1277141524908154;  // std dev = 4.759, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.15226658215833502;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7580193346218546;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7387463734164046;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7449784760894348;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7137009226368533;  // std dev = 3.095, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.1598416513650696;  // std dev = 0.022, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07501284738195663;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.497118440163985;  // std dev = 0.940, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5912948621723906;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05601764578935317;  // std dev = 4.399, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6357844018105943;  // std dev = 1.919, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14093145602232757;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8293636352378876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06184464498448467;  // std dev = 1.629, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3429255414364001;  // std dev = 1.327, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.42702152012855144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5218967430259904;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5640893977240937;  // std dev = 1.528, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.03220568760374394;  // std dev = 5.073, 245.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5337057896496626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.14202647827459955;  // std dev = 1.580, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.387884766866511;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2666986597491032;  // std dev = 0.919, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.04368844194456131;  // std dev = 5.877, 290.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40163004304379923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.012401129795732576;  // std dev = 1.702, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.20263673348326816;  // std dev = 0.951, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.18809536780759922;  // std dev = 1.029, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1900403376891533;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.017773835867217178;  // std dev = 2.763, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18110038433292067;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05912310772489674;  // std dev = 4.609, 178.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=51 */
%   | | | else return 0.04934661673843601;  // std dev = 2.235, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30964553068502115;  // std dev = 0.274, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.351998168294684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.023107172814137766;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4715147510545613;  // std dev = 1.735, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1724118993191103;  // std dev = 0.604, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2460288540734789;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08289873968095227;  // std dev = 4.333, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.09172534416185381;  // std dev = 0.846, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.07681330160047327;  // std dev = 1.150, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3686121720130017;  // std dev = 3.264, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.15499891696877208;  // std dev = 0.794, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.27642478949479554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02538802209830303;  // std dev = 1.461, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2047338625275424;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20248253979871644;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22997286830413266;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.021949156832981282;  // std dev = 1.816, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26982228092392346;  // std dev = 0.153, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.04613602301893081;  // std dev = 1.472, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19113634723819342;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04557244948901555;  // std dev = 3.695, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | | else return 0.10301656511394897;  // std dev = 1.383, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1607256886062871;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19127278830847913;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.22325938684066338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.047631581163282144;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.004971325910102117;  // std dev = 2.284, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1633204370131692;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03186311157996767;  // std dev = 3.800, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | | else return 0.09742593744811262;  // std dev = 1.334, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.949', 'seconds']
Parameter learned model CLL:-0.201022 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.549, 3, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.759, 84, 31], 'false,false,true,false': [5.636, 108, 45], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 7], 'true,false': [0.061, 0, 10], 'false,true,true': [0.107, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.095, 11, 76], 'false,false,true,false': [0.022, 178, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.94, 1, 11], 'true,false': [0.045, 0, 6], 'false,true,true': [4.399, 106, 34], 'false,true,false,true': [1.919, 4, 48], 'false,true,false,false': [0.0, 83, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.629, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.327, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.016, 0, 3], 'false,true,true,false': [1.528, 3, 21], 'false,true,false': [5.073, 187, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.58, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.919, 1, 10], 'false,true': [5.877, 208, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.702, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.951, 1, 9], 'true,true,false': [1.029, 3, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [2.763, 51, 19], 'false,false,true': [0.943, 1, 8], 'false,false,false,true': [4.609, 127, 51], 'false,false,false,false': [2.235, 26, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.274, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.866, 1, 3], 'true,true,false,false': [1.735, 4, 33], 'true,false': [0.604, 99, 0], 'false,true': [0.018, 0, 5], 'false,false,true': [4.333, 91, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.846, 1, 7], 'true,false': [1.15, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.264, 13, 82], 'false,true,false': [0.794, 189, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.461, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.112, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.092, 0, 5], 'false,true,true': [1.816, 34, 13], 'false,true,false,true': [0.153, 0, 8], 'false,true,false,false': [1.472, 56, 11], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [3.695, 99, 47], 'false,false,false,false': [1.383, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.085, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.855, 1, 3], 'false,true': [2.284, 89, 32], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [3.8, 95, 47], 'false,false,false,false': [1.334, 7, 4]}]
{'': [0.12749999999999959, 0.2095865660537788], 'false': [0.17283950617283939, 0.20320909410995533], 'false,false': [0.20316328803742514, 0.20408163265306106], 'false,false,false': [0.20408163265306106, nan], 'false,false,true': [0.19689981096408443, 0.20761245674740594], 'false,true': [0.25, 0.0], 'true': [0.15999999999999973, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0003084681248110729, 0.2073336654734454], 'false': [0.0016262707086132724, 0.2030941259146129], 'false,false': [0.20441749950208873, 0.17993079584775076], 'false,false,true': [0.1100883275689935, 2.710197708297948e-06], 'false,false,false': [0.17993079584775076, nan], 'false,true': [0.0016262707086132724, nan], 'true': [1.2688263138573217e-16, 0.00037144703362672614]}
{'': [0.05119622630067758, 0.15837749647141824], 'false': [0.1565039339523701, 0.18868453862477697], 'false,false': [0.18868453862477697, nan], 'false,false,true': [0.0, 0.1658252399123783], 'false,true': [0.138214085658264, 0.17015065337910412], 'false,true,false': [0.07082716596495003, -1.6051417223496238e-17], 'true': [0.07367235183087018, 0.0003311762654220433]}
{'': [0.09304113777943597, 0.13180167548042693], 'false': [0.1280499545455552, 0.2029724741667132], 'false,false': [0.0, 0.20808587140168985], 'false,false,false': [0.20808587140168985, nan], 'false,true': [0.08660461123092864, 0.10502824068376045], 'true': [0.09783787231870458, 0.0], 'false,true,true': [8.78990505579121e-05, 0.09722139801897789], 'false,false,true': [nan, 0.0]}
{'': [0.050367017378123796, 0.12164316922648104], 'false': [0.11911709186387244, 0.1600895868758566], 'false,false': [0.0, 0.16100981350244253], 'false,false,false': [0.16100981350244253, nan], 'true': [3.172065784643304e-17, 0.07670750527032927], 'true,true': [3.172065784643304e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.13020131060656645, 0.11947151169298464], 'true': [0.10341633219074757, 0.25], 'true,false': [nan, 0.25], 'false': [0.10907954403700869, 0.12225633619458455], 'false,false': [0.09886144700262353, 0.12262345577205626], 'false,false,false': [0.11933909415073538, 0.13878329840895803], 'true,true': [0.09040825649623632, 0.1177584594629283]}
{'': [0.10732138438879225, 0.13219876796294136], 'false': [6.530534586579595e-05, 0.13605574253262936], 'false,false': [0.13605574253262936, nan], 'true': [0.08274238120762409, 0.003688398273444835], 'true,true': [0.004791083299845386, 0.10941938273725488], 'true,true,false': [0.1875, 0.0813617123666818], 'true,true,true': [0.004998379733637422, 0.0]}
{'': [0.1019991162842463, 0.10239190028714024], 'false': [0.10077704403868627, 0.1289920067005077], 'false,false': [0.0, 0.1333469801437082], 'false,false,false': [0.1333469801437082, nan], 'true': [0.08954768256655676, 0.11021112449069836], 'false,true': [0.11217392977383463, 0.0033371324123391906], 'false,true,true': [nan, 0.1121739297738342], 'false,false,true': [0.0, nan]}
{'': [0.0014481560081618453, 0.07832481469811886], 'false': [0.05086324049428404, 0.09689689809731102], 'false,false': [4.5266170888685896e-05, 0.09936303228235464], 'false,false,false': [0.0935089620660093, 0.1739938813087931], 'false,true': [0.07018718593714367, 0.03871868710512511], 'false,true,false': [0.0029221550374057964, 0.03234440390741625], 'true': [0.0013887443804568979, 0.0013545406957549291], 'true,false': [0.0, 0.0016804374993895643]}
{'': [0.05583320827827851, 0.07777745372531455], 'false': [0.043110838772073334, 0.10342575776115893], 'false,false': [3.532328723735434e-05, 0.10629617712650395], 'false,false,false': [0.10169824013024596, 0.16166192101275167], 'true': [0.011242167837040403, 0.18262295345482452], 'true,true': [0.0007876170110056633, 0.0], 'true,true,true': [0.0, 0.0012040514391140622], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 13.596
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.1145591915097676;  // std dev = 4.723, 117.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.08891816586874314;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.21648226843284463;  // std dev = 5.253, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.743396716151203;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.07141375972003654;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6902864593440042;  // std dev = 3.333, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.16086824508930642;  // std dev = 0.143, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1797395149696757;  // std dev = 1.408, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.09362364043669924;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.49856735106830136;  // std dev = 0.287, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.023497927895608433;  // std dev = 2.644, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | | else return 0.0883571164576234;  // std dev = 3.466, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5560327906486898;  // std dev = 2.736, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.1426653739643502;  // std dev = 0.077, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.487164656042738;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.023918225624478193;  // std dev = 0.614, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.17112827334432593;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3888627305544451;  // std dev = 0.236, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4313881687430373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.561387591704282;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4820055622837919;  // std dev = 2.074, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.1484569816285156;  // std dev = 0.308, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.10652896780838256;  // std dev = 4.770, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5494526507779482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.4427675146570915;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02239606063448548;  // std dev = 1.151, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2538256544690159;  // std dev = 0.287, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.25399955352781284;  // std dev = 0.297, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14700024567378733;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08487864057378647;  // std dev = 4.624, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.002451955763045129;  // std dev = 1.801, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.06406503287810793;  // std dev = 2.857, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4131415876584691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09853477023392987;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.019700906348182334;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(G, E) )
%   | | then return 0.39766456822900853;  // std dev = 0.301, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.6225222493845166;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.1893825586778412;  // std dev = 0.070, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( complex(H, I), complex(A, I) )
%   | | then return 0.305282756778088;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(H, J), interaction(A, K) )
%   | | | then return -0.6503045681889165;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.28383652398910575;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.4039913519405469;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.028765130732806357;  // std dev = 4.805, 214.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=56 */
%   | | | else return 0.11303640938729273;  // std dev = 1.440, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2752358415961576;  // std dev = 0.058, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.2707507805155362;  // std dev = 1.734, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.49531891722392635;  // std dev = 0.612, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.1484203346323436;  // std dev = 0.051, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.08099068957052075;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(A, I), interaction(G, H) )
%   | | | then return 0.017331013488267228;  // std dev = 3.903, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | | | else return -0.08833036184088765;  // std dev = 1.332, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05577826997580385;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.37721024627739486;  // std dev = 0.609, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.04113676542776945;  // std dev = 0.792, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.20053643066269686;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), interaction(G, I) )
%   | | | then return 0.059878177833354126;  // std dev = 2.711, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return -0.06381664907599546;  // std dev = 1.793, 66.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=10 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2556699781895219;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.053471836607314666;  // std dev = 3.801, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.19102526267636222;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.12751971786394115;  // std dev = 0.813, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.19710644507586822;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19870278530721375;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.06283519831767881;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20992306629632593;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.32816490395904496;  // std dev = 1.216, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.05601390247526255;  // std dev = 1.693, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else return -0.07817360890494404;  // std dev = 0.138, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20378268892845278;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L), location(A, M) )
%   | | | then return 0.05397326291613859;  // std dev = 3.358, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | | else return -0.015659651844815076;  // std dev = 2.767, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1760355659394724;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19119010390733024;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.17519643991407727;  // std dev = 1.971, 45.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=30 */
%   | | | else return -0.11432477603487395;  // std dev = 0.210, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0.2364325377750877;  // std dev = 0.449, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17308075148869145;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.04472491016836314;  // std dev = 3.097, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return -0.010346092249780661;  // std dev = 2.852, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '16.899', 'seconds']
Refined model CLL: -0.204223


******************************************
Best model found
******************************************
Results 

CLL : -0.178756 

AUC ROC : 0.989043 

AUC PR : 0.283215 

Precision : 0.270889 

Recall : 0.758491 

F1 : 0.399206 

Total Learning Time : 13.596 

Total Inference Time : 179.49964952468872 

Total revision time: 202.76770703697204
Best scored revision CLL: -0.201022


Results 

CLL : -0.178756 

AUC ROC : 0.989043 

AUC PR : 0.283215 

Precision : 0.270889 

Recall : 0.758491 

F1 : 0.399206 

Total Learning Time : 202.78898112678527 

Total Inference Time : 179.49964952468872 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.567
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.02481560176617902;  // std dev = 2.582, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return 0.12644161802634063;  // std dev = 5.674, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6171327900556461;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8440575998806887;  // std dev = 0.034, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1548738942562514;  // std dev = 0.066, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14945020801280598;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.17276052589784494;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5809067395790398;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.585161971862008;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07787355927403108;  // std dev = 2.078, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6845091186657242;  // std dev = 0.270, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14194477667482805;  // std dev = 0.304, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12642215840886195;  // std dev = 3.668, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8113900135128949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3536800450435604;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.44419586938919337;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.386480302849159;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41281745965758326;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05715877666963553;  // std dev = 4.186, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.523970484125396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09653996453219536;  // std dev = 3.541, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.29491156493514425;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3485072816648834;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3507262578860396;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.04780618344416432;  // std dev = 4.284, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3946004331460554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0719422766642888;  // std dev = 3.662, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return -0.03226719669571857;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2757967282895525;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34387710050529147;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2791077816159456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30520876039514433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06565385084044102;  // std dev = 1.021, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27354326109612753;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06542840596258678;  // std dev = 3.946, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | | else return 0.05149362706578777;  // std dev = 3.765, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24008453539167526;  // std dev = 0.095, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2271602896363218;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2426154823265576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6458531997472722;  // std dev = 0.761, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18413944790483078;  // std dev = 0.556, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21870645706749622;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03719460208947442;  // std dev = 3.431, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1826513816924603;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07584619528206554;  // std dev = 0.955, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43209524785566233;  // std dev = 1.122, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13713623189513918;  // std dev = 0.178, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18981563195584628;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.018457991044858124;  // std dev = 3.154, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1596521983860163;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1287030724106185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17638215897896548;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08510902865697155;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09097160025806035;  // std dev = 0.290, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03201342320054375;  // std dev = 1.516, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17254631122787484;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03158511889734902;  // std dev = 2.698, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.08447494149913864;  // std dev = 2.940, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14056985478103853;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14348118018033076;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13644817204744653;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14301730699615056;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.020887557066341926;  // std dev = 1.381, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14928871669954585;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.012421979344882303;  // std dev = 2.732, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0.055770494662679616;  // std dev = 2.980, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.576', 'seconds']
Parameter learned model CLL:-0.176015 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.582, 40, 8], 'false,false,true,false': [5.674, 120, 44], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.932, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.034, 0, 52], 'false,false,true,false': [0.066, 140, 0], 'false,false,false,true': [3.523, 40, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.026, 0, 6], 'true,false': [0.032, 0, 8], 'false,true,true': [2.078, 25, 8], 'false,true,false,true': [0.27, 0, 48], 'false,true,false,false': [0.304, 87, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.668, 44, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.96, 1, 11], 'true,false': [0.021, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.632, 1, 3], 'false,true,false': [4.186, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.541, 41, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.006, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.044, 0, 9], 'false,true': [4.284, 148, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.662, 46, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.022, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.021, 21, 3], 'false,false,true': [0.031, 0, 6], 'false,false,false,true': [3.946, 114, 49], 'false,false,false,false': [3.765, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.095, 0, 12], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.761, 0, 36], 'true,false': [0.556, 107, 0], 'false,true': [0.016, 0, 5], 'false,false,true': [3.431, 93, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.955, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.122, 1, 56], 'false,true,false': [0.178, 141, 0], 'false,false,true,true': [0.022, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.154, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.023, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.015, 0, 4], 'false,true,true': [0.445, 21, 1], 'false,true,false,true': [0.29, 1, 2], 'false,true,false,false': [1.516, 42, 14], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [2.698, 82, 36], 'false,false,false,false': [2.94, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.015, 0, 5], 'true,true,true,false': [0.017, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.035, 0, 4], 'false,true': [1.381, 61, 17], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.732, 93, 36], 'false,false,false,false': [2.98, 36, 20]}]
{'': [0.06222222222222188, 0.19791426386140493], 'false': [-1.4802973661668753e-16, 0.1905750940337648], 'false,false': [0.1851192595229628, 0.2058391094307914], 'false,false,false': [0.2050045913682272, 0.22222222222222224], 'false,false,true': [0.1388888888888891, 0.19631171921475396], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.06143170998773133, 0.2050639184688315], 'false': [7.401486830834377e-17, 0.20176778425213165], 'false,false': [0.1970892238384402, 0.21483332769535726], 'false,false,false': [0.21401801827228567, 0.22222222222222224], 'false,false,true': [2.2174816488192034e-05, 3.0687796421458025e-05], 'true': [0.0, 0.09642533701225295], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001290741215267082, 0.1702737212769409], 'false': [0.1533139866666571, 0.21341865622066286], 'false,false': [0.20972953364873925, 0.0], 'false,false,true': [0.0, 0.21017589309017906], 'false,true': [0.1308387437913307, 0.157731363385732], 'false,true,false': [0.0015161665721230566, 0.0010653546688441727], 'true': [0.00011625175254237341, 0.00013093075464404302], 'false,false,false': [0.0, nan]}
{'': [0.06277291227850726, 0.12401297101582219], 'false': [0.09354983973408199, 0.2145923132619153], 'false,false': [0.002833267887650537, 0.21729144858651436], 'false,false,false': [0.21257542495671744, 0.25], 'false,true': [0.08011782329934983, 0.09079746516132586], 'false,true,true': [0.0, 0.10000854995843683], 'true': [0.07679203964126514, 0.00014191126190029232], 'false,false,true': [0.0, 0.0]}
{'': [0.0001402521373004165, 0.11921938053896443], 'false': [0.08995600541906444, 0.20392444123848272], 'false,false': [0.0013648807847491395, 0.20747405610431838], 'false,false,false': [0.20631427088170382, 0.2222222222222222], 'false,false,true': [0.0, 0.0], 'true': [8.261276967647113e-06, 0.00021182187323012493], 'true,true': [8.261276967647113e-06, nan]}
{'': [0.0013184176015902382, 0.12000879067770316], 'false': [0.04344693803341801, 0.12612622701082157], 'false,false': [0.00016376281299845807, 0.128248062086703], 'false,false,false': [0.09550621384055738, 0.20545832024529725], 'true': [0.0014720835179164499, 0.00041753602653263333], 'true,true': [7.056222286228042e-05, 0.0009752403690580919], 'true,false': [0.00014322750736110723, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12706102281435028, 0.08903055763258282], 'true': [0.04600086021581531, 0.002893466515110595], 'false': [5.421777471332212e-05, 0.09124990396480802], 'false,false': [0.09124990396480802, nan], 'true,true': [0.0007145850358104158, 0.019932725016173086], 'true,true,false': [0.0, 0.016091799477565387], 'true,true,true': [0.0007593453074033566, 0.0003028495819572541]}
{'': [0.06358618072382374, 0.0905603228314619], 'false': [0.0729437982939142, 0.13899670217680057], 'false,false': [0.00023228912196728013, 0.14214574855102577], 'false,false,false': [0.14214574855102577, nan], 'false,true': [0.022081555591285898, 0.00022535661322832632], 'true': [2.0731224519935734e-07, 0.10141389052721245], 'false,true,true': [nan, 0.02208155559128587], 'false,false,true': [0.00023228912196728013, nan]}
{'': [0.0001970324130998299, 0.07441338681736502], 'false': [0.033089290019435724, 0.09046850099582297], 'false,false': [3.778621503091051e-05, 0.09264917413054123], 'false,false,false': [0.06168845549247199, 0.15716598095496342], 'false,true': [0.009009333700719812, 0.041111579057274354], 'false,true,false': [0.028099167639397026, 0.04103958866193087], 'true': [6.015370779920303e-05, 0.0004101425628048827], 'true,false': [0.0, 5.8019144307717985e-05]}
{'': [0.00013006483562657704, 0.06916564170009129], 'false': [0.024433754473988205, 0.08681070764521068], 'false,false': [2.987239912629891e-05, 0.08875316638494815], 'false,false,false': [0.05785007982270618, 0.15863034663005685], 'true': [5.706779561140129e-05, 0.00030844866418579947], 'true,true': [6.589877454524218e-05, 0.0], 'true,true,true': [4.5078580218319006e-05, 9.530171368561195e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.112
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.03996711691769416;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.19317431581017216;  // std dev = 6.625, 197.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=66 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.835306004486279;  // std dev = 0.047, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16120059049292196;  // std dev = 0.134, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.05519243009481205;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.23297020787258985;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517345;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12150193252798856;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.1455776723907593;  // std dev = 1.914, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6758221741065045;  // std dev = 0.259, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1434889145008955;  // std dev = 0.063, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2002078902839045;  // std dev = 3.422, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | else return 0.13133568295932582;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4330812668940421;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3885421130187363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39264257539550346;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.13055445893337816;  // std dev = 0.297, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.07159644288919625;  // std dev = 4.097, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5055422136041896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.002099947409598929;  // std dev = 1.529, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.08796633632925037;  // std dev = 3.404, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.317329845644467;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3391459146331638;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08666061316080705;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.0812110666823515;  // std dev = 2.234, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.03630535058805221;  // std dev = 3.493, 145.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=39 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3814560868503757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.007442559998079981;  // std dev = 1.768, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1501113581777393;  // std dev = 3.095, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2602512561923924;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19719202176453113;  // std dev = 0.656, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2681223045290034;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.03649429714191275;  // std dev = 0.152, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.012124610104615463;  // std dev = 0.745, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.1185990349780991;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2665456883860065;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.04693753449159554;  // std dev = 5.274, 226.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=67 */
%   | | | else return -0.08179607181293;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24172349211867675;  // std dev = 0.155, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.113714892618064;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5775903129138457;  // std dev = 0.212, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else return -0.17959171185853096;  // std dev = 0.073, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2171566149408221;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return -0.03158726477780154;  // std dev = 0.822, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.04788236207729922;  // std dev = 2.031, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.010899347859307311;  // std dev = 0.949, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.08087134965561817;  // std dev = 2.230, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1743607534184254;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.16942623604009593;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.018035260083508264;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3414923103482938;  // std dev = 0.322, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4606277308851791;  // std dev = 1.045, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.1428562554286846;  // std dev = 0.032, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.24606245844633717;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.08378988067672481;  // std dev = 2.787, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.1880943500921533;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15967880020743017;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1960332456295264;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.07571858754815515;  // std dev = 0.617, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.008796041220972467;  // std dev = 0.779, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.023809912877981686;  // std dev = 0.678, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.03337454654804851;  // std dev = 0.877, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17441228177812895;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.03094691233761435;  // std dev = 2.528, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return -0.034331262538020484;  // std dev = 3.226, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14585380873275336;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1382240788656126;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16172843374269583;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1548343538016239;  // std dev = 0.944, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.09365881799561228;  // std dev = 0.135, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0513590017774999;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15072611594576546;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.014572866835374084;  // std dev = 2.372, 107.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | | | else return 0.031800858741638426;  // std dev = 3.278, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '15.443', 'seconds']
Refined model CLL: -0.180215


******************************************
Best model found
******************************************
Results 

CLL : -0.192274 

AUC ROC : 0.981608 

AUC PR : 0.200029 

Precision : 0.138057 

Recall : 0.815884 

F1 : 0.236155 

Total Learning Time : 3.112 

Total Inference Time : 5.261168718338013 

Total revision time: 12.819968799591065
Best scored revision CLL: -0.176015


Results 

CLL : -0.192274 

AUC ROC : 0.981608 

AUC PR : 0.200029 

Precision : 0.138057 

Recall : 0.815884 

F1 : 0.236155 

Total Learning Time : 12.841242889404297 

Total Inference Time : 5.261168718338013 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.511
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.1470378239884007;  // std dev = 5.266, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07243464938522666;  // std dev = 2.659, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8416671001458299;  // std dev = 0.030, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15761126797936892;  // std dev = 0.052, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14370779599107528;  // std dev = 2.770, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.04279418357704879;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5835280543999043;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.585981522415447;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0427875422265481;  // std dev = 2.798, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6162606185674905;  // std dev = 1.731, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1405688341230776;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6672377310084275;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12162452733509078;  // std dev = 2.453, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07693526580845285;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43924920559666886;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5755642222104361;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5986093905991522;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05243383168368096;  // std dev = 4.325, 185.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4207098482155893;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.05619980105879388;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08664210117532814;  // std dev = 2.782, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.027563301178548404;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3345355323059241;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3369233730961179;  // std dev = 0.000633, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.057004773374655336;  // std dev = 4.435, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32287952909407647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4325833008911327;  // std dev = 0.155, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.059989840362163;  // std dev = 2.545, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.05357820545960603;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26453233909580526;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.40958195124618335;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25665081128168954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3354522579261074;  // std dev = 0.140, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06572771217530726;  // std dev = 1.213, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.0994593585900761;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06487167703131241;  // std dev = 3.990, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | | | else return 0.08843519232870604;  // std dev = 2.973, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24680999144429377;  // std dev = 0.165, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24887939186046715;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25807177983823376;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5691467070294399;  // std dev = 1.119, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16953199626508975;  // std dev = 0.548, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24723428283279406;  // std dev = 0.000373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.054506109559885406;  // std dev = 3.360, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1772390429077122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07869169052717927;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40829106013400085;  // std dev = 1.745, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14133661843069129;  // std dev = 0.203, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20648470949651132;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04252997838687868;  // std dev = 2.451, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15587604754895287;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19898314160540276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08061652771515272;  // std dev = 0.587, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09030299361692981;  // std dev = 0.317, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23672921962202342;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.023305381967241235;  // std dev = 1.638, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19164702493028649;  // std dev = 0.000310, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.031099801118853045;  // std dev = 2.911, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return 0.07994599249027017;  // std dev = 2.344, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13374069840472103;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1473702061051962;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15670212596663635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1740407456273131;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17895597228961935;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.017684546807556795;  // std dev = 1.699, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1636947133505533;  // std dev = 0.000274, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03719487690766246;  // std dev = 2.838, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.018151558114896348;  // std dev = 2.436, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.067', 'seconds']
Parameter learned model CLL:-0.181862 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.191, 47, 13], 'false,false,true,false': [5.266, 96, 39], 'false,false,false,true': [2.659, 33, 9], 'false,false,false,false': [1.095, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.03, 0, 52], 'false,false,true,false': [0.052, 135, 0], 'false,false,false,true': [2.77, 25, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.005, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.798, 50, 14], 'false,true,false,true': [1.731, 3, 42], 'false,true,false,false': [0.0, 68, 0], 'false,false,true,true': [0.199, 0, 3], 'false,false,true,false': [2.453, 21, 9], 'false,false,false,true': [1.443, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.006, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.173, 0, 6], 'false,true,false': [4.325, 136, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.782, 27, 11], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.000633, 0, 6], 'false,true': [4.435, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.155, 0, 2], 'false,false,false,true': [2.545, 25, 9], 'false,false,false,false': [1.445, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.002, 0, 9], 'true,true,false': [0.011, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.14, 0, 2], 'false,true': [1.213, 30, 5], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.99, 105, 46], 'false,false,false,false': [2.973, 31, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.165, 0, 13], 'true,true,true,false': [0.131, 0, 3], 'true,true,false,true': [0.027, 0, 3], 'true,true,false,false': [1.119, 1, 33], 'true,false': [0.548, 107, 0], 'false,true': [0.000373, 0, 3], 'false,false,true': [3.36, 72, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.937, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.745, 3, 56], 'false,true,false': [0.203, 128, 0], 'false,false,true,true': [0.116, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.451, 28, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.038, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.587, 1, 5], 'false,true,true': [0.317, 17, 1], 'false,true,false,true': [0.156, 0, 6], 'false,true,false,false': [1.638, 51, 17], 'false,false,true': [0.00031, 0, 3], 'false,false,false,true': [2.911, 64, 31], 'false,false,false,false': [2.344, 22, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.029, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.007, 0, 2], 'true,false': [0.091, 0, 3], 'false,true': [1.699, 69, 24], 'false,false,true': [0.000274, 0, 3], 'false,false,false,true': [2.838, 60, 31], 'false,false,false,false': [2.436, 28, 12]}]
{'': [-2.3684757858670006e-16, 0.2038354220093228], 'false': [-2.5376526277146434e-16, 0.19452223208797337], 'false,false': [0.1955555555555564, 0.19013128112267944], 'false,false,true': [0.1697222222222217, 0.20543209876543256], 'false,false,false': [0.16836734693877567, 0.23999999999999994], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.10380622837370257, 0.20659578391355882], 'false': [0.10937500000000006, 0.20244251147900177], 'false,false': [0.20047864289479914, 0.21147670237249577], 'false,false,false': [0.21312242469683942, 0.18749999999999994], 'false,false,true': [1.6937624250701333e-05, 1.9846217833864024e-05], 'false,true': [0.10937500000000006, nan], 'true': [0.09876543209876552, 0.10937500000000028]}
{'': [2.832511662139344e-06, 0.16344927254255112], 'false': [0.1520117282174573, 0.20974853135414032], 'false,false': [0.208111327836664, 0.2083282143680895], 'false,false,false': [0.2083282143680895, nan], 'false,false,true': [0.013205142869811967, 0.20053887651310542], 'false,true': [0.12232061216511558, 0.16379020634212715], 'false,true,false': [0.06660712569819248, -2.938825653419532e-17], 'true': [2.2573144888647012e-06, 0.0]}
{'': [2.396442162459304e-06, 0.12579339694257344], 'false': [0.10793831163958006, 0.19854804732614928], 'false,false': [0.15821689361956232, 0.19998016488598724], 'false,false,false': [0.20372409964999816, 0.16000000000000003], 'false,false,true': [0.0, 0.25], 'false,true': [0.004351558630171416, 0.10111272372924793], 'false,true,true': [0.0, 0.005000949861000488], 'true': [2.396442162459304e-06, nan]}
{'': [1.9636911041824118e-06, 0.1182042540908881], 'false': [0.10085744240531307, 0.18974623461328616], 'false,false': [0.0106977044857783, 0.19468422145615716], 'false,false,false': [0.19052446888172575, 0.2087956141157647], 'false,false,true': [0.0, 0.012034917546500573], 'true': [9.475843066011594e-07, 6.678111713620538e-08], 'true,true': [9.475843066011594e-07, nan]}
{'': [0.0051366819379049244, 0.11664538137965239], 'false': [0.042057631017369715, 0.12680222174430272], 'false,false': [0.13891555151278273, 0.12640611827025117], 'false,false,false': [0.10543335605578862, 0.1963536261811287], 'true': [0.004490695234488546, 0.007935957255155371], 'true,false': [0.0, 0.00983404655164867], 'true,true': [4.965792772291009e-07, 2.7910680654524844e-05], 'true,false,true': [0.0, nan]}
{'': [0.10401787202659203, 0.10752851502323811], 'false': [4.6351595478499874e-08, 0.10960916267543547], 'false,false': [0.10960916267543547, nan], 'true': [0.048049759574562416, 0.0028097656266964084], 'true,true': [0.0027799097629372035, 0.04104581624857039], 'true,true,false': [0.00024154846277942474, 0.03680017035895739], 'true,true,true': [0.0020949406652017036, 0.005744629721765732]}
{'': [0.05733199529218405, 0.09303743113048842], 'false': [0.08174557353911517, 0.14175417431123452], 'false,false': [0.004477615889297394, 0.15017448685428228], 'false,false,false': [0.15017448685428228, nan], 'false,true': [0.05161781634800645, 0.0003205838513683744], 'true': [0.0, 0.10980820025376163], 'false,true,true': [nan, 0.05161781634800657], 'false,false,true': [0.004477615889297394, nan]}
{'': [0.021878485024997812, 0.0787000718558368], 'false': [0.035799790023232185, 0.10676838399266216], 'false,false': [3.21198378588905e-08, 0.10875574789896458], 'false,false,false': [0.089191110818457, 0.16166455035963445], 'false,true': [0.005568935399598875, 0.0416353030385624], 'false,true,false': [0.0040478825677861445, 0.03946930008295035], 'true': [0.00014337765003396286, 0.0509258602319849], 'true,false': [0.0, 0.05741198142057616]}
{'': [0.0009399722513784223, 0.07526954341731747], 'false': [0.0310385012055595, 0.104858252854596], 'false,false': [2.508337267522383e-08, 0.10686763517771368], 'false,false,false': [0.08852432982537507, 0.1483467390745245], 'true': [0.00028776001322718445, 0.0027622401218653178], 'true,true': [0.00011598341984522809, 8.273561345073972e-05], 'true,true,true': [3.469446951953614e-18, 0.00043130631510029244], 'true,true,false': [0.0, 2.389417626356971e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 4.014
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.06153876560798695;  // std dev = 3.092, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.179136589420499;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7744639907355252;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7657109328182105;  // std dev = 1.916, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15715868873878777;  // std dev = 0.165, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3401066162262432;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11015766354218497;  // std dev = 2.566, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4928664367462846;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.13254332045386932;  // std dev = 1.782, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.010061904613299347;  // std dev = 2.054, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6985723206364176;  // std dev = 0.180, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.1406150308807345;  // std dev = 0.055, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7890266018473312;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2135526100803328;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5784252697804854;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2589180951883921;  // std dev = 2.261, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43278710319860436;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5224434914530555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5937073873136756;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.006165430384479192;  // std dev = 2.399, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return 0.11219137037245236;  // std dev = 3.405, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.4052899347161448;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.49724047911480307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.17784683881672575;  // std dev = 2.096, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.05470983738046974;  // std dev = 1.627, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33108632205311395;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.005665569383843229;  // std dev = 1.168, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.10333013384111692;  // std dev = 2.323, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.02017782046720343;  // std dev = 1.371, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.03636653844979924;  // std dev = 3.298, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), interaction(L, K) )
%   | | | then return 0.31835593970479725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3410703911468772;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 6.530601893324911E-4;  // std dev = 2.343, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.258092555986186;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30365421591549446;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.533849079464738;  // std dev = 0.360, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05845982400222276;  // std dev = 2.168, 73.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=9 */
%   | | else if ( interaction(D, H), enzyme(H, I) )
%   | | | then return -0.02314563798780662;  // std dev = 1.033, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.40863367362201386;  // std dev = 0.654, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4182865024173105;  // std dev = 2.064, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return -0.14959933383161178;  // std dev = 0.170, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.26983742555659307;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08387669218684078;  // std dev = 2.058, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.18407862113993342;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.20957306498471495;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4939166874469923;  // std dev = 0.201, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.17488159462217823;  // std dev = 0.095, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.028790159062613674;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.40179647450704087;  // std dev = 1.103, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.13815496180609482;  // std dev = 0.095, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.149523099050271;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.325963026951186;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17210105082827984;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.34558733527502333;  // std dev = 0.918, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return 0.22987923535295657;  // std dev = 1.308, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.11514556563661506;  // std dev = 0.300, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return -0.1544785756441528;  // std dev = 0.308, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5296661738673304;  // std dev = 0.425, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22364579688889338;  // std dev = 0.172, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.07037622243020324;  // std dev = 1.440, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.019200296035559207;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1583808443484803;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14255365796799335;  // std dev = 0.199, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return -0.03896669522591944;  // std dev = 0.827, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.02678323691851191;  // std dev = 1.094, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.026658878321522222;  // std dev = 0.508, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08727540980584493;  // std dev = 1.083, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17582638055595834;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.10170167628197489;  // std dev = 1.216, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.011182216533049238;  // std dev = 2.614, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1506667113709662;  // std dev = 0.038, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.20491215892266532;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.036195349050476736;  // std dev = 0.803, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.026596332777706833;  // std dev = 1.022, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.05011426533841306;  // std dev = 0.538, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03423558915748446;  // std dev = 0.871, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return -0.241468345853116;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.07848384567065546;  // std dev = 1.186, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.004242818886511767;  // std dev = 2.743, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.957', 'seconds']
Refined model CLL: -0.166708


******************************************
Best model found
******************************************
Results 

CLL : -0.19262 

AUC ROC : 0.982798 

AUC PR : 0.192339 

Precision : 0.151063 

Recall : 0.929329 

F1 : 0.259881 

Total Learning Time : 4.014 

Total Inference Time : 3.458866834640503 

Total revision time: 12.087827348709107
Best scored revision CLL: -0.166708


Results 

CLL : -0.19262 

AUC ROC : 0.982798 

AUC PR : 0.192339 

Precision : 0.151063 

Recall : 0.929329 

F1 : 0.259881 

Total Learning Time : 12.10910143852234 

Total Inference Time : 3.458866834640503 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.378
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16656015005278196;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.1461489350995111;  // std dev = 5.063, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.763465875030611;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7226409710129227;  // std dev = 2.823, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16198437955506867;  // std dev = 0.016, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06225736752049552;  // std dev = 1.744, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5646715984700621;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6086233070824347;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06634493926675777;  // std dev = 4.362, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6170863866834506;  // std dev = 1.897, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1399343373667278;  // std dev = 3.33e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1322590716745334;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1396669573215046;  // std dev = 1.322, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4373894058511348;  // std dev = 0.123, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09006802549555365;  // std dev = 0.700, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.463678998685478;  // std dev = 1.809, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.03545607452805887;  // std dev = 5.085, 243.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5739637524884496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.24382108039436895;  // std dev = 1.476, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3304015714810437;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17147581137522594;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07747503058114438;  // std dev = 5.448, 228.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4314538495783026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.13174882249208383;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.020368190831839147;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24977905468966316;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4466556927778768;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33017895431840105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.033176487631159504;  // std dev = 2.260, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3487840756868299;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06353169570000651;  // std dev = 4.801, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
%   | | | else return 0.044156326982457916;  // std dev = 1.868, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24727104778517503;  // std dev = 0.245, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2616220836354629;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5590894990605965;  // std dev = 1.077, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18230710526468077;  // std dev = 0.499, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2742550487927901;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07125499681991386;  // std dev = 3.934, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16698675763165127;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06945741352122613;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38307583003846046;  // std dev = 2.883, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15228769328238007;  // std dev = 0.235, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21430358849586506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.038205885943101;  // std dev = 1.476, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1748452404553234;  // std dev = 0.158, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19020001030669872;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05691665741600713;  // std dev = 1.655, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.33803977469717794;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.026808937300106035;  // std dev = 1.635, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.14268691125121405;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03125400805712352;  // std dev = 3.416, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return -0.00415259272474597;  // std dev = 1.448, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1345327354032497;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2702380626964451;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1626270275387023;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.010513800320610039;  // std dev = 2.186, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.011357665359200575;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.006539862120935161;  // std dev = 3.595, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return 0.1356774730665096;  // std dev = 1.289, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.913', 'seconds']
Parameter learned model CLL:-0.196242 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.777, 74, 33], 'false,false,true,false': [5.063, 89, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.08, 0, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [2.823, 9, 69], 'false,false,true,false': [0.016, 139, 0], 'false,false,false,true': [1.744, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.082, 0, 8], 'true,false': [0.079, 0, 3], 'false,true,true': [4.362, 100, 34], 'false,true,false,true': [1.897, 4, 37], 'false,true,false,false': [3.33e-08, 67, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.322, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.123, 0, 10], 'true,false': [0.7, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.809, 4, 14], 'false,true,false': [5.085, 186, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.476, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.104, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.871, 1, 4], 'false,true': [5.448, 157, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.012, 0, 7], 'true,true,false': [0.155, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.26, 29, 12], 'false,false,true': [0.008, 0, 3], 'false,false,false,true': [4.801, 126, 55], 'false,false,false,false': [1.868, 14, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.245, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.077, 1, 33], 'true,false': [0.499, 76, 0], 'false,true': [0.007, 0, 3], 'false,false,true': [3.934, 87, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.176, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.883, 11, 71], 'false,true,false': [0.235, 167, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.476, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.158, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.016, 0, 3], 'false,true,true': [1.655, 38, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.635, 36, 17], 'false,false,true': [1.038, 2, 3], 'false,false,false,true': [3.416, 91, 40], 'false,false,false,false': [1.448, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.064, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.014, 0, 3], 'false,true': [2.186, 68, 29], 'false,false,true': [0.869, 1, 3], 'false,false,false,true': [3.595, 97, 40], 'false,false,false,false': [1.289, 5, 4]}]
{'': [0.13017751479289916, 0.21349725692378893], 'false': [1.4802973661668753e-16, 0.2101644397026212], 'false,false': [0.20895882877526778, 0.2314049586776858], 'false,false,false': [0.25, 0.20408163265306126], 'false,false,true': [0.21329373744431968, 0.20505600000000113], 'true': [-2.220446049250313e-16, 0.23999999999999994], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.0010663012589196602, 0.21543883944595488], 'false': [0.20979481861049248, 0.21473904950349215], 'false,false': [0.2169102156625829, 0.17887696078024498], 'false,false,true': [0.1021794839146722, 1.9188664833259705e-06], 'false,true': [0.13910247278836857, 0.0], 'false,false,false': [0.17887696078024498, nan], 'true': [7.401486830834377e-17, 0.0012902245232925048], 'false,true,false': [nan, 0.0]}
{'': [0.0015539579444707337, 0.1583335978514395], 'false': [0.1553523537874838, 0.20533208757946816], 'false,false': [0.2222222222222222, 0.19405004710972878], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [0.19405004710972878, nan], 'false,true': [0.1419803453894425, 0.16830088485071862], 'false,true,false': [0.08780707458552514, 1.657049290485308e-17], 'true': [0.0008383691441815611, 0.002057283698007728]}
{'': [0.0806950694388676, 0.12884585442173752], 'false': [0.12340027240145335, 0.22775259070242374], 'false,false': [0.0, 0.24215901572006215], 'false,false,false': [0.24215901572006215, nan], 'false,true': [0.1817984445965693, 0.10642793891855526], 'false,true,true': [nan, 0.1817984445965693], 'true': [0.0015239417587262992, 0.24470792293720217], 'false,false,true': [nan, 0.0]}
{'': [0.07028265391971704, 0.1344968527030842], 'false': [0.13018524961368544, 0.20457792179225134], 'false,false': [0.0, 0.21062855505539288], 'false,false,false': [0.23999999999999994, 0.18750000000000006], 'true': [0.0015385808785576113, 0.15179087446263334], 'true,true': [0.0015385808785576113, nan], 'false,false,true': [nan, 0.0]}
{'': [0.009622041329591647, 0.1303320281671021], 'false': [0.12462299576348568, 0.13130103012543615], 'false,false': [2.2241991525691802e-05, 0.13204758396837943], 'false,false,false': [0.1273267335455425, 0.1744332291047934], 'true': [0.010542857857856991, 0.0], 'true,true': [2.221061175229038e-05, 0.007958747327992474], 'true,false': [nan, 0.0]}
{'': [0.12222312410970025, 0.12000214295286404], 'true': [0.04494655046643526, 0.0032710921345917693], 'false': [1.7117020869233945e-05, 0.12188545749399077], 'false,false': [0.12188545749399077, nan], 'true,true': [0.005495056754618407, 0.034141222364752734], 'true,true,false': [nan, 0.03414122236475294], 'true,true,true': [0.00602583950008242, 0.0]}
{'': [0.12024859210655173, 0.09889824328528206], 'true': [0.0, 0.19751611572501157], 'false': [0.09690078965665251, 0.12436357670109247], 'false,false': [0.0, 0.12813680150839682], 'false,false,false': [0.12813680150839682, nan], 'false,true': [0.10134431694362697, 0.00033196455175167427], 'false,true,true': [nan, 0.10134431694362703], 'false,false,true': [0.0, nan]}
{'': [0.002327221579655743, 0.08180013982501595], 'false': [0.05546740943902137, 0.0993475486317618], 'false,false': [0.2154397610631035, 0.09441141711713738], 'false,false,false': [0.08908785054457401, 0.13977906847204893], 'false,true': [0.05592047825644927, 0.051246515671158115], 'false,true,false': [0.0, 0.05041964153994138], 'true': [0.003103104503886834, 8.673211587196157e-05], 'true,false': [nan, 8.673211587196157e-05]}
{'': [0.0018797003987022019, 0.08202482418443706], 'false': [0.04926735305455591, 0.10320200713142463], 'false,false': [0.18857974203344222, 0.10086262772592111], 'false,false,false': [0.09434171588178941, 0.18447687916347183], 'true': [0.0025253395610039912, 6.788544152630989e-05], 'true,true': [0.0025253395610039912, nan], 'true,true,true': [0.0005841103734639767, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 4.365
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.12377393509951237;  // std dev = 3.533, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.19581127276184887;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.3059101291293621;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264148;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7492270828746279;  // std dev = 2.345, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.167685534076508;  // std dev = 0.186, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else return 0.48335801308829174;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5612088330372125;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11613108608387471;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.1493909926281566;  // std dev = 4.005, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6351962918481059;  // std dev = 1.371, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.15414587682829384;  // std dev = 0.075, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.09760396779532657;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.11299049559625907;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.01683664944241292;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42973421191681027;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4091717647763148;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.519283882255515;  // std dev = 1.577, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.15537885465896728;  // std dev = 0.331, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1849566044249331;  // std dev = 1.766, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.1042238738820319;  // std dev = 3.305, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5311530146360459;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.026476448768185522;  // std dev = 1.505, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.14788994130554894;  // std dev = 0.959, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31654263493404766;  // std dev = 0.000605, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.34788506312870254;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5242301855589157;  // std dev = 0.352, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.1469454321851021;  // std dev = 0.388, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.003539569760422737;  // std dev = 4.101, 179.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=43 */
%   | | | else return 0.08830669385357603;  // std dev = 0.665, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.39978060688059236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.00954722709971878;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3528317482292597;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1255193557744948;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3074050409682437;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3087093930315239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.021934132568428154;  // std dev = 0.281, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.15406857881725305;  // std dev = 1.495, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.1442732664478034;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.03724452813057416;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.019785280846720814;  // std dev = 2.201, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.0645895143551689;  // std dev = 3.670, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23453266364068587;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( location(A, E) )
%   | | | then return 0.47819893227679566;  // std dev = 0.901, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.5450098382048655;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.17854755255699717;  // std dev = 0.074, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2787512870881885;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.45166880807420723;  // std dev = 0.263, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13678526643122887;  // std dev = 0.117, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.045204938232136005;  // std dev = 2.205, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.07053445198479481;  // std dev = 2.100, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1907475573534273;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20391818937774456;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.24825804473671936;  // std dev = 1.486, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.3710738938662601;  // std dev = 1.644, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return -0.13645770546877645;  // std dev = 0.466, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | | else return -0.16187512597887457;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.205968155775212;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.02966255749346064;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.14135451444718514;  // std dev = 0.806, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16746758729883443;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.055134646184442;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.04069723827437414;  // std dev = 1.001, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.03660379675739829;  // std dev = 1.177, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return -0.018717039704650478;  // std dev = 0.206, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(H, I), complex(A, J) )
%   | | | then return -0.045370412021943474;  // std dev = 1.441, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.029696097185229007;  // std dev = 2.514, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.15709980775949167;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14917870949575246;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.06315368796177831;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1414407015398188;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11598623752232926;  // std dev = 0.442, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.16587187071198484;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(H, H), complex(A, J) )
%   | | then return 0.03263136333010204;  // std dev = 0.223, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return -0.005528092783155019;  // std dev = 0.248, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then return -0.026168691391574465;  // std dev = 0.227, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.041793253023401325;  // std dev = 1.431, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.07927550594641267;  // std dev = 0.470, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.504', 'seconds']
Refined model CLL: -0.181216


******************************************
Best model found
******************************************
Results 

CLL : -0.18428 

AUC ROC : 0.990605 

AUC PR : 0.330305 

Precision : 0.208054 

Recall : 0.879433 

F1 : 0.336499 

Total Learning Time : 4.365 

Total Inference Time : 6.271146774291992 

Total revision time: 19.033937900543215
Best scored revision CLL: -0.181216


Results 

CLL : -0.18428 

AUC ROC : 0.990605 

AUC PR : 0.330305 

Precision : 0.208054 

Recall : 0.879433 

F1 : 0.336499 

Total Learning Time : 29.75212427902222 

Total Inference Time : 6.271146774291992 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.489
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09123164186642853;  // std dev = 4.876, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.14847151574467268;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7271035802978393;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7576315128975235;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6960105902842425;  // std dev = 3.335, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.15689769468082135;  // std dev = 0.050, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08168328864042035;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5643346812640405;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.31767417293177497;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1244772996800223;  // std dev = 4.210, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6202935698927197;  // std dev = 2.164, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14082844384144802;  // std dev = 2.58e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8354661706431229;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.012154690233615453;  // std dev = 1.688, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4496817078466009;  // std dev = 0.129, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.22651182658903232;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.244634260541713;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.529798169257337;  // std dev = 1.737, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.04541049218954457;  // std dev = 5.046, 232.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5429103994056317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04789495702936393;  // std dev = 1.704, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32519999502438335;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2864275062894394;  // std dev = 0.869, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06142633012013089;  // std dev = 5.705, 280.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40833672567542456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04472471765027284;  // std dev = 1.715, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17022347127145881;  // std dev = 0.964, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.32420009663439053;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31449615379460927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.03952229398278916;  // std dev = 2.706, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20129470201168242;  // std dev = 0.861, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.046954873182312576;  // std dev = 4.675, 183.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=51 */
%   | | | else return 0.062406139690106256;  // std dev = 2.267, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29692474989331713;  // std dev = 0.321, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25092624152805565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2761964700603907;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49434497476678196;  // std dev = 1.577, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.1757731786844082;  // std dev = 0.667, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25241021687992926;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03513183429460739;  // std dev = 4.544, 168.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17911952233963188;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.05487560869113833;  // std dev = 1.260, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3895756446742171;  // std dev = 3.096, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.14920982456282963;  // std dev = 0.248, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2067538439501475;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.025776284336906537;  // std dev = 1.504, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.011426513790804373;  // std dev = 1.191, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2830427550549681;  // std dev = 0.963, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.22768640032596305;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.048539435552188925;  // std dev = 1.815, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09754281561402255;  // std dev = 0.963, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.040815668017366975;  // std dev = 1.407, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19959158822982476;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03082644494188735;  // std dev = 3.953, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return 0.01931260668587213;  // std dev = 1.487, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03346603651016593;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.06361930792367897;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.3025107750718245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20778677883420404;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.04380555619454239;  // std dev = 2.569, 145.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16994598848370418;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017958987481887435;  // std dev = 3.897, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
%   | | | else return 0.03952708652163147;  // std dev = 1.458, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.104', 'seconds']
Parameter learned model CLL:-0.194072 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.876, 102, 31], 'false,false,true,false': [5.651, 110, 45], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.024, 0, 10], 'false,true,true': [0.066, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.335, 13, 76], 'false,false,true,false': [0.05, 176, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.027, 0, 11], 'true,false': [1.233, 2, 6], 'false,true,true': [4.21, 75, 34], 'false,true,false,true': [2.164, 5, 48], 'false,true,false,false': [2.58e-08, 88, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.688, 17, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.129, 0, 16], 'true,false': [0.786, 2, 1], 'false,true,true,true': [0.843, 1, 3], 'false,true,true,false': [1.737, 4, 21], 'false,true,false': [5.046, 174, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.704, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.869, 1, 10], 'false,true': [5.705, 198, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.715, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.964, 1, 9], 'true,true,false': [0.9, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.706, 43, 19], 'false,false,true': [0.861, 1, 8], 'false,false,false,true': [4.675, 132, 51], 'false,false,false,false': [2.267, 24, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.321, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.577, 3, 33], 'true,false': [0.667, 102, 0], 'false,true': [0.118, 0, 5], 'false,false,true': [4.544, 121, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.26, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.096, 11, 82], 'false,true,false': [0.248, 171, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.504, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [1.191, 2, 9], 'true,false,true': [0.963, 2, 2], 'true,false,false': [0.098, 0, 5], 'false,true,true': [1.815, 45, 13], 'false,true,false,true': [0.963, 3, 8], 'false,true,false,false': [1.407, 48, 11], 'false,false,true': [0.101, 0, 5], 'false,false,false,true': [3.953, 100, 47], 'false,false,false,false': [1.487, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.893, 1, 7], 'true,true,true,false': [1.228, 3, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.066, 0, 3], 'false,true': [2.569, 113, 32], 'false,false,true': [0.09, 0, 5], 'false,false,false,true': [3.897, 115, 47], 'false,false,false,false': [1.458, 12, 4]}]
{'': [0.05246913580246885, 0.20030224349872258], 'false': [0.17283950617283939, 0.19349637194302713], 'false,false': [0.19425154320987695, 0.1799307958477507], 'false,false,true': [0.17875515857312568, 0.20603537981269626], 'false,false,false': [0.1799307958477507, nan], 'false,true': [0.22222222222222224, 0.1388888888888887], 'false,true,false': [0.18750000000000006, 0.0], 'true': [0.07100591715976314, 0.0]}
{'': [4.8348344665239503e-05, 0.2074052569249148], 'false': [0.0006187429316431649, 0.2028952447304815], 'false,false': [0.2042303081574436, 0.17993079584775074], 'false,false,true': [0.12493488110568124, 1.4313739000232866e-05], 'false,false,false': [0.17993079584775074, nan], 'false,true': [0.0006187429316431649, nan], 'true': [-1.2688263138573217e-16, 5.821946503408171e-05]}
{'': [0.0948417316150299, 0.16632633745222888], 'false': [0.1663713770866356, 0.1589175989036129], 'false,true': [0.16259235296595273, 0.16910430489231962], 'false,true,false': [0.08832813387663857, 7.569702440626067e-18], 'false,false': [0.1589175989036129, nan], 'false,false,true': [0.0, 0.13567411298721355], 'true': [6.730948561676927e-05, 0.18993258993360165]}
{'': [0.09418218512803132, 0.13473314711587855], 'false': [0.1324956647049776, 0.1650614286840776], 'false,false': [0.0, 0.16133465078220624], 'false,false,false': [0.16133465078220624, nan], 'false,true': [0.13826200700823243, 0.10976668219699928], 'false,true,true': [0.17776353166750075, 0.1207254244649603], 'true': [0.0010465118680758057, 0.20586350552143315], 'false,false,true': [nan, 0.0]}
{'': [0.0423560963716081, 0.11949986660877725], 'false': [0.11623581912684762, 0.1702624346997373], 'false,false': [0.0, 0.1729326669027891], 'false,false,false': [0.1729326669027891, nan], 'true': [0.0, 0.06872535692642939], 'false,false,true': [nan, 0.0], 'true,true': [0.0, nan]}
{'': [0.1024408576407784, 0.12249198231835352], 'false': [0.11806161276958764, 0.12365294590077024], 'false,false': [0.08240570842132337, 0.1244445716572113], 'false,false,false': [0.11943677194072833, 0.15119698207707344], 'true': [0.1081034546281, 0.0], 'true,true': [0.09297335507964082, 0.11577152893202529], 'true,false': [nan, 0.0]}
{'': [0.10454104379406708, 0.12074100696256908], 'false': [0.002773455302930139, 0.12288749815211342], 'false,false': [0.12288749815211342, nan], 'true': [0.056486052249245716, 0.004358799912941054], 'true,true': [0.00655388169922097, 0.06717393593413504], 'true,true,false': [-9.25185853854297e-18, 0.0691110893051358], 'true,true,true': [0.006858565722596399, 0.0]}
{'': [0.08718771054683618, 0.10435019217696813], 'false': [0.10278007136707806, 0.12735742818394702], 'false,false': [0.0, 0.1330294373241119], 'false,false,false': [0.1330294373241119, nan], 'false,true': [0.10307287098439002, 0.00035965631436937615], 'false,true,true': [nan, 0.10307287098439015], 'true': [0.0, 0.13236005833683126], 'false,false,true': [0.0, nan]}
{'': [0.1467486319666758, 0.08297350963291053], 'true': [0.12896091605358911, 0.16842584051984355], 'true,false': [0.2316523628600753, 0.001913835911605155], 'false': [0.05004311033966695, 0.10584021329630533], 'false,false': [0.002049247585185804, 0.10813518207850924], 'false,false,false': [0.10631513478560155, 0.12288079518093], 'false,true': [0.05679849553820286, 0.0440523725299952], 'false,true,false': [0.08430095460022466, 0.03354020288849658]}
{'': [0.1226356961626897, 0.07441688266067116], 'true': [0.13449611328638283, 0.0014707724235862585], 'true,true': [0.13790848104555684, 0.0], 'true,true,true': [0.099670468031911, 0.16746226636829847], 'false': [0.04552431048602685, 0.0952775890871939], 'false,false': [0.001625211352041267, 0.09729312382843694], 'false,false,false': [0.09373188204359648, 0.13292732819667433], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.923
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.1514181658687444;  // std dev = 6.566, 208.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=61 */
%   | | | else return 0.21663950113724822;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.28642420489196485;  // std dev = 1.047, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7306318776577896;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5829971604273608;  // std dev = 4.385, 102.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=76 */
%   | | | else return -0.1603528953182147;  // std dev = 0.133, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.32967992018274295;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.027462936960114235;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.47968623428326246;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6415833451277794;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11551463201418849;  // std dev = 3.861, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return -0.007302976892206693;  // std dev = 2.032, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6198665439771062;  // std dev = 2.337, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14468508080972733;  // std dev = 0.224, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.7918336720503009;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07413926443126419;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.19890143767782062;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3964110613334476;  // std dev = 0.249, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.43328347138790324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2757323490787724;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.031719541911960206;  // std dev = 3.313, 88.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.12136457011761734;  // std dev = 3.608, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.05286830535966333;  // std dev = 3.675, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5369918816499153;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2922295296136322;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.026267266147630863;  // std dev = 0.747, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3421518145088424;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.27684927220286054;  // std dev = 0.318, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11992432444352137;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.14334487990777492;  // std dev = 3.564, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.03677400480826978;  // std dev = 4.252, 146.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | | | else return 0.12623206684656585;  // std dev = 2.078, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4040174077716606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.06546291814400089;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03325393253894746;  // std dev = 0.991, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return -0.014635015068287849;  // std dev = 1.009, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.32562147841212447;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38865648768152994;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3115740130826884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, H), enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.5468811848239076;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.19191938388803437;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11032680339617632;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.16698050239066742;  // std dev = 2.268, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.05917326928144235;  // std dev = 5.329, 201.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=65 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2819760544643591;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4838007125509039;  // std dev = 0.296, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | else return -0.1889862740446382;  // std dev = 0.085, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), phenotype(E, G) )
%   | | then return -0.07675582079284751;  // std dev = 0.632, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, H), phenotype(E, I) )
%   | | | then return 0.10112732687994892;  // std dev = 2.097, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.046800163299784765;  // std dev = 3.598, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.08245685692311722;  // std dev = 0.739, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.0651008791113253;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.021774467804497908;  // std dev = 0.881, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.19925175826609112;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.3699700808583966;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1798343723742954;  // std dev = 0.207, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.305554661187851;  // std dev = 2.071, 39.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | | else return 0.4567007572969714;  // std dev = 2.211, 56.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | | else return -0.15914069823115845;  // std dev = 0.030, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19999574281950816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.1817211582445139;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03647860948151706;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.19321465933415044;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.09281812979415582;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.11788893457769327;  // std dev = 0.209, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.009480823106634624;  // std dev = 0.244, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09178318549212547;  // std dev = 1.798, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return -0.082207638812625;  // std dev = 0.247, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.21550740177184186;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.04242963899497123;  // std dev = 2.109, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return -0.002334708512852977;  // std dev = 3.369, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( enzyme(A, E), phenotype(A, F) )
%   | | | then return -0.15500155436603555;  // std dev = 0.915, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17814959849034165;  // std dev = 0.161, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08928495107617926;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.044027129148108905;  // std dev = 0.249, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | else return 0.008543286526776382;  // std dev = 0.243, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1816271644322557;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.01964420126877625;  // std dev = 3.716, 173.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=42 */
%   | | | else return 0.0619663685385365;  // std dev = 1.367, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.610', 'seconds']
Refined model CLL: -0.201464


******************************************
Best model found
******************************************
Results 

CLL : -0.16767 

AUC ROC : 0.988649 

AUC PR : 0.309737 

Precision : 0.263158 

Recall : 0.754717 

F1 : 0.390244 

Total Learning Time : 5.923 

Total Inference Time : 8.756145477294922 

Total revision time: 24.27749401283264
Best scored revision CLL: -0.194072


Results 

CLL : -0.16767 

AUC ROC : 0.988649 

AUC PR : 0.309737 

Precision : 0.263158 

Recall : 0.754717 

F1 : 0.390244 

Total Learning Time : 34.995680391311645 

Total Inference Time : 8.756145477294922 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.51
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.12808758540625984;  // std dev = 5.668, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20360348055405775;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8245167424616261;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15638745726715259;  // std dev = 0.049, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11279057355552059;  // std dev = 3.597, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.11722843200510792;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5719988521761975;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05869418989223753;  // std dev = 2.109, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.687966031454743;  // std dev = 0.277, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14132954113642748;  // std dev = 0.305, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15539647243993038;  // std dev = 3.582, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3169363320148064;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3462738639656992;  // std dev = 0.949, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.42037926479283466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3856609452793155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3078105030381516;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06840228240233669;  // std dev = 4.166, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5167390372527385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07920146871993947;  // std dev = 3.576, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.03980852057454487;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3479893795463612;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3382424213033779;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.0514002985586083;  // std dev = 4.294, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14493490678992665;  // std dev = 0.756, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0890949417594044;  // std dev = 3.618, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.2501831556106755;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2779443976416169;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3403963855570309;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2639788353397462;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.42437889835674447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06091047121342403;  // std dev = 1.064, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26058333588141386;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.049528932618268656;  // std dev = 4.014, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | | | else return 0.12075491668844998;  // std dev = 3.579, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23927247885345634;  // std dev = 0.090, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.26756380815933795;  // std dev = 0.082, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2323322838533618;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6416941552645399;  // std dev = 0.689, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18607416408424182;  // std dev = 0.596, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20985549667492148;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05530036782111922;  // std dev = 3.360, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18614509118499045;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.180909302842024;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4145912319710982;  // std dev = 1.555, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.13701397018362477;  // std dev = 0.191, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2192033273434198;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04068713553018998;  // std dev = 3.027, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.157974441251151;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1304586331464027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18344824526229983;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06710168734724735;  // std dev = 0.468, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23233804408830316;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01862214034190852;  // std dev = 1.263, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1523252504846781;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02140755463821196;  // std dev = 2.818, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.009152334841653474;  // std dev = 3.078, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13783802351712293;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15659705757537867;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14084674333034042;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13726434284985256;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024451051855241542;  // std dev = 1.419, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13368323617350542;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02392194908963426;  // std dev = 2.784, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.058728096768605825;  // std dev = 2.942, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.627', 'seconds']
Parameter learned model CLL:-0.179216 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.545, 34, 8], 'false,false,true,false': [5.668, 119, 44], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.049, 156, 0], 'false,false,false,true': [3.597, 46, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.109, 28, 8], 'false,true,false,true': [0.277, 0, 48], 'false,true,false,false': [0.305, 106, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.582, 38, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.949, 1, 11], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.797, 2, 3], 'false,true,false': [4.166, 130, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.576, 44, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.012, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.046, 0, 9], 'false,true': [4.294, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.756, 1, 1], 'false,false,false,true': [3.618, 42, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.006, 0, 7], 'true,true,false': [0.06, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.064, 21, 3], 'false,false,true': [0.028, 0, 6], 'false,false,false,true': [4.014, 127, 49], 'false,false,false,false': [3.579, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.09, 0, 12], 'true,true,true,false': [0.082, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.689, 0, 36], 'true,false': [0.596, 104, 0], 'false,true': [0.014, 0, 5], 'false,false,true': [3.36, 84, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.003, 0, 6], 'true,false': [0.022, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.555, 2, 56], 'false,true,false': [0.191, 143, 0], 'false,false,true,true': [0.071, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.027, 41, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.023, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.053, 0, 4], 'false,true,true': [0.468, 11, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.263, 46, 14], 'false,false,true': [0.011, 0, 5], 'false,false,false,true': [2.818, 86, 36], 'false,false,false,false': [3.078, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.004, 0, 5], 'true,true,true,false': [0.054, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.025, 0, 4], 'false,true': [1.419, 62, 17], 'false,false,true': [0.01, 0, 5], 'false,false,false,true': [2.784, 82, 36], 'false,false,false,false': [2.942, 35, 20]}]
{'': [0.06222222222222188, 0.20588438523514116], 'false': [-1.4802973661668753e-16, 0.19881738929289267], 'false,false': [0.18931588340273733, 0.22592152199762144], 'false,false,false': [0.22611570247933835, 0.22222222222222224], 'false,false,true': [0.15419501133786864, 0.19707177537732024], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933984548e-05, 0.19480325728749226], 'false': [7.401486830834377e-17, 0.1908657861867815], 'false,false': [0.18684549473563852, 0.2023750679288417], 'false,false,false': [0.20218647069222417, 0.20408163265306126], 'false,false,true': [0.01858415345443671, 1.5170476753014807e-05], 'true': [0.0, 9.126913474255538e-05], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001180852704850212, 0.16393205593235424], 'false': [0.14442684152956495, 0.22185323544430627], 'false,false': [0.220113833188693, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.2211974421197256], 'false,true': [0.12360747864937996, 0.1486462098728214], 'false,true,false': [0.0015984229560769652, 0.0008761269507860412], 'true': [6.936680898717018e-05, 0.0001340268823311619]}
{'': [0.060994929662752446, 0.12680543863544147], 'false': [0.09768450556763988, 0.2027829840464821], 'false,false': [0.002461422635448657, 0.20422871093775638], 'false,false,false': [0.2062099052144395, 0.18750000000000003], 'false,true': [0.10668829783980625, 0.09535478382767977], 'false,true,true': [0.0, 0.12701584218157666], 'true': [0.07511434509854163, 0.00012397957419552075], 'false,false,true': [0.0, 0.0]}
{'': [0.00018223922286770517, 0.12409084187932742], 'false': [0.09263936272551963, 0.2177800046311854], 'false,false': [0.23853934981255862, 0.21647128535561747], 'false,false,true': [0.0, 0.2855333915640903], 'false,false,false': [0.21454819235861225, 0.25], 'true': [3.106759831310591e-05, 0.00023229374623480304], 'true,true': [3.106759831310591e-05, nan]}
{'': [0.0022964380167754977, 0.11829337924021449], 'false': [0.0471824513399523, 0.12388470105410035], 'false,false': [0.00013517335001503317, 0.12614522276911427], 'false,false,false': [0.09155904461121923, 0.23295574273589026], 'true': [0.0012320053454240839, 0.006048514294976086], 'true,false': [1.9389019055293666e-05, 0.0], 'true,true': [4.862887528449862e-06, 0.0008975268683679566], 'true,false,true': [0.0, 0.0]}
{'': [0.1277493778276952, 0.09124349121760553], 'true': [0.042696811862427596, 0.0034139784172055663], 'false': [3.9453136921396845e-05, 0.09408816795676675], 'false,false': [0.09408816795676675, nan], 'true,true': [0.0011491784697633361, 0.01723726352793995], 'true,true,false': [0.0, 0.013186964464114393], 'true,true,true': [0.0006694414000600057, 0.0033415443332172334]}
{'': [4.0554180528586314e-05, 0.09192189697983501], 'false': [0.07468255946224113, 0.14647775849670386], 'false,false': [0.002537588188966801, 0.1501854248273195], 'false,false,false': [0.1501854248273195, nan], 'false,true': [0.04171600953443861, 0.0002547950251995491], 'false,true,true': [nan, 0.04171600953443858], 'false,false,true': [0.002537588188966801, nan], 'true': [1.42382289614514e-06, 5.815331465047063e-05]}
{'': [0.0004458602551413528, 0.07301477032230712], 'false': [0.026604971674999964, 0.09027014121886826], 'false,false': [2.38777599068124e-05, 0.09218606607819345], 'false,false,false': [0.06508617362007645, 0.14143519060393242], 'false,true': [0.018232670103201547, 0.027706379066159234], 'false,true,false': [0.0, 0.026598279416668445], 'true': [5.824231047593356e-05, 0.0010013135071695934], 'true,false': [0.0, 0.0006900620855233436]}
{'': [0.0003130660555013186, 0.07285775331932823], 'false': [0.0254707080846822, 0.09269941153267361], 'false,false': [1.919667545006165e-05, 0.09510441105378782], 'false,false,false': [0.0656910642131596, 0.15738309057329594], 'true': [0.0003639740125495533, 0.00015273713162944], 'true,true': [0.0004517259126050194, 0.0], 'true,true,true': [4.019349917983029e-06, 0.0009779651678341512], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.168
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.1399671169176928;  // std dev = 4.718, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return 0.21328912201539885;  // std dev = 4.950, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8147120052190786;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16473431604455774;  // std dev = 0.095, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10494829952241956;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.1824159212522558;  // std dev = 2.686, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5795817495614637;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5534461089913827;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.13836895261626309;  // std dev = 1.177, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.004844720197792812;  // std dev = 1.740, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6779135426095094;  // std dev = 0.262, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14340776859327548;  // std dev = 0.095, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.1847894018792078;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12678395524686656;  // std dev = 3.669, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.8142123670121311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.1816178928143698;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.41450955785075705;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4394905819161481;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5444401816094097;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.024962174444383825;  // std dev = 1.520, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.06422378334776699;  // std dev = 3.871, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5166380992341774;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.045226964739000466;  // std dev = 1.839, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.13765404083781857;  // std dev = 3.239, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3642673470620542;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32427886873932155;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, F), phenotype(F, G) )
%   | | | then return -0.08553369245757726;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.01393406889505974;  // std dev = 1.599, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.02246679768800513;  // std dev = 2.571, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.03941337115605352;  // std dev = 2.991, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3893716878832952;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.006808260181781231;  // std dev = 2.326, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.11386878051332022;  // std dev = 2.940, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2694224697153214;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3583859381477541;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3010547915903054;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.12051365056886781;  // std dev = 0.007, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.10309467508470202;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.008670454693806562;  // std dev = 0.898, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2601089206553395;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.12693286598340056;  // std dev = 3.864, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.037608132883238624;  // std dev = 3.733, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24233966862274242;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.24642095426248756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6391922164207329;  // std dev = 0.728, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19424478814913607;  // std dev = 0.080, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20667861497318912;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5221811225260917;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15303557911813917;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.003364768311359021;  // std dev = 2.010, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.05258820925383879;  // std dev = 2.053, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.183892700982656;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.18828083210887497;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.027036991810701516;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.4229029428533595;  // std dev = 0.097, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13199289963456262;  // std dev = 0.029, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), phenotype(A, I) )
%   | | | then return -0.07168911270042823;  // std dev = 0.791, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06776211948854009;  // std dev = 1.919, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.052351438679009536;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.019573597539999377;  // std dev = 2.124, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then return 0.16443968000404421;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1527418006596294;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16807545074967478;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return -0.0578763125571377;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.19545536593320895;  // std dev = 0.000949, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.023205940711262835;  // std dev = 1.429, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1669667192236653;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.04093841943539074;  // std dev = 2.965, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -0.0025645245215214453;  // std dev = 2.785, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15772589325784325;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1395724235414248;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return -0.2077154330706319;  // std dev = 0.615, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.03899172312526022;  // std dev = 0.493, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.031017064496414566;  // std dev = 0.663, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.017063663641873377;  // std dev = 1.052, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14504440891852305;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.006724382703010627;  // std dev = 2.583, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.046347326253133994;  // std dev = 3.063, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.628', 'seconds']
Refined model CLL: -0.170683


******************************************
Best model found
******************************************
Results 

CLL : -0.185681 

AUC ROC : 0.982841 

AUC PR : 0.207151 

Precision : 0.14094 

Recall : 0.833935 

F1 : 0.241127 

Total Learning Time : 3.168 

Total Inference Time : 2.9235596656799316 

Total revision time: 10.484679010391236
Best scored revision CLL: -0.170683


Results 

CLL : -0.185681 

AUC ROC : 0.982841 

AUC PR : 0.207151 

Precision : 0.14094 

Recall : 0.833935 

F1 : 0.241127 

Total Learning Time : 21.20286538887024 

Total Inference Time : 2.9235596656799316 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.1407576307516857;  // std dev = 5.289, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.49725118998873225;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8054622386185444;  // std dev = 1.385, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15705401295377852;  // std dev = 0.049, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( location(A, I) )
%   | | | then return 0.22508658168029302;  // std dev = 2.577, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.3444674378357556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08318507898853895;  // std dev = 2.723, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.671684744235268;  // std dev = 0.994, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14257528637796738;  // std dev = 0.249, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6704963476941265;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05994888700763191;  // std dev = 2.512, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.036079124005315426;  // std dev = 1.521, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3550135841583098;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5893828730604451;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5964269659374176;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03872134658300607;  // std dev = 4.344, 202.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.443764815120385;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.01937959410636969;  // std dev = 0.814, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.051649522111935256;  // std dev = 2.812, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.28773136457031434;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33447760361752854;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.057218798328393314;  // std dev = 1.519, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04147904383283681;  // std dev = 4.496, 214.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.33857268825049114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46444428824513523;  // std dev = 0.178, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.02890160101428401;  // std dev = 2.649, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.03830809217316216;  // std dev = 1.481, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2737433106954383;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4260938433412159;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2673256066666462;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15551185665937936;  // std dev = 1.043, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05799409422234035;  // std dev = 1.209, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.06161860123605529;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07796540246515028;  // std dev = 3.942, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
%   | | | else return 0.16005449505922206;  // std dev = 2.811, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.254822629808542;  // std dev = 0.186, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3351863181793177;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.31432625669209313;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5880510837474144;  // std dev = 0.740, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18606746513409342;  // std dev = 0.828, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.33349891153794503;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06757818241068875;  // std dev = 3.325, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.174935257261417;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2547739692270369;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4346318615924063;  // std dev = 1.296, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1376031429121552;  // std dev = 0.228, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.26969215333409413;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.00664508798598013;  // std dev = 2.458, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15353751504716673;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20020790585100523;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2241055213335792;  // std dev = 0.160, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09769531398020148;  // std dev = 0.281, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08118078631450931;  // std dev = 0.970, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.01634655714040847;  // std dev = 1.418, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2174353367205274;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03957274320612135;  // std dev = 2.687, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.05242288873548671;  // std dev = 2.349, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13244416819768678;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1434958187893166;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.16270618679005455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16579144351134933;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2061204710135658;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.006412409048792277;  // std dev = 1.643, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06729247821785167;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01747934483421002;  // std dev = 2.822, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.012581694236824236;  // std dev = 2.429, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.785', 'seconds']
Parameter learned model CLL:-0.179914 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.289, 99, 39], 'false,false,false,true': [2.372, 15, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [1.247, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.385, 2, 52], 'false,false,true,false': [0.049, 133, 0], 'false,false,false,true': [2.577, 17, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.723, 40, 14], 'false,true,false,true': [0.994, 1, 42], 'false,true,false,false': [0.249, 93, 0], 'false,false,true,true': [0.15, 0, 3], 'false,false,true,false': [2.512, 24, 9], 'false,false,false,true': [1.521, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.968, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.177, 0, 6], 'false,true,false': [4.344, 153, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.814, 1, 1], 'false,false,false,true': [2.812, 30, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.519, 4, 6], 'false,true': [4.496, 158, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.178, 0, 2], 'false,false,false,true': [2.649, 36, 9], 'false,false,false,false': [1.481, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.078, 0, 9], 'true,true,false': [0.008, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [1.043, 2, 2], 'false,true': [1.209, 27, 5], 'false,false,true': [1.195, 2, 5], 'false,false,false,true': [3.942, 100, 46], 'false,false,false,false': [2.811, 22, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.186, 0, 13], 'true,true,true,false': [0.223, 0, 3], 'true,true,false,true': [0.047, 0, 3], 'true,true,false,false': [0.74, 0, 33], 'true,false': [0.828, 100, 0], 'false,true': [7.45e-09, 0, 3], 'false,false,true': [3.325, 66, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.047, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.296, 1, 56], 'false,true,false': [0.228, 151, 0], 'false,false,true,true': [0.2, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.458, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.046, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.16, 0, 5], 'false,true,true': [0.281, 25, 1], 'false,true,false,true': [0.97, 1, 6], 'false,true,false,false': [1.418, 54, 17], 'false,false,true': [5.27e-09, 0, 3], 'false,false,false,true': [2.687, 65, 31], 'false,false,false,false': [2.349, 25, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.039, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.006, 0, 2], 'true,false': [0.135, 0, 3], 'false,true': [1.643, 61, 24], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [2.822, 69, 31], 'false,false,false,false': [2.429, 28, 12]}]
{'': [-2.3684757858670006e-16, 0.20731165903968354], 'false': [-2.5376526277146434e-16, 0.1981711181530117], 'false,false': [0.1930254286507925, 0.22222222222222174], 'false,false,false': [0.23437500000000003, 0.1874999999999999], 'false,false,true': [0.16769685568395537, 0.20274102079395132], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [1.7763568394002506e-16, 0.21095227590523574], 'false': [0.17283950617283964, 0.20734740535603238], 'false,false': [0.2005428500679931, 0.23892301931323953], 'false,false,false': [0.23718168715261487, 0.25], 'false,false,true': [0.03551871406303591, 1.771446048959291e-05], 'false,true': [0.17283950617283964, nan], 'true': [1.1102230246251565e-16, 6.344131569286608e-17]}
{'': [-2.3684757858670006e-16, 0.15788253568856722], 'false': [0.14736069824495496, 0.19850567752994505], 'false,false': [0.2044117154488274, 0.17804548844449697], 'false,false,true': [0.007476640956983527, 0.1912508872264345], 'false,false,false': [0.17804548844449697, nan], 'false,true': [0.1373015625215894, 0.15106935574228747], 'false,true,false': [0.022965797668683497, 0.0006689001125292533], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [0.05859375000000014, 0.11904042634850046], 'false': [0.10046517512307723, 0.20132605628874065], 'false,false': [0.21069189084732065, 0.19802575681279136], 'false,false,true': [0.0, 0.33133237378708397], 'false,false,false': [0.1928981192099207, 0.24999999999999997], 'false,true': [0.0044699171537079885, 0.09341184426702663], 'true': [0.05859375000000014, nan], 'false,true,true': [0.0, 0.005207814882498478]}
{'': [0.15964828287239663, 0.10990225986982603], 'true': [-2.4671622769447922e-17, 0.23065623000089946], 'false': [0.09447411421702982, 0.16400673304906913], 'false,false': [0.014083253053521464, 0.1623385331163789], 'false,false,false': [0.155933781000281, 0.1827901881372588], 'false,false,true': [0.0, 0.015843659685211703], 'true,true': [-2.4671622769447922e-17, nan]}
{'': [0.10301068464595262, 0.12290015895723491], 'false': [0.045701111134631434, 0.13266982884360853], 'false,false': [0.20408163265306123, 0.12988389765808978], 'false,false,false': [0.10645555844373741, 0.21949312346604344], 'true': [0.005417883156912273, 0.24601871777106407], 'true,false': [0.0, 0.2717650931354325], 'true,true': [0.0006769282166720655, 1.6096143447524858e-05], 'true,false,true': [0.0, nan]}
{'': [0.11466426869709197, 0.11262621852932994], 'true': [0.03503901716288041, 0.006853532321379978], 'false': [1.850371707708594e-17, 0.11398808861309731], 'false,false': [0.11398808861309731, nan], 'true,true': [0.006237546153111562, 0.020999197138908077], 'true,true,false': [0.0007351813876763647, 0.016597606976814182], 'true,true,true': [0.002657583491203921, 0.01650333073109363]}
{'': [0.0017334742631685588, 0.08455000351696905], 'false': [0.07347098532134519, 0.1335659980349515], 'false,false': [0.0133106937437767, 0.13734860043891958], 'false,false,false': [0.13734860043891958, nan], 'false,true': [0.0294763639968693, 0.000343537437030352], 'false,true,true': [nan, 0.029476363996869332], 'false,false,true': [0.0133106937437767, nan], 'true': [-6.938893903907228e-18, 0.00031500374501421325]}
{'': [0.0028087429421351368, 0.06846927328013092], 'false': [0.031235314497475266, 0.09436561547216861], 'false,false': [9.25185853854297e-18, 0.0958240995867381], 'false,false,false': [0.07520980128652581, 0.14919065766277617], 'false,true': [0.0030286292348622266, 0.038607985874161206], 'false,true,false': [0.1344753816129107, 0.028302667223767584], 'true': [0.00021517169979526907, 0.004360379431536489], 'true,false': [0.0, 0.005137272646884972]}
{'': [0.002019710878954844, 0.075810569434543], 'false': [0.03175851775749705, 0.10166241256489493], 'false,false': [0.1875, 0.09901682748876407], 'false,false,false': [0.0796311801766342, 0.14746381221096444], 'true': [0.00029826497044750124, 0.006097235398137585], 'true,true': [0.00017426836773084541, 1.4261321618765551e-05], 'true,true,true': [3.469446951953614e-18, 0.000773630654014635], 'true,true,false': [0.0, 1.8219046082720847e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 4.148
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, I), interaction(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.14193271888329614;  // std dev = 3.878, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1517997287503054;  // std dev = 5.112, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7647621558065109;  // std dev = 1.934, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15797379074900442;  // std dev = 0.154, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.04917397935349867;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.17198099689735832;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.037616129183732215;  // std dev = 1.511, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.1983048582071906;  // std dev = 2.021, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6525381158848613;  // std dev = 1.390, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14037716933341754;  // std dev = 0.005, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.022358442473702514;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.14733417847851796;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.08418025082497664;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.41751358415830986;  // std dev = 1.18e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6055385280950148;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.11136623908285788;  // std dev = 0.058, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.10075492242845084;  // std dev = 4.066, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1871331575500888;  // std dev = 2.101, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0635017145485208;  // std dev = 1.938, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32920990561856717;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18878077946382923;  // std dev = 0.355, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4964121745097114;  // std dev = 0.969, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.15423606795093045;  // std dev = 0.354, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.06229202963453989;  // std dev = 1.191, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return 0.04932804370950973;  // std dev = 3.179, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.35970784911981263;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.15255882245859426;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.013869010537022391;  // std dev = 2.497, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2641754754793825;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.35747090837730355;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.24783169962837936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2999214728115839;  // std dev = 0.074, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.09242864212402284;  // std dev = 0.005, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.34024213301831974;  // std dev = 3.081, 91.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=67 */
%   | | | else return -0.1537118150380497;  // std dev = 0.410, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.14039578257965016;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1508029547146976;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.24543103102134425;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09718006701890565;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.489836342630595;  // std dev = 0.183, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.14094675686168204;  // std dev = 0.065, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.00849662332149348;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return -0.0676439626166133;  // std dev = 0.549, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.042179004671453045;  // std dev = 2.443, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1566785367235575;  // std dev = 0.633, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18558646713968704;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1896906874595572;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.08128949606346497;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21782529683865276;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.29910021005721343;  // std dev = 0.238, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13545396535517945;  // std dev = 0.050, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.016165725364363125;  // std dev = 1.030, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.12947427063171713;  // std dev = 1.060, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.0451130456069859;  // std dev = 1.356, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.048921321931861474;  // std dev = 1.467, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16704331770553255;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.19150054658248541;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return -0.039690372715166504;  // std dev = 0.886, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.0529702257893087;  // std dev = 0.415, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.013834742407014747;  // std dev = 0.505, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.02357098353151071;  // std dev = 0.867, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.184093804932571;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return -0.04429222929718053;  // std dev = 1.436, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.017767353897642113;  // std dev = 3.089, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15209674454349809;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.15491154267428422;  // std dev = 0.958, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.06182556232404388;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.031090123336090125;  // std dev = 1.477, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | | else return 0.017133115009046435;  // std dev = 2.241, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5783605846276939;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1980078057560184;  // std dev = 0.148, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.08420878461653301;  // std dev = 1.268, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2519601424384659;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.076', 'seconds']
Refined model CLL: -0.161207


******************************************
Best model found
******************************************
Results 

CLL : -0.176173 

AUC ROC : 0.988602 

AUC PR : 0.267369 

Precision : 0.171628 

Recall : 0.957597 

F1 : 0.291085 

Total Learning Time : 4.148 

Total Inference Time : 4.045616149902344 

Total revision time: 12.951858932495117
Best scored revision CLL: -0.161207


Results 

CLL : -0.176173 

AUC ROC : 0.988602 

AUC PR : 0.267369 

Precision : 0.171628 

Recall : 0.957597 

F1 : 0.291085 

Total Learning Time : 23.67004531097412 

Total Inference Time : 4.045616149902344 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.244
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.1884241644573093;  // std dev = 4.910, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6888130657262268;  // std dev = 3.193, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16349072681577762;  // std dev = 0.037, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12543301544918353;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44944856678266504;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0915587473952979;  // std dev = 4.336, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6850721184965414;  // std dev = 0.995, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14491338331842676;  // std dev = 4.21e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3221092599134894;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12580450178379995;  // std dev = 1.307, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44895376105076473;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4364382419490418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6412285569450206;  // std dev = 0.809, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.03868795565742225;  // std dev = 5.031, 228.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5241245411001871;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09546324966046557;  // std dev = 1.662, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3366382735199237;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35009734030887296;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07978526649113055;  // std dev = 5.236, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39471118830813035;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03842669873884253;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.030763053159128143;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26161119465835064;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.37502842531708475;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3052835884597672;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.03008191892522229;  // std dev = 2.216, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2897219101548125;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0553138123315823;  // std dev = 4.700, 190.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=55 */
%   | | | else return 0.026858714893255926;  // std dev = 1.914, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23854558506451706;  // std dev = 0.194, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2446142313416616;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5547581287857576;  // std dev = 1.006, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18842603798546803;  // std dev = 0.628, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23393733497766134;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08254913330380971;  // std dev = 3.895, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18052128545078572;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18027343275396773;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3737197043921791;  // std dev = 2.813, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.1536471753451556;  // std dev = 0.291, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20227102582232914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02855205901485065;  // std dev = 1.456, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16813060819523198;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15901278407709607;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.024169807897785656;  // std dev = 1.346, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3230081306192467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.001517647562659935;  // std dev = 1.750, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.08368395529160491;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03600436444711814;  // std dev = 3.357, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.010359227738612782;  // std dev = 1.467, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1324820200696055;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2417555675174896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13892768546080614;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.007738972221464553;  // std dev = 2.284, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17997776080630468;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03530270178232896;  // std dev = 3.392, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return 0.011263628700596473;  // std dev = 1.460, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.872', 'seconds']
Parameter learned model CLL:-0.198066 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.867, 84, 33], 'false,false,true,false': [4.91, 73, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.052, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [3.193, 12, 69], 'false,false,true,false': [0.037, 128, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.95, 1, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.336, 88, 34], 'false,true,false,true': [0.995, 1, 37], 'false,true,false,false': [4.21e-08, 74, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.307, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.072, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.809, 1, 14], 'false,true,false': [5.031, 171, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.662, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.063, 0, 4], 'false,true': [5.236, 156, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.031, 0, 7], 'true,true,false': [0.171, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.216, 48, 12], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [4.7, 135, 55], 'false,false,false,false': [1.914, 17, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.194, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.006, 1, 33], 'true,false': [0.628, 85, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [3.895, 76, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.044, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.813, 11, 71], 'false,true,false': [0.291, 153, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.456, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.114, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.032, 0, 3], 'false,true,true': [1.346, 35, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.75, 44, 17], 'false,false,true': [0.872, 1, 3], 'false,false,false,true': [3.357, 85, 40], 'false,false,false,false': [1.467, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.013, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.028, 0, 3], 'false,true': [2.284, 80, 29], 'false,false,true': [0.017, 0, 3], 'false,false,false,true': [3.392, 77, 40], 'false,false,false,false': [1.46, 12, 4]}]
{'': [0.07638888888888877, 0.2144584789035207], 'false': [0.18750000000000006, 0.2116493055555569], 'false,false': [0.2120957005247085, 0.20408163265306106], 'false,false,true': [0.20249835634451155, 0.22119350223045317], 'false,false,false': [0.20408163265306126, 0.20408163265306126], 'false,true': [0.0, 1.4802973661668753e-16], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321764653, 0.22018576530513298], 'false': [0.17133276299164216, 0.22024583245249144], 'false,false': [0.22122102518368433, 0.20408163265306115], 'false,false,true': [0.12589814596294344, 1.065843553651677e-05], 'false,false,false': [0.20408163265306115, nan], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0005437492714932546], 'false,true,false': [0.0, 0.0]}
{'': [0.07901579537701912, 0.1622734197686922], 'false': [0.15898084392728662, 0.21648482623585347], 'false,false': [0.24999999999999994, 0.18973209866275587], 'false,false,true': [nan, 0.24999999999999994], 'false,false,false': [0.18973209866275587, nan], 'false,true': [0.15407072912682523, 0.16326747941112033], 'false,true,false': [0.026059242835970615, 2.400482215405744e-17], 'true': [0.10021968818483597, 0.000823233440332638]}
{'': [0.0004895654432383348, 0.13244726719065222], 'false': [0.12786979282934235, 0.2095163731818285], 'false,false': [0.0, 0.21250798135996912], 'false,false,false': [0.21250798135996912, nan], 'false,true': [0.04359811519724642, 0.11100316880156312], 'false,true,true': [nan, 0.043598115197246184], 'true': [0.0005242821495270444, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0004030481635261288, 0.12486195563532293], 'false': [0.12075456470304176, 0.1703109817288267], 'false,false': [0.0, 0.17141187421279108], 'false,false,false': [0.20408163265306123, 0.14876033057851243], 'true': [1.5658500197896735e-06, 0.000990367180179863], 'true,true': [1.5658500197896735e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005202456865799828, 0.11300802840373003], 'false': [0.08185283253410303, 0.12006854640684718], 'false,false': [0.00018630595124323004, 0.12097373575689975], 'false,false,false': [0.11625579195457682, 0.1592257931457804], 'true': [0.005714241739420156, 0.0], 'true,true': [0.00014100909778717665, 0.009714023489356257], 'true,false': [nan, 0.0]}
{'': [0.11787756571797042, 0.12807458717921316], 'false': [0.00014200719422978922, 0.13080541390825803], 'false,false': [0.13080541390825803, nan], 'true': [0.04173847287942568, 0.00463744933194547], 'true,true': [0.0034199758105381613, 0.02977875625664684], 'true,true,false': [nan, 0.029778756256646787], 'true,true,true': [0.0037586253490795142, 0.0]}
{'': [0.00017317521287779132, 0.09958997512782337], 'false': [0.09721848872272737, 0.13434468145773293], 'false,false': [0.0, 0.14141485109062402], 'false,false,false': [0.14141485109062402, nan], 'false,true': [0.09651318214412735, 0.0005518250245540817], 'false,true,true': [nan, 0.09651318214412742], 'true': [-9.25185853854297e-18, 0.00038095196053516414], 'false,false,true': [0.0, nan]}
{'': [0.001291348731251267, 0.07642224853612317], 'false': [0.046296320805800754, 0.09824336468871435], 'false,false': [0.19004467097188224, 0.0952628749112376], 'false,false,false': [0.0901566740676186, 0.1345720255296724], 'false,true': [0.03939899453440669, 0.05108246893988068], 'false,true,false': [0.0, 0.050221225484379295], 'true': [0.0016261766957501068, 0.00033801254714578566], 'true,false': [nan, 0.00033801254714578566]}
{'': [0.0010496322753292895, 0.07771893888264117], 'false': [0.04786438580217655, 0.10080830350555671], 'false,false': [9.677379417429947e-05, 0.10259963892047691], 'false,false,false': [0.09835264368204368, 0.13314743360865092], 'true': [0.0013280693548029382, 0.00026928976998327514], 'true,true': [0.0013280693548029382, nan], 'true,true,true': [2.5205026865599396e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.047
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.15869538318694335;  // std dev = 6.202, 183.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=55 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.005487428536851416;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5141072739982948;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6847476031276424;  // std dev = 3.199, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16621667712048105;  // std dev = 0.138, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.1588156042662504;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03320549123154841;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.43036643674628455;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.11130022992038223;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.09334196445625448;  // std dev = 0.394, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6624606846967351;  // std dev = 1.372, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14516938765140372;  // std dev = 0.075, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.05930248641842283;  // std dev = 0.387, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.17177406380660928;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1618729253126505;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35834954461917107;  // std dev = 0.301, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.44818944364369495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5980767584356781;  // std dev = 0.225, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1773581553200816;  // std dev = 0.316, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16135489049165608;  // std dev = 0.154, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.08520176905221402;  // std dev = 5.148, 197.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=60 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5910822890205025;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15233337743041855;  // std dev = 1.408, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.017089677334987046;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35915594733613393;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08045057610175964;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.1550174944484112;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.13290266485674054;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.04690407565647612;  // std dev = 3.277, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | | else return 0.10874990607761245;  // std dev = 4.088, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4445685384689245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19683872767462884;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.001730145644378428;  // std dev = 1.256, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28844722672782336;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.44798094971759433;  // std dev = 0.289, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.339121956595387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11241741478666738;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.06152821543749364;  // std dev = 1.564, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1907752900305343;  // std dev = 1.761, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.36864270998601284;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.021698484208074152;  // std dev = 2.884, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | else return 0.08754227326670513;  // std dev = 3.943, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26882327088450614;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5643424097725939;  // std dev = 0.474, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.7646874005021723;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.18864571714198902;  // std dev = 0.079, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2894025895073402;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4400578782807891;  // std dev = 0.986, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.1694112881278398;  // std dev = 0.169, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05060714276651773;  // std dev = 1.756, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.017717671442903093;  // std dev = 2.681, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.185010179720979;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2283807463613715;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.4441185622495487;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3807914012883905;  // std dev = 1.978, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return 0.47536196920368445;  // std dev = 0.360, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.15230590064328042;  // std dev = 0.025, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21837612089703362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.18752358856268145;  // std dev = 0.981, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03469001836042258;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19033070733680832;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.015466641907452549;  // std dev = 1.380, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.07522516005022956;  // std dev = 0.672, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.4084961898918791;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02827085075482656;  // std dev = 1.414, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.36702001032741327;  // std dev = 0.558, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.18019913998023296;  // std dev = 0.721, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.0019417402666535644;  // std dev = 1.539, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.053543846840771715;  // std dev = 2.258, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16642964802495325;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.014321175987576443;  // std dev = 0.488, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, A), enzyme(G, I) )
%   | | | then return -0.08800541319054955;  // std dev = 0.902, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.018913797656973708;  // std dev = 1.736, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.08938499358334842;  // std dev = 1.341, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.022280542337854477;  // std dev = 0.607, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.18261049236934382;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.04909685778543682;  // std dev = 1.621, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.022541095361661188;  // std dev = 2.624, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.763', 'seconds']
Refined model CLL: -0.182578


******************************************
Best model found
******************************************
Results 

CLL : -0.180333 

AUC ROC : 0.991586 

AUC PR : 0.35427 

Precision : 0.203931 

Recall : 0.882979 

F1 : 0.331337 

Total Learning Time : 5.047 

Total Inference Time : 21.37467122077942 

Total revision time: 34.951762071609494
Best scored revision CLL: -0.182578


Results 

CLL : -0.180333 

AUC ROC : 0.991586 

AUC PR : 0.35427 

Precision : 0.203931 

Recall : 0.882979 

F1 : 0.331337 

Total Learning Time : 34.963841548919675 

Total Inference Time : 21.37467122077942 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.196
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11434728220694913;  // std dev = 4.802, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.1795775065280829;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5689963731999117;  // std dev = 1.292, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6177817349725823;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6559364684194946;  // std dev = 3.722, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.16102722041048653;  // std dev = 0.058, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07755993023815963;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.503839199131283;  // std dev = 0.919, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5987406711391664;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06880173467279053;  // std dev = 4.418, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5468744582123238;  // std dev = 2.865, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.1441242160898071;  // std dev = 9.54e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8316861098571404;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14407190550614304;  // std dev = 1.546, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3924446625473087;  // std dev = 0.999, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.5089195934479516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31543114689912727;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4717196294579186;  // std dev = 2.072, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.027075082971369194;  // std dev = 5.292, 257.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5448782536664576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05255064039764999;  // std dev = 1.680, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3376227278140466;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3758852060691026;  // std dev = 0.086, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.09160550814677472;  // std dev = 5.778, 253.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40977857040992915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06026326090604638;  // std dev = 1.660, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26743617119386465;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.334836544978796;  // std dev = 0.862, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31547204750541513;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.03172878891105665;  // std dev = 2.781, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.29848286416614933;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07367933293608041;  // std dev = 4.648, 166.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
%   | | | else return 0.09986076587137586;  // std dev = 2.160, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28525669034712675;  // std dev = 0.338, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2515935268437667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21539637606582762;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5358142483775812;  // std dev = 1.209, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18413341223442736;  // std dev = 0.527, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25488315360875563;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04867758763608486;  // std dev = 4.533, 160.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return -0.0439670317923362;  // std dev = 1.219, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.02849516919992993;  // std dev = 1.285, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36803569820494586;  // std dev = 3.389, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.15473393351274173;  // std dev = 0.341, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20722653033671834;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.059030475794592634;  // std dev = 1.375, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19603340706674569;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.12551179616886565;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21191622560815498;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.00436967337265027;  // std dev = 1.697, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09531539160117455;  // std dev = 1.147, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.055516088855022766;  // std dev = 1.478, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20489449488505412;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03059412604988341;  // std dev = 3.956, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.014798962348356043;  // std dev = 1.408, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1523498883839746;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2113717217889551;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1811507844608844;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.008993184989134166;  // std dev = 2.415, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.00786933958130274;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05302732687954158;  // std dev = 3.718, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return 0.054770438288772705;  // std dev = 1.377, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.890', 'seconds']
Parameter learned model CLL:-0.204099 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.802, 90, 31], 'false,false,true,false': [5.526, 95, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.292, 2, 10], 'false,true,true': [0.897, 1, 7], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.722, 17, 76], 'false,false,true,false': [0.058, 173, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.919, 1, 11], 'true,false': [0.036, 0, 6], 'false,true,true': [4.418, 104, 34], 'false,true,false,true': [2.865, 10, 48], 'false,true,false,false': [9.54e-08, 93, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.546, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.999, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.777, 1, 3], 'false,true,true,false': [2.072, 7, 21], 'false,true,false': [5.292, 199, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.68, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.086, 0, 10], 'false,true': [5.778, 171, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.66, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.004, 0, 9], 'true,true,false': [0.862, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.781, 51, 19], 'false,false,true': [0.067, 0, 8], 'false,false,false,true': [4.648, 115, 51], 'false,false,false,false': [2.16, 20, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.338, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.209, 2, 33], 'true,false': [0.527, 93, 0], 'false,true': [0.022, 0, 5], 'false,false,true': [4.533, 113, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.219, 2, 7], 'true,false': [1.285, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.389, 15, 82], 'false,true,false': [0.341, 176, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.375, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.113, 0, 9], 'true,false,true': [0.838, 1, 2], 'true,false,false': [0.115, 0, 5], 'false,true,true': [1.697, 32, 13], 'false,true,false,true': [1.147, 2, 8], 'false,true,false,false': [1.478, 55, 11], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [3.956, 108, 47], 'false,false,false,false': [1.408, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.096, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.092, 0, 3], 'false,true': [2.415, 80, 32], 'false,false,true': [0.908, 1, 5], 'false,false,false,true': [3.718, 94, 47], 'false,false,false,false': [1.377, 8, 4]}]
{'': [0.05246913580246885, 0.2124950406665349], 'false': [0.10937499999999978, 0.20583910943079292], 'false,false': [0.20639743984967954, 0.1955555555555554], 'false,false,true': [0.19056075404685593, 0.21811224489796036], 'false,false,false': [0.1955555555555554, nan], 'false,true': [0.22222222222222224, 0.0], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0931536478871315, 0.2061923298484668], 'false': [0.16909390627517126, 0.20253406427864806], 'false,false': [0.2038456949722864, 0.17993079584775096], 'false,false,true': [0.14892647369567596, 1.9273866294684154e-05], 'false,false,false': [0.17993079584775096, nan], 'false,true': [0.10056866203258885, 0.0], 'true': [6.344131569286608e-17, 0.13915099293251687], 'false,true,false': [0.0, nan]}
{'': [0.048996320399012326, 0.15872482539673052], 'false': [0.15564976018795304, 0.21737466281391407], 'false,false': [0.21737466281391407, nan], 'false,false,true': [0.0, 0.19911896466184884], 'false,true': [0.14143866650168788, 0.1673217123240728], 'false,true,false': [0.14153684986493056, 9.789063227877724e-17], 'true': [0.07038374536939251, 0.00021727753207663922]}
{'': [0.05618469690128844, 0.1345836501358879], 'false': [0.1319381150652329, 0.17950651426748243], 'false,false': [0.0, 0.1764676432452612], 'false,false,false': [0.1764676432452612, nan], 'false,true': [0.15565214056701915, 0.1089751841706894], 'false,true,true': [0.15091588737559025, 0.15327548694322865], 'true': [0.05873598965371295, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0007899355762616069, 0.1348025950369628], 'false': [0.1319724677054568, 0.17946914544328735], 'false,false': [0.0, 0.18379869566590684], 'false,false,false': [0.18379869566590684, nan], 'true': [3.172065784643304e-17, 0.0007400598504959], 'true,true': [3.172065784643304e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04473707415434195, 0.12611897785999432], 'false': [0.11045399175579991, 0.13073214536877995], 'false,false': [0.0005627749358719236, 0.13413337900389186], 'false,false,false': [0.13016219813524305, 0.1555266975308035], 'true': [0.047512903865614436, 0.0], 'true,true': [1.997356488314672e-06, 0.10604302424931268], 'true,false': [nan, 0.0]}
{'': [0.10994684586528225, 0.1257890588496733], 'false': [9.713829556083909e-05, 0.12842842423250117], 'false,false': [0.12842842423250117, nan], 'true': [0.045220081354551925, 0.0029845389986110555], 'true,true': [0.007216772454454859, 0.045904435764072105], 'true,true,false': [0.0, 0.0417337638264341], 'true,true,true': [0.0076270650820192765, 0.0]}
{'': [0.15067748214399995, 0.1066974282108144], 'true': [0.16502513436638067, 0.13766641273179572], 'false': [0.10509384747780136, 0.13654969034704764], 'false,false': [0.0, 0.14548479335416073], 'false,false,false': [0.14548479335416073, nan], 'false,true': [0.11839755382311122, 0.0006593302566622554], 'false,true,true': [nan, 0.11839755382311093], 'false,false,true': [0.0, nan]}
{'': [0.05847802758451878, 0.08322208790853247], 'false': [0.05457988971396968, 0.10163911466453418], 'false,false': [7.1297853574942e-05, 0.10374444903336998], 'false,false,false': [0.10097254831889313, 0.13215994946275514], 'true': [0.0014144172315135933, 0.11619246220275749], 'true,false': [0.23430252828332399, 0.002629796349285013], 'false,true': [0.06398039922428204, 0.048649447123414256], 'false,true,false': [0.13147773308907273, 0.03310626794445454]}
{'': [0.0018089478584865301, 0.08349262587019929], 'false': [0.0520692635858344, 0.10411719771181487], 'false,false': [0.13726876170205082, 0.10273971713275529], 'false,false,false': [0.09804269001669941, 0.1579269856178415], 'true': [0.0015682483302634008, 0.002850001720980322], 'true,true': [0.0015682483302634008, nan], 'true,true,true': [-3.96508223080413e-18, 0.0015220992492068115]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.905
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.06941654073331519;  // std dev = 3.440, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.113962888587884;  // std dev = 4.046, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.17432540568774688;  // std dev = 5.423, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6322815364696571;  // std dev = 3.974, 96.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   | | | else return -0.15691113436234094;  // std dev = 0.125, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3402131717220813;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05450070099477341;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.37039551643685836;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06968599507377966;  // std dev = 4.298, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5417626635939062;  // std dev = 2.970, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   | | | else return -0.13935695059394645;  // std dev = 0.077, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.4615602329843593;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21681870525809435;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.2028033198618891;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.148925540364644;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3586900547465451;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3136547869903563;  // std dev = 3.933, 88.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=51 */
%   | | | else return -0.14211436688201748;  // std dev = 0.377, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.44898384301076755;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.030891448905575897;  // std dev = 3.768, 115.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=28 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5013897332790788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.4531053452775675;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.005828701533554106;  // std dev = 1.156, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2086597113152408;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3323649248997317;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.37033184093015653;  // std dev = 2.196, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.06840559469710067;  // std dev = 2.048, 88.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.11470751510110927;  // std dev = 4.185, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | | else return 0.028156576107181103;  // std dev = 1.830, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3785209486718355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.03370557057796251;  // std dev = 1.150, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.15215249923300975;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28348305085366304;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3502722491126222;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2943496040807828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13507535484723837;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.0413847635191429;  // std dev = 1.844, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.1334427535778786;  // std dev = 1.873, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2628308879852951;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.056061755342436834;  // std dev = 1.566, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.08174314893113849;  // std dev = 4.715, 172.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24770932517459965;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.017575198154774263;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5520737723125935;  // std dev = 0.885, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.15093406900239473;  // std dev = 0.065, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.04644637096383136;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4916580585448216;  // std dev = 1.320, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.16946194978639698;  // std dev = 0.558, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return -0.031124399138518572;  // std dev = 1.683, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.05064596403585124;  // std dev = 2.184, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.19640133342602262;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.04035306843315376;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.23270920087898023;  // std dev = 2.091, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.38720461688041286;  // std dev = 2.114, 55.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=49 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.10926909423009191;  // std dev = 0.197, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.14371410252009795;  // std dev = 0.699, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.19522489503667673;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.08854135490716279;  // std dev = 1.062, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.008573591985073589;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.16921951546969857;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15988714427422884;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.1218410664491757;  // std dev = 0.909, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16406515812198316;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then return -0.006338862406587454;  // std dev = 0.233, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | else return 0.11422090838151842;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.03380737927916533;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.04808244171776616;  // std dev = 1.996, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return -0.011368842800202847;  // std dev = 3.173, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.14334027907050317;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13223058050114855;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.17732827146870242;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14606338666306187;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.049240442850590586;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, G), complex(A, H) )
%   | then return -0.022550786941391333;  // std dev = 0.225, 122.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.40950284029940337;  // std dev = 0.319, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1598379441497295;  // std dev = 0.682, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.01218154549017485;  // std dev = 0.240, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.251', 'seconds']
Refined model CLL: -0.180308


******************************************
Best model found
******************************************
Results 

CLL : -0.163802 

AUC ROC : 0.990941 

AUC PR : 0.372566 

Precision : 0.29564 

Recall : 0.818868 

F1 : 0.434434 

Total Learning Time : 7.905 

Total Inference Time : 24.573506116867065 

Total revision time: 41.8751436958313
Best scored revision CLL: -0.180308


Results 

CLL : -0.163802 

AUC ROC : 0.990941 

AUC PR : 0.372566 

Precision : 0.29564 

Recall : 0.818868 

F1 : 0.434434 

Total Learning Time : 41.88722317314148 

Total Inference Time : 24.573506116867065 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.541
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.12162198899172696;  // std dev = 5.693, 167.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1504566274072046;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8429631419112581;  // std dev = 0.005, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1569068931281469;  // std dev = 0.009, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14865539205419226;  // std dev = 3.518, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.1245436120889797;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05514751561070418;  // std dev = 2.078, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.685654304921855;  // std dev = 0.272, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1376098935649383;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.05536643674628447;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.17702735437812175;  // std dev = 3.530, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11802093212055227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38620879930709395;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5877915154622666;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0548999632892722;  // std dev = 4.197, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5416560238925399;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5113356318592568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.16267794730827526;  // std dev = 3.358, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.4604646103864969;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2207118471601497;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05542519143601751;  // std dev = 4.207, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4074191508109307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38556690040971675;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04812903008483553;  // std dev = 3.670, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.23350849135792706;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26351494553810045;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34231520833326046;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.31387522626152653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.29910734243637604;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05201496359527051;  // std dev = 0.924, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2746385494962485;  // std dev = 1.29e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.08108100977964568;  // std dev = 3.867, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | | | else return 0.036664780429062606;  // std dev = 3.756, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23332393379365543;  // std dev = 0.108, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24543508557714355;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22341887061016696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5881632318049261;  // std dev = 1.375, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.20142994570059358;  // std dev = 0.537, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22341887061016696;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07367845789028207;  // std dev = 3.277, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17740898186695928;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18540587554857996;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40555076492011327;  // std dev = 1.444, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1478049039482005;  // std dev = 0.421, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20286035606638497;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.026029392711409808;  // std dev = 3.128, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15743426244729117;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13168972190797346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16939006743175147;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07810708547492988;  // std dev = 0.406, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19229671871610732;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01460601279574;  // std dev = 1.261, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16047777227414295;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022435172313908357;  // std dev = 2.695, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.020079860199743747;  // std dev = 3.116, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12978882900119176;  // std dev = 3.49e-05, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1509569659844923;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14149886105675114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1397766630379954;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024758807815545823;  // std dev = 1.557, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.026650450007008646;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0234509603731464;  // std dev = 2.731, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.023600578882606853;  // std dev = 3.116, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.510', 'seconds']
Parameter learned model CLL:-0.177884 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.449, 24, 8], 'false,false,true,false': [5.693, 123, 44], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.005, 0, 52], 'false,false,true,false': [0.009, 141, 0], 'false,false,false,true': [3.518, 40, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.078, 27, 8], 'false,true,false,true': [0.272, 0, 48], 'false,true,false,false': [0.0, 99, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [3.53, 35, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.124, 0, 3], 'false,true,false': [4.197, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.358, 30, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.949, 1, 9], 'false,true': [4.207, 141, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.67, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.025, 0, 7], 'true,true,false': [0.063, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.924, 16, 3], 'false,false,true': [1.29e-08, 0, 6], 'false,false,false,true': [3.867, 101, 49], 'false,false,false,false': [3.756, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.108, 0, 12], 'true,true,true,false': [0.007, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.375, 2, 36], 'true,false': [0.537, 86, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.277, 69, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 6], 'true,false': [0.013, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.444, 2, 56], 'false,true,false': [0.421, 146, 0], 'false,false,true,true': [0.006, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.128, 46, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.032, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.011, 0, 4], 'false,true,true': [0.406, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.261, 45, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.695, 83, 36], 'false,false,false,false': [3.116, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [3.49e-05, 0, 5], 'true,true,true,false': [0.006, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [1.557, 55, 17], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.731, 76, 36], 'false,false,false,false': [3.116, 43, 20]}]
{'': [-2.5376526277146434e-16, 0.20453070934256123], 'false': [-1.4802973661668753e-16, 0.19741082028379353], 'false,false': [0.1930254286507925, 0.2094007574069944], 'false,false,false': [0.20686390532544327, 0.25], 'false,false,true': [0.18750000000000014, 0.1940550037649261], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.20432048209433834], 'false': [7.401486830834377e-17, 0.20093041116899663], 'false,false': [0.1967868543213696, 0.21239053301694993], 'false,false,false': [0.21333072140547363, 0.20408163265306123], 'false,false,true': [4.114374974051316e-07, 5.545058636560563e-07], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.16633975287495725], 'false': [0.14540775450252463, 0.2276858497413588], 'false,false': [0.22782359874254327, 0.22222222222222224], 'false,false,true': [0.25, 0.22649783752402897], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.12333788162818944, 0.14954985841127413], 'false,true,false': [0.0015431753267027097, -5.8314744727786e-17], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.126742094494607], 'false': [0.09425745029869562, 0.23446189392890657], 'false,false': [0.0002298315432630038, 0.23912201613149062], 'false,false,false': [0.23496196520921617, 0.2222222222222222], 'false,true': [0.011432618628109847, 0.09124707752511726], 'false,true,true': [0.0, 0.00508459364102228], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.06222222222222222, 0.12018396361022372], 'false': [0.08985598000998932, 0.20672306368222979], 'false,false': [0.00011938021189933368, 0.20948359575579936], 'false,false,false': [0.20721110000958354, 0.25000000000000006], 'true': [0.0, 0.08999999999999998], 'false,false,true': [0.0, 0.0], 'true,true': [0.0, nan]}
{'': [0.0015904305635895716, 0.12512172757277307], 'false': [0.044887781740559324, 0.13068740318027192], 'false,false': [2.7755575615628914e-17, 0.13311914115966117], 'false,false,false': [0.09967952091440513, 0.20446273392380793], 'true': [0.001852994733281609, 0.0006216026319260104], 'true,true': [9.280092376331586e-05, 0.00098184572574736], 'true,false': [0.0008615100735868964, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13757932436622447, 0.09859500193642656], 'true': [0.06129430175604088, 0.003353725848574921], 'false': [0.0, 0.10227081151947728], 'false,false': [0.10227081151947728, nan], 'true,true': [0.0008499261081283801, 0.051777914881850164], 'true,true,false': [0.0, 0.04972924930661661], 'true,true,true': [0.000966348011007386, 2.566897869208523e-05]}
{'': [4.7576937962027065e-05, 0.0913379436111948], 'false': [0.07339998277618266, 0.14479837877373014], 'false,false': [1.9569962533112772e-05, 0.1482659333572829], 'false,false,false': [0.1482659333572829, nan], 'false,true': [0.03596995358957439, 0.0012118739571056834], 'false,true,true': [nan, 0.03596995358957439], 'true': [4.831182042167037e-05, 1.9618501022215795e-05], 'false,false,true': [1.9569962533112772e-05, nan]}
{'': [0.0001701290038532263, 0.07194687125541702], 'false': [0.025542392857069426, 0.08935019608810446], 'false,false': [0.0, 0.09124709053745755], 'false,false,false': [0.06102984512473783, 0.14491297721586122], 'false,true': [0.012676523900040221, 0.027416470526133486], 'false,true,false': [0.0, 0.026942277152406036], 'true': [0.0001170947222108587, 0.0002530558172213704], 'true,false': [0.0, 3.2056561004259465e-05]}
{'': [0.0001200004463486813, 0.08123513316513793], 'false': [0.03367062162702676, 0.09953780228829817], 'false,false': [0.13888888888888887, 0.09810523373161248], 'false,false,false': [0.06657409339026085, 0.15416058001161287], 'true': [9.045720425172876e-05, 0.00019265996140255606], 'true,true': [0.00011022593765430688, 0.0], 'true,true,true': [2.4410908294747457e-10, 1.387916230649137e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 2.928
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.11676962475468479;  // std dev = 3.335, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1872628591501443;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8184400674354536;  // std dev = 0.985, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16030604190500666;  // std dev = 0.122, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.22973730880821633;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.10932487481639126;  // std dev = 2.822, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.04235991479367814;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.054503600862720755;  // std dev = 1.632, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.66221143919007;  // std dev = 1.021, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14050717080521707;  // std dev = 0.093, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.09757004111304865;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.28808554730970787;  // std dev = 1.950, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.13422293226074244;  // std dev = 2.673, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.015250481161469875;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.39178057531577415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4180566507685127;  // std dev = 0.633, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.03236218182457575;  // std dev = 2.612, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return 0.05873779205855092;  // std dev = 3.353, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4835789341200304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5220244188401298;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10611472582327237;  // std dev = 3.089, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.01998960790405002;  // std dev = 2.120, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11764913221252404;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.12340984168144284;  // std dev = 2.216, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.04258345644077472;  // std dev = 2.155, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.07732580349908447;  // std dev = 2.746, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.36602988599518915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3932026628980311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.009572533677912855;  // std dev = 1.985, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.10551362586080838;  // std dev = 3.161, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.286784057873241;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.27054267438668683;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.20766889456514226;  // std dev = 0.724, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), location(H, I) )
%   | | then return -0.06564354908698578;  // std dev = 0.171, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return 0.023815744652614816;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.005172242569489449;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.04217979545980268;  // std dev = 3.570, 133.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=37 */
%   | | | else return 0.07019457349369426;  // std dev = 4.142, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2390794169698212;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.254190454844355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6458087340911323;  // std dev = 0.703, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18669891121134344;  // std dev = 0.068, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2275308113172633;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.06603087945150025;  // std dev = 1.239, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.0075012971152222455;  // std dev = 1.865, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2334068056671455;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05132044826709609;  // std dev = 2.313, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1683904443425489;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18733850987744796;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3870682574713109;  // std dev = 1.046, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.45044271912807227;  // std dev = 0.530, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11547375772085962;  // std dev = 0.165, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.1603131277555674;  // std dev = 0.120, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2457724570718014;  // std dev = 0.073, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.031124300390766052;  // std dev = 2.985, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.1053573729480702;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1513217062515509;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1774700226913861;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.026190869623394664;  // std dev = 0.369, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10305624269163653;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.09779101277461932;  // std dev = 0.296, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.020709752097295153;  // std dev = 1.286, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16298542514986494;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.022879946956883064;  // std dev = 2.652, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.06302521588244492;  // std dev = 3.002, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14134652079506077;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1372854043749357;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( location(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.06872348208654562;  // std dev = 0.275, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.030994876071728118;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.029590434260876736;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4193461807116731;  // std dev = 0.811, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.216232648517886;  // std dev = 0.423, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.013200631401451893;  // std dev = 2.604, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return 0.07171691340957216;  // std dev = 2.493, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.518', 'seconds']
Refined model CLL: -0.17459


******************************************
Best model found
******************************************
Results 

CLL : -0.188616 

AUC ROC : 0.98189 

AUC PR : 0.197687 

Precision : 0.140226 

Recall : 0.851986 

F1 : 0.240816 

Total Learning Time : 2.928 

Total Inference Time : 2.842613935470581 

Total revision time: 10.201288837432863
Best scored revision CLL: -0.17459


Results 

CLL : -0.188616 

AUC ROC : 0.98189 

AUC PR : 0.197687 

Precision : 0.140226 

Recall : 0.851986 

F1 : 0.240816 

Total Learning Time : 10.213368314743043 

Total Inference Time : 2.842613935470581 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.492
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08228686613399513;  // std dev = 3.176, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.2126943896449662;  // std dev = 5.017, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.608428672842766;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7977619238569053;  // std dev = 1.383, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.16393883964342212;  // std dev = 0.099, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10911318941237458;  // std dev = 2.834, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.3195467402759845;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5895139151663232;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.599730410446639;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05354002903117995;  // std dev = 2.762, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5921441967798203;  // std dev = 1.906, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14789030525494887;  // std dev = 6.66e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6467749306630447;  // std dev = 0.224, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17862289922655364;  // std dev = 2.341, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04398516254058782;  // std dev = 1.495, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44560168078063955;  // std dev = 0.058, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.5308235825678835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5421094219732563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.35724329969591084;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.03862539196089181;  // std dev = 4.442, 192.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3954650004252819;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5109369435428571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.011664372716684182;  // std dev = 2.923, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.25946483642845575;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33580373685633896;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20113651788343684;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.03969605325686792;  // std dev = 4.611, 211.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30579289514734254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3455381465220151;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06318712044234624;  // std dev = 2.549, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.015574220137810223;  // std dev = 1.506, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2686393319293606;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.39191176982431797;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2449638142504409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.04923013055699251;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0342232457819424;  // std dev = 1.308, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.298819906728632;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05100449654373161;  // std dev = 4.174, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | | else return 0.0918462062729145;  // std dev = 2.995, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24517339993649728;  // std dev = 0.148, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25571039608541873;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26947850396141665;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6129245628458163;  // std dev = 0.714, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17091484610133953;  // std dev = 0.737, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.229974647863921;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0641630005441512;  // std dev = 3.351, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17546097915255554;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08061691589308494;  // std dev = 0.952, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4307091746754378;  // std dev = 1.606, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14409422415777365;  // std dev = 0.217, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.27663898244988644;  // std dev = 1.205, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09633578720298829;  // std dev = 2.315, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1598005794770269;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.15564218057499626;  // std dev = 0.482, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.09606495031271087;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10865003173464399;  // std dev = 0.473, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2710783803686973;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.010400240511454991;  // std dev = 1.424, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1796022270113208;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.043895302289495876;  // std dev = 2.848, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return 0.016773763379582717;  // std dev = 2.442, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13208256737078816;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16934110547398917;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.22126025362457857;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2023289656360549;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.26919098789509316;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.009579181843308443;  // std dev = 1.678, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.24553615084254804;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04787006863145307;  // std dev = 2.769, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return -0.014373503818276191;  // std dev = 2.503, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.068', 'seconds']
Parameter learned model CLL:-0.178811 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.176, 45, 13], 'false,false,true,false': [5.017, 71, 39], 'false,false,false,true': [2.598, 27, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.951, 1, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.383, 2, 52], 'false,false,true,false': [0.099, 142, 0], 'false,false,false,true': [2.834, 30, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.034, 0, 4], 'false,true,true': [2.762, 49, 14], 'false,true,false,true': [1.906, 4, 42], 'false,true,false,false': [6.66e-08, 95, 0], 'false,false,true,true': [0.224, 0, 3], 'false,false,true,false': [2.341, 16, 9], 'false,false,false,true': [1.495, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.058, 0, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.211, 2, 6], 'false,true,false': [4.442, 143, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.923, 41, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.03, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.94, 1, 6], 'false,true': [4.611, 155, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.056, 0, 2], 'false,false,false,true': [2.549, 25, 9], 'false,false,false,false': [1.506, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.053, 0, 9], 'true,true,false': [0.007, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.79, 1, 2], 'false,true': [1.308, 23, 5], 'false,false,true': [0.032, 0, 5], 'false,false,false,true': [4.174, 114, 46], 'false,false,false,false': [2.995, 31, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.148, 0, 13], 'true,true,true,false': [0.082, 0, 3], 'true,true,false,true': [0.034, 0, 3], 'true,true,false,false': [0.714, 0, 33], 'true,false': [0.737, 107, 0], 'false,true': [0.001, 0, 3], 'false,false,true': [3.351, 72, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 8], 'true,false': [0.952, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.606, 2, 56], 'false,true,false': [0.217, 134, 0], 'false,false,true,true': [1.205, 3, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.315, 22, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.056, 0, 10], 'true,false,true': [0.482, 1, 1], 'true,false,false': [1.197, 3, 5], 'false,true,true': [0.473, 15, 1], 'false,true,false,true': [0.169, 0, 6], 'false,true,false,false': [1.424, 48, 17], 'false,false,true': [0.001, 0, 3], 'false,false,false,true': [2.848, 61, 31], 'false,false,false,false': [2.442, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.017, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.011, 0, 2], 'true,false': [0.105, 0, 3], 'false,true': [1.678, 63, 24], 'false,false,true': [1.096, 2, 3], 'false,false,false,true': [2.769, 57, 31], 'false,false,false,false': [2.503, 35, 12]}]
{'': [0.10380622837370206, 0.21961535224307732], 'false': [-2.5376526277146434e-16, 0.21131600817591834], 'false,false': [0.21371882086167865, 0.20118983234180587], 'false,false,true': [0.1739001189060637, 0.2288429752066121], 'false,false,false': [0.1875000000000001, 0.24489795918367335], 'true': [0.1224489795918365, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.06135642334294128, 0.2004369665127375], 'false': [-6.344131569286608e-17, 0.19553671752926946], 'false,false': [0.19441348936657687, 0.20039433503936022], 'false,false,false': [0.19591490560566843, 0.25000000000000006], 'false,false,true': [0.035410957130384446, 6.85708583340785e-05], 'true': [-1.1102230246251565e-16, 0.11305856445725476], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.00022073762935429878, 0.15258315534506972], 'false': [0.13875457668754992, 0.2160083772254337], 'false,false': [0.21851316947074131, 0.1862589404327684], 'false,false,true': [0.016711025520260714, 0.21924732054428683], 'false,false,false': [0.1862589404327684, nan], 'false,true': [0.12112251507391979, 0.14613863000628358], 'false,true,false': [0.07896191066803096, 4.674623261579606e-17], 'true': [0.0001663612217660638, 0.0002937297812929396]}
{'': [0.05607573759912468, 0.12354682392744915], 'false': [0.11052099231379009, 0.16938182809218083], 'false,false': [0.002963059921633001, 0.16964506533173723], 'false,false,false': [0.16428022907639123, 0.24999999999999997], 'false,true': [0.1664343959061248, 0.10274951952908333], 'false,true,true': [0.0, 0.18344141948707227], 'true': [0.00022622667415594933, 0.0], 'false,false,true': [0.0, 0.0]}
{'': [0.05976899536520883, 0.11658789394702802], 'false': [0.1007803283454874, 0.1840069583958432], 'false,false': [0.0014041644505207913, 0.19106346450547787], 'false,false,false': [0.19116392256478437, 0.189103233307791], 'true': [9.809157178793566e-05, 0.1262876451393265], 'false,false,true': [0.0, 0.0015796850068359042], 'true,true': [9.809157178793566e-05, nan]}
{'': [0.057472132038614836, 0.1205592342852591], 'false': [0.061098030238994315, 0.12731374832377662], 'false,false': [0.0002075201159438267, 0.12905558124515168], 'false,false,false': [0.1089111005926772, 0.1993785123644174], 'true': [0.003457551936103719, 0.17209876226927662], 'true,false': [0.0, 0.20782749706869572], 'true,true': [0.0003126611173297365, 1.3183547491635306e-05], 'true,false,true': [0.0, nan]}
{'': [0.11018203566619433, 0.10667622595488335], 'true': [0.040828826807082594, 0.005080812402391173], 'false': [7.287128798808921e-07, 0.10900516128052964], 'false,false': [0.10900516128052964, nan], 'true,true': [0.0018036582868114423, 0.023196892419794404], 'true,true,false': [0.00038569252115244756, 0.015441038251523065], 'true,true,true': [0.0016778235269920754, 0.002258731762156787]}
{'': [0.058883817144846196, 0.10141398948132846], 'false': [0.08334049070714061, 0.1880694430206335], 'false,false': [0.2420890758636288, 0.15767003981693326], 'false,false,true': [0.2420890758636288, nan], 'false,false,false': [0.15767003981693326, nan], 'false,true': [0.04448485220348099, 0.00035058756199845447], 'true': [3.469446951953614e-18, 0.11326993612190916], 'false,true,true': [nan, 0.04448485220348095]}
{'': [0.10157317977680927, 0.07672022630650624], 'true': [0.00030888169498638485, 0.1669841523471331], 'true,false': [0.11624997261578733, 0.17895780800682445], 'false': [0.0334356477983896, 0.10332716806126248], 'false,false': [5.046699001106288e-07, 0.10518506772301037], 'false,false,false': [0.0881635557394783, 0.14196526083465252], 'false,true': [0.013985650799452074, 0.03507981048984767], 'false,true,false': [0.004752697296639084, 0.031183725279749264]}
{'': [0.00353124687244475, 0.0813191214783376], 'false': [0.0323543757986926, 0.11148664484940274], 'false,false': [0.24021422951438237, 0.1040817929067862], 'false,false,false': [0.08712723212979817, 0.13330105738449485], 'true': [0.0010668998084382752, 0.003704603338390335], 'true,true': [0.000249364209152797, 0.00011854339069279167], 'true,true,true': [-3.469446951953614e-18, 0.00013626211649386474], 'true,true,false': [0.0, 5.835053107105387e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.578
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.05169732219628657;  // std dev = 3.111, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return 0.1622425023509733;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7676146252337838;  // std dev = 1.924, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15852691914874478;  // std dev = 0.129, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.34811133627647783;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.15217638812313636;  // std dev = 2.348, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5598446042864642;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1619806102762665;  // std dev = 0.483, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0606507193105044;  // std dev = 0.346, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6521978985228066;  // std dev = 1.396, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13945417948435065;  // std dev = 0.051, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.08375221416797847;  // std dev = 1.983, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.19041409472450324;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17763245227610233;  // std dev = 1.365, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.48743482453276926;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.39729347878742605;  // std dev = 0.221, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.540343836879064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4546401235890793;  // std dev = 0.984, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return -0.002973749782727859;  // std dev = 2.530, 92.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return 0.08382693750988887;  // std dev = 3.553, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5346009667693155;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.09065654291727956;  // std dev = 2.051, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.27543211230324643;  // std dev = 1.717, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.324150954282628;  // std dev = 6.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41001644024443457;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4983306207751911;  // std dev = 0.169, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1542134909232542;  // std dev = 0.379, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.05671396171685825;  // std dev = 3.676, 126.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
%   | | | else return 0.118178146296796;  // std dev = 2.096, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4022796453469373;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.11309921551856629;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.01751117541020334;  // std dev = 2.466, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.28544970896013466;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3103988778227259;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.022934455510607427;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then return -0.0216548702288685;  // std dev = 0.200, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return -0.10002790993164634;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.010315385084376646;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1297584132037679;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.0206251466591456;  // std dev = 3.282, 120.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | | | else return 0.08436358817689606;  // std dev = 3.792, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24301305813523583;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2930987894685973;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.552001586577407;  // std dev = 1.443, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1921155000186513;  // std dev = 0.082, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.08178213769836976;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.18520930663647295;  // std dev = 1.475, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.054746161731549184;  // std dev = 2.567, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06787279492505448;  // std dev = 0.925, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0162401308038982;  // std dev = 0.736, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1697536561733216;  // std dev = 1.86e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06130449770653638;  // std dev = 0.363, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.23331251539766296;  // std dev = 1.517, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.46062721939077783;  // std dev = 1.476, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.14382588224615364;  // std dev = 0.057, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5049092791858878;  // std dev = 0.561, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.23203282270275435;  // std dev = 0.594, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.09471737150747825;  // std dev = 0.921, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2005609880403769;  // std dev = 1.108, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1525328839171753;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1845244192350378;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.23132826040043392;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07686694584617951;  // std dev = 0.082, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.015567843823288345;  // std dev = 1.535, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.13254829451016728;  // std dev = 0.424, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2890252506450206;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.0196065131859932;  // std dev = 1.816, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.03245425189076137;  // std dev = 2.950, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1078315820452989;  // std dev = 0.143, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.35241578312875144;  // std dev = 0.181, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11824983105637073;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.31371317318032477;  // std dev = 1.177, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.11643704821118789;  // std dev = 0.225, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( enzyme(K, L), complex(K, M) )
%   | | | then return -0.04904501980002255;  // std dev = 0.746, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.05499427907677638;  // std dev = 1.890, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.030040154711742834;  // std dev = 1.968, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.05927103214780932;  // std dev = 1.351, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '32.756', 'seconds']
Refined model CLL: -0.172333


******************************************
Best model found
******************************************
Results 

CLL : -0.192238 

AUC ROC : 0.983677 

AUC PR : 0.227472 

Precision : 0.140564 

Recall : 0.897527 

F1 : 0.243062 

Total Learning Time : 3.578 

Total Inference Time : 3.4979395866394043 

Total revision time: 11.703628129959107
Best scored revision CLL: -0.172333


Results 

CLL : -0.192238 

AUC ROC : 0.983677 

AUC PR : 0.227472 

Precision : 0.140564 

Recall : 0.897527 

F1 : 0.243062 

Total Learning Time : 11.715707607269287 

Total Inference Time : 3.4979395866394043 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.206
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18521660427244457;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15524232249235315;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.17265711644602855;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16391549488876758;  // std dev = 4.756, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.1329630282217667;  // std dev = 5.934, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16245634510498438;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.1326069112519625;  // std dev = 6.623, 194.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06463950768356086;  // std dev = 7.791, 288.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1084615566006374;  // std dev = 7.474, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7241994360617562;  // std dev = 0.007, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.275977894368914;  // std dev = 0.010, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0933509990248447;  // std dev = 3.925, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.05731877976517854;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08421822432980389;  // std dev = 3.614, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | | else return 0.05412069951121809;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022279133882907164;  // std dev = 7.041, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03375604262736249;  // std dev = 6.958, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.540', 'seconds']
Parameter learned model CLL:-0.337487 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.333, 84, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.756, 64, 35], 'false,false,false,false': [5.934, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.529, 33, 20], 'false,false,false,false': [6.623, 127, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.791, 201, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.474, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 35], 'true,false': [0.01, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.925, 43, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.614, 54, 35], 'false,false,false,false': [5.878, 103, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.041, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.958, 168, 87]}]
{'': [nan, 0.22009440895471846], 'false': [nan, 0.2200944089547185], 'false,false': [nan, 0.22009440895471846], 'false,false,false': [nan, 0.2200944089547185]}
{'': [nan, 0.22094524793388487], 'false': [nan, 0.22094524793388393], 'false,false': [nan, 0.22094524793388487], 'false,false,false': [0.21801907400500806, 0.22394444788889561]}
{'': [nan, 0.2226531307455635], 'false': [nan, 0.2226531307455635], 'false,false': [nan, 0.22265313074556417], 'false,false,false': [0.2285033714764103, 0.21869097981079186]}
{'': [nan, 0.2281454304180337], 'false': [nan, 0.2281454304180337], 'false,false': [nan, 0.2281454304180333], 'false,false,false': [0.2349590601637588, 0.22609279105853225]}
{'': [nan, 0.21075540332121812], 'false': [nan, 0.21075540332121812], 'false,false': [nan, 0.21075540332121873], 'false,false,false': [nan, 0.21075540332121873]}
{'': [nan, 0.22990684115449544], 'false': [nan, 0.22990684115449544], 'false,false': [nan, 0.22990684115449517], 'false,false,false': [nan, 0.22990684115449586]}
{'': [0.2223024892547388, 0.2244156923976182], 'false': [nan, 0.2244156923976182], 'false,false': [nan, 0.2244156923976182], 'false,false,false': [0.22989529962129662, 0.21957815035154135], 'true': [1.5094119190856808e-06, 1.415073673768522e-06], 'true,true': [nan, 1.5094119190856808e-06], 'true,true,false': [nan, 1.5094119190856808e-06]}
{'': [nan, 0.1953336220551054], 'false': [nan, 0.1953336220551054], 'false,false': [nan, 0.19533362205510565], 'false,false,false': [0.14672689265430078, 0.2229128759728752]}
{'': [nan, 0.18295827441050702], 'false': [nan, 0.1829582744105061], 'false,false': [nan, 0.1829582744105061], 'false,false,false': [nan, 0.1829582744105061]}
{'': [nan, 0.18986802076745857], 'false': [nan, 0.18986802076745857], 'false,false': [nan, 0.18986802076745818], 'false,false,false': [nan, 0.18986802076745818]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.848
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.11621345122854454;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.15639454913460007;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7269683156982932;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), location(A, H) )
%   | | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7431661085042689;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13582799841944415;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.05800239255341378;  // std dev = 2.467, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.14152716774253712;  // std dev = 5.567, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5180313982966799;  // std dev = 0.231, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.6940024153991865;  // std dev = 0.151, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.34924077666454967;  // std dev = 0.934, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.13328055914969064;  // std dev = 0.111, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.15132418597332223;  // std dev = 5.365, 159.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=55 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5535149264219061;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1253036641513914;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09372161663210707;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.32379293272884524;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), location(F, G) )
%   | | | then return 0.48791062326515217;  // std dev = 0.765, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.656985373451417;  // std dev = 0.480, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.1858869259318185;  // std dev = 0.636, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.14367927461900995;  // std dev = 0.364, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.47231246402766314;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.1198409507410487;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04209956041975145;  // std dev = 2.077, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1669959858950665;  // std dev = 4.109, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return -0.0615397731130601;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.32788397616901505;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4839672476363777;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( phenotype(A, G), phenotype(E, H) )
%   | | then if ( interaction(E, E), complex(E, I) )
%   | | | then return 0.10028552111062225;  // std dev = 1.344, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.004717589047784161;  // std dev = 2.005, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( phenotype(E, J), location(A, F) )
%   | | | then return 0.2448211903519292;  // std dev = 2.381, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.056037232061616475;  // std dev = 4.111, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.14181675416037698;  // std dev = 0.460, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.3293642605995034;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24551332038967089;  // std dev = 0.926, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.28795335536125055;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( complex(A, F), interaction(G, D) )
%   | | then if ( interaction(G, G), phenotype(D, H) )
%   | | | then return 0.057205959848194106;  // std dev = 2.144, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.045425783649762325;  // std dev = 2.189, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.01737783570168695;  // std dev = 1.899, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.10486185183718641;  // std dev = 4.121, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( phenotype(L, K) )
%   | | | then return -0.01911248037189021;  // std dev = 0.402, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06014600174647157;  // std dev = 0.474, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.13607309938039;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.06834934214488016;  // std dev = 1.147, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.44309473093805507;  // std dev = 0.157, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.15784902694494218;  // std dev = 0.357, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( phenotype(A, G), interaction(E, E) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.004349444631721542;  // std dev = 0.815, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.04371382389078095;  // std dev = 0.800, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.4363182671604021;  // std dev = 0.388, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05248300158549168;  // std dev = 4.158, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else if ( interaction(A, J) )
%   | | then return 0.08109597479334534;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.06692968830420903;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06764691317443768;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.18876688605511965;  // std dev = 0.237, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.41722792766859196;  // std dev = 0.825, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( location(F, C), interaction(D, F) )
%   | | | then return -0.009301172304974554;  // std dev = 1.758, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.2779333255070715;  // std dev = 2.997, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | else if ( phenotype(A, G) )
%   | | then return -0.13720552330994829;  // std dev = 0.343, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.18538713639327994;  // std dev = 0.199, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.2613346414499621;  // std dev = 0.320, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return 0.06500992222201822;  // std dev = 0.653, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.39551867301416904;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), interaction(F, D) )
%   | then return 0.0018039361783307997;  // std dev = 0.239, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | else if ( recursion_proteinclass(D, B), complex(A, G) )
%   | | then return 0.3329644250447082;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, H), complex(C, I) )
%   | | | then return -0.009335219182507279;  // std dev = 2.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.06564031043770738;  // std dev = 3.191, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   else if ( interaction(A, J) )
%   | then if ( phenotype(A, K) )
%   | | then return -0.023286979777960917;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.18319090162191629;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, L) )
%   | | then return -0.13809229631007644;  // std dev = 0.215, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.08587477505079229;  // std dev = 0.674, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.002784095129642311;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(A, E) )
%   | then return 0.01763776178686096;  // std dev = 0.175, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( complex(A, F), interaction(G, D) )
%   | | then if ( enzyme(G, C) )
%   | | | then return -0.05674071219651204;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04164903355562109;  // std dev = 0.838, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3800857474797384;  // std dev = 0.767, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.1639867490945576;  // std dev = 0.144, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.16025797118131213;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then return -0.04891055940828805;  // std dev = 0.233, 94.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.046292726415790554;  // std dev = 1.395, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.04014660364476525;  // std dev = 3.258, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9.417', 'seconds']
Refined model CLL: -0.202289


******************************************
Best model found
******************************************
Results 

CLL : -0.205182 

AUC ROC : 0.988313 

AUC PR : 0.456512 

Precision : 0.410959 

Recall : 0.638298 

F1 : 0.5 

Total Learning Time : 15.848 

Total Inference Time : 10.300966739654541 

Total revision time: 29.265341381073
Best scored revision CLL: -0.202289


Results 

CLL : -0.205182 

AUC ROC : 0.988313 

AUC PR : 0.456512 

Precision : 0.410959 

Recall : 0.638298 

F1 : 0.5 

Total Learning Time : 29.293249706268313 

Total Inference Time : 10.300966739654541 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.229
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19363280606725483;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1750116711567785;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.1641165990816863;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17036317567510326;  // std dev = 5.112, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.1246807616129538;  // std dev = 6.563, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08128022083901358;  // std dev = 4.499, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | | else return 0.11884125000965962;  // std dev = 7.079, 226.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09284925013780942;  // std dev = 8.368, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09091981392229138;  // std dev = 8.273, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7287134173637543;  // std dev = 0.015, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2707737942336642;  // std dev = 0.020, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11519027989725245;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.10782138846109295;  // std dev = 5.005, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06237272011393238;  // std dev = 4.033, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.04987172525738968;  // std dev = 6.453, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033691024419590786;  // std dev = 7.654, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047890999781736714;  // std dev = 7.514, 289.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.265', 'seconds']
Parameter learned model CLL:-0.34705 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.112, 72, 41], 'false,false,false,false': [6.563, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.499, 67, 29], 'false,false,false,false': [7.079, 151, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.368, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.273, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 41], 'true,false': [0.02, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.766, 37, 23], 'false,false,false,false': [5.005, 67, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.033, 72, 41], 'false,false,false,false': [6.453, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.654, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.514, 185, 104]}]
{'': [nan, 0.22293444328824347], 'false': [nan, 0.22293444328824197], 'false,false': [nan, 0.22293444328824347], 'false,false,false': [nan, 0.22293444328824197]}
{'': [nan, 0.22329049758590586], 'false': [nan, 0.22329049758590552], 'false,false': [nan, 0.22329049758590586], 'false,false,false': [0.22506925207755984, 0.2215100004056935]}
{'': [nan, 0.222266278409831], 'false': [nan, 0.222266278409831], 'false,false': [nan, 0.22226627840983587], 'false,false,false': [0.23124050799261014, 0.21641453290073334]}
{'': [nan, 0.2187803027064139], 'false': [nan, 0.2187803027064139], 'false,false': [nan, 0.21878030270641782], 'false,false,false': [0.21082899305555594, 0.22173722977249966]}
{'': [nan, 0.22020123326100302], 'false': [nan, 0.22020123326100302], 'false,false': [nan, 0.22020123326100186], 'false,false,false': [nan, 0.22020123326100186]}
{'': [nan, 0.22514678076339176], 'false': [nan, 0.22514678076339176], 'false,false': [nan, 0.2251467807633918], 'false,false,false': [nan, 0.22514678076339176]}
{'': [0.21302605152004966, 0.23492305262239685], 'false': [nan, 0.23492305262239685], 'false,false': [nan, 0.23492305262239685], 'false,false,false': [0.2363888888888891, 0.23408157917722047], 'true': [5.7818805714586645e-06, 4.395276047824728e-06], 'true,true': [nan, 5.7818805714586645e-06], 'true,true,false': [nan, 5.7818805714586645e-06]}
{'': [nan, 0.1937346134496279], 'false': [nan, 0.1937346134496279], 'false,false': [nan, 0.1937346134496282], 'false,false,false': [0.1439718248125078, 0.22390778485276794]}
{'': [nan, 0.18961551135719462], 'false': [nan, 0.1896155113571949], 'false,false': [nan, 0.1896155113571949], 'false,false,false': [nan, 0.1896155113571949]}
{'': [nan, 0.19537185823315395], 'false': [nan, 0.19537185823315395], 'false,false': [nan, 0.19537185823315437], 'false,false,false': [nan, 0.19537185823315437]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.738
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.7867203636709403;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.7265699877310904;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return -0.10851773156715439;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( enzyme(A, H) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6423896169385299;  // std dev = 0.274, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), phenotype(E, F) )
%   | | then if ( complex(E, G), complex(D, G) )
%   | | | then return -0.08804137701786188;  // std dev = 0.862, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.07266906267967167;  // std dev = 1.694, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.19669930460132773;  // std dev = 2.685, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.05257681312321499;  // std dev = 2.523, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), phenotype(J, L) )
%   | | | then return 0.16355218482288472;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7543437313055579;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.20807054626925017;  // std dev = 3.893, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | | else return 0.10673071890863295;  // std dev = 3.260, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.6023742784530678;  // std dev = 0.053, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.10177625137284374;  // std dev = 0.423, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.6516870250982979;  // std dev = 0.964, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.07742294740238762;  // std dev = 1.164, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.13914459390359693;  // std dev = 0.099, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4135190748718723;  // std dev = 3.660, 77.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=52 */
%   | | | else return -0.14371021819923804;  // std dev = 0.059, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.03146029042801051;  // std dev = 1.441, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10439259732116186;  // std dev = 1.648, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), phenotype(A, D) )
%   | then return 0.17484557243721;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), interaction(F, A) )
%   | | then return 0.44285970163057814;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.585051352588245;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.524351057672584;  // std dev = 2.127, 82.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=77 */
%   | | | else return -0.10539411596950253;  // std dev = 1.672, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else return -0.12570171722899215;  // std dev = 0.110, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.05699964802707543;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.19218157274466655;  // std dev = 1.269, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3855666292592922;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then if ( interaction(C, A) )
%   | | then return 0.3583662078807137;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11788845618516292;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.39114266262232206;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), phenotype(G, H) )
%   | | then return 0.2523552407974701;  // std dev = 0.693, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.444338548078733;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.0399355233861824;  // std dev = 2.183, 73.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | | | else return 0.35722766132352635;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.011603311160984096;  // std dev = 2.824, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.06563221568283652;  // std dev = 3.556, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.28254473420860826;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, A), interaction(D, G) )
%   | | | then return -0.04007477831633465;  // std dev = 2.341, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.017307469715641375;  // std dev = 2.238, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.004904783782497676;  // std dev = 0.537, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.17199721194458428;  // std dev = 0.682, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(J, K), location(A, L) )
%   | | | then return 0.05734189870228698;  // std dev = 3.221, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return -0.04387544590471652;  // std dev = 1.451, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 6.819478285846614E-6;  // std dev = 0.453, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30755252141137995;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.33238184412553146;  // std dev = 0.202, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | else return -0.15502197542618612;  // std dev = 0.121, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, F) )
%   | | | then return 0.10941413443709935;  // std dev = 0.690, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.49377304734216854;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.2633178984340151;  // std dev = 0.159, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31209888713235523;  // std dev = 1.717, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.14724618957256683;  // std dev = 0.387, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.11822735785452623;  // std dev = 2.052, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.042037903977650296;  // std dev = 1.622, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.29956436585204466;  // std dev = 0.195, 96.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=92 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.20042130172156616;  // std dev = 0.638, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.2918765806558076;  // std dev = 0.792, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.11321732840093955;  // std dev = 0.262, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.5951541340171271;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.29587892378605973;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.0381191209693093;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.1201441728107716;  // std dev = 1.212, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.20186751993712113;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.162483630545083;  // std dev = 0.046, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), enzyme(D, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.08096499327184295;  // std dev = 0.644, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.2856494321108444;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.08451090112698145;  // std dev = 1.085, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.0058197423150398355;  // std dev = 1.530, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.16488744380889386;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.012421789140054505;  // std dev = 1.333, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.08254270334830964;  // std dev = 1.653, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.023339772553193444;  // std dev = 2.680, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), interaction(A, E) )
%   | then return 0.010899207903103501;  // std dev = 0.157, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return -0.37322396519946005;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(C, G), phenotype(A, H) )
%   | | | then return -0.08137321554995991;  // std dev = 1.490, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.011644650026102292;  // std dev = 0.573, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.11752948276169409;  // std dev = 0.248, 111.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=72 */
%   | | else return -0.1043438574307581;  // std dev = 0.160, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, K) )
%   | | then return 0.11301084517522217;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.14817342530777267;  // std dev = 0.780, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.0547424075536664;  // std dev = 1.350, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '10.223', 'seconds']
Refined model CLL: -0.173957


******************************************
Best model found
******************************************
Results 

CLL : -0.156627 

AUC ROC : 0.991594 

AUC PR : 0.521675 

Precision : 0.240647 

Recall : 0.898113 

F1 : 0.379585 

Total Learning Time : 23.738 

Total Inference Time : 22.804059982299805 

Total revision time: 49.817788354873656
Best scored revision CLL: -0.173957


Results 

CLL : -0.156627 

AUC ROC : 0.991594 

AUC PR : 0.521675 

Precision : 0.240647 

Recall : 0.898113 

F1 : 0.379585 

Total Learning Time : 49.84569668006897 

Total Inference Time : 22.804059982299805 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.188
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18439006985128545;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1675221286580826;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
%   | | | else return 0.0953352921400359;  // std dev = 5.504, 157.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16357101176169014;  // std dev = 5.350, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.1730257744890597;  // std dev = 5.552, 134.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.06893193874127687;  // std dev = 4.309, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | | else return 0.14427551673281355;  // std dev = 6.527, 186.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07610647275177228;  // std dev = 7.971, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10352772918106176;  // std dev = 7.729, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7378180811182179;  // std dev = 0.002, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26212698850437394;  // std dev = 0.003, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1245726639333242;  // std dev = 3.863, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | | else return 0.08946866771982208;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.042258596583733626;  // std dev = 4.293, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.05735388745071727;  // std dev = 5.580, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.009745481795952225;  // std dev = 7.356, 317.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021529043667320943;  // std dev = 7.178, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.650', 'seconds']
Parameter learned model CLL:-0.31902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.831, 102, 51], 'false,false,false,false': [5.504, 116, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.35, 82, 44], 'false,false,false,false': [5.552, 86, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.309, 65, 26], 'false,false,false,false': [6.527, 120, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.971, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.729, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 44], 'true,false': [0.003, 94, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.863, 37, 25], 'false,false,false,false': [3.855, 42, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.293, 91, 44], 'false,false,false,false': [5.58, 89, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.356, 225, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.178, 195, 92]}]
{'': [nan, 0.21980785674764972], 'false': [nan, 0.2198078567476494], 'false,false': [nan, 0.21980785674764972], 'false,false,false': [nan, 0.2198078567476494]}
{'': [nan, 0.20869927159208687], 'false': [nan, 0.20869927159209173], 'false,false': [nan, 0.20869927159208687], 'false,false,false': [0.2222222222222224, 0.1929490040163903]}
{'': [nan, 0.22863486233953323], 'false': [nan, 0.22863486233953323], 'false,false': [nan, 0.22863486233953353], 'false,false,false': [0.22714227913272309, 0.2299950151018647]}
{'': [nan, 0.22208697031611632], 'false': [nan, 0.22208697031611632], 'false,false': [nan, 0.22208697031611624], 'false,false,false': [0.20408163265306142, 0.2290311395693693]}
{'': [nan, 0.21392466246578082], 'false': [nan, 0.21392466246578082], 'false,false': [nan, 0.21392466246578012], 'false,false,false': [nan, 0.21392466246578012]}
{'': [nan, 0.22801661991891362], 'false': [nan, 0.22801661991891362], 'false,false': [nan, 0.22801661991891314], 'false,false,false': [nan, 0.22801661991891367]}
{'': [0.217157489353424, 0.23480312356926286], 'false': [nan, 0.23480312356926286], 'false,false': [nan, 0.23480312356926286], 'false,false,false': [0.24063475546305915, 0.2286390532544383], 'true': [9.016559297172287e-08, 8.104866554724462e-08], 'true,true': [nan, 9.016559297172287e-08], 'true,true,false': [nan, 9.016559297172287e-08]}
{'': [nan, 0.18228141634990194], 'false': [nan, 0.18228141634990194], 'false,false': [nan, 0.18228141634990216], 'false,false,false': [0.13654426492920532, 0.2272377759755296]}
{'': [nan, 0.17068098097419895], 'false': [nan, 0.170680980974199], 'false,false': [nan, 0.170680980974199], 'false,false,false': [nan, 0.170680980974199]}
{'': [nan, 0.17951798982109032], 'false': [nan, 0.17951798982109032], 'false,false': [nan, 0.1795179898210894], 'false,false,false': [nan, 0.1795179898210894]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.967
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( enzyme(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14193271888329614;  // std dev = 3.878, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.18439006985128462;  // std dev = 5.567, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.8125353533130191;  // std dev = 0.349, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( interaction(D, F), interaction(A, F) )
%   | | | then return 0.8112457187019899;  // std dev = 0.205, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.16441209363603196;  // std dev = 0.145, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.1623456343732892;  // std dev = 0.216, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( interaction(A, A) )
%   | then return 0.055509949546300195;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.01600697714293054;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then if ( interaction(C, E), phenotype(E, F) )
%   | | then return 0.5446914436262444;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.30667071281239666;  // std dev = 0.553, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6594307148479076;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.21538692404449333;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.10864672958496453;  // std dev = 0.000307, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.06049291297862941;  // std dev = 1.663, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5446111808474295;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.13504037322565782;  // std dev = 3.219, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.0707008191342538;  // std dev = 4.765, 169.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.414348451130129;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5112203465909068;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, F) )
%   | | | then return 0.6036748410891988;  // std dev = 0.855, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.4279379107077866;  // std dev = 1.188, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return -0.15085438182582553;  // std dev = 0.217, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return 0.02815210024554087;  // std dev = 1.959, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.11245120162351765;  // std dev = 3.439, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.39923239994692067;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14195450323614608;  // std dev = 2.109, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.3188754126227817;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3866963765230511;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(E, G), complex(E, H) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.09606545730935373;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.026632384936715048;  // std dev = 1.806, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return -0.14465617890435864;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.08484049523620252;  // std dev = 1.847, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.023386457490034162;  // std dev = 2.390, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.24909571740803618;  // std dev = 1.897, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.10861024818485;  // std dev = 3.496, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2958209701813335;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1607646361176326;  // std dev = 0.479, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.016914406022537375;  // std dev = 1.542, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.259949152187987;  // std dev = 0.537, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.036097590145207394;  // std dev = 1.947, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return 0.021828531315530756;  // std dev = 1.425, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.16981724490790098;  // std dev = 2.755, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.04169200772083504;  // std dev = 1.045, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.053560591496823795;  // std dev = 3.236, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4218637303704845;  // std dev = 0.199, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.16397145601644678;  // std dev = 0.046, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.2646321021776534;  // std dev = 0.671, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.47237628394493153;  // std dev = 0.265, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1443408258181218;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return -0.06192710062650099;  // std dev = 1.314, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.037761210590882575;  // std dev = 1.997, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.06941332311693615;  // std dev = 0.731, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08462863174786542;  // std dev = 2.750, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.15736573063426357;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C), location(C, D) )
%   | | then return -0.09739134699783318;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, E) )
%   | | | then return -0.02123958329127549;  // std dev = 0.932, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.12764176305048802;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.2191262906403748;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(G, H) )
%   | | | then return 0.12296941847982348;  // std dev = 1.352, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.043901043096459834;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.03282357964090762;  // std dev = 2.942, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | | else return 2.720206478909383E-4;  // std dev = 3.548, 143.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1602346193226114;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.023420551335186172;  // std dev = 0.256, 161.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=35 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.38136279120603017;  // std dev = 0.324, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15165771712147832;  // std dev = 0.105, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5659843770449418;  // std dev = 0.155, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.20331845153792275;  // std dev = 0.125, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then return -0.004934631112629012;  // std dev = 0.247, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2258851874462908;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.027655805352890448;  // std dev = 2.521, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.11192504589285923;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, F), interaction(E, G) )
%   | | | then return 0.31995059360178946;  // std dev = 0.200, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.43669941457989586;  // std dev = 0.378, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14450473816430365;  // std dev = 0.053, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.16460766095124404;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), phenotype(I, L) )
%   | | | then return 0.04133836404658636;  // std dev = 1.401, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.13058592536502842;  // std dev = 0.696, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.17255818838381776;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04082852865925996;  // std dev = 3.385, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '50.726', 'seconds']
Refined model CLL: -0.179445


******************************************
Best model found
******************************************
Results 

CLL : -0.19072 

AUC ROC : 0.987767 

AUC PR : 0.359292 

Precision : 0.285538 

Recall : 0.833935 

F1 : 0.425414 

Total Learning Time : 11.967 

Total Inference Time : 7.415046691894531 

Total revision time: 22.57326868057251
Best scored revision CLL: -0.179445


Results 

CLL : -0.19072 

AUC ROC : 0.987767 

AUC PR : 0.359292 

Precision : 0.285538 

Recall : 0.833935 

F1 : 0.425414 

Total Learning Time : 22.601177005767823 

Total Inference Time : 7.415046691894531 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.107
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15066594190223373;  // std dev = 7.800, 294.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18317188708708024;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0.16889811353856882;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1018697161320647;  // std dev = 4.463, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.1355495738723518;  // std dev = 6.271, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1357421627674915;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.1227416658438333;  // std dev = 6.702, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10686222688228306;  // std dev = 7.566, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0995677947178063;  // std dev = 7.498, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7370803604873483;  // std dev = 0.013, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2627256884264003;  // std dev = 0.021, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.020815468543214297;  // std dev = 4.842, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return 0.05059272783220908;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.021907225902305694;  // std dev = 3.488, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.05556783677140398;  // std dev = 6.235, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02208960586997612;  // std dev = 7.226, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037199463354945145;  // std dev = 7.105, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.813', 'seconds']
Parameter learned model CLL:-0.329232 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.8, 208, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.839, 99, 52], 'false,false,false,false': [4.772, 69, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.463, 69, 28], 'false,false,false,false': [6.271, 122, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [6.702, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.566, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.498, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 28], 'true,false': [0.021, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.842, 81, 33], 'false,false,false,false': [4.134, 54, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.488, 65, 28], 'false,false,false,false': [6.235, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.226, 194, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.105, 177, 86]}]
{'': [nan, 0.20695080753389863], 'false': [nan, 0.20695080753389863], 'false,false': [nan, 0.20695080753389863], 'false,false,false': [nan, 0.20695080753389863]}
{'': [nan, 0.22394444788889867], 'false': [nan, 0.22394444788889784], 'false,false': [nan, 0.22394444788889867], 'false,false,false': [0.22577957107144714, 0.22113300028277924]}
{'': [nan, 0.21410596800156964], 'false': [nan, 0.21410596800156964], 'false,false': [nan, 0.21410596800156917], 'false,false,false': [0.20531289865275681, 0.21844723413356543]}
{'': [nan, 0.22190169279210653], 'false': [nan, 0.22190169279210653], 'false,false': [nan, 0.2219016927921069], 'false,false,false': [0.2241709183673465, 0.2212391561958621]}
{'': [nan, 0.2227286045726249], 'false': [nan, 0.2227286045726249], 'false,false': [nan, 0.2227286045726249], 'false,false,false': [nan, 0.2227286045726249]}
{'': [nan, 0.2266729216981532], 'false': [nan, 0.2266729216981532], 'false,false': [nan, 0.22667292169815326], 'false,false,false': [nan, 0.22667292169815392]}
{'': [0.20779270785106552, 0.21024534504909925], 'false': [nan, 0.21024534504909925], 'false,false': [nan, 0.21024534504909925], 'false,false,false': [0.20567867036011087, 0.2163114885435027], 'true': [6.065016223085909e-06, 6.392665952294311e-06], 'true,true': [nan, 6.065016223085909e-06], 'true,true,false': [nan, 6.065016223085909e-06]}
{'': [nan, 0.18998437418832806], 'false': [nan, 0.18998437418832806], 'false,false': [nan, 0.18998437418832786], 'false,false,false': [0.13079622393066442, 0.22086821184243846]}
{'': [nan, 0.1864985302825096], 'false': [nan, 0.18649853028250946], 'false,false': [nan, 0.18649853028250946], 'false,false,false': [nan, 0.18649853028250946]}
{'': [nan, 0.1919261506800593], 'false': [nan, 0.1919261506800593], 'false,false': [nan, 0.19192615068005967], 'false,false,false': [nan, 0.19192615068005967]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.671
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06403128804068876;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1538011090125544;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.2581489350995123;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.752049977405418;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | | then return 0.8049900955152015;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19500990448479852;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.02825367491460015;  // std dev = 0.379, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7302664973147037;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.31402323802153204;  // std dev = 2.378, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return -0.16199656855561184;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.3356501129488415;  // std dev = 1.856, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.15346735543633283;  // std dev = 4.858, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5761821446378828;  // std dev = 0.173, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.13004024823126184;  // std dev = 0.078, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.3205444688157543;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7084854237420208;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.033162678759302094;  // std dev = 2.985, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | | else return 0.15881397224393815;  // std dev = 5.742, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4078752210636848;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.03508457188143637;  // std dev = 0.295, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), interaction(G, A) )
%   | | then if ( enzyme(G, D) )
%   | | | then return 0.13702324050213818;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4643334588916161;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return -0.0710371623696501;  // std dev = 1.560, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.05269662475468512;  // std dev = 1.782, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5397531752855429;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.488144899864326;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08045626777453832;  // std dev = 5.845, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3112939878034837;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.39172521281487144;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5683105276980916;  // std dev = 0.409, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, H) )
%   | | | then return -0.03770753109849769;  // std dev = 3.022, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return 0.3182318429599865;  // std dev = 0.993, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), interaction(I, L) )
%   | | | then return -0.0732816900157326;  // std dev = 0.952, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.20132682293928553;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.06991989527521582;  // std dev = 2.476, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.14418897226276675;  // std dev = 4.644, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), complex(F, E) )
%   | | then return 0.049096366374994954;  // std dev = 0.407, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6294426983544035;  // std dev = 0.431, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.21955268907221445;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.6968863321330158;  // std dev = 0.127, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.24230469814634034;  // std dev = 0.039, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.18974520482006768;  // std dev = 0.282, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then return -0.05114945899462619;  // std dev = 0.338, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.13480287398161098;  // std dev = 2.088, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.036848322159562116;  // std dev = 4.646, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49653161232053356;  // std dev = 0.259, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.19426921853467702;  // std dev = 0.048, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H), phenotype(E, I) )
%   | | | then return 0.45568889370894217;  // std dev = 0.798, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06046691425768405;  // std dev = 1.038, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(J, E), recursion_proteinclass(J, B) )
%   | | | then return 0.3758140942824957;  // std dev = 1.426, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.01866276614851944;  // std dev = 4.451, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( phenotype(A, M), phenotype(K, N) )
%   | | | then return -0.0012449861199316712;  // std dev = 0.831, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19196575229178986;  // std dev = 1.184, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.48822086326041064;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.2587143642459289;  // std dev = 0.167, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.034018748113322436;  // std dev = 0.324, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7146317311530446;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, I), complex(I, J) )
%   | | | then return -0.13518570401201585;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2119772076420671;  // std dev = 2.055, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), enzyme(M, N) )
%   | | | then return 0.17912414335032012;  // std dev = 1.797, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.04611757999648225;  // std dev = 3.549, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.0087450122803943;  // std dev = 1.677, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.10848099009547356;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2127758581329156;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, C), interaction(E, A) )
%   | | then return -0.12781097637262948;  // std dev = 0.297, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return -0.012518790529755816;  // std dev = 0.375, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( complex(F, H), location(F, G) )
%   | | then if ( interaction(F, F), phenotype(F, I) )
%   | | | then return 0.3378684235480497;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09229767201731424;  // std dev = 2.355, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.06765969064560944;  // std dev = 1.171, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.06822526219984316;  // std dev = 2.933, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.011289220274998;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.48657543750585736;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.03042760364577257;  // std dev = 0.371, 161.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=60 */
%   | else if ( interaction(E, C) )
%   | | then if ( enzyme(E, F), interaction(G, E) )
%   | | | then return 0.007995034552115943;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1455726189841808;  // std dev = 1.303, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.44742600579357755;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3127016673217669;  // std dev = 0.850, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, J) )
%   | | | then return -0.044233238681319405;  // std dev = 1.365, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.5692414820616112;  // std dev = 0.264, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.26344766209898357;  // std dev = 0.112, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.2874993318793436;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.651', 'seconds']
Refined model CLL: -0.293386


******************************************
Best model found
******************************************
Results 

CLL : -0.279757 

AUC ROC : 0.894305 

AUC PR : 0.178185 

Precision : 0.265306 

Recall : 0.367491 

F1 : 0.308148 

Total Learning Time : 6.671 

Total Inference Time : 3.081117630004883 

Total revision time: 12.703486087799073
Best scored revision CLL: -0.293386


Results 

CLL : -0.279757 

AUC ROC : 0.894305 

AUC PR : 0.178185 

Precision : 0.265306 

Recall : 0.367491 

F1 : 0.308148 

Total Learning Time : 12.731394412994385 

Total Inference Time : 3.081117630004883 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.231
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14263169372020054;  // std dev = 4.859, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | | | else return 0.21814893509951105;  // std dev = 4.800, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5352200566152644;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6864630074657053;  // std dev = 3.194, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16503515028733584;  // std dev = 0.070, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08094400767653945;  // std dev = 1.748, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4675490592564588;  // std dev = 0.968, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0791125796676585;  // std dev = 4.374, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6578722932479848;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14844036785666812;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11423690507857244;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15554065285062021;  // std dev = 1.344, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4538215432928908;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.2040334054743864;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5239565394314195;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.036988591424667955;  // std dev = 5.075, 229.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6420846605977255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05091098394714379;  // std dev = 1.748, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.15613924331186613;  // std dev = 1.275, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14768063820711555;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0711316444066485;  // std dev = 5.441, 230.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4855887496835962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.025995244905878134;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.21068318062761823;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32237035391697627;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4996546418725066;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3674319385635051;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01793327843923065;  // std dev = 2.228, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.036543641276624794;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07387176201685022;  // std dev = 4.669, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
%   | | | else return 0.08941620592130113;  // std dev = 1.844, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29290296812126815;  // std dev = 0.193, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2868603687671317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5888472124511801;  // std dev = 0.492, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17839162424649302;  // std dev = 0.416, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.11462334723594761;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10095249993711511;  // std dev = 3.825, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.2095651823293403;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2718055464071219;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4022492281208942;  // std dev = 2.435, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.1573918216288977;  // std dev = 0.280, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2319127644777259;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04895698004956647;  // std dev = 1.459, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19452837733870054;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.41240431584144516;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.1867395982877785;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0033404581553919195;  // std dev = 1.408, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32908526330822463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.007319728806562692;  // std dev = 1.640, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2500178658574195;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022818332468249353;  // std dev = 3.366, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return 0.16757005581005602;  // std dev = 1.275, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1559028678280173;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23686636791074767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04085765559735774;  // std dev = 0.417, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.02481081510283888;  // std dev = 2.342, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2061225084895657;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021693239269049036;  // std dev = 3.431, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.04495365047479543;  // std dev = 1.368, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.882', 'seconds']
Parameter learned model CLL:-0.200303 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.859, 83, 33], 'false,false,true,false': [4.8, 64, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.783, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.194, 12, 69], 'false,false,true,false': [0.07, 180, 0], 'false,false,false,true': [1.748, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.968, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.374, 96, 34], 'false,true,false,true': [1.377, 2, 37], 'false,true,false,false': [0.0, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.344, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.082, 0, 10], 'true,false': [0.788, 2, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.562, 3, 14], 'false,true,false': [5.075, 172, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.748, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.275, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.76, 1, 4], 'false,true': [5.441, 159, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.044, 0, 7], 'true,true,false': [0.074, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.228, 36, 12], 'false,false,true': [0.871, 1, 3], 'false,false,false,true': [4.669, 120, 55], 'false,false,false,false': [1.844, 13, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.193, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.492, 0, 33], 'true,false': [0.416, 95, 0], 'false,true': [1.083, 2, 3], 'false,false,true': [3.825, 67, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.113, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.435, 8, 71], 'false,true,false': [0.28, 173, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.459, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.094, 0, 8], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.063, 0, 3], 'false,true,true': [1.408, 26, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.64, 48, 17], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [3.366, 89, 40], 'false,false,false,false': [1.275, 5, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.036, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.417, 1, 3], 'false,true': [2.342, 84, 29], 'false,false,true': [0.012, 0, 3], 'false,false,false,true': [3.431, 80, 40], 'false,false,false,false': [1.368, 8, 4]}]
{'': [-1.6148698540002277e-16, 0.2178425822072675], 'false': [0.18750000000000006, 0.21514487281033123], 'false,false': [0.21739969135802487, 0.1799307958477507], 'false,false,true': [0.2035523186682534, 0.23040000000000135], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 0.22222222222222224], 'false,false,false': [0.20408163265306126, 0.16000000000000003], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888884, 0.19552819480428205], 'false': [0.15345231946052268, 0.19342339792445254], 'false,false': [0.1942898578963454, 0.1798070027556823], 'false,false,true': [0.12595111706792136, 2.704941012318724e-05], 'false,false,false': [0.1798070027556823, nan], 'false,true': [0.15345231946052268, nan], 'true': [0.1224489795918368, 0.0]}
{'': [0.07960581698118548, 0.15702475679555306], 'false': [0.15398245257386822, 0.20257403897489493], 'false,false': [0.20408163265306117, 0.2006550912978414], 'false,false,true': [nan, 0.20408163265306117], 'false,false,false': [0.2006550912978414, nan], 'false,true': [0.14715610389177664, 0.16067311679154528], 'false,true,false': [0.04859261206952608, -4.2700885562506023e-17], 'true': [0.10421311636094965, 0.0]}
{'': [0.12505344081677186, 0.13385159328568916], 'false': [0.12987635630761443, 0.1880196022496989], 'false,false': [0.0, 0.17966367241014644], 'false,false,false': [0.17966367241014644, nan], 'false,true': [0.14345955033270166, 0.11248042659835777], 'false,true,true': [nan, 0.14345955033270166], 'true': [0.0006725762412687075, 0.2067539122600414], 'false,false,true': [nan, 0.0]}
{'': [0.1573911849516549, 0.1332679030580333], 'true': [0.1805759274568416, 0.11561265329925727], 'true,true': [0.1805759274568416, nan], 'false': [0.12873752849144435, 0.200654079607023], 'false,false': [0.0, 0.204656690254234], 'false,false,false': [0.17283950617283955, 0.24000000000000005], 'false,false,true': [nan, 0.0]}
{'': [0.006673237883844027, 0.12623770992148087], 'false': [0.103393634309676, 0.13114890255405007], 'false,false': [0.18982611851370254, 0.12990857087811403], 'false,false,false': [0.12455018716674843, 0.1790441400934336], 'true': [0.007334562169504566, 0.0], 'true,true': [0.00027143270812858756, 0.0018143944502521474], 'true,false': [nan, 0.0]}
{'': [0.1124092051435036, 0.14304940665044774], 'false': [0.23436845493643266, 0.1367074763193149], 'false,false': [0.1367074763193149, nan], 'true': [0.022837536212640265, 0.0018231112441469764], 'true,true': [0.0034038950402194693, 0.007338307111729104], 'true,true,false': [nan, 0.007338307111729266], 'true,true,true': [0.003740965179972866, 0.0]}
{'': [0.0021198700548229273, 0.09464469454751955], 'false': [0.09123499311376618, 0.15418737832325766], 'false,false': [0.0, 0.16365703023974779], 'false,false,false': [0.16365703023974779, nan], 'false,true': [0.0750227958308901, 0.00045313075063537406], 'false,true,true': [nan, 0.07502279583088989], 'true': [0.0, 0.0025506979821369293], 'false,false,true': [0.0, nan]}
{'': [0.04861318931418428, 0.07438384752728126], 'false': [0.04646484230212032, 0.0941194163351406], 'false,false': [6.110723561007318e-05, 0.09515524578608522], 'false,false,false': [0.0878298286668241, 0.18056633375676612], 'true': [0.0011027483146981154, 0.08695008352463376], 'true,false': [0.0, 0.0013274339391549927], 'false,true': [0.05361074204292541, 0.04245835877807742], 'false,true,false': [0.0, 0.041396892801986364]}
{'': [0.018574387363162536, 0.07822988014405305], 'false': [0.04853280424391569, 0.10182341056942915], 'false,false': [4.665470214828179e-05, 0.10339788210462941], 'false,false,false': [0.09808933872294955, 0.15599145525828226], 'true': [0.0008772332670477813, 0.04352440230533408], 'true,true': [0.0008772332670477813, nan], 'true,true,true': [0.00018316626199167883, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 9.706
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.12917697248268875;  // std dev = 4.598, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.1940267976949315;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.760463647699283;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6886296211161819;  // std dev = 3.193, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15931827217837785;  // std dev = 0.142, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.08285156768234792;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2614229962537765;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3787780416048099;  // std dev = 0.381, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.6127741063937765;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.023072826572572744;  // std dev = 2.087, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.17050031920751266;  // std dev = 3.619, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5752079940508534;  // std dev = 2.267, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.14240772061428295;  // std dev = 0.033, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.7407096461685534;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20121068028672268;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.006762774680770978;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.47317896593769254;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4508119500217068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return -0.0843777602736132;  // std dev = 0.989, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.08542649436614011;  // std dev = 3.372, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1163881982837195;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.11508656233955696;  // std dev = 4.251, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3732423520458974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.03866039726280685;  // std dev = 0.751, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15467993447342615;  // std dev = 1.221, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.34396923684634517;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3655741738455837;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6848389466987256;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.06066730872112364;  // std dev = 4.074, 132.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.014227548420167506;  // std dev = 1.635, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.04658811690002488;  // std dev = 2.587, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2907850446605388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.05850633387507709;  // std dev = 1.291, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.087126503553044;  // std dev = 0.747, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3131097989279015;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2346282368220569;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5490664306838658;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, I), enzyme(I, J) )
%   | | | then return -0.035028548968823674;  // std dev = 1.391, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.11253554759360732;  // std dev = 2.076, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return -0.07986061588315992;  // std dev = 1.136, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.0633620260916378;  // std dev = 4.206, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.36837530839152244;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08441248969680903;  // std dev = 0.988, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4568124378477683;  // std dev = 0.178, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.16951220174757042;  // std dev = 0.064, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), phenotype(G, H) )
%   | | | then return 0.525847548227636;  // std dev = 0.533, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.34851262241664244;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.18080574887532805;  // std dev = 0.044, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(I, K), interaction(I, J) )
%   | | | then return 0.05643400193937797;  // std dev = 1.943, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.15309328139676298;  // std dev = 2.122, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.050981447429243786;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.022837843892693544;  // std dev = 0.611, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1534921376049462;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.16765070139914368;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3003760215501074;  // std dev = 2.529, 50.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   | | | else return 0.4522012095117404;  // std dev = 0.832, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1362554275397038;  // std dev = 0.220, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.1715869110591311;  // std dev = 0.264, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1331026353575031;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.021048403259047874;  // std dev = 0.845, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09205520381010743;  // std dev = 0.816, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.150914476674675;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13988458230194592;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.0745409806721396;  // std dev = 1.151, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.060732083236672674;  // std dev = 0.773, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.11605754240099472;  // std dev = 0.455, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.006814899154687893;  // std dev = 1.810, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15604698562511812;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.05228256960164127;  // std dev = 1.499, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.014299342195457226;  // std dev = 3.043, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13287691309854632;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12393827945748725;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.12740568115232057;  // std dev = 1.002, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.06996339251712788;  // std dev = 1.900, 75.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.008955715064937657;  // std dev = 0.830, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.13667108736263073;  // std dev = 0.723, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.13660728812758963;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -0.0438826015929927;  // std dev = 1.748, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.013641550783712559;  // std dev = 2.971, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '1.622', 'seconds']
Refined model CLL: -0.195051


******************************************
Best model found
******************************************
Results 

CLL : -0.179837 

AUC ROC : 0.988019 

AUC PR : 0.292563 

Precision : 0.209825 

Recall : 0.893617 

F1 : 0.339852 

Total Learning Time : 9.706 

Total Inference Time : 97.30111289024353 

Total revision time: 115.37919040870666
Best scored revision CLL: -0.195051


Results 

CLL : -0.179837 

AUC ROC : 0.988019 

AUC PR : 0.292563 

Precision : 0.209825 

Recall : 0.893617 

F1 : 0.339852 

Total Learning Time : 115.40040155601501 

Total Inference Time : 97.30111289024353 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.28
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.053117488558630924;  // std dev = 4.996, 159.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=31 */
%   | | | else return 0.14116780302403972;  // std dev = 5.680, 159.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.41947341221095424;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.4337591264966685;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6100122940520396;  // std dev = 0.955, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6534760651297585;  // std dev = 3.811, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.15488256335508174;  // std dev = 0.080, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16653882456488167;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6264873913395359;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6243590738810861;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08089607698171765;  // std dev = 4.438, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.554639977883034;  // std dev = 2.865, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14018976240953013;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.30876090948223145;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15180143686907133;  // std dev = 1.518, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.36088589743491883;  // std dev = 1.336, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return -0.029299210363407213;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5392061270311582;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5546652394195586;  // std dev = 1.735, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.03178265116763763;  // std dev = 5.295, 262.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.34681018502296773;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5448881506579837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1814027317017777;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3858013912901364;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3091176872119769;  // std dev = 0.877, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05608907816645136;  // std dev = 6.021, 297.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.5902141707283713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.40978582927162865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -6.681369385565239E-7;  // std dev = 1.719, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30231108711318616;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2567986020958212;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31547696117564716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01610464925382662;  // std dev = 2.876, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3238948804020432;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07773139664856721;  // std dev = 4.716, 172.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=51 */
%   | | | else return 0.08778878099212606;  // std dev = 2.255, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2998413636927109;  // std dev = 0.316, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1681617223437683;  // std dev = 0.594, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.009112958288474776;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5867895542057316;  // std dev = 0.431, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17454499684307084;  // std dev = 0.518, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2634198461326843;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07928294969894611;  // std dev = 4.431, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18954805345009484;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1289440925574511;  // std dev = 0.976, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4131257603096445;  // std dev = 2.902, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.1471839493550137;  // std dev = 0.331, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2845603513106314;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02300427378680134;  // std dev = 1.381, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1845499330910407;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.13197204458079762;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22208232239957232;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.0038741873120839115;  // std dev = 1.633, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1793795848498648;  // std dev = 0.713, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.029845163849741157;  // std dev = 1.315, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19485641414037266;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06242855778426246;  // std dev = 3.656, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | | else return -0.03724882503032535;  // std dev = 1.511, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13859037996708623;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06881204035708906;  // std dev = 0.907, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18736232744086898;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.024575747647310842;  // std dev = 2.417, 127.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16619844967935588;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04254889999046656;  // std dev = 3.672, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return -0.07497649628797814;  // std dev = 1.524, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.803', 'seconds']
Parameter learned model CLL:-0.201464 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.996, 128, 31], 'false,false,true,false': [5.68, 114, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [1.449, 3, 7], 'true,false': [1.69, 4, 10], 'false,true,true': [0.955, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.811, 18, 76], 'false,false,true,false': [0.08, 196, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.005, 0, 11], 'true,false': [0.0, 0, 6], 'false,true,true': [4.438, 100, 34], 'false,true,false,true': [2.865, 10, 48], 'false,true,false,false': [0.0, 104, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.518, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.336, 2, 16], 'true,false': [0.707, 1, 1], 'false,true,true,true': [0.028, 0, 3], 'false,true,true,false': [1.735, 4, 21], 'false,true,false': [5.295, 204, 58], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.539, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.877, 1, 10], 'false,true': [6.021, 215, 82], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.719, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.017, 0, 9], 'true,true,false': [0.951, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.876, 57, 19], 'false,false,true': [0.083, 0, 8], 'false,false,false,true': [4.716, 121, 51], 'false,false,false,false': [2.255, 18, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.316, 0, 15], 'true,true,true,false': [0.594, 1, 1], 'true,true,false,true': [0.827, 1, 3], 'true,true,false,false': [0.431, 0, 33], 'true,false': [0.518, 82, 0], 'false,true': [0.071, 0, 5], 'false,false,true': [4.431, 104, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.976, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.902, 10, 82], 'false,true,false': [0.331, 179, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.381, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.141, 0, 9], 'true,false,true': [0.787, 1, 2], 'true,false,false': [0.106, 0, 5], 'false,true,true': [1.633, 30, 13], 'false,true,false,true': [0.713, 1, 8], 'false,true,false,false': [1.315, 46, 11], 'false,false,true': [0.058, 0, 5], 'false,false,false,true': [3.656, 95, 47], 'false,false,false,false': [1.511, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.907, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.093, 0, 3], 'false,true': [2.417, 95, 32], 'false,false,true': [0.052, 0, 5], 'false,false,false,true': [3.672, 100, 47], 'false,false,false,false': [1.524, 16, 4]}]
{'': [-2.0898315757650005e-16, 0.19114351738384563], 'false': [0.10937499999999978, 0.18365472910927566], 'false,false': [0.1818757169415772, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.15695581662117905, 0.20291918832324782], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [-1.4802973661668753e-16, 0.0]}
{'': [0.20659722222222254, 0.19876567852647678], 'true': [0.2100000000000001, 0.20408163265306128], 'false': [0.11398409100688517, 0.19454664266927482], 'false,false': [0.1932612385395983, 0.2222222222222224], 'false,false,false': [0.2222222222222224, nan], 'false,false,true': [0.15452604286373953, 3.244221070353839e-05], 'false,true': [0.11398409100688517, nan]}
{'': [2.7093324749718224e-06, 0.15813506094764743], 'false': [0.15519851493976872, 0.21888197916988397], 'false,false': [0.21888197916988397, nan], 'false,false,true': [0.24999999999999994, 0.20943396088646404], 'false,true': [0.14701608474320615, 0.16161983597804852], 'false,true,false': [0.14148270962770293, -8.540177112501205e-17], 'true': [2.588420116467205e-06, -7.401486830834377e-17]}
{'': [0.12787897701688664, 0.13504714537814164], 'false': [0.13077103239737606, 0.2313556784318517], 'false,false': [0.19878148046404465, 0.2367398868370346], 'false,false,false': [0.2367398868370346, nan], 'false,false,true': [0.0, 0.0], 'false,true': [0.1075937498051596, 0.10701712961003769], 'true': [0.09911498327786752, 0.24973494415522626], 'false,true,true': [0.0002691754352739754, 0.12044709328427747]}
{'': [0.04408787470717974, 0.126330546188642], 'false': [0.12205466295436893, 0.19276139969607683], 'false,false': [0.24999999999999997, 0.18470229954144038], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.18470229954144038, nan], 'true': [-3.172065784643304e-17, 0.06985697645882795], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.05075927609905876, 0.12802945385772277], 'false': [0.10881237606980414, 0.13364647580417743], 'false,false': [0.0008657737121835346, 0.13665365656947392], 'false,false,false': [0.12932596713189426, 0.18157961612909174], 'true': [0.05367867034484311, 0.0], 'true,true': [3.246056154198534e-05, 0.11293404007858003], 'true,false': [nan, 0.0]}
{'': [0.1193191445148248, 0.1269371551124171], 'false': [0.0010083696833387723, 0.13002023896283108], 'false,false': [0.13002023896283108, nan], 'true': [0.07053856910219831, 0.003273329626748612], 'true,true': [0.04934978302385867, 0.05567071514836781], 'true,true,false': [0.17097182538593933, 0.005618039271813238], 'true,true,true': [0.006668912946108681, 0.17619728930727652]}
{'': [0.053796412912351294, 0.10378917064115459], 'false': [0.10187893073904769, 0.14076423704887078], 'false,false': [0.0, 0.1467057137341385], 'false,false,false': [0.1467057137341385, nan], 'false,true': [0.09154054411092968, 0.0006127315016255854], 'false,true,true': [nan, 0.09154054411092971], 'true': [-7.93016446160826e-18, 0.0866021671604004], 'false,false,true': [0.0, nan]}
{'': [0.054352198654510846, 0.07901017831188836], 'false': [0.04813262118974205, 0.09859671909987645], 'false,false': [0.0006807437538608907, 0.10111435601097982], 'false,false,false': [0.09411767169560006, 0.16303679952402822], 'true': [0.002221258426421988, 0.10819759541715025], 'true,false': [0.20643859437717346, 0.0022450604994349033], 'false,true': [0.062042719952466414, 0.03905936022673295], 'false,true,false': [0.056517594219311115, 0.030333479400872394]}
{'': [0.05089638888138054, 0.07432962466724183], 'false': [0.04599904802754931, 0.0938655364629121], 'false,false': [0.0005382671914867688, 0.0961083700520344], 'false,false,false': [0.0917398808074585, 0.11605870516583734], 'true': [0.059949419545434486, 0.0028848797655596364], 'true,true': [0.059949419545434486, nan], 'true,true,true': [-3.96508223080413e-18, 0.1174643307515049]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 11.309
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5618526388032159;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return -0.053355489679248747;  // std dev = 3.019, 113.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0826387310178797;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.16584124279181908;  // std dev = 5.262, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7352265399006037;  // std dev = 0.140, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6553719324971398;  // std dev = 3.584, 92.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return -0.15105378113877047;  // std dev = 0.190, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.34778863881482236;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12245283634661504;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5514731299207334;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6105640023013208;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11874075361675332;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.10186114801986244;  // std dev = 4.055, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5947518744848219;  // std dev = 2.490, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13435529933523316;  // std dev = 0.105, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.3119796233456534;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.08958874631517688;  // std dev = 1.027, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.44197330209056096;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24880773075466658;  // std dev = 0.370, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.24576965146626237;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.37348043797648683;  // std dev = 2.100, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.13676455284711136;  // std dev = 0.546, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0.09965932400826644;  // std dev = 4.992, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5287258781181876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04681272716352195;  // std dev = 1.701, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.21755296691429452;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31898645848211116;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2868460576702127;  // std dev = 0.278, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.31345214772613306;  // std dev = 3.342, 79.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=51 */
%   | | | else return -0.13680280272607265;  // std dev = 0.349, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.014228032210695692;  // std dev = 3.370, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | | else return 0.11876005446214402;  // std dev = 1.133, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.39802629503921705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.40879611231188484;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03214110719890067;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31995535193366986;  // std dev = 0.082, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.3075236717442772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.409802600372932;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12861470959667629;  // std dev = 0.439, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.012715956435018778;  // std dev = 1.674, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.10775070374485332;  // std dev = 1.149, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3173607013846138;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.023126507577123416;  // std dev = 2.210, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.08245671299224723;  // std dev = 4.243, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.21702529110509766;  // std dev = 0.170, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(E, A) )
%   | | then return 0.026459283396622263;  // std dev = 0.281, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.10340979006679471;  // std dev = 1.591, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return -0.17296273730072298;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.22978420163513427;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5845801496125541;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18716119696320152;  // std dev = 0.162, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.13811939875720108;  // std dev = 1.396, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.04489003495743613;  // std dev = 3.469, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16608214850339395;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), location(E, F) )
%   | | then return 0.2616681204431089;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19070323215076299;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.19779693631813267;  // std dev = 1.972, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.4335313695431779;  // std dev = 2.099, 66.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=61 */
%   | | else return -0.14778967510889637;  // std dev = 0.037, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20812396806759914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.02005636090281867;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10126557479421383;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.1925587213655305;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16967390037681723;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19395426732668333;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.12300795303592323;  // std dev = 2.249, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return -0.09589304198678579;  // std dev = 0.103, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0.2987466515821741;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.003900158960237691;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.08317135081738745;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.009678445991517112;  // std dev = 3.428, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11136063055574111;  // std dev = 0.177, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.14909279200488826;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.10920832509235508;  // std dev = 0.580, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.037838171975989605;  // std dev = 1.829, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.07045743409247202;  // std dev = 1.587, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.07594969583184856;  // std dev = 0.337, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1643678458631969;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.002546407402318092;  // std dev = 3.376, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   | | | else return -0.04407129418535671;  // std dev = 2.065, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '12.750', 'seconds']
Refined model CLL: -0.204262


******************************************
Best model found
******************************************
Results 

CLL : -0.179434 

AUC ROC : 0.989332 

AUC PR : 0.335146 

Precision : 0.264706 

Recall : 0.74717 

F1 : 0.390918 

Total Learning Time : 11.309 

Total Inference Time : 82.76762962341309 

Total revision time: 103.44033481025696
Best scored revision CLL: -0.201464


Results 

CLL : -0.179434 

AUC ROC : 0.989332 

AUC PR : 0.335146 

Precision : 0.264706 

Recall : 0.74717 

F1 : 0.390918 

Total Learning Time : 103.4615459575653 

Total Inference Time : 82.76762962341309 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.52
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.13662994775773918;  // std dev = 5.634, 158.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09865526421343639;  // std dev = 3.799, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8232680558483996;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1571203077306478;  // std dev = 0.048, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, K) )
%   | | | then return 0.15825684952892763;  // std dev = 3.516, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.24571028354270527;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0871320722424593;  // std dev = 2.057, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6663952473552033;  // std dev = 1.016, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13937504405697265;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16916328549037118;  // std dev = 3.562, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2830609702640593;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43485032175037525;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4265947324208203;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3907840743476587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5940708227522697;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.050294126094701574;  // std dev = 4.258, 200.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5133004532971055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1251570026417672;  // std dev = 3.480, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.4502159653167497;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31730472829404216;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3391550654334986;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.07416281867930324;  // std dev = 4.201, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38696540204407937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.043241755502783405;  // std dev = 3.721, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.2058631494845287;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2599128865445844;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3429946139839327;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2540953390020848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3000517407207218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06947434411633231;  // std dev = 0.945, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2667272989610246;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.056204449689802136;  // std dev = 4.006, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | | | else return 0.150006232739921;  // std dev = 3.484, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2319391655582167;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22538815172181437;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22052486075016742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6302574588049006;  // std dev = 0.722, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20061291179382504;  // std dev = 0.662, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.217375037878781;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05960798245371803;  // std dev = 3.344, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17556821178863058;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07919267203865968;  // std dev = 0.872, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44349960583369424;  // std dev = 0.787, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1449106656287961;  // std dev = 0.195, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18852386589537418;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08314825631393354;  // std dev = 2.888, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1545340309836739;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1270388760472838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1714486414269948;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.13955439602791192;  // std dev = 0.790, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18260313293841945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.026851686378065304;  // std dev = 1.267, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17114722700036186;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01817993341729493;  // std dev = 2.718, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return -0.008002024858047374;  // std dev = 3.102, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13189765361034658;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14336567200989755;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1396935756158808;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13927917279297033;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.025034364287590278;  // std dev = 1.365, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14822049483586136;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020814899686297735;  // std dev = 2.784, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return -0.015429250117268535;  // std dev = 3.111, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.322', 'seconds']
Parameter learned model CLL:-0.178446 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.522, 31, 8], 'false,false,true,false': [5.634, 114, 44], 'false,false,false,true': [3.799, 60, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.048, 140, 0], 'false,false,false,true': [3.516, 39, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.057, 23, 8], 'false,true,false,true': [1.016, 1, 48], 'false,true,false,false': [8.43e-08, 107, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.562, 37, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.022, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.124, 0, 3], 'false,true,false': [4.258, 148, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.48, 36, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 9], 'false,true': [4.201, 123, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.721, 50, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.023, 0, 7], 'true,true,false': [0.064, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.945, 19, 3], 'false,false,true': [0.018, 0, 6], 'false,false,false,true': [4.006, 118, 49], 'false,false,false,false': [3.484, 31, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.112, 0, 12], 'true,true,true,false': [0.022, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.722, 0, 36], 'true,false': [0.662, 103, 0], 'false,true': [0.016, 0, 5], 'false,false,true': [3.344, 80, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.015, 0, 6], 'true,false': [0.872, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.787, 0, 56], 'false,true,false': [0.195, 124, 0], 'false,false,true,true': [0.019, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.888, 32, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.023, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.003, 0, 4], 'false,true,true': [0.79, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.267, 51, 14], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [2.718, 89, 36], 'false,false,false,false': [3.102, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.012, 0, 5], 'true,true,true,false': [0.016, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.03, 0, 4], 'false,true': [1.365, 63, 17], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.784, 78, 36], 'false,false,false,false': [3.111, 50, 20]}]
{'': [-2.5376526277146434e-16, 0.19921642531243872], 'false': [-1.4802973661668753e-16, 0.19191553232234485], 'false,false': [0.19428483083820847, 0.18594726413656407], 'false,false,true': [0.1630506245890863, 0.2009293382470767], 'false,false,false': [0.18266303477006837, 0.25], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.20591383108578276], 'false': [7.401486830834377e-17, 0.20263588716140987], 'false,false': [0.1965768605034034, 0.21935462274375972], 'false,false,false': [0.21692684222908426, 0.24000000000000005], 'false,false,true': [0.01857825914167891, 1.6184152379034825e-05], 'true': [7.401486830834377e-17, -1.1102230246251565e-16], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06222222222222206, 0.16471778280056754], 'false': [0.14494177983345138, 0.22263429672313315], 'false,false': [0.22130731160879827, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,false,true': [0.0, 0.22261829474643602], 'false,true': [0.13655500565839887, 0.14649119746223568], 'false,true,false': [0.021050417129209496, 6.640586315514955e-17], 'true': [-1.1102230246251565e-16, 0.0987654320987654]}
{'': [0.00018176455932031717, 0.12476546273602512], 'false': [0.09378705390942216, 0.2251310405002744], 'false,false': [0.002293781074853174, 0.22941021287004207], 'false,false,false': [0.224248317830371, 0.2222222222222223], 'false,true': [0.011612332691331606, 0.09066575144267022], 'false,true,true': [0.0, 0.005151734735879006], 'false,false,true': [0.0, 0.0], 'true': [0.00017174998304920146, 0.00016493450753144825]}
{'': [0.00014351641415904265, 0.1279505062364771], 'false': [0.09858163449868175, 0.1997355653286745], 'false,false': [0.0010973833836894764, 0.20276536918511753], 'false,false,false': [0.20065129965471715, 0.25], 'false,false,true': [0.0, 0.0], 'true': [5.126329638782678e-07, 5.2449661728928535e-05], 'true,true': [5.126329638782678e-07, nan]}
{'': [0.001755671633236184, 0.12233536057517187], 'false': [0.040624006232693945, 0.12827599442006535], 'false,false': [5.647301226107312e-05, 0.13085242355850582], 'false,false,false': [0.09608570553479316, 0.23795603697152812], 'true': [0.0020206688518626444, 0.0004585911038360683], 'true,true': [7.260066118967647e-05, 0.0010372414546182263], 'true,false': [2.8993032337443214e-07, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12999319809185356, 0.09341973574221503], 'true': [0.04369762879021054, 0.004254060137964771], 'false': [4.945512135463015e-05, 0.09641578606885179], 'false,false': [0.09641578606885179, nan], 'true,true': [0.0009316483911728711, 0.018515131171222693], 'true,true,false': [0.0, 0.014492121399918635], 'true,true,true': [0.0010400738749375045, 0.00024431053234102995]}
{'': [0.052972089528883035, 0.09604971469932852], 'false': [0.07785216679119185, 0.1548687590739631], 'false,false': [0.00018751902816496052, 0.16040677757079413], 'false,false,false': [0.16040677757079413, nan], 'false,true': [0.011051619319258243, 0.0003051989526017513], 'true': [3.779026441346848e-05, 0.08454632450702347], 'false,true,true': [nan, 0.01105161931925818], 'false,false,true': [0.00018751902816496052, nan]}
{'': [0.0001676550073107519, 0.07249125664589323], 'false': [0.031941016320015496, 0.08757234468226946], 'false,false': [3.41892590024151e-05, 0.08919431009405972], 'false,false,false': [0.05908638167641923, 0.14576827945177268], 'false,true': [0.06930516660898885, 0.025246256278309266], 'false,true,false': [0.0, 0.0247134724821569], 'true': [6.122388720932058e-05, 0.00031775157639081785], 'true,false': [0.0, 2.7440182723270645e-06]}
{'': [0.00011008497158770947, 0.07255639835848257], 'false': [0.02329897066091888, 0.09302503100317044], 'false,false': [2.7004241909381332e-05, 0.09502474964322374], 'false,false,false': [0.0679650167658142, 0.1382795728143864], 'true': [6.418405238876879e-05, 0.00022078470743683298], 'true,true': [7.778648013372774e-05, 0.0], 'true,true,true': [2.6841522134285477e-05, 8.049758970835967e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.912
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.2528857772047755;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.1575501327043019;  // std dev = 5.919, 167.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8362849250445966;  // std dev = 0.051, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1625562098710977;  // std dev = 0.101, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.05852228773103189;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.24081826621680683;  // std dev = 2.552, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5820641463621515;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.06799778433551001;  // std dev = 1.283, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.3729740011158606;  // std dev = 1.136, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6778054318578514;  // std dev = 0.239, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1439867374626412;  // std dev = 0.053, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.13257030955328178;  // std dev = 0.703, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13936108415393436;  // std dev = 3.617, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0.0368926753031551;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4151579023191345;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.20546283766914625;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3821836506267513;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5462702245336194;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.14603078304581746;  // std dev = 0.124, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.05943196675346032;  // std dev = 4.098, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5564042330918548;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0194721288860299;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.10476530266793611;  // std dev = 3.305, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3408065080515411;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33993653671916646;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3719288141403607;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.05195204173146726;  // std dev = 0.868, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.0607312455965244;  // std dev = 3.941, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.4605507222246936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3779520426122468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.06653561855419064;  // std dev = 2.222, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.2143864783156639;  // std dev = 2.694, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24903053192195523;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.14474731728505716;  // std dev = 0.660, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3348932970985066;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.10895762342797397;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.01758673479743693;  // std dev = 0.622, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.08751466551275959;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.27704366760019267;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.03612140775510454;  // std dev = 3.498, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
%   | | | else return 0.07967151779911673;  // std dev = 4.054, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23116955282377416;  // std dev = 0.140, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.06971273617696057;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6105528359673421;  // std dev = 0.146, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.20257512860941804;  // std dev = 0.078, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22988174283781362;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.49967175335815217;  // std dev = 0.093, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1492091158637783;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.10341405167213491;  // std dev = 1.191, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.008062590255406826;  // std dev = 2.179, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16986194949218458;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.1543072589100125;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20676716763455683;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3129629809583711;  // std dev = 1.378, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.38621880525921043;  // std dev = 1.049, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.13560023689999146;  // std dev = 0.044, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.26722288396431465;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.19867826526796145;  // std dev = 1.331, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.003454415245381338;  // std dev = 2.678, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.03277806281506601;  // std dev = 0.808, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.19175933386029093;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1589324584404333;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.050259055015639396;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1995319878401673;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.030138361984490502;  // std dev = 1.474, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1634239398038353;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.026401204772923407;  // std dev = 2.071, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.037651394389123946;  // std dev = 3.235, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.16163574711731413;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15376557792037715;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13046589935750935;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0707194407174051;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.01134633823442632;  // std dev = 1.094, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.03616333625223901;  // std dev = 0.813, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14240282322351142;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02555761830615436;  // std dev = 2.402, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return -0.007012882709901671;  // std dev = 3.087, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.075', 'seconds']
Refined model CLL: -0.176079


******************************************
Best model found
******************************************
Results 

CLL : -0.190014 

AUC ROC : 0.980972 

AUC PR : 0.178545 

Precision : 0.132594 

Recall : 0.906137 

F1 : 0.231336 

Total Learning Time : 2.912 

Total Inference Time : 2.9549527168273926 

Total revision time: 10.26787074279785
Best scored revision CLL: -0.176079


Results 

CLL : -0.190014 

AUC ROC : 0.980972 

AUC PR : 0.178545 

Precision : 0.132594 

Recall : 0.906137 

F1 : 0.231336 

Total Learning Time : 10.2890818901062 

Total Inference Time : 2.9549527168273926 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.68
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.14919371121891478;  // std dev = 5.258, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6056318776577896;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7537342490152475;  // std dev = 2.133, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15753519046099831;  // std dev = 0.055, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12119364761310328;  // std dev = 2.816, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.16066757255144135;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.563716005565147;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.585981522415447;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04620968153485213;  // std dev = 2.846, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6782258804484793;  // std dev = 1.002, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14083869245989392;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6659847426228026;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07451783093937875;  // std dev = 2.537, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.037726927895627704;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3665877232076369;  // std dev = 0.958, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.5593695662785527;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6878333716389984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6081166527582152;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.048453732580736694;  // std dev = 4.356, 195.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41829766823882064;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5650544767786474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04411526199905319;  // std dev = 2.888, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.0471306738780345;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33319085434733825;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21175762287915292;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.058969674355874656;  // std dev = 4.536, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32124346107199464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3729907257076746;  // std dev = 0.073, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0920555087823362;  // std dev = 2.515, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.16963485825753338;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2665155761914821;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.419822188759594;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25553495593118625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29144682262470334;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06956970137477347;  // std dev = 1.246, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30736208698243894;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04874138661276477;  // std dev = 4.204, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
%   | | | else return 0.07519479141044348;  // std dev = 3.049, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25025536266601056;  // std dev = 0.205, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22705830159628318;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.263527523494465;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6066189781718774;  // std dev = 0.795, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1789295974524847;  // std dev = 0.607, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.0037514641532006843;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10086171394059686;  // std dev = 3.222, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17394993296661798;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13707813317421713;  // std dev = 0.689, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4085109569016472;  // std dev = 1.830, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13988770515838825;  // std dev = 0.228, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.05732843801927984;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.048930539949423923;  // std dev = 2.450, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15643415778263833;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.26204201306071906;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19201014146310294;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09773366767312122;  // std dev = 0.326, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23774034579178407;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.00291299550575349;  // std dev = 1.422, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2226680147741328;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013386293171916221;  // std dev = 2.870, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | | else return 0.02638351381532237;  // std dev = 2.464, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1314416250301116;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15873991345987132;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.16239120192942813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18323316143889862;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16870673588526652;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016279425132074265;  // std dev = 1.750, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18650987526025775;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.013572038228812575;  // std dev = 3.091, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.048877362675796586;  // std dev = 2.403, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.164', 'seconds']
Parameter learned model CLL:-0.174398 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.258, 95, 39], 'false,false,false,true': [2.641, 31, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.951, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.133, 5, 52], 'false,false,true,false': [0.055, 148, 0], 'false,false,false,true': [2.816, 29, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.846, 53, 14], 'false,true,false,true': [1.002, 1, 42], 'false,true,false,false': [0.0, 97, 0], 'false,false,true,true': [0.203, 0, 3], 'false,false,true,false': [2.537, 27, 9], 'false,false,false,true': [1.52, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.958, 1, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.186, 0, 6], 'false,true,false': [4.356, 146, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.888, 37, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.927, 1, 6], 'false,true': [4.536, 136, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.073, 0, 2], 'false,false,false,true': [2.515, 23, 9], 'false,false,false,false': [1.368, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.047, 0, 9], 'true,true,false': [0.105, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.065, 0, 2], 'false,true': [1.246, 32, 5], 'false,false,true': [0.004, 0, 5], 'false,false,false,true': [4.204, 113, 46], 'false,false,false,false': [3.049, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.205, 0, 13], 'true,true,true,false': [0.06, 0, 3], 'true,true,false,true': [0.045, 0, 3], 'true,true,false,false': [0.795, 0, 33], 'true,false': [0.607, 100, 0], 'false,true': [0.867, 1, 3], 'false,false,true': [3.222, 58, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.689, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.83, 3, 56], 'false,true,false': [0.228, 129, 0], 'false,false,true,true': [0.858, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.45, 30, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.039, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.058, 0, 5], 'false,true,true': [0.326, 32, 1], 'false,true,false,true': [0.167, 0, 6], 'false,true,false,false': [1.422, 45, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.87, 81, 31], 'false,false,false,false': [2.464, 33, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.003, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.044, 0, 2], 'true,false': [0.05, 0, 3], 'false,true': [1.75, 67, 24], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [3.091, 91, 31], 'false,false,false,false': [2.403, 28, 12]}]
{'': [-2.3684757858670006e-16, 0.20383542200932278], 'false': [0.10937499999999978, 0.19503796422238034], 'false,false': [0.19683749899326236, 0.18749999999999947], 'false,false,true': [0.1717897155989653, 0.20633771441301008], 'false,false,false': [0.17437500000000014, 0.2343749999999999], 'false,true': [0.25, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000017, 0.19622066156587478], 'false': [0.11303619581960628, 0.1909371327533514], 'false,false': [0.18890281093469097, 0.1999826874958695], 'false,false,false': [0.19820601140883232, 0.22222222222222224], 'false,false,true': [0.07981764573124027, 2.0299286653996235e-05], 'false,true': [0.11303619581960628, nan], 'true': [1.1102230246251565e-16, 0.109375]}
{'': [0.00023327944155410545, 0.15099591318623057], 'false': [0.14145369944441039, 0.18890767144708234], 'false,false': [0.19096080833131568, 0.17766973042371859], 'false,false,true': [0.013682852828474848, 0.178823732242476], 'false,false,false': [0.17766973042371859, nan], 'false,true': [0.12091279493438713, 0.1499365389673368], 'false,true,false': [0.023350639024917807, -2.0602076745621462e-17], 'true': [0.0001859074652289617, -1.1102230246251565e-16]}
{'': [0.10143492851059446, 0.1199548997181065], 'false': [0.10502612628934063, 0.1747836718165391], 'false,false': [0.004786124633954521, 0.1748374852144564], 'false,false,false': [0.17378157620985632, 0.18749999999999997], 'false,true': [0.005707331064779846, 0.09729094659668124], 'true': [0.05733949966294122, 0.0], 'false,true,true': [0.0, 0.005750730727607308], 'false,false,true': [0.0, 0.0]}
{'': [0.05742908721089143, 0.12402760671506814], 'false': [0.10717525470912943, 0.19572543654704394], 'false,false': [0.0023802483531334038, 0.20592945514795974], 'false,false,false': [0.19772108951858705, 0.23394807329345446], 'true': [7.855513750567835e-05, 0.12287084388200552], 'false,false,true': [0.0, 0.002677779397275093], 'true,true': [7.855513750567835e-05, nan]}
{'': [0.005390031891343933, 0.11806513276595323], 'false': [0.041937417531594516, 0.12882484784743198], 'false,false': [3.613396565027571e-06, 0.13043294658905108], 'false,false,false': [0.111163524996716, 0.1937253914231443], 'true': [0.0060279684798586735, 0.0016747160308906068], 'true,true': [0.0002491838146941625, 0.0027589834292494064], 'true,false': [0.0, 0.0020821866565315927], 'true,false,true': [0.0, nan]}
{'': [0.1135688251608817, 0.12014560516427296], 'false': [0.1880212597400593, 0.11662430783852847], 'false,false': [0.11662430783852847, nan], 'true': [0.04282863568135882, 0.003686772597963488], 'true,true': [0.0029246202385189435, 0.026623724153055733], 'true,true,false': [0.0006708833124972335, 0.019173761130990428], 'true,true,true': [0.003222146195931701, 0.0011981318803838403]}
{'': [0.029984250533209498, 0.095547127000369], 'false': [0.08285284741664414, 0.14738321022888878], 'false,false': [0.18407616379703304, 0.14290681970944638], 'false,false,true': [0.18407616379703304, nan], 'false,false,false': [0.14290681970944638, nan], 'false,true': [0.056767595345651393, 0.0004017984548765651], 'false,true,true': [nan, 0.056767595345651393], 'true': [0.0, 0.059288736256453575]}
{'': [0.0010856757622672054, 0.06632600221249593], 'false': [0.027443858587112967, 0.09023362868688925], 'false,false': [3.313997242830139e-06, 0.09116552292019049], 'false,false,false': [0.07355466471429796, 0.1348764832684381], 'false,true': [0.003218567750403852, 0.034799580666424114], 'false,true,false': [0.004668136269902766, 0.03260546536796297], 'true': [0.00014916518025527846, 0.0012512955200254482], 'true,false': [0.0, 0.0006841441174530339]}
{'': [0.0006740283039364074, 0.07281507403947854], 'false': [0.03366565102036205, 0.09424249558686185], 'false,false': [2.5477873563615563e-06, 0.0953676767487018], 'false,false,false': [0.07833057793592697, 0.1443938455588499], 'true': [0.0005414658697984016, 0.0008291758204382327], 'true,true': [0.00012022885279004691, 0.0007524019685401182], 'true,true,false': [0.0, 0.0009838071940787146], 'true,true,true': [3.469446951953614e-18, 4.987022994708268e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.383
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.01940208530865097;  // std dev = 2.295, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | | else return 0.12841920536978257;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.22851930546988244;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.13537665787178907;  // std dev = 4.499, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7354222815044533;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7353028541175952;  // std dev = 2.309, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.15869724441323405;  // std dev = 0.131, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.05570729201161192;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.15708709335834214;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5811488014423563;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3724365293726652;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.047341266064115206;  // std dev = 1.058, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.1231226209509648;  // std dev = 2.474, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.615381885296369;  // std dev = 1.928, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14116354089682853;  // std dev = 0.078, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.3245592286601751;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.17362654760404175;  // std dev = 2.205, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.0787492994129745;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4474900117153242;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5620090094501237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6187131533610145;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.05524188168926739;  // std dev = 1.443, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.0459602941012634;  // std dev = 4.262, 173.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=44 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5691420814960978;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5070874568785825;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.010164833160885697;  // std dev = 1.530, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.16525694839394162;  // std dev = 2.403, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3340368264098095;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.29822166446822734;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1880015283157137;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.009432863772329094;  // std dev = 0.282, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.019762749707645674;  // std dev = 1.069, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.11772964448429453;  // std dev = 3.854, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41272382690037634;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.01713440880368122;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.19768250321724098;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27974941521733426;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4086001524415549;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3176252723023622;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3597180803430387;  // std dev = 0.609, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.125055767188376;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12773766622506028;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1709065635927809;  // std dev = 0.784, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.039795459961154224;  // std dev = 4.139, 168.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=46 */
%   | | | else return 0.11942300669796663;  // std dev = 2.926, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4734397758483022;  // std dev = 0.197, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.1589426629640971;  // std dev = 0.059, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.41021468084934287;  // std dev = 0.990, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.5246780455758073;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.15643069421218678;  // std dev = 0.016, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6376482285009732;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18888879701742753;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.37637152538810026;  // std dev = 0.599, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13799520576782998;  // std dev = 0.878, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.14448343938034036;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1967631131602173;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4402034943855709;  // std dev = 0.334, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.3274097396202274;  // std dev = 1.465, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else return -0.1282160936463801;  // std dev = 0.028, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5089075713880129;  // std dev = 0.683, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2538238284621779;  // std dev = 0.501, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.23098922208413455;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11333448690369083;  // std dev = 0.941, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13324072194637765;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1618718885146927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14861031746455713;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0894335234840615;  // std dev = 0.014, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -8.582697703363271E-4;  // std dev = 1.539, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.08082932329273947;  // std dev = 0.777, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16169063670947828;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return -0.005818026664762556;  // std dev = 2.502, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | | else return 0.06645658285706543;  // std dev = 2.130, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07977107521038419;  // std dev = 0.169, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.1274297632038494;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.33119520738235786;  // std dev = 0.236, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09996497407524585;  // std dev = 0.061, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.06905615238185912;  // std dev = 0.730, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.021220664365010942;  // std dev = 1.066, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.10697344213815294;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.11430345391583137;  // std dev = 1.369, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.02043535347771612;  // std dev = 2.763, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.246', 'seconds']
Refined model CLL: -0.174239


******************************************
Best model found
******************************************
Results 

CLL : -0.199383 

AUC ROC : 0.986231 

AUC PR : 0.236922 

Precision : 0.163955 

Recall : 0.925795 

F1 : 0.278575 

Total Learning Time : 3.383 

Total Inference Time : 3.235480308532715 

Total revision time: 11.55100754547119
Best scored revision CLL: -0.174239


Results 

CLL : -0.199383 

AUC ROC : 0.986231 

AUC PR : 0.236922 

Precision : 0.163955 

Recall : 0.925795 

F1 : 0.278575 

Total Learning Time : 11.57221869277954 

Total Inference Time : 3.235480308532715 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.336
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1724346493852252;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.16584124279181875;  // std dev = 4.992, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6115427388363549;  // std dev = 3.939, 89.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=69 */
%   | | | else return -0.16367895156026058;  // std dev = 0.006, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16653882456488167;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4811111195024076;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07840843291862817;  // std dev = 4.427, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7062799074856826;  // std dev = 0.990, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.1421144830798924;  // std dev = 3.94e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47542757614889813;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.02545682849181494;  // std dev = 1.434, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.46486751225164635;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.47699954422407964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.633259293491387;  // std dev = 1.100, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.045436994502852046;  // std dev = 5.090, 230.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.61982774102654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09794542356042076;  // std dev = 1.639, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3591458597843054;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1563941041313955;  // std dev = 1.417, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.10833226786222871;  // std dev = 5.203, 207.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4672941158994618;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.00983018075759945;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.03894480152607041;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2942064445006475;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3949627978913763;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3547316433647131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.006489480103861938;  // std dev = 2.204, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.13681820806449635;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.09485318254238141;  // std dev = 4.628, 158.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=55 */
%   | | | else return 0.017952464909180097;  // std dev = 1.895, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2584146798186343;  // std dev = 0.181, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27827459541775024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5009017790848034;  // std dev = 1.648, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18572162462717878;  // std dev = 0.450, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.35124839468371843;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06729968516116454;  // std dev = 3.962, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18354516607889326;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25084412533011957;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4590514372159393;  // std dev = 1.810, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | | else return -0.1577003212715289;  // std dev = 0.206, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2259520600627556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.011219500782280402;  // std dev = 1.465, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16520761956338195;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1962073323781335;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09260138476861017;  // std dev = 1.778, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.31920208466992883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.005205412892026402;  // std dev = 1.715, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.01781905117978988;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03304897158431624;  // std dev = 3.367, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.05626062058505214;  // std dev = 1.390, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13440889707344855;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20934574679303908;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16711009258562803;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.009021693592688913;  // std dev = 2.224, 112.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.015189533560232393;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.011009214676872808;  // std dev = 3.439, 148.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=40 */
%   | | | else return -0.0062288674425242715;  // std dev = 1.470, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.552', 'seconds']
Parameter learned model CLL:-0.201394 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.757, 72, 33], 'false,false,true,false': [4.992, 81, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.051, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.939, 20, 69], 'false,false,true,false': [0.006, 160, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.939, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.427, 96, 34], 'false,true,false,true': [0.99, 1, 37], 'false,true,false,false': [3.94e-08, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.434, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.034, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.1, 1, 14], 'false,true,false': [5.09, 173, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.639, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.417, 4, 4], 'false,true': [5.203, 136, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.086, 0, 7], 'true,true,false': [0.146, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.204, 39, 12], 'false,false,true': [0.853, 1, 3], 'false,false,false,true': [4.628, 103, 55], 'false,false,false,false': [1.895, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.181, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.648, 3, 33], 'true,false': [0.45, 88, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [3.962, 80, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.093, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.81, 3, 71], 'false,true,false': [0.206, 119, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.465, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.08, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.018, 0, 3], 'false,true,true': [1.778, 47, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.715, 46, 17], 'false,false,true': [0.854, 1, 3], 'false,false,false,true': [3.367, 76, 40], 'false,false,false,false': [1.39, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.016, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.016, 0, 3], 'false,true': [2.224, 83, 29], 'false,false,true': [0.856, 1, 3], 'false,false,false,true': [3.439, 108, 40], 'false,false,false,false': [1.47, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.2173575312477934], 'false': [0.18750000000000006, 0.21464314413032495], 'false,false': [0.21420745069393737, 0.22222222222222207], 'false,false,false': [0.22222222222222224, 0.22222222222222224], 'false,false,true': [0.21551020408163402, 0.2130177514792912], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 0.22222222222222224], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.1301775147928995, 0.20384925818111949], 'false': [0.0008585132404309951, 0.20145405856269968], 'false,false': [0.2003233969716272, 0.2222222222222224], 'false,false,false': [0.2222222222222224, nan], 'false,false,true': [0.1742903756507967, 2.0257425608072311e-07], 'true': [0.1224489795918368, 0.13888888888888884], 'false,true': [0.0008585132404309951, nan]}
{'': [0.07591834345332531, 0.16179216754934542], 'false': [0.15923554489178374, 0.20108246144565373], 'false,false': [0.2222222222222222, 0.15824024128502318], 'false,false,true': [nan, 0.2222222222222222], 'false,true': [0.15076085350204774, 0.16699194787838384], 'false,true,false': [0.0257795722169002, 1.9927079929169476e-17], 'false,false,false': [0.15824024128502318, nan], 'true': [0.09792157094819649, 0.0]}
{'': [0.0001201546724066996, 0.13552625002408752], 'false': [0.13056605877790328, 0.22595774238836175], 'false,false': [0.0, 0.2238366963091503], 'false,false,false': [0.2238366963091503, nan], 'false,true': [0.08069246429503837, 0.11266347704454661], 'false,true,true': [nan, 0.0806924642950382], 'true': [0.000118789576030931, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.20010226164278105, 0.13569322364939812], 'true': [8.866025553246258e-07, 0.25115961941901754], 'false': [0.1307758734394978, 0.19551470717804234], 'false,false': [0.0, 0.1958302016301809], 'false,false,false': [0.20408163265306128, 0.18749999999999994], 'true,true': [8.866025553246258e-07, nan], 'false,false,true': [nan, 0.0]}
{'': [0.004629152236682668, 0.1311258684567786], 'false': [0.09526559304938585, 0.13912436724743332], 'false,false': [0.18194103070363904, 0.13812495431660493], 'false,false,false': [0.13558729460483118, 0.14969732497119323], 'true': [0.005008614137675194, 0.0], 'true,true': [0.0010587593197297787, 0.007118652122196201], 'true,false': [nan, 0.0]}
{'': [0.11564114932116701, 0.12952773212393634], 'false': [0.00015406971924902813, 0.13079556466845546], 'false,false': [0.13079556466845546, nan], 'true': [0.06888600049390564, 0.002303802458404992], 'true,true': [0.0030162085868377804, 0.07545534442274669], 'true,true,false': [nan, 0.0754553444227466], 'true,true,true': [0.003281973423012097, 0.0]}
{'': [0.0019154908117325594, 0.10960308726458083], 'false': [0.10712790923548444, 0.13675375996709196], 'false,false': [0.0, 0.14298879779728502], 'false,false,false': [0.14298879779728502, nan], 'false,true': [0.04429131214005021, 0.00035653923811503123], 'false,true,true': [nan, 0.04429131214005035], 'true': [4.625929269271485e-18, 0.00174363437692171], 'false,false,true': [0.0, nan]}
{'': [0.000801115337638103, 0.08184155565555673], 'false': [0.05298715404650756, 0.10540744084846884], 'false,false': [0.1824847448235597, 0.1029323039453999], 'false,false,false': [0.09775398630093843, 0.14865434569407407], 'false,true': [0.054491371262755356, 0.04755932363318548], 'false,true,false': [0.0, 0.04666985502471228], 'true': [0.0007984527167890047, 0.00010931951837721739], 'true,false': [nan, 0.00010931951837721739]}
{'': [0.0006016976442321596, 0.07048024996584883], 'false': [0.044164569774350314, 0.08812798548155126], 'false,false': [0.18326788392483162, 0.0857927527537544], 'false,false,false': [0.0798951075395204, 0.14396210340017151], 'true': [0.0006468282717477652, 8.536405085881234e-05], 'true,true': [0.0006468282717477652, nan], 'true,true,true': [3.729087983180993e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 6.208
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.26991364098186527;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.1753532361747807;  // std dev = 6.347, 186.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=59 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.2194734122109545;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6851336406819079;  // std dev = 3.198, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.1635534314097943;  // std dev = 0.136, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2505903777887459;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.02170787838683558;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4720331034129513;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.07551880917561982;  // std dev = 3.149, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return 0.21411812800751545;  // std dev = 2.637, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6404177756560021;  // std dev = 1.660, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14490603713106834;  // std dev = 0.034, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.0053442843167761265;  // std dev = 0.747, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11569730239715988;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.22719100265621356;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03236396906382654;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4379083062503244;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4379083062503244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5586703336205628;  // std dev = 0.917, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.06670578392251632;  // std dev = 2.476, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.03158606171957565;  // std dev = 3.458, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return 0.07240602498967061;  // std dev = 3.269, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6719534103505254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.07455060596370382;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0017267997162955953;  // std dev = 1.533, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3345752465918845;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3345752465918846;  // std dev = 7.45e-09, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.05639081926730308;  // std dev = 1.337, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.05793507071530014;  // std dev = 1.499, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06917873657816509;  // std dev = 3.163, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return 0.12745634805119593;  // std dev = 3.719, 101.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=38 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5112680813181605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.133954674301181;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03776671404815819;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2503591382823322;  // std dev = 0.231, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( phenotype(A, H), interaction(D, D) )
%   | | | then return 0.08760642834644354;  // std dev = 1.327, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.023728071420206207;  // std dev = 2.150, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5279313227182766;  // std dev = 1.480, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.16636937586583106;  // std dev = 0.172, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( interaction(J, L), location(A, K) )
%   | | | then return -0.11382760325313646;  // std dev = 1.140, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.028582171228161115;  // std dev = 1.740, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.08576073755205907;  // std dev = 0.824, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.044147555443450066;  // std dev = 2.532, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26549625389801973;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.4784819261890206;  // std dev = 0.736, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.7522234408818246;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.19817798356786773;  // std dev = 0.112, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20339058248574685;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4540978594824745;  // std dev = 0.861, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.19280147631837932;  // std dev = 0.348, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.0030506242062125527;  // std dev = 1.493, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.0965880288549132;  // std dev = 2.860, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1768270197853139;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17434102469657478;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.32008648969418346;  // std dev = 2.890, 79.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=68 */
%   | | | else return 0.4080216220955785;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12578600131591344;  // std dev = 0.240, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.16025112493050023;  // std dev = 0.191, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2724864937568118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.03437229620160675;  // std dev = 1.141, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.05687690978912165;  // std dev = 0.715, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18355338936226093;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.06827247770878464;  // std dev = 1.504, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.10501361599652681;  // std dev = 0.547, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return -0.03291932459478841;  // std dev = 0.513, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0016369720629295823;  // std dev = 1.706, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.40618038364162606;  // std dev = 0.449, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1816568623539249;  // std dev = 0.420, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.00782278942481696;  // std dev = 2.007, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.05252991431736112;  // std dev = 2.149, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14435225838891147;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.004280104208911811;  // std dev = 0.695, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, A), complex(G, F) )
%   | | then return -0.05911470096284847;  // std dev = 0.164, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.08953220534639936;  // std dev = 0.906, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.011937149975174111;  // std dev = 1.511, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return -0.010289854153106502;  // std dev = 2.820, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | | else return 0.081630093956236;  // std dev = 1.527, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( location(A, M) )
%   | | | then return 0.108275480320961;  // std dev = 0.874, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.010724511076813416;  // std dev = 0.366, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.603', 'seconds']
Refined model CLL: -0.187554


******************************************
Best model found
******************************************
Results 

CLL : -0.175515 

AUC ROC : 0.985886 

AUC PR : 0.236771 

Precision : 0.173419 

Recall : 0.865248 

F1 : 0.288928 

Total Learning Time : 6.208 

Total Inference Time : 8.10227108001709 

Total revision time: 22.76537713432312
Best scored revision CLL: -0.187554


Results 

CLL : -0.175515 

AUC ROC : 0.985886 

AUC PR : 0.236771 

Precision : 0.173419 

Recall : 0.865248 

F1 : 0.288928 

Total Learning Time : 33.483289093017575 

Total Inference Time : 8.10227108001709 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.328
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13248521828535173;  // std dev = 4.743, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   | | | else return 0.23004976154579262;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7271035802978393;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.3558370485745908;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6688612093931091;  // std dev = 3.531, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.16548964502452743;  // std dev = 0.090, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else if ( location(A, I) )
%   | | | then return 0.20810380147211915;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42660129831163024;  // std dev = 1.330, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.42414118838298825;  // std dev = 0.941, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05992187944792381;  // std dev = 4.452, 142.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6483071768454771;  // std dev = 1.677, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1498930808150995;  // std dev = 9.66e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14847124896975747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08851735410753282;  // std dev = 1.624, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4170044593281609;  // std dev = 0.953, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.028578179786035884;  // std dev = 0.673, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3065014742593066;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.49577044728246644;  // std dev = 1.978, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.02319375868415275;  // std dev = 5.123, 253.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6218708574367979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.24479098424217996;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2680366933233431;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2748768618100698;  // std dev = 0.977, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07000509149668155;  // std dev = 5.752, 263.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.468946471310854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.008201324985120217;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32537003152536115;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.49928577594256485;  // std dev = 0.221, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.35587330245876414;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.019806380989786227;  // std dev = 2.889, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.195544981664984;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05068983892231695;  // std dev = 4.613, 178.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=51 */
%   | | | else return 0.02890423756931417;  // std dev = 2.254, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3073454037277546;  // std dev = 0.313, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.27904695021143566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2650474778723795;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4714997948658224;  // std dev = 1.832, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.18591093531401054;  // std dev = 0.715, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2684234833267948;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0685389182613983;  // std dev = 4.255, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.09476849696255372;  // std dev = 0.849, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.015894680462041677;  // std dev = 1.506, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3651550071235996;  // std dev = 3.271, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.15081042910691475;  // std dev = 0.264, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22648945430107814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.002218533750793058;  // std dev = 1.500, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.12322478986845761;  // std dev = 0.826, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16650728314227414;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2319695011469869;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03791468716715434;  // std dev = 1.843, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.15338862772889053;  // std dev = 1.008, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.05674511821552593;  // std dev = 1.497, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2220947820199278;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0230328576288006;  // std dev = 3.891, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.10021151999430752;  // std dev = 1.382, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1746086030022571;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.060019342595393495;  // std dev = 0.868, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7435370714188607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11015087596954998;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02183338924008709;  // std dev = 2.593, 127.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.01724571063119686;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02327412328320676;  // std dev = 3.787, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return -0.016991894083821978;  // std dev = 1.490, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.189', 'seconds']
Parameter learned model CLL:-0.199157 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.743, 82, 31], 'false,false,true,false': [5.316, 76, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.024, 0, 10], 'false,true,true': [1.595, 4, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.531, 15, 76], 'false,false,true,false': [0.09, 180, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.33, 2, 11], 'true,false': [0.941, 1, 6], 'false,true,true': [4.452, 108, 34], 'false,true,false,true': [1.677, 3, 48], 'false,true,false,false': [9.66e-08, 97, 0], 'false,false,true,true': [0.816, 2, 1], 'false,false,true,false': [1.624, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.953, 1, 16], 'true,false': [0.673, 1, 1], 'false,true,true,true': [0.792, 1, 3], 'false,true,true,false': [1.978, 5, 21], 'false,true,false': [5.123, 195, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.487, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.935, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.977, 1, 10], 'false,true': [5.752, 181, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.729, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.033, 0, 9], 'true,true,false': [0.221, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.889, 49, 19], 'false,false,true': [0.949, 1, 8], 'false,false,false,true': [4.613, 127, 51], 'false,false,false,false': [2.254, 27, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.313, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.832, 4, 33], 'true,false': [0.715, 109, 0], 'false,true': [0.082, 0, 5], 'false,false,true': [4.255, 104, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.849, 1, 7], 'true,false': [1.506, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.271, 14, 82], 'false,true,false': [0.264, 191, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.5, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.826, 1, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.12, 0, 5], 'false,true,true': [1.843, 46, 13], 'false,true,false,true': [1.008, 1, 8], 'false,true,false,false': [1.497, 59, 11], 'false,false,true': [0.073, 0, 5], 'false,false,false,true': [3.891, 106, 47], 'false,false,false,false': [1.382, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.868, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.885, 2, 3], 'false,true': [2.593, 95, 32], 'false,false,true': [0.928, 1, 5], 'false,false,false,true': [3.787, 108, 47], 'false,false,false,false': [1.49, 12, 4]}]
{'': [0.05246913580246885, 0.22392466199336908], 'false': [-2.5376526277146434e-16, 0.21760000000000107], 'false,false': [0.21930016801811694, 0.18749999999999983], 'false,false,true': [0.19907588691362016, 0.23359060173485532], 'false,false,false': [0.18749999999999983, nan], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05204485709620737, 0.20591135226138835], 'false': [0.23140495867768607, 0.20279904781305969], 'false,true': [0.23140495867768607, nan], 'false,false': [0.20129746687999478, 0.23140495867768604], 'false,false,false': [0.23140495867768604, nan], 'false,false,true': [0.13699688051545766, 4.5344610934345334e-05], 'true': [0.10937499999999989, 5.821946503408171e-05]}
{'': [0.1326828285274841, 0.15488644301215068], 'false': [0.15253758158145408, 0.19492259130074654], 'false,false': [0.19492259130074654, nan], 'false,false,true': [0.22222222222222218, 0.18843835224032812], 'false,true': [0.13956724746471116, 0.16289795868005888], 'false,true,false': [0.05514920294136161, 9.614302481290016e-17], 'true': [0.13607237962068652, 0.12638401403426225]}
{'': [0.09033990704380308, 0.13325013050375478], 'false': [0.1281596448026708, 0.23394832425427783], 'false,false': [0.0, 0.24572365942790617], 'false,false,false': [0.24572365942790617, nan], 'false,true': [0.15538235068235812, 0.10371817742771372], 'false,true,true': [0.15665918083617048, 0.1504095493875137], 'true': [0.05343383401522933, 0.22639699616775752], 'false,false,true': [nan, 0.0]}
{'': [0.0963042245354496, 0.12961315377491647], 'false': [0.1257929966982891, 0.1875821739526494], 'false,false': [0.0, 0.18681864277394164], 'false,false,false': [0.18681864277394164, nan], 'true': [0.10937499999999999, 0.08677850584528121], 'true,true': [0.10937499999999999, nan], 'false,false,true': [nan, 0.0]}
{'': [0.01002036813662785, 0.12285398734528877], 'false': [0.12276498703165917, 0.12262578590623825], 'false,false': [0.10015918655293331, 0.1226789753369153], 'false,false,false': [0.119560802209841, 0.13728698138763096], 'true': [0.010593022674982588, 0.0], 'true,true': [0.0001204159313883525, 0.008153921096659689], 'true,false': [nan, 0.0]}
{'': [0.10675456049488244, 0.11731430643573422], 'false': [0.0013591825643063603, 0.11987330829977819], 'false,false': [0.11987330829977819, nan], 'true': [0.06844144480318638, 0.00468616488999982], 'true,true': [0.006184740451372281, 0.08687786110405611], 'true,true,false': [9.25185853854297e-18, 0.09072532006498767], 'true,true,true': [0.006547006327000308, 0.0]}
{'': [0.14524617531722192, 0.09892768150500328], 'true': [0.09019585652136042, 0.17445802263803933], 'false': [0.09677977048093947, 0.13515120932859878], 'false,false': [0.0, 0.1406394866290202], 'false,false,false': [0.1406394866290202, nan], 'false,true': [0.1114331248852719, 0.00036542425959994933], 'false,true,true': [nan, 0.11143312488527174], 'false,false,true': [0.0, nan]}
{'': [0.04334989843003427, 0.0803387459338285], 'false': [0.05077557300679122, 0.1023429464946011], 'false,false': [0.0010784207308256744, 0.10431810468027991], 'false,false,false': [0.09894317290647421, 0.17352149784954266], 'false,true': [0.057600476942267574, 0.04566733397963666], 'false,true,false': [0.11282953196344053, 0.03200174207858732], 'true': [0.06829262843075021, 0.002948355603539946], 'true,false': [0.0, 0.0029033258489283287]}
{'': [0.11916767315781471, 0.07992400278163168], 'true': [0.09941341391191169, 0.15673637801734733], 'true,true': [0.05711007069309811, 0.0], 'false': [0.05293669479974187, 0.09857646906892537], 'false,false': [0.1435896124566999, 0.0969968872625054], 'false,false,false': [0.09253523889049334, 0.13874945917652845], 'true,true,true': [-3.96508223080413e-18, 0.10765479208590024], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.08814893509951185;  // std dev = 4.208, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   | | | else return 0.18762870388564074;  // std dev = 6.182, 173.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.7889802403930554;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6817410265149422;  // std dev = 3.442, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15825456068366786;  // std dev = 0.153, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.3437422536709448;  // std dev = 0.993, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12707513362151887;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5663219248514244;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.09296807749091714;  // std dev = 3.260, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.03395283980419239;  // std dev = 2.874, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6406629064523307;  // std dev = 1.911, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14019090416048785;  // std dev = 0.055, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, K) )
%   | | | then return 0.3085863392892728;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13040776505733484;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.011251491616680848;  // std dev = 0.628, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4238312997811798;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19439161154644835;  // std dev = 0.451, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.627564546918138;  // std dev = 0.444, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.13566304880645436;  // std dev = 0.329, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.14790332765173667;  // std dev = 2.218, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.10311989739253394;  // std dev = 4.225, 136.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=46 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.552586352101949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.36259536885882365;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0318004626414492;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.34986924082723075;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12100627659387861;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12375091543810764;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.056574088242661;  // std dev = 5.219, 240.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=72 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.07711051922971027;  // std dev = 0.630, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16097671087681018;  // std dev = 1.565, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41545482286796453;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2809057792803761;  // std dev = 1.165, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0441930284795381;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19018807839062823;  // std dev = 0.320, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.011407093784354116;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.36727065623380306;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3193164244879342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then return 0.0034833530177146932;  // std dev = 0.310, 127.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=30 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.49986461860724984;  // std dev = 0.293, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13148453406865773;  // std dev = 0.163, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.016285753695258354;  // std dev = 2.036, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.06956111532110344;  // std dev = 3.842, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23277315968811044;  // std dev = 0.780, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.25421984421073385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5409104502038657;  // std dev = 0.120, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18260003333705085;  // std dev = 0.089, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.30211433131747245;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4995839145003663;  // std dev = 0.463, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14122337285476472;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.04411012117651978;  // std dev = 2.414, 64.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | | | else return 0.04106370626973875;  // std dev = 2.957, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.18092688391448908;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2752790651898524;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2406767019567163;  // std dev = 1.338, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.3926039483345143;  // std dev = 2.605, 63.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=55 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.13833254416560636;  // std dev = 0.368, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | | else return -0.1462763710080821;  // std dev = 0.175, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20908472757792518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.05590448581755059;  // std dev = 0.956, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.04584069374164795;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17938455079423743;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.18923560013439267;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.19418359287367992;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( complex(A, H), location(A, I) )
%   | | then return -0.04536181010853144;  // std dev = 0.192, 81.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=15 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.03490008474314004;  // std dev = 1.655, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.05942790165840454;  // std dev = 0.530, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20496681512570963;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.050749854115132;  // std dev = 2.841, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | | else return -0.025234064009486572;  // std dev = 2.262, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.11786730339585229;  // std dev = 0.227, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.24584475654062177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09272861186587453;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.2830661078722308;  // std dev = 2.442, 86.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=77 */
%   | | | else return -0.11705148776449575;  // std dev = 1.529, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else return -0.1309393192703608;  // std dev = 0.046, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.33594822958559617;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.02202712493364765;  // std dev = 0.469, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09563839714943283;  // std dev = 0.619, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.782', 'seconds']
Refined model CLL: -0.182154


******************************************
Best model found
******************************************
Results 

CLL : -0.159441 

AUC ROC : 0.992286 

AUC PR : 0.421762 

Precision : 0.321377 

Recall : 0.845283 

F1 : 0.465696 

Total Learning Time : 7.189 

Total Inference Time : 10.747767925262451 

Total revision time: 28.309171239852905
Best scored revision CLL: -0.182154


Results 

CLL : -0.159441 

AUC ROC : 0.992286 

AUC PR : 0.421762 

Precision : 0.321377 

Recall : 0.845283 

F1 : 0.465696 

Total Learning Time : 39.02708319854736 

Total Inference Time : 10.747767925262451 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.423
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.02141424122196133;  // std dev = 2.587, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | | else return 0.1637044906550669;  // std dev = 5.528, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18018283340459706;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6171327900556461;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7385128322212615;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8398751457465552;  // std dev = 0.048, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15899742716150028;  // std dev = 0.088, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13471776590255083;  // std dev = 3.549, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.016588095123180362;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5809067395790397;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.585161971862008;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.085274576555084;  // std dev = 2.069, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6598316337915894;  // std dev = 1.005, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14242501916370504;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.550660127024114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15202974202290304;  // std dev = 3.608, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0636342751250718;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4371732636136945;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44419586938919337;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3878180155271861;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5898252724495806;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07114685568770965;  // std dev = 4.157, 176.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41403200502403614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5747623570279485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06790799529822483;  // std dev = 3.614, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.14351627666383968;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33357020049701447;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33602599123956517;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05714228079155621;  // std dev = 4.217, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31835239220556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4320593731609407;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12628579158184694;  // std dev = 3.526, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.792860973427091;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2623011016485111;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36845325713940263;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2535616022789824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28212311432883497;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.33059100713570755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.10107621773289832;  // std dev = 1.142, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2653643984815466;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05556304222195424;  // std dev = 3.950, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | | | else return 0.03503410090105311;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24046649622470606;  // std dev = 0.149, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23526085614821207;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2316518504223264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6382633888473687;  // std dev = 0.782, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19593348745582123;  // std dev = 0.616, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2140029593537906;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0413843122888357;  // std dev = 3.378, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17450821418103182;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18438929199461584;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44072012370839103;  // std dev = 0.793, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14561397142691646;  // std dev = 0.428, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19572494488343156;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05010034825010463;  // std dev = 3.037, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15294303441646045;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1640337084957227;  // std dev = 0.408, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1871359502895624;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07951096376974692;  // std dev = 0.407, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18417911105368756;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02568570068905882;  // std dev = 1.239, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1545495263602041;  // std dev = 0.000803, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.010377729671950652;  // std dev = 2.795, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.026629123271643972;  // std dev = 3.069, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13450195662447675;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.144036378711328;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13170853657724546;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15607022546863095;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.017582991930168268;  // std dev = 1.328, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1354151308425548;  // std dev = 0.000719, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026938139931148245;  // std dev = 2.728, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.030524181166660683;  // std dev = 3.050, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.488', 'seconds']
Parameter learned model CLL:-0.176505 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.587, 41, 8], 'false,false,true,false': [5.528, 100, 44], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.932, 1, 8], 'false,true,true': [0.052, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.048, 0, 52], 'false,false,true,false': [0.088, 135, 0], 'false,false,false,true': [3.549, 42, 18], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.026, 0, 6], 'true,false': [0.032, 0, 8], 'false,true,true': [2.069, 24, 8], 'false,true,false,true': [1.005, 1, 48], 'false,true,false,false': [8.69e-08, 98, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.608, 39, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.036, 0, 11], 'true,false': [0.021, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.137, 0, 3], 'false,true,false': [4.157, 124, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.614, 47, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.023, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.031, 0, 9], 'false,true': [4.217, 133, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.526, 36, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.022, 0, 7], 'true,true,false': [0.103, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.142, 23, 3], 'false,false,true': [0.018, 0, 6], 'false,false,false,true': [3.95, 117, 49], 'false,false,false,false': [3.79, 51, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.149, 0, 12], 'true,true,true,false': [0.038, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.782, 0, 36], 'true,false': [0.616, 92, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.378, 88, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.016, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.793, 0, 56], 'false,true,false': [0.428, 126, 0], 'false,false,true,true': [0.033, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.037, 42, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.016, 0, 9], 'true,false,true': [0.408, 1, 1], 'true,false,false': [0.027, 0, 4], 'false,true,true': [0.407, 17, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.239, 49, 14], 'false,false,true': [0.000803, 0, 5], 'false,false,false,true': [2.795, 91, 36], 'false,false,false,false': [3.069, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.009, 0, 5], 'true,true,true,false': [0.023, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [1.328, 55, 17], 'false,false,true': [0.000719, 0, 5], 'false,false,false,true': [2.728, 77, 36], 'false,false,false,false': [3.05, 42, 20]}]
{'': [0.06222222222222188, 0.20907872501602537], 'false': [0.12244897959183662, 0.20262975778546846], 'false,false': [0.19683749899326236, 0.2185223725286156], 'false,false,false': [0.21832806664751458, 0.22222222222222224], 'false,false,true': [0.1366097459391922, 0.2121913580246922], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [0.08999999999999977, 0.0]}
{'': [0.06143170998773121, 0.20502176009907933], 'false': [0.0005664054911387328, 0.2008942938541228], 'false,false': [0.20035084647971632, 0.20232163133801015], 'false,false,false': [0.20997921990021587, 0.14876033057851243], 'false,false,true': [4.45143048577115e-05, 5.7676639130559506e-05], 'true': [0.0, 0.09642533701225285], 'false,true': [0.0005437492714932546, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.00012907412152664475, 0.16613092606492055], 'false': [0.14724687607415057, 0.2180530971798262], 'false,false': [0.21952544096214138, 0.1875], 'false,false,true': [0.0, 0.22059777475050346], 'false,false,false': [0.1875, nan], 'false,true': [0.1338013493542816, 0.1498917604923322], 'false,true,false': [0.02059812333630697, 7.703588334133739e-17], 'true': [0.00011625175254244742, 0.00013093075464409853]}
{'': [0.00013278146039993492, 0.1303222664667668], 'false': [0.10105726475829731, 0.20246965616067988], 'false,false': [0.0064585615138254004, 0.2031559227645753], 'false,false,false': [0.20091286267112532, 0.22222222222222224], 'false,true': [0.01231022963781847, 0.09820336880349091], 'false,true,true': [0.0, 0.006211906554763891], 'false,false,true': [0.0, 0.0], 'true': [0.00011972358770526917, 0.00014191126190029232]}
{'': [0.0001070928447065895, 0.1259909242565528], 'false': [0.09409788538742288, 0.22382728036536526], 'false,false': [0.0032323193794968064, 0.229768532495332], 'false,false,false': [0.22601181230113637, 0.0], 'false,false,true': [0.0, 0.0], 'true': [0.00010697318717824977, 0.00010500542533580731], 'true,true': [0.00010697318717824977, nan]}
{'': [0.0030782089367638677, 0.1194479935070514], 'false': [0.05014046103643783, 0.12451681946287488], 'false,false': [5.683001432270814e-05, 0.1265162238623334], 'false,false,false': [0.09399365302951589, 0.20225972657428556], 'true': [0.0036104120204978733, 0.0010109362018104011], 'true,true': [6.621862458370107e-05, 0.002642026753571558], 'true,false': [0.00020393999264346763, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13679022490770087, 0.089580766447385], 'true': [0.045538455703941716, 0.004120648631818563], 'false': [2.1358400020821122e-07, 0.09203795538598661], 'false,false': [0.09203795538598661, nan], 'true,true': [0.0016982635697839993, 0.020896411466394784], 'true,true,false': [0.0, 0.01700840941666737], 'true,true,true': [0.0018591411131645603, 0.0007097708621240512]}
{'': [4.1370420634877026e-05, 0.09522934362217542], 'false': [0.07769015112378959, 0.14481477465652282], 'false,false': [0.0005428300588065441, 0.14880600450495404], 'false,false,false': [0.14880600450495404, nan], 'false,true': [0.011219899370645223, 0.0014516633537937922], 'false,true,true': [nan, 0.011219899370645159], 'false,false,true': [0.0005428300588065441, nan], 'true': [2.0739008235737266e-07, 3.039882265294669e-05]}
{'': [0.02377164363309817, 0.06903529772026465], 'false': [0.02212826804606323, 0.0880058151148284], 'false,false': [1.2884027854875856e-07, 0.08980957465275291], 'false,false,false': [0.06151186408830744, 0.14492425130055164], 'true': [2.975530859203632e-05, 0.055264646712235244], 'true,false': [0.08321371344595058, 0.0001834035949197163], 'false,true': [0.0092095175623829, 0.024917672463527517], 'false,true,false': [0.0, 0.02435353309358204]}
{'': [0.0001919609497082713, 0.07415089255797154], 'false': [0.024491809775464952, 0.09333496244007482], 'false,false': [1.0342896331339002e-07, 0.09568241616142849], 'false,false,false': [0.06586074540327214, 0.1500265124049485], 'true': [8.416142544055427e-05, 0.00019631484166906035], 'true,true': [9.708938694178923e-05, 0.0], 'true,true,true': [1.6386941143273213e-05, 0.00017477771044126234], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.828
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), enzyme(A, K) )
%   | | | then return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.10405057444377463;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.16533847758317144;  // std dev = 5.706, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8386698673802755;  // std dev = 0.048, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15830716593626679;  // std dev = 0.115, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.013458321540150597;  // std dev = 1.810, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.14978973161221001;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.07550659563266249;  // std dev = 0.804, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.10119494986390233;  // std dev = 1.854, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6807209867631104;  // std dev = 0.272, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13938402753391452;  // std dev = 0.089, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17777872383228413;  // std dev = 3.525, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else return 0.015307308476055709;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3873789045724001;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6018969550060268;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11511343718129671;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.052806461969309625;  // std dev = 4.195, 189.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=52 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5111478844538403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.3557593570327669;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10851121605221002;  // std dev = 3.192, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then return 0.06701381920331036;  // std dev = 0.302, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.146927384366847;  // std dev = 0.753, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.129277635114647;  // std dev = 3.463, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.25283782363411045;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2864283404596653;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3103708205829747;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I), phenotype(A, J) )
%   | | | then return -0.3171314425469978;  // std dev = 0.524, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11035952273451663;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.09476621792319295;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.016612089364801685;  // std dev = 0.607, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.041176168266047294;  // std dev = 3.296, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.11060256238874375;  // std dev = 4.042, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2358681307661871;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6231540719870694;  // std dev = 0.690, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20539553433911648;  // std dev = 0.084, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(A, I), interaction(H, H) )
%   | | | then return 0.31882492126368517;  // std dev = 0.833, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07762059260862805;  // std dev = 2.509, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.01793603007428156;  // std dev = 1.274, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.002150895691164032;  // std dev = 1.083, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16889054107045576;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17462824209028077;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3321533110585421;  // std dev = 0.327, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.47384479902363463;  // std dev = 0.275, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1354521809651305;  // std dev = 0.327, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.14523196042054484;  // std dev = 0.219, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.23083638986774446;  // std dev = 0.092, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.11642049211378323;  // std dev = 1.261, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.003877826509353736;  // std dev = 2.867, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15005805945804496;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18548190035750972;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.045853244080608195;  // std dev = 0.390, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.08307821083725458;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.18781485290951339;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.007620101833941759;  // std dev = 1.255, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.0136031099227825;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.06513420754735641;  // std dev = 1.461, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.01733717750215727;  // std dev = 3.709, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14046154598677624;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.021409726502617087;  // std dev = 0.554, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( location(G, H), complex(A, I) )
%   | | | then return -0.06335525538371038;  // std dev = 0.239, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.019951540798923938;  // std dev = 0.403, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03304817153389306;  // std dev = 1.076, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.03237082677650357;  // std dev = 0.586, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15483533173744435;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 7.306073963346948E-4;  // std dev = 2.253, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | | else return 0.06057952892539289;  // std dev = 3.137, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.875', 'seconds']
Refined model CLL: -0.185385


******************************************
Best model found
******************************************
Results 

CLL : -0.194469 

AUC ROC : 0.98215 

AUC PR : 0.211996 

Precision : 0.135248 

Recall : 0.815884 

F1 : 0.232033 

Total Learning Time : 2.828 

Total Inference Time : 2.965649366378784 

Total revision time: 10.062821937561035
Best scored revision CLL: -0.176505


Results 

CLL : -0.194469 

AUC ROC : 0.98215 

AUC PR : 0.211996 

Precision : 0.135248 

Recall : 0.815884 

F1 : 0.232033 

Total Learning Time : 20.78073389625549 

Total Inference Time : 2.965649366378784 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.515
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04124752664880815;  // std dev = 3.259, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | | else return 0.17014893509951173;  // std dev = 5.180, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.748592982892723;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6311337978940016;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7522852607523609;  // std dev = 2.145, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15858921997170727;  // std dev = 0.096, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10703681931541804;  // std dev = 2.834, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.17780077116908896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5734183503905234;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5880862353656813;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0619525536730873;  // std dev = 2.829, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6783925877159593;  // std dev = 0.993, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1465543569518353;  // std dev = 0.278, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6584387796379981;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16155583432944687;  // std dev = 2.389, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05514894666470079;  // std dev = 1.523, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3708474430084232;  // std dev = 0.983, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5618724314195627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4554525886899644;  // std dev = 0.998, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.040769262638156833;  // std dev = 4.411, 202.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.0806017238283339;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20876474025841085;  // std dev = 0.601, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1306664244670778;  // std dev = 2.691, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.8113645811688547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3403438522410445;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20936379759897752;  // std dev = 0.946, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.059456338050334;  // std dev = 4.496, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3945267982180095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4894068396326445;  // std dev = 0.134, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07093729330297598;  // std dev = 2.484, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.12243629712598846;  // std dev = 1.397, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27145553373278175;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4397743414460682;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.30515901176548177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3741184363958162;  // std dev = 0.125, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04416399885627097;  // std dev = 1.278, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.025702176892736555;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06743199695275952;  // std dev = 4.073, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
%   | | | else return 0.08577454585466773;  // std dev = 2.953, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2567097482006376;  // std dev = 0.209, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.017280536844347216;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.03184231368281776;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.527534220531961;  // std dev = 1.508, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18494084972163244;  // std dev = 0.826, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32172759732337414;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07847867987796564;  // std dev = 3.309, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1781789139974851;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13031674279763183;  // std dev = 0.938, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4486262562610104;  // std dev = 1.299, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1428111274813089;  // std dev = 0.436, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.06908498409836047;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04072043919248954;  // std dev = 2.416, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16489117665505887;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17980423084367203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17085305869957915;  // std dev = 0.455, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08806063143660584;  // std dev = 0.341, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26814048860242806;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.028045772832547063;  // std dev = 1.573, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -3.022449720737064E-4;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.044762096644997515;  // std dev = 2.751, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.04116725368263289;  // std dev = 2.412, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13333305046681576;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.18440382036811825;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1528030294714502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17759197308400537;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.24707874381476425;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.028863001494006633;  // std dev = 1.921, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23190572360707584;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.007317493241811859;  // std dev = 2.943, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | | else return 0.048125715337604964;  // std dev = 2.352, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.846', 'seconds']
Parameter learned model CLL:-0.182868 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [3.259, 58, 13], 'false,false,true,false': [5.18, 86, 39], 'false,false,false,true': [2.491, 20, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.042, 0, 7], 'false,true,true': [0.901, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.145, 5, 52], 'false,false,true,false': [0.096, 151, 0], 'false,false,false,true': [2.834, 30, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.038, 0, 11], 'true,false': [0.042, 0, 4], 'false,true,true': [2.829, 47, 14], 'false,true,false,true': [0.993, 1, 42], 'false,true,false,false': [0.278, 85, 0], 'false,false,true,true': [0.199, 0, 3], 'false,false,true,false': [2.389, 17, 9], 'false,false,false,true': [1.523, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.983, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.998, 1, 6], 'false,true,false': [4.411, 153, 49], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [0.601, 1, 1], 'false,false,false,true': [2.691, 22, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.946, 1, 6], 'false,true': [4.496, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.134, 0, 2], 'false,false,false,true': [2.484, 21, 9], 'false,false,false,false': [1.397, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.022, 0, 9], 'true,true,false': [0.088, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.125, 0, 2], 'false,true': [1.278, 25, 5], 'false,false,true': [1.2, 2, 5], 'false,false,false,true': [4.073, 104, 46], 'false,false,false,false': [2.953, 28, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.209, 0, 13], 'true,true,true,false': [0.909, 1, 3], 'true,true,false,true': [0.863, 1, 3], 'true,true,false,false': [1.508, 3, 33], 'true,false': [0.826, 114, 0], 'false,true': [0.003, 0, 3], 'false,false,true': [3.309, 64, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.938, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.299, 1, 56], 'false,true,false': [0.436, 131, 0], 'false,false,true,true': [0.947, 2, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.416, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.095, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.455, 1, 5], 'false,true,true': [0.341, 18, 1], 'false,true,false,true': [0.189, 0, 6], 'false,true,false,false': [1.573, 62, 17], 'false,false,true': [0.804, 1, 3], 'false,false,false,true': [2.751, 60, 31], 'false,false,false,false': [2.412, 24, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.056, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.032, 0, 2], 'true,false': [0.12, 0, 3], 'false,true': [1.921, 79, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.943, 85, 31], 'false,false,false,false': [2.352, 23, 12]}]
{'': [0.10380622837370206, 0.20531760195650778], 'false': [0.17283950617283939, 0.19711940750236023], 'false,false': [0.19491878384006744, 0.20701963117192096], 'false,false,false': [0.2140309155766945, 0.1874999999999999], 'false,false,true': [0.1495734973219594, 0.21465600000000057], 'false,true': [0.0, 0.1874999999999999], 'false,true,false': [1.4802973661668753e-16, 0.23999999999999994], 'true': [0.07100591715976314, 0.18750000000000006]}
{'': [0.00016732161202218283, 0.1950561797436817], 'false': [0.10155388745766808, 0.18916910983852883], 'false,false': [0.1872335713248387, 0.19796058407966852], 'false,false,false': [0.19584391929513587, 0.2222222222222222], 'false,false,true': [0.08075130287302992, 6.125789106185711e-05], 'false,true': [0.10155388745766808, nan], 'true': [-2.220446049250313e-16, 0.0002561045081969558]}
{'': [0.0002533606516578857, 0.16346016666415777], 'false': [0.15182727066225885, 0.21327124295279196], 'false,false': [0.22114617574286627, 0.17850878010908786], 'false,false,true': [0.013244904713598293, 0.21959416380008545], 'false,false,false': [0.17850878010908786, nan], 'false,true': [0.13123344971279494, 0.16012160883183174], 'false,true,false': [0.022924026781014174, 0.0009093909792633666], 'true': [0.0001285358148356185, 0.0004388545965131607]}
{'': [0.06035356347278015, 0.12403113505250868], 'false': [0.10415139606291708, 0.22406107495049904], 'false,false': [0.20958546131852498, 0.22614443224349262], 'false,false,false': [0.21936935322259352, 0.0], 'false,false,true': [0.22222222222222224, 0.1807748646947055], 'false,true': [0.12573553890545008, 0.09631860326845212], 'false,true,true': [0.0, 0.1422821108832617], 'true': [0.06035356347278015, nan]}
{'': [0.060204094156668414, 0.12024241122419106], 'false': [0.10159279522122677, 0.20870201148806233], 'false,false': [0.008001975341193623, 0.21420211242687495], 'false,false,false': [0.20572683649280316, 0.24389059660483142], 'true': [9.529075240729176e-07, 0.1279580096289213], 'false,false,true': [0.0, 0.00900222225884284], 'true,true': [9.529075240729176e-07, nan]}
{'': [0.006718581769611487, 0.1255134403304581], 'false': [0.054466188305814504, 0.134521566377455], 'false,false': [0.20555354362515135, 0.13185825849307484], 'false,false,false': [0.11057820148494658, 0.20759561123398576], 'true': [0.006668997325225976, 0.006301622984450528], 'true,true': [5.516782379966223e-05, 0.001936191451881203], 'true,false': [0.0, 0.007867300394893556], 'true,false,true': [0.0, nan]}
{'': [0.11309567557316737, 0.11349041359010037], 'false': [2.280648256451171e-06, 0.11526292173950622], 'false,false': [0.11526292173950622, nan], 'true': [0.102962808667294, 0.00598414515732701], 'true,true': [0.061454633358237885, 0.09762184766345734], 'true,true,false': [0.1863473134645896, 0.06319241592286856], 'true,true,true': [0.0033518489529120307, 0.20645088771913303]}
{'': [0.05560231343692344, 0.09766303938557189], 'false': [0.08388593300100072, 0.15783826181297633], 'false,false': [0.1793239451546376, 0.15360919461258904], 'false,false,true': [0.1793239451546376, nan], 'false,false,false': [0.15360919461258904, nan], 'false,true': [0.02959902470890712, 0.0014511233332108041], 'true': [0.0, 0.11005923315786491], 'false,true,true': [nan, 0.029599024708907087]}
{'': [0.012701234551069262, 0.07444960353128979], 'false': [0.030943819587358392, 0.10715764518004385], 'false,false': [0.16168776873304216, 0.10538092460161674], 'false,false,false': [0.08315295438815057, 0.1615590340394954], 'false,true': [0.006115249269400474, 0.03529739479336625], 'false,true,false': [0.005981463490424814, 0.03133147641229697], 'true': [0.0009008509471986004, 0.029528086242365355], 'true,false': [0.0, 0.034437987737604356]}
{'': [0.0029913343266686175, 0.07085872271264446], 'false': [0.03583371652399461, 0.09368099099907182], 'false,false': [1.5209172294453992e-06, 0.09454390603012265], 'false,false,false': [0.07467661520974438, 0.15802833962269935], 'true': [0.000794680646612734, 0.004773357950269795], 'true,true': [0.0007347845883815207, 0.0004830260484907413], 'true,true,true': [0.0, 0.0015873441112581876], 'true,true,false': [0.0, 0.0005197084975939667]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 4.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2273797043302806;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.13786921481979103;  // std dev = 5.368, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7993076171345583;  // std dev = 1.358, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15894164255176024;  // std dev = 0.166, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.11212682856821415;  // std dev = 2.086, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.2116591417485124;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.10901979810012187;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.11943784706485389;  // std dev = 2.563, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6655198221967726;  // std dev = 0.992, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14299945984360685;  // std dev = 0.050, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6996596940672363;  // std dev = 0.982, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.18480972205166796;  // std dev = 0.048, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.010071009754200421;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.45037234028581047;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5206233992887959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5887140949109985;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.019090472359962758;  // std dev = 2.393, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return 0.08732660489108325;  // std dev = 3.410, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.39818855305163564;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.0709181097002095;  // std dev = 2.472, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.05851668419165368;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.17663835727011498;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.3085071004136701;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.022313220779898446;  // std dev = 0.215, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else return 0.05625943631210289;  // std dev = 0.327, 163.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=50 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.2898999580561539;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.025426417278962332;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.01629951568293656;  // std dev = 2.228, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.393300239565134;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24208719779231877;  // std dev = 0.246, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), complex(F, E) )
%   | | then if ( phenotype(D, G), enzyme(F, H) )
%   | | | then return -0.10636003827756833;  // std dev = 1.306, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return -0.01854606846206039;  // std dev = 1.886, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.009190213774464603;  // std dev = 1.153, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.3531842866414315;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.2165361161980647;  // std dev = 1.277, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.006617055570878536;  // std dev = 0.927, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.03862934750368082;  // std dev = 3.029, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.09492160234646464;  // std dev = 2.231, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(E, B) )
%   | | then return 0.27256285836094596;  // std dev = 0.145, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.004398247448082778;  // std dev = 0.300, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | else if ( interaction(G, A) )
%   | | then return 0.10126018830988232;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.335746597436464;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.33393157108266563;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4631479240422056;  // std dev = 0.725, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.18468577991401627;  // std dev = 0.349, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.0724547034251253;  // std dev = 1.980, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.14822832754020382;  // std dev = 1.375, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16996656081662098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.08999170275103326;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.27634261210231265;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.43086444968638743;  // std dev = 0.189, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14924937379771322;  // std dev = 0.029, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, J), phenotype(A, K) )
%   | | | then return -0.07674858487063642;  // std dev = 1.486, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1763911834944355;  // std dev = 1.502, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( location(A, L) )
%   | | | then return -0.12871194243046472;  // std dev = 1.080, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.03192838249140384;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.14731326790030042;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.16184798851276871;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.19156750716442061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2699810040488084;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.08550447969159267;  // std dev = 0.002, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.010916868227292122;  // std dev = 1.887, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.06973911143992118;  // std dev = 1.309, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.0396743904700571;  // std dev = 1.191, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.007930753482249671;  // std dev = 3.300, 167.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14881561512682925;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.22469943289667738;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3830068297654582;  // std dev = 0.175, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12141795581000145;  // std dev = 0.305, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.01571969915739611;  // std dev = 1.593, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.14422070047135296;  // std dev = 0.740, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.21446091456619373;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.05991384209169606;  // std dev = 1.327, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.02608352496244386;  // std dev = 3.265, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '32.181', 'seconds']
Refined model CLL: -0.191282


******************************************
Best model found
******************************************
Results 

CLL : -0.190722 

AUC ROC : 0.982814 

AUC PR : 0.243937 

Precision : 0.147272 

Recall : 0.791519 

F1 : 0.248337 

Total Learning Time : 4.175 

Total Inference Time : 4.018690347671509 

Total revision time: 12.910651865005493
Best scored revision CLL: -0.182868


Results 

CLL : -0.190722 

AUC ROC : 0.982814 

AUC PR : 0.243937 

Precision : 0.147272 

Recall : 0.791519 

F1 : 0.248337 

Total Learning Time : 23.62856382369995 

Total Inference Time : 4.018690347671509 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.314
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13780995204866345;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.16849376268571808;  // std dev = 4.983, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6599318692272221;  // std dev = 3.507, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16138406767570324;  // std dev = 0.025, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14457322223538024;  // std dev = 1.645, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5612088330372125;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.34395227654422067;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07969657860855058;  // std dev = 4.422, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6461815226313543;  // std dev = 1.667, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14271872908791577;  // std dev = 5.16e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07109077767180473;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.19512512063036067;  // std dev = 1.218, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4479675197925476;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.032941201433317496;  // std dev = 0.625, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5736980371159637;  // std dev = 1.409, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.04844459103743586;  // std dev = 5.127, 220.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5068127113696652;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1701804210112835;  // std dev = 1.551, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.11458577676215895;  // std dev = 1.203, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.38619318701388317;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06980595676960977;  // std dev = 5.427, 243.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3823559878590622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07526000381876326;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07063142214799852;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28637670296029205;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.42113579493505915;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2969391589453969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.015992029001529694;  // std dev = 2.218, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3090263662616276;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07849445103093064;  // std dev = 4.742, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
%   | | | else return -0.031843952033092045;  // std dev = 1.981, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2594662793418404;  // std dev = 0.166, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23887534058335347;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5410466633370505;  // std dev = 1.293, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18498856493991958;  // std dev = 0.440, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24729800265514437;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.11330810052992385;  // std dev = 3.839, 105.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.06755235450258575;  // std dev = 0.796, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.20699034562405244;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36929958551732894;  // std dev = 2.928, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | | else return -0.15245912513730497;  // std dev = 0.254, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1981764673253278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.046366027902868444;  // std dev = 1.496, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19417716689398304;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.4311568858569152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1624471405845083;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.018501525130178203;  // std dev = 1.448, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.07616723131918632;  // std dev = 0.594, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.003445904988810153;  // std dev = 1.803, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17269947592149024;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.008590447076362756;  // std dev = 3.772, 142.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=40 */
%   | | | else return 0.11482560942638553;  // std dev = 1.316, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15681004386385153;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22799834908960903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.19344748280363525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.14154861681678244;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0052755266490414395;  // std dev = 2.415, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.25236124791823883;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.002488071379152156;  // std dev = 3.628, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
%   | | | else return -0.058942147518579624;  // std dev = 1.488, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.806', 'seconds']
Parameter learned model CLL:-0.194565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.876, 85, 33], 'false,false,true,false': [4.983, 80, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.052, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.507, 15, 69], 'false,false,true,false': [0.025, 141, 0], 'false,false,false,true': [1.645, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.052, 0, 8], 'true,false': [0.85, 1, 3], 'false,true,true': [4.422, 94, 34], 'false,true,false,true': [1.667, 3, 37], 'false,true,false,false': [5.16e-08, 64, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.218, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.137, 0, 10], 'true,false': [0.625, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.409, 2, 14], 'false,true,false': [5.127, 163, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.551, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.203, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.056, 0, 4], 'false,true': [5.427, 172, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.015, 0, 7], 'true,true,false': [0.105, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.218, 36, 12], 'false,false,true': [0.037, 0, 3], 'false,false,false,true': [4.742, 120, 55], 'false,false,false,false': [1.981, 20, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.166, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.293, 2, 33], 'true,false': [0.44, 77, 0], 'false,true': [0.032, 0, 3], 'false,false,true': [3.839, 65, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.796, 1, 6], 'true,false': [0.055, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.928, 13, 71], 'false,true,false': [0.254, 151, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.496, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.079, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.016, 0, 3], 'false,true,true': [1.448, 31, 11], 'false,true,false,true': [0.594, 1, 1], 'false,true,false,false': [1.803, 44, 17], 'false,false,true': [0.025, 0, 3], 'false,false,false,true': [3.772, 102, 40], 'false,false,false,false': [1.316, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.023, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.014, 0, 3], 'false,true': [2.415, 73, 29], 'false,false,true': [1.101, 2, 3], 'false,false,false,true': [3.628, 103, 40], 'false,false,false,false': [1.488, 14, 4]}]
{'': [0.07638888888888877, 0.21349725692378893], 'false': [1.4802973661668753e-16, 0.2101644397026212], 'false,false': [0.20792241946088127, 0.2469135802469134], 'false,false,false': [0.25, 0.24000000000000005], 'false,false,true': [0.20145073254811968, 0.2140309155766955], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321764653, 0.21456641062401013], 'false': [0.0, 0.2131601637914091], 'false,false': [0.21249747734527483, 0.22558511187978847], 'false,false,false': [0.22558511187978847, nan], 'false,false,true': [0.14645828363649793, 4.291592967973228e-06], 'true': [7.401486830834377e-17, 0.0005437492714932546], 'false,true': [0.0, nan]}
{'': [0.07090709572255742, 0.16665090804436697], 'false': [0.16390133791286698, 0.2119395249426604], 'false,false': [0.20408163265306123, 0.21210515811567937], 'false,false,false': [0.21210515811567937, nan], 'false,false,true': [nan, 0.20408163265306123], 'false,true': [0.15274345654232094, 0.17401354981982006], 'false,true,false': [0.0694422405083163, 4.163336342344337e-17], 'true': [0.00033393518835428404, 0.18058647589816856]}
{'': [0.06625487904174986, 0.141838115390543], 'false': [0.13720746929074604, 0.22816781616329795], 'false,false': [0.0, 0.24068266151490691], 'false,false,false': [0.24068266151490691, nan], 'false,true': [0.1240154621382848, 0.11946240103563432], 'false,true,true': [nan, 0.1240154621382849], 'true': [0.001867546846781165, 0.19546387489067946], 'false,false,true': [nan, 0.0]}
{'': [0.12725440564466448, 0.12585779871087005], 'true': [0.16077034566838985, 0.0007715969195258021], 'true,true': [0.16077034566838985, nan], 'false': [0.12121620925953379, 0.21193088054445824], 'false,false': [0.0, 0.22222757816429295], 'false,false,false': [0.2222222222222223, 0.2222222222222223], 'false,false,true': [nan, 0.0]}
{'': [0.004568752445057944, 0.12652346803696346], 'false': [0.10247943855890722, 0.13166920400492413], 'false,false': [0.000463703548334878, 0.1327461823359358], 'false,false,false': [0.12847420021701006, 0.150900164064876], 'true': [0.004944542739729263, 0.0], 'true,true': [3.425445081775954e-05, 0.00368987307161824], 'true,false': [nan, 0.0]}
{'': [0.12229710748622416, 0.13693774756687555], 'false': [0.00034910035281613777, 0.1403415777368777], 'false,false': [0.1403415777368777, nan], 'true': [0.05154734414894748, 0.002517084316832833], 'true,true': [0.0025375038574395703, 0.04773745437078694], 'true,true,false': [nan, 0.04773745437078699], 'true,true,true': [0.002752709992369329, 0.0]}
{'': [0.05782444299289204, 0.10120430244326158], 'false': [0.09927679797491244, 0.1208244096387751], 'false,false': [0.0, 0.12438945410553809], 'false,false,false': [0.12438945410553809, nan], 'false,true': [0.102046699602061, 0.00042741158871357576], 'false,true,true': [nan, 0.10204669960206118], 'true': [0.09059147376711044, 0.0006088771109919955], 'false,false,true': [0.0, nan]}
{'': [0.029772892203911383, 0.08430317335141481], 'false': [0.05447431376157103, 0.10447158512246343], 'false,false': [0.00020332981319466648, 0.10594909824838974], 'false,false,false': [0.10021787753109351, 0.1731029833130623], 'false,true': [0.049896403316666636, 0.057375399048152316], 'false,true,false': [0.17620670552250473, 0.05327807630668743], 'true': [0.0007787298265812745, 0.06612975761139489], 'true,false': [0.0, 8.157509665895439e-05]}
{'': [0.010030435113663602, 0.08500756381357086], 'false': [0.057159769549411744, 0.10210241217136923], 'false,false': [0.24232201530414493, 0.0958955146888491], 'false,false,false': [0.09206557731875818, 0.12297046875175528], 'true': [0.01329028389548154, 6.493014044524116e-05], 'true,true': [0.0006190050604727854, 0.0], 'true,true,true': [7.39625047115928e-05, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 6.012
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(A, I), phenotype(H, J) )
%   | | | then return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.08433941128998856;  // std dev = 3.834, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.2581489350995111;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7168933494639028;  // std dev = 2.818, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16606749848811858;  // std dev = 0.127, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.023937365911308742;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.13131112388205984;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.5669910598142407;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.08417610942848441;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.14556661558758965;  // std dev = 3.840, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.03542826930716408;  // std dev = 1.637, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5441948691967727;  // std dev = 2.412, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return -0.14752521145693095;  // std dev = 0.073, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.4535182319685806;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.14748361782855166;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35444075264564334;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.22708281945627865;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.361466704756661;  // std dev = 3.882, 101.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=68 */
%   | | | else return -0.15375687422676645;  // std dev = 0.479, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.10075968697012751;  // std dev = 0.823, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.03457383978022477;  // std dev = 1.045, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.504714715437785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3583377712437502;  // std dev = 1.111, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06058229844763667;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3800602741624541;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1659114324118029;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13058836903998952;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.034570493072781705;  // std dev = 4.086, 144.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=41 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.2848812684508416;  // std dev = 1.076, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.07139028364151528;  // std dev = 2.749, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.38087043919715236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.19905713679026768;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.10507665341519665;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.18896052900821228;  // std dev = 0.326, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.2959360651062667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.020602522042482994;  // std dev = 1.744, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.17226143784641038;  // std dev = 0.238, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.2310572145158425;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.034429301050677215;  // std dev = 1.407, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.3279126407656486;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.0720673411298778;  // std dev = 3.375, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.02385124350650891;  // std dev = 3.123, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28633654115596263;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.4612386617032505;  // std dev = 0.899, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.5824630153432899;  // std dev = 0.285, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.19455535263093884;  // std dev = 0.104, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.26008227840085346;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.44847671447085663;  // std dev = 0.951, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17175256486244506;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.023476348596850053;  // std dev = 3.056, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | | else return 0.22622259267474712;  // std dev = 0.642, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1934390594548351;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2358728029042582;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.375924030028298;  // std dev = 1.983, 74.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | | | else return 0.24309096222534296;  // std dev = 0.714, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12070412483424603;  // std dev = 0.175, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.156716432888209;  // std dev = 0.276, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.190155770304272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.12855920825785241;  // std dev = 0.975, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06738623123671109;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19506565095718445;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7581682451305402;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1884417917165179;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.03378627085387336;  // std dev = 0.230, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( location(A, I) )
%   | | | then return 0.02462039005385483;  // std dev = 1.569, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.13495361126867436;  // std dev = 0.627, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.1790445152910021;  // std dev = 0.973, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.12117684959243967;  // std dev = 1.282, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.023465027484184806;  // std dev = 3.035, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1668766070475755;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015765917539703786;  // std dev = 0.505, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(F, H) )
%   | | | then return 0.3393592112517516;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12521050858156904;  // std dev = 1.356, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.28942228507389584;  // std dev = 1.702, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   | | | else return -0.12569883862617046;  // std dev = 0.386, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.33405139087453695;  // std dev = 0.702, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.006255589464544367;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.249', 'seconds']
Refined model CLL: -0.18862


******************************************
Best model found
******************************************
Results 

CLL : -0.193327 

AUC ROC : 0.986294 

AUC PR : 0.295404 

Precision : 0.155193 

Recall : 0.911348 

F1 : 0.265222 

Total Learning Time : 6.012 

Total Inference Time : 10.61231541633606 

Total revision time: 25.172234798431397
Best scored revision CLL: -0.18862


Results 

CLL : -0.193327 

AUC ROC : 0.986294 

AUC PR : 0.295404 

Precision : 0.155193 

Recall : 0.911348 

F1 : 0.265222 

Total Learning Time : 25.18474342918396 

Total Inference Time : 10.61231541633606 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10224342328848757;  // std dev = 4.841, 127.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=31 */
%   | | | else return 0.1393989350995114;  // std dev = 5.687, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6223839334745777;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.733428672842766;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6491098849044715;  // std dev = 0.890, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6596932539483008;  // std dev = 3.724, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.15733439638815386;  // std dev = 0.032, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else if ( location(A, I) )
%   | | | then return 0.19684185486791198;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5911480966279462;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4340678179803948;  // std dev = 0.953, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10341235678820197;  // std dev = 4.295, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6002891561439998;  // std dev = 2.466, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13968178569001344;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8040301388271403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1119582553606917;  // std dev = 1.614, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4006466933667334;  // std dev = 0.956, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4054696588412823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3651624749287442;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5146125345031837;  // std dev = 1.859, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.05070833810099432;  // std dev = 5.140, 226.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6257709245917481;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.018489470447715095;  // std dev = 1.702, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.37064039030096524;  // std dev = 1.83e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26275787254705935;  // std dev = 0.930, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.09218983765454176;  // std dev = 5.696, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47211529666276975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1687100392044809;  // std dev = 1.500, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.05390218786374953;  // std dev = 1.456, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0.28547610120981803;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3580655872798948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.05381827572710053;  // std dev = 2.669, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.28690111841599975;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0637233890831412;  // std dev = 4.661, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | | else return -0.03544319769866635;  // std dev = 2.383, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.33301477477363783;  // std dev = 0.254, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.03644412285158108;  // std dev = 0.448, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26248471388933836;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4247149575545096;  // std dev = 2.166, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.18445334158841764;  // std dev = 0.803, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21392384978045076;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06010072998727978;  // std dev = 4.405, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.216356299726229;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20327421721925223;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3506754509036648;  // std dev = 3.572, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.1545567778911443;  // std dev = 0.491, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2879438186501514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.007565105620862574;  // std dev = 1.470, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19473027298575266;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.24833493008838364;  // std dev = 0.988, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.24430661371781587;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04312524278411862;  // std dev = 1.981, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18199908024197875;  // std dev = 0.855, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.04238414103339149;  // std dev = 1.534, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15208142826737406;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.029650919712449486;  // std dev = 3.974, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return 0.16342277796232504;  // std dev = 1.261, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03965280521820652;  // std dev = 0.861, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23819776825248118;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.192928468195276;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.021155546625333723;  // std dev = 2.585, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.13349888286205056;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.016796010633692213;  // std dev = 3.901, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | | else return -0.0023427978315331962;  // std dev = 1.445, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.857', 'seconds']
Parameter learned model CLL:-0.203163 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.841, 96, 31], 'false,false,true,false': [5.687, 115, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.044, 0, 10], 'false,true,true': [0.89, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.724, 17, 76], 'false,false,true,false': [0.032, 172, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.098, 0, 11], 'true,false': [0.953, 1, 6], 'false,true,true': [4.295, 87, 34], 'false,true,false,true': [2.466, 7, 48], 'false,true,false,false': [0.0, 89, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.614, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.956, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.784, 1, 3], 'false,true,true,false': [1.859, 5, 21], 'false,true,false': [5.14, 168, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.702, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.83e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.93, 1, 10], 'false,true': [5.696, 166, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.5, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [1.456, 3, 9], 'true,true,false': [0.936, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.669, 41, 19], 'false,false,true': [0.081, 0, 8], 'false,false,false,true': [4.661, 118, 51], 'false,false,false,false': [2.383, 40, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.254, 0, 15], 'true,true,true,false': [0.448, 1, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [2.166, 6, 33], 'true,false': [0.803, 116, 0], 'false,true': [0.024, 0, 5], 'false,false,true': [4.405, 108, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.49e-08, 0, 7], 'true,false': [0.082, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.572, 17, 82], 'false,true,false': [0.491, 165, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.47, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 9], 'true,false,true': [0.988, 2, 2], 'true,false,false': [0.079, 0, 5], 'false,true,true': [1.981, 35, 13], 'false,true,false,true': [0.855, 1, 8], 'false,true,false,false': [1.534, 45, 11], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [3.974, 102, 47], 'false,false,false,false': [1.261, 5, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.861, 1, 7], 'true,true,true,false': [0.115, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.054, 0, 3], 'false,true': [2.585, 89, 32], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [3.901, 117, 47], 'false,false,false,false': [1.445, 9, 4]}]
{'': [0.09418282548476423, 0.2018834547346519], 'false': [0.23140495867768587, 0.19597096229348773], 'false,true': [0.24000000000000005, 0.1388888888888887], 'false,false': [0.19468489358860774, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.18451236902473922, 0.20214843750000117], 'false,true,false': [1.4802973661668753e-16, 0.22222222222222224], 'true': [0.1224489795918365, 0.0]}
{'': [0.051763980262908404, 0.2099551692508872], 'false': [0.09902606514675788, 0.20564048749985364], 'false,false': [0.2043897207520105, 0.2314049586776861], 'false,false,false': [0.2314049586776861, nan], 'false,false,true': [0.1491221676532988, 6.045460535038787e-06], 'false,true': [0.09902606514675788, nan], 'true': [0.10937499999999994, 0.00019474929930192176]}
{'': [0.05689626792091228, 0.1666026192433661], 'false': [0.16320570217114358, 0.2342993421739516], 'false,false': [0.2342993421739516, nan], 'false,false,true': [0.0, 0.21698094182551442], 'false,true': [0.1524844930221664, 0.17150086568176362], 'false,true,false': [0.11059980573650648, -1.7464182409833923e-17], 'true': [0.0008794381722418572, 0.1298440283721611]}
{'': [0.05074196262777258, 0.14309313118822004], 'false': [0.13978383576244216, 0.1907191754430307], 'false,false': [0.0, 0.18094554952308534], 'false,false,false': [0.18094554952308534, nan], 'false,true': [0.1382409852107275, 0.11688910301230766], 'false,true,true': [0.1534982738823573, 0.13291566732290297], 'true': [0.053725491681264226, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05080523055682215, 0.13473574579313932], 'false': [0.13084112117795424, 0.21216477070637643], 'false,false': [0.0, 0.2250126341176204], 'false,false,false': [0.2250126341176204, nan], 'true': [4.7580986769649563e-17, 0.07860969496145143], 'true,true': [4.7580986769649563e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.15699200850539002, 0.12328568415495177], 'true': [0.16271082021829666, 0.0], 'true,true': [0.17666281184950205, 0.10960694636604101], 'false': [0.11868415270884695, 0.12449848075281582], 'false,false': [0.0008242892634380133, 0.1268866828309763], 'false,false,false': [0.1285739939196961, 0.1135947676212494], 'true,false': [nan, 0.0]}
{'': [0.1054445417093982, 0.12201219110763968], 'false': [0.00011952837880627176, 0.1252047889802734], 'false,false': [0.1252047889802734, nan], 'true': [0.09247854371252633, 0.005564928596616511], 'true,true': [0.02977182163378696, 0.11345956257082646], 'true,true,false': [0.0, 0.12030731751871653], 'true,true,true': [0.004286266592906015, 0.10047241646882749]}
{'': [0.0004408781536394287, 0.11081792498498967], 'false': [0.10906916055454027, 0.13958168030499568], 'false,false': [0.0, 0.14397386173866453], 'false,false,false': [0.14397386173866453, nan], 'false,true': [0.1288773404290334, 0.0014619007499795382], 'false,true,true': [nan, 0.1288773404290335], 'true': [3.172065784643304e-17, 0.0006790230859496426], 'false,false,true': [0.0, nan]}
{'': [0.09223400144550943, 0.09171035426826395], 'true': [0.0010210320336547724, 0.16910294822250863], 'true,false': [0.24407670304486073, 0.0012591929496244437], 'false': [0.06573011307707775, 0.1079582202242894], 'false,false': [7.111904382689771e-05, 0.1109680293587597], 'false,false,false': [0.1059839304685884, 0.17660697568960096], 'false,true': [0.08174891336975795, 0.053471033913605845], 'false,true,false': [0.08122272229764307, 0.04203970313899667]}
{'': [0.05318733735016185, 0.07977988104921467], 'false': [0.05522360595696822, 0.09547348387461538], 'false,false': [5.743171692207116e-05, 0.09778562101438314], 'false,false,false': [0.09276950419200453, 0.16072647296330042], 'true': [0.06355237557142249, 0.000988414782003788], 'true,true': [0.06355237557142249, nan], 'true,true,true': [0.09266982934626762, 0.0022033311023252713]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.504
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6994187763693539;  // std dev = 2.900, 63.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=53 */
%   | | | else return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.003603480554057789;  // std dev = 2.615, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | | | else return 0.14173102465175114;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7397104467804847;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6387447100060891;  // std dev = 3.239, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.13951716100872258;  // std dev = 0.266, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.18174337605505517;  // std dev = 1.430, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.15999450328514583;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.49778421354564806;  // std dev = 0.275, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.44347885118798397;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.10008085351886804;  // std dev = 3.255, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.006852697710276634;  // std dev = 2.023, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6161788352253488;  // std dev = 1.637, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.12536762377451513;  // std dev = 0.172, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.20845266023548004;  // std dev = 1.035, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4602362804355247;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14575764150433465;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.46355599641640644;  // std dev = 0.146, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.46780039227497205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14199934979287956;  // std dev = 0.184, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.049496040372445;  // std dev = 2.381, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( location(A, G) )
%   | | | then return 0.05857683661593832;  // std dev = 4.776, 216.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=62 */
%   | | | else return 0.1671386651664018;  // std dev = 1.384, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4364413642301501;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.13077538524114915;  // std dev = 1.105, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.017208249104778698;  // std dev = 0.693, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3193585348273983;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10182372776401952;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.36689809284480257;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.05195920413400361;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(A, G), interaction(A, H) )
%   | | then return 0.042452663770021354;  // std dev = 0.311, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else return 0.10516775443226115;  // std dev = 0.340, 167.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=59 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3335752586373135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 3.176831961973825E-4;  // std dev = 0.649, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14056843834086932;  // std dev = 1.080, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.23558724051163857;  // std dev = 0.309, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0.2639314247297293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, G), complex(A, I) )
%   | | | then return -0.010712900727190212;  // std dev = 1.678, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.053229892298297464;  // std dev = 2.041, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else return 0.10629948795346088;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.401531642600651;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3158205309764227;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.022136001752818785;  // std dev = 2.268, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.05646743783533793;  // std dev = 3.976, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.3099421746655435;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.0038502970407205406;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.531313360997322;  // std dev = 0.803, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1533194178939113;  // std dev = 0.072, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.1451262947560516;  // std dev = 0.754, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5353269473865404;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1517472840940724;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.031402848131668146;  // std dev = 2.281, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.022745325802838886;  // std dev = 2.960, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( complex(A, E) )
%   | | then return 0.16498305734470042;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25223396316931773;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23850621921508441;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.27783366846513496;  // std dev = 3.268, 91.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=72 */
%   | | | else return 0.45172254855303356;  // std dev = 0.265, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.13109357376691738;  // std dev = 0.025, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.16805044970760974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.052875693036466394;  // std dev = 0.981, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.0736549349600106;  // std dev = 0.581, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17286354196478304;  // std dev = 0.158, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return -0.03574313174658727;  // std dev = 0.322, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11319398787439752;  // std dev = 0.593, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.008097262560454187;  // std dev = 1.916, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.047667010687666204;  // std dev = 1.326, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.19384480898998072;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3934766250893267;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return -0.011248228762897428;  // std dev = 2.656, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | | else return 0.052113542563938055;  // std dev = 2.462, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.12169787528454032;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09939715269053369;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22091426670654202;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1844034793702751;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.039137178942263366;  // std dev = 0.202, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.01896877920385841;  // std dev = 0.230, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2056490096943185;  // std dev = 0.187, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.059824509220837166;  // std dev = 1.577, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.006783607396241407;  // std dev = 3.240, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.039', 'seconds']
Refined model CLL: -0.178306


******************************************
Best model found
******************************************
Results 

CLL : -0.155784 

AUC ROC : 0.991959 

AUC PR : 0.396954 

Precision : 0.32636 

Recall : 0.883019 

F1 : 0.476578 

Total Learning Time : 5.504 

Total Inference Time : 8.31096887588501 

Total revision time: 23.237051538467405
Best scored revision CLL: -0.178306


Results 

CLL : -0.155784 

AUC ROC : 0.991959 

AUC PR : 0.396954 

Precision : 0.32636 

Recall : 0.883019 

F1 : 0.476578 

Total Learning Time : 23.24956016921997 

Total Inference Time : 8.31096887588501 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.531
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.15148226843284465;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21000078695136415;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.45415850507914046;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8398750098923566;  // std dev = 0.020, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15987308564173003;  // std dev = 0.035, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, K) )
%   | | | then return 0.19089302125717653;  // std dev = 3.397, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.23061599234741012;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5719988521761975;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.029558837001045883;  // std dev = 2.126, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6663704453678602;  // std dev = 0.993, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14083272251603193;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6195627079581763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24312909952469147;  // std dev = 3.314, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15105065486565558;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4288622466621297;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42037926479283466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.455448992756578;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41105932581902366;  // std dev = 0.633, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06212955423808186;  // std dev = 4.194, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4670801547631158;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6211808762010369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.02292763816960034;  // std dev = 3.650, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.03900751922762193;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33313446335588115;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3239313365845741;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.059347259017095325;  // std dev = 4.252, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3545838846298769;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46838786847209746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0462595045438397;  // std dev = 3.675, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.29034061127843347;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26451206655591114;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4141153387085403;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.27817462404783233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26687515803520223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3554872355572577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07457938885130308;  // std dev = 1.024, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25270948959557854;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05650340692863283;  // std dev = 3.961, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | | | else return 0.049870255667465294;  // std dev = 3.730, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.250851099648395;  // std dev = 0.195, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.252334133357353;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2217336682900155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6128139780589481;  // std dev = 1.141, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19977219796100093;  // std dev = 0.610, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.03856410053145781;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04598977001287956;  // std dev = 3.391, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1763438473439001;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0864828153131701;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4310992137345407;  // std dev = 1.162, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14061494024629342;  // std dev = 0.237, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2078951425727804;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06432806127316658;  // std dev = 2.988, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15921174778410213;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14312915591038444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19830550268764105;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07551901001399902;  // std dev = 0.444, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08937366679242283;  // std dev = 0.307, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.024043796993797658;  // std dev = 1.263, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18563464340111535;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01964612169180569;  // std dev = 2.781, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.012513905921481742;  // std dev = 3.078, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13471287249070735;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15892158081229832;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13398961576973156;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04025139353926743;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02490118589607868;  // std dev = 1.484, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1591905692170727;  // std dev = 0.000987, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01859486609746638;  // std dev = 2.704, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.06416222084685885;  // std dev = 2.956, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.272', 'seconds']
Parameter learned model CLL:-0.180217 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.473, 26, 8], 'false,false,true,false': [5.576, 106, 44], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [1.191, 2, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.02, 0, 52], 'false,false,true,false': [0.035, 134, 0], 'false,false,false,true': [3.397, 32, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.126, 33, 8], 'false,true,false,true': [0.993, 1, 48], 'false,true,false,false': [0.0, 107, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.314, 25, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.032, 0, 11], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.633, 1, 3], 'false,true,false': [4.194, 135, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.65, 51, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.252, 135, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.675, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.006, 0, 7], 'true,true,false': [0.11, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.024, 23, 3], 'false,false,true': [0.017, 0, 6], 'false,false,false,true': [3.961, 117, 49], 'false,false,false,false': [3.73, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.195, 0, 12], 'true,true,true,false': [0.037, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.141, 1, 36], 'true,false': [0.61, 107, 0], 'false,true': [0.913, 1, 5], 'false,false,true': [3.391, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.003, 0, 6], 'true,false': [0.899, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.162, 1, 56], 'false,true,false': [0.237, 149, 0], 'false,false,true,true': [0.033, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.988, 37, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.044, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.054, 0, 4], 'false,true,true': [0.444, 14, 1], 'false,true,false,true': [0.307, 1, 2], 'false,true,false,false': [1.263, 50, 14], 'false,false,true': [0.001, 0, 5], 'false,false,false,true': [2.781, 84, 36], 'false,false,false,false': [3.078, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.012, 0, 5], 'true,true,true,false': [0.029, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.892, 1, 4], 'false,true': [1.484, 58, 17], 'false,false,true': [0.000987, 0, 5], 'false,false,false,true': [2.704, 86, 36], 'false,false,false,false': [2.956, 33, 20]}]
{'': [0.06222222222222188, 0.21512556249092815], 'false': [0.12244897959183662, 0.209002117341713], 'false,false': [0.2027410207939516, 0.22592152199762144], 'false,false,false': [0.22805212620027385, 0.18750000000000003], 'false,false,true': [0.179930795847751, 0.20728888888888972], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [0.08999999999999977, 0.0]}
{'': [8.940649933971859e-05, 0.21251850367338784], 'false': [0.1880664054911389, 0.20924557754053164], 'false,false': [0.20131774488821116, 0.23172891297899476], 'false,false,false': [0.2307583575103274, 0.24000000000000005], 'false,false,true': [7.715326335281466e-06, 8.994462881579812e-06], 'false,true': [0.20269368088822723, 0.0], 'true': [0.0, 9.126913474255538e-05], 'false,true,false': [nan, 0.0]}
{'': [0.00011808527048521153, 0.1639418795522044], 'false': [0.14026265398030258, 0.24117941785059843], 'false,false': [0.2418003020841676, 0.2222222222222222], 'false,false,true': [0.0, 0.24409315818356392], 'false,false,false': [0.2222222222222222, nan], 'false,true': [0.1102896525709474, 0.14670113068780902], 'false,true,false': [0.02013353549565796, -5.395476381355901e-17], 'true': [6.936680898717018e-05, 0.0001340268823311619]}
{'': [0.00011162114085592836, 0.12580408543020313], 'false': [0.09694512120094856, 0.19603333088689828], 'false,false': [0.005936758086921956, 0.19410995467542427], 'false,false,false': [0.19307452019644822, 0.20408163265306117], 'false,true': [0.08035542069761079, 0.0940546764522058], 'false,true,true': [0.0, 0.100050187365848], 'false,false,true': [0.0, 0.0], 'true': [9.283044873707105e-05, 0.00012397957419552075]}
{'': [8.57909759523569e-05, 0.12482599450830986], 'false': [0.09465483226438157, 0.20832790495683232], 'false,false': [0.0032378366845901285, 0.21073633545627335], 'false,false,false': [0.2077498469797449, 0.25000000000000006], 'false,false,true': [0.0, 0.0], 'true': [3.435931314244023e-06, 0.0001012946562546604], 'true,true': [3.435931314244023e-06, nan]}
{'': [0.0053245067360854215, 0.11859010813958526], 'false': [0.04034297204114907, 0.1253647096008107], 'false,false': [4.940001803100761e-05, 0.12761635699305393], 'false,false,false': [0.09451385189682311, 0.2108426910158114], 'true': [0.006278496677510439, 0.0015507797903725289], 'true,true': [4.3630045452920056e-06, 0.003015687580525228], 'true,false': [3.1919483042652796e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12987529494699745, 0.09709760489534999], 'true': [0.0529436165318398, 0.003479627046256959], 'false': [0.13898017396602935, 0.09501817822237028], 'false,false': [0.09501817822237028, nan], 'true,true': [0.0028049605445504594, 0.0381593639725287], 'true,true,false': [0.0, 0.03516586106318615], 'true,true,true': [0.003155524808503618, 0.0006996897702757077]}
{'': [0.055819607922167495, 0.090456741965227], 'false': [0.07224582552159914, 0.15196949761799922], 'false,false': [0.0005325760713233985, 0.15658437866574185], 'false,false,false': [0.15658437866574185, nan], 'false,true': [0.02370051120160987, 0.00037581680442909203], 'true': [1.2248306365444013e-06, 0.08980186128547031], 'false,true,true': [nan, 0.023700511201609903], 'false,false,true': [0.0005325760713233985, nan]}
{'': [0.0006972960347073977, 0.0712804388534397], 'false': [0.023929949717636307, 0.09083264171853675], 'false,false': [2.48586000273221e-07, 0.0925309497546269], 'false,false,false': [0.0644717300058826, 0.1435148945459075], 'false,true': [0.013161978596266683, 0.025755632730235886], 'false,true,false': [0.031358980464848966, 0.024916997248831212], 'true': [0.0002109849312727816, 0.0010665483422275467], 'true,false': [0.0, 0.00072429957904762]}
{'': [0.06053577949541525, 0.07294424684345276], 'false': [0.02936370466315443, 0.09001489575303834], 'false,false': [1.949192000305633e-07, 0.09214015964883195], 'false,false,false': [0.059923377008690784, 0.16485200995549332], 'true': [0.00022211197393098015, 0.15906048956794977], 'true,true': [0.0002584259993712451, 0.0], 'true,true,true': [2.671958217829451e-05, 0.0002783148872345792], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.963
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.2732432747221531;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.15951879811321046;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8292019226018391;  // std dev = 0.056, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16406138174970247;  // std dev = 0.178, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.17093373733875628;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.27760040400542296;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5749937601830104;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5700869293238289;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13310512109215686;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.12837400620806802;  // std dev = 1.904, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6706815893522919;  // std dev = 0.234, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14298518987869657;  // std dev = 0.138, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.629681053512678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14459889801698714;  // std dev = 3.583, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else return 0.2962275039463912;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42478364406038716;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.45448853724846244;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3838671332241438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5601278868410956;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.011252152070487246;  // std dev = 2.917, 108.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=24 */
%   | | | else return 0.09057347145690521;  // std dev = 2.883, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4942690362912107;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.012226063077972102;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.14680351123012972;  // std dev = 3.175, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3366687794420284;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23782942875030919;  // std dev = 0.271, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return -0.00694818984537289;  // std dev = 1.427, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.18238857429737632;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12070833858040142;  // std dev = 2.579, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | | else return 0.04413332152995068;  // std dev = 2.603, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3736711650454;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.01608126294793879;  // std dev = 3.289, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.1819077426794312;  // std dev = 1.857, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2556004259016886;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3688626209244268;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.30891311742672206;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.1230872174799921;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.10033461380243536;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.002376519073127877;  // std dev = 0.853, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.28286868284557215;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.029566671010003483;  // std dev = 3.469, 138.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=37 */
%   | | | else return 0.07529737090209923;  // std dev = 4.061, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49792744647966836;  // std dev = 0.224, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.18807076514497115;  // std dev = 0.066, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.47926510845605885;  // std dev = 0.339, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.17184342242507483;  // std dev = 0.759, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.15814934561544194;  // std dev = 0.014, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4428426532349133;  // std dev = 0.280, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16482323255948805;  // std dev = 0.083, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1521065566962025;  // std dev = 1.143, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.054047706818261536;  // std dev = 1.706, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1379829832246994;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17964744946331884;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.290919428539449;  // std dev = 0.850, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3774190087872815;  // std dev = 1.136, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.11375525746666319;  // std dev = 0.165, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.1501026500279507;  // std dev = 0.266, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.15502075928611747;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.016962366581465802;  // std dev = 1.559, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.11439848228022645;  // std dev = 2.629, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13607156839384224;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13102514140124444;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return -0.07860244527872357;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0476991022341573;  // std dev = 0.568, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.03008008592661637;  // std dev = 0.638, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.011641317463760114;  // std dev = 1.123, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15247796746130116;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -2.9398159949627366E-4;  // std dev = 1.792, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.052822052642536005;  // std dev = 3.492, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.12176180909282226;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11374552254831657;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(A, H), complex(G, I) )
%   | | | then return -0.2901558905326032;  // std dev = 0.538, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.059126640674288654;  // std dev = 0.630, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.04373381047444637;  // std dev = 1.080, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.0333664540521751;  // std dev = 0.581, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1338646505308108;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return -0.0483207041139382;  // std dev = 2.232, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -9.637409812155947E-4;  // std dev = 3.392, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.285', 'seconds']
Refined model CLL: -0.17654


******************************************
Best model found
******************************************
Results 

CLL : -0.192056 

AUC ROC : 0.98485 

AUC PR : 0.247022 

Precision : 0.141648 

Recall : 0.906137 

F1 : 0.244998 

Total Learning Time : 2.963 

Total Inference Time : 2.8988354206085205 

Total revision time: 10.333881420135498
Best scored revision CLL: -0.17654


Results 

CLL : -0.192056 

AUC ROC : 0.98485 

AUC PR : 0.247022 

Precision : 0.141648 

Recall : 0.906137 

F1 : 0.244998 

Total Learning Time : 10.346390050888061 

Total Inference Time : 2.8988354206085205 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.14919371121891478;  // std dev = 5.258, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8421694403142094;  // std dev = 0.040, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15639843899379963;  // std dev = 0.071, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1223609626503427;  // std dev = 2.811, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.18030988377851295;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.35536643674628443;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06416225574231814;  // std dev = 2.725, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6370608230983651;  // std dev = 1.387, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1409762991409092;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6442057845101423;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07875159641163541;  // std dev = 2.509, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3262776471104878;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43065708660931;  // std dev = 0.084, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5394715455560393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49023850184723095;  // std dev = 0.701, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.057444112651683574;  // std dev = 4.244, 181.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3960793771115748;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5358449165061916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08556773905311561;  // std dev = 2.780, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.2693233300049377;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3178552321310724;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34775460803981306;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.052091794052633214;  // std dev = 4.426, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30620801810870757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1210605432851398;  // std dev = 0.954, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10321198423042481;  // std dev = 2.464, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.12203715866693969;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25259847826490023;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.377231441521628;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24524869375306524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.38256720925755755;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0684245533781764;  // std dev = 1.261, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27889265084500947;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07427505094773507;  // std dev = 3.887, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | | | else return 0.05474837164518668;  // std dev = 3.036, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23426708778949992;  // std dev = 0.143, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2661633234861224;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24426374155092612;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5924581399529084;  // std dev = 0.753, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1799544268895074;  // std dev = 0.738, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.02525487346000238;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0391224435353423;  // std dev = 3.432, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17244936067738503;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08209836082376246;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.414672478716269;  // std dev = 1.675, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14092389158593716;  // std dev = 0.240, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21821647638804562;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03891531377552565;  // std dev = 2.416, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15041383461948793;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18854091147805085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1845756793699493;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09594247487690617;  // std dev = 0.309, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2491985061605757;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.016130197174303848;  // std dev = 1.560, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21227834334365156;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03316269293729918;  // std dev = 2.781, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.003473009803732583;  // std dev = 2.457, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1311043047021253;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13656368115748274;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13412828323496107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15566242135216135;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1695263485620572;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01702603884305771;  // std dev = 1.652, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17898473028429418;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026032521274595908;  // std dev = 2.799, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return -0.015375125573890733;  // std dev = 2.495, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.065', 'seconds']
Parameter learned model CLL:-0.177344 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.237, 54, 13], 'false,false,true,false': [5.258, 95, 39], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [1.519, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.0, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.04, 0, 52], 'false,false,true,false': [0.071, 135, 0], 'false,false,false,true': [2.811, 28, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.725, 46, 14], 'false,true,false,true': [1.387, 2, 42], 'false,true,false,false': [0.0, 95, 0], 'false,false,true,true': [0.218, 0, 3], 'false,false,true,false': [2.509, 25, 9], 'false,false,false,true': [1.228, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.084, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.701, 1, 6], 'false,true,false': [4.244, 132, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.78, 28, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.83e-08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.052, 0, 6], 'false,true': [4.426, 142, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.954, 2, 2], 'false,false,false,true': [2.464, 20, 9], 'false,false,false,false': [1.375, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.005, 0, 9], 'true,true,false': [0.019, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.071, 0, 2], 'false,true': [1.261, 32, 5], 'false,false,true': [0.035, 0, 5], 'false,false,false,true': [3.887, 101, 46], 'false,false,false,false': [3.036, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.143, 0, 13], 'true,true,true,false': [0.1, 0, 3], 'true,true,false,true': [0.027, 0, 3], 'true,true,false,false': [0.753, 0, 33], 'true,false': [0.738, 110, 0], 'false,true': [0.857, 1, 3], 'false,false,true': [3.432, 75, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 8], 'true,false': [0.941, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.675, 2, 56], 'false,true,false': [0.24, 135, 0], 'false,false,true,true': [0.087, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.416, 28, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.029, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.067, 0, 5], 'false,true,true': [0.309, 27, 1], 'false,true,false,true': [0.168, 0, 6], 'false,true,false,false': [1.56, 44, 17], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [2.781, 68, 31], 'false,false,false,false': [2.457, 34, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.008, 0, 2], 'true,false': [0.05, 0, 3], 'false,true': [1.652, 69, 24], 'false,false,true': [0.023, 0, 3], 'false,false,false,true': [2.799, 68, 31], 'false,false,false,false': [2.495, 38, 12]}]
{'': [-2.3684757858670006e-16, 0.20236520534139624], 'false': [-2.5376526277146434e-16, 0.19298625572678174], 'false,false': [0.19177743125170255, 0.19834710743801603], 'false,false,false': [0.2060353798126952, 0.17751479289940816], 'false,false,true': [0.15638226776564884, 0.2063377144130101], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20526097280810204], 'false': [-6.344131569286608e-17, 0.20095546026574596], 'false,false': [0.20020986172656502, 0.20425288123323096], 'false,false,false': [0.20263076155836934, 0.2222222222222222], 'false,false,true': [3.013619109213896e-05, 3.716328391922572e-05], 'true': [1.1102230246251565e-16, -2.5376526277146434e-16], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.05859374999999978, 0.15162757968460025], 'false': [0.1388211472670133, 0.20795023282697628], 'false,false': [0.19522830093576402, 0.2514034308927558], 'false,false,false': [0.2514034308927558, nan], 'false,false,true': [0.015784859422215414, 0.18513680749102107], 'false,true': [0.12377875158454847, 0.14480380313468302], 'false,true,false': [0.043725590024674126, -5.142085587737567e-17], 'true': [-2.0185873175002846e-16, 0.15999999999999998]}
{'': [0.00047506705586863873, 0.12314522186999269], 'false': [0.10574103968805372, 0.196456533343601], 'false,false': [0.004340979111615166, 0.2022502010114565], 'false,false,false': [0.19815436570243042, 0.25], 'false,true': [0.0617036589677476, 0.09953185371459819], 'false,true,true': [0.0, 0.07021548081760735], 'false,false,true': [0.0, 0.0], 'true': [0.00047506705586863873, nan]}
{'': [0.0003933479790821555, 0.11979422099364799], 'false': [0.09894207357468894, 0.21689459599251773], 'false,false': [0.21122492738370893, 0.21523013629096696], 'false,false,false': [0.2093349815244826, 0.23632230938475965], 'false,false,true': [0.0, 0.2275194745185226], 'true': [3.700743415417188e-17, 0.0004469863398660623], 'true,true': [3.700743415417188e-17, nan]}
{'': [0.004130907510029147, 0.11302235390693428], 'false': [0.04296654063182953, 0.12278447305719148], 'false,false': [0.00024465280902721267, 0.12483005768597616], 'false,false,false': [0.10279413339941877, 0.19202764090548644], 'true': [0.0033376098227298266, 0.005860677064676671], 'true,false': [0.0, 0.002505557363562505], 'true,true': [3.1107538027338086e-06, 8.635736078710377e-05], 'true,false,true': [0.0, nan]}
{'': [0.10665585467133806, 0.1138740554504865], 'false': [0.18348409155551287, 0.11109655476452907], 'false,false': [0.11109655476452907, nan], 'true': [0.04022024517818023, 0.004956502040828034], 'true,true': [0.002062763280564539, 0.025039261162957665], 'true,true,false': [0.00024452456737206196, 0.017190049869649653], 'true,true,true': [0.0015821679885580536, 0.0033187298748224847]}
{'': [0.05744127369647195, 0.0904275776185392], 'false': [0.07971923273639513, 0.1379637599565083], 'false,false': [0.0025443822489967425, 0.1458772662905576], 'false,false,false': [0.1458772662905576, nan], 'false,true': [0.04836046040316529, 0.0004257508516162829], 'true': [3.469446951953614e-18, 0.11080089580566929], 'false,true,true': [nan, 0.04836046040316541], 'false,false,true': [0.0025443822489967425, nan]}
{'': [0.0006155523593588223, 0.0707974450844428], 'false': [0.033196587923122634, 0.09393762867651212], 'false,false': [0.00023839908679346156, 0.09515572185584978], 'false,false,false': [0.07809284782009136, 0.13127615802217255], 'false,true': [0.003412573455839949, 0.04248188518284619], 'false,true,false': [0.004709918282542404, 0.03989274382640608], 'true': [8.419576545544427e-05, 0.0007432581805700833], 'true,false': [0.0, 0.0008892893057389107]}
{'': [0.0004324323891861624, 0.06934190316517228], 'false': [0.029328028106620822, 0.09342420745973312], 'false,false': [0.00018324987296007103, 0.09475210693171857], 'false,false,false': [0.07913043590854582, 0.12454378919159145], 'true': [0.0001282845624936178, 0.0008346896953050168], 'true,true': [6.811267872353366e-05, 0.00012477650317919511], 'true,true,false': [0.0, 3.25917199519056e-05], 'true,true,true': [0.0, 0.00031671956059264525]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.544
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.0211924133603819;  // std dev = 3.543, 92.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.24775932470990064;  // std dev = 4.279, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.75517232473028;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.788901799806106;  // std dev = 1.443, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1584360745807879;  // std dev = 0.193, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.2374703595391061;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09353488474209076;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4756388623153165;  // std dev = 0.278, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.23792810794156893;  // std dev = 1.191, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0011033539998009012;  // std dev = 0.316, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6355967047252007;  // std dev = 1.379, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14100828775178875;  // std dev = 0.115, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J), interaction(H, H) )
%   | | | then return -0.0294595965260942;  // std dev = 0.654, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12753621443068683;  // std dev = 2.499, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1446679823443495;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2373846930588749;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.44952138673247977;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.48934813519798226;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07247586580170584;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return -0.023382765743347023;  // std dev = 0.818, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4682893204419716;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.036517180349590235;  // std dev = 0.303, 208.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5366712881503913;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.17799896160803438;  // std dev = 2.063, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.03059278714944604;  // std dev = 2.017, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32936102721232774;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.04040098562287053;  // std dev = 0.880, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4532318138308608;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.040198474751009475;  // std dev = 0.215, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.060949758397821366;  // std dev = 3.342, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.11653019050531013;  // std dev = 2.601, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.40395970862587366;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.5059000739081971;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07410114833096974;  // std dev = 2.505, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31890653804050306;  // std dev = 0.087, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.33430146380823056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.033016494423000996;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.13633698261534816;  // std dev = 0.176, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.004874583970745507;  // std dev = 0.612, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.12552995190853655;  // std dev = 0.604, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3598510340380751;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.010867422237076697;  // std dev = 4.131, 140.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | | | else return 0.08628751526167674;  // std dev = 3.116, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2629546369180594;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.5090052649300618;  // std dev = 0.265, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.1759219372749055;  // std dev = 0.078, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.521911396360912;  // std dev = 0.108, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.15849905309799883;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4620865544610238;  // std dev = 0.729, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.15844858581472726;  // std dev = 0.345, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.09999281965901823;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07469679915515606;  // std dev = 1.462, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16603334213897714;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.21274160709785986;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10289558221756434;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.35507361433085927;  // std dev = 0.230, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.128672926550144;  // std dev = 0.031, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.06624515416929998;  // std dev = 1.646, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.06973701146989796;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.0654546896727902;  // std dev = 1.365, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.35248591192480877;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15727262194087702;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.34252113615204316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2220362715019199;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), phenotype(H, J) )
%   | | | then return 0.18032050319404944;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.026657515097173092;  // std dev = 1.556, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | else return 0.2244463093743246;  // std dev = 0.434, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.00972176146601833;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.02461064119909617;  // std dev = 3.310, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return -0.09877510950789631;  // std dev = 1.029, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15191077062217082;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.20100972905029232;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.07660668962300238;  // std dev = 0.210, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.011445135094848163;  // std dev = 0.432, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.022565895491284453;  // std dev = 0.803, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.026190571707082125;  // std dev = 1.396, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20685296825014624;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.10657317763623976;  // std dev = 1.259, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.02355688579543467;  // std dev = 3.051, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.478', 'seconds']
Refined model CLL: -0.176248


******************************************
Best model found
******************************************
Results 

CLL : -0.195685 

AUC ROC : 0.987028 

AUC PR : 0.250013 

Precision : 0.157107 

Recall : 0.890459 

F1 : 0.267091 

Total Learning Time : 3.544 

Total Inference Time : 3.5743463039398193 

Total revision time: 12.147690942764282
Best scored revision CLL: -0.176248


Results 

CLL : -0.195685 

AUC ROC : 0.987028 

AUC PR : 0.250013 

Precision : 0.157107 

Recall : 0.890459 

F1 : 0.267091 

Total Learning Time : 12.160199573516845 

Total Inference Time : 3.5743463039398193 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.172
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17800187627598277;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20173717784545814;  // std dev = 5.279, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.12561105171933207;  // std dev = 5.523, 148.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15664548883805338;  // std dev = 4.785, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.1680102128438946;  // std dev = 5.785, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.06950293313338288;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.123389227647473;  // std dev = 6.664, 199.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07604019759278018;  // std dev = 7.747, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0853537080498913;  // std dev = 7.612, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7392783184843287;  // std dev = 0.013, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2608993300355116;  // std dev = 0.016, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.010328734761960239;  // std dev = 4.140, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.06512421783161015;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.033153490583326485;  // std dev = 3.881, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.08319447282134704;  // std dev = 5.778, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026279669012379523;  // std dev = 7.108, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02732193556957221;  // std dev = 7.058, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.507', 'seconds']
Parameter learned model CLL:-0.325882 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.279, 76, 44], 'false,false,false,false': [5.523, 105, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.785, 66, 35], 'false,false,false,false': [5.785, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.769, 49, 20], 'false,false,false,false': [6.664, 132, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.747, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.612, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 35], 'true,false': [0.016, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.14, 60, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.881, 76, 35], 'false,false,false,false': [5.778, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.108, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.058, 182, 87]}]
{'': [nan, 0.21754703719723267], 'false': [nan, 0.21754703719723276], 'false,false': [nan, 0.21754703719723267], 'false,false,false': [nan, 0.21754703719723276]}
{'': [nan, 0.21924426375584752], 'false': [nan, 0.21924426375584813], 'false,false': [nan, 0.21924426375584752], 'false,false,false': [0.23222222222222247, 0.20612673484295155]}
{'': [nan, 0.2281996913048724], 'false': [nan, 0.2281996913048724], 'false,false': [nan, 0.2281996913048722], 'false,false,false': [0.2266639654986837, 0.2292092637988212]}
{'': [nan, 0.2192468825111143], 'false': [nan, 0.2192468825111143], 'false,false': [nan, 0.21924688251111446], 'false,false,false': [0.20583910943079178, 0.22314820602414404]}
{'': [nan, 0.2143254871828902], 'false': [nan, 0.2143254871828902], 'false,false': [nan, 0.2143254871828904], 'false,false,false': [nan, 0.2143254871828904]}
{'': [nan, 0.2219739934306949], 'false': [nan, 0.2219739934306949], 'false,false': [nan, 0.22197399343069563], 'false,false,false': [nan, 0.2219739934306944]}
{'': [0.23071660057185017, 0.21267157983568263], 'true': [4.493066035341339e-06, 4.352803827400281e-06], 'false': [nan, 0.21267157983568263], 'false,false': [nan, 0.21267157983568263], 'false,false,false': [0.20408163265306156, 0.2195781503515404], 'true,true': [nan, 4.493066035341339e-06], 'true,true,false': [nan, 4.493066035341339e-06]}
{'': [nan, 0.18984568357234075], 'false': [nan, 0.18984568357234075], 'false,false': [nan, 0.18984568357234036], 'false,false,false': [0.1357024627785538, 0.23020749052632442]}
{'': [nan, 0.1850681605965261], 'false': [nan, 0.1850681605965273], 'false,false': [nan, 0.1850681605965273], 'false,false,false': [nan, 0.1850681605965273]}
{'': [nan, 0.18518744302559578], 'false': [nan, 0.18518744302559578], 'false,false': [nan, 0.18518744302559562], 'false,false,false': [nan, 0.18518744302559562]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.304
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7581489350995123;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(D, F), complex(F, C) )
%   | | then return -0.04185106490048778;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( phenotype(D, G), enzyme(D, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22656998773109122;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.17296374991432717;  // std dev = 3.413, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.058148935099512356;  // std dev = 3.098, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | else if ( location(A, N) )
%   | | | then return 0.2417105789351275;  // std dev = 4.155, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.07254034569484417;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7392070123615109;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(D, G), interaction(G, A) )
%   | | then return -0.11557133150986909;  // std dev = 0.198, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.45867249341461447;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.040271198911738776;  // std dev = 2.499, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15210972796188574;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.33132858965546774;  // std dev = 1.880, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.15574513664404768;  // std dev = 5.946, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then if ( location(C, E), enzyme(F, D) )
%   | | | then return 0.7009962933898409;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06792915243178604;  // std dev = 0.928, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), interaction(C, G) )
%   | | | then return -0.09765766312103223;  // std dev = 0.957, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.17734180771327587;  // std dev = 3.657, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | else if ( interaction(A, H) )
%   | | then return 0.1358216767874066;  // std dev = 0.425, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | else return 0.06173278183665809;  // std dev = 0.429, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.41014545588531715;  // std dev = 1.164, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1595954206779443;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06553469980611859;  // std dev = 0.370, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), location(A, D) )
%   | then return 0.006775535415975568;  // std dev = 0.326, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( location(A, E), enzyme(A, F) )
%   | | then return 0.3629289820062101;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1246315275443379;  // std dev = 0.440, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6925492134818014;  // std dev = 0.238, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return -0.20482468345846838;  // std dev = 0.193, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( location(J, I), interaction(K, J) )
%   | | | then return 0.09028565911224098;  // std dev = 3.854, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.2718762754231913;  // std dev = 2.407, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.14615745754130435;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.009439186053200745;  // std dev = 1.481, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F), phenotype(C, G) )
%   | | then return 0.24973086116934623;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.559563343809419;  // std dev = 0.104, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(C, H), interaction(H, A) )
%   | | then return -0.1840401966980962;  // std dev = 0.123, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, C) )
%   | | | then return -0.012504036042357253;  // std dev = 1.561, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.09259470321658056;  // std dev = 2.862, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( recursion_proteinclass(K, B) )
%   | | then return 0.6253192898433015;  // std dev = 0.334, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L), interaction(J, K) )
%   | | | then return 0.10491847570338014;  // std dev = 4.381, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return -0.011981682515290472;  // std dev = 1.811, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else return 0.32789849212433203;  // std dev = 0.481, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3802374121054916;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E), complex(F, G) )
%   | | | then return 0.2443861941394288;  // std dev = 0.671, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5526937137483633;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16697727838659857;  // std dev = 0.340, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.02337370259163619;  // std dev = 3.359, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), interaction(K, I) )
%   | | | then return -0.08793484915028946;  // std dev = 1.422, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.05039599821324368;  // std dev = 2.548, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.15212158065322512;  // std dev = 2.773, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.05104892624279964;  // std dev = 3.401, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.3345509841813294;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3178599560881844;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6188099653306055;  // std dev = 0.608, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21511172054938416;  // std dev = 0.096, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( enzyme(G, I), interaction(J, G) )
%   | | then if ( phenotype(J, K), interaction(J, A) )
%   | | | then return 0.07236130883609135;  // std dev = 1.413, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.08126572142993777;  // std dev = 1.818, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( location(L, H), recursion_proteinclass(L, B) )
%   | | | then return 0.3077732141724922;  // std dev = 3.174, 51.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | | | else return -0.1472871358615305;  // std dev = 2.151, 66.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
%   | else return 0.23575127821221362;  // std dev = 1.186, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2626891357334407;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(C, E), complex(A, E) )
%   | | then return -0.09279997400689528;  // std dev = 0.187, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( enzyme(C, F), complex(A, G) )
%   | | | then return 0.10904450893744877;  // std dev = 1.074, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.0033098050703714472;  // std dev = 4.234, 157.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=43 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.27590485706229034;  // std dev = 0.220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.17837129056491946;  // std dev = 0.159, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04105239297246742;  // std dev = 1.019, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.3807201758526019;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04823444227241388;  // std dev = 3.406, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21402694838870567;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( interaction(D, A) )
%   | | | then return -0.17503337026931814;  // std dev = 0.305, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04906241842419521;  // std dev = 1.768, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18588222667010146;  // std dev = 0.640, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.014486363275706876;  // std dev = 2.477, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5414271624147031;  // std dev = 0.952, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.20799611831296433;  // std dev = 0.386, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.08455783762132171;  // std dev = 1.319, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.024352582073162234;  // std dev = 3.160, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2804987842354726;  // std dev = 0.128, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.27510799708367467;  // std dev = 0.988, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.08633547967358889;  // std dev = 0.239, 77.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=10 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.46414313291739323;  // std dev = 0.134, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.21712073718337072;  // std dev = 0.096, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.336592833428502;  // std dev = 1.056, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1569379353841027;  // std dev = 0.211, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.1529992185536948;  // std dev = 2.848, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.3790176239061056;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.927', 'seconds']
Refined model CLL: -0.232092


******************************************
Best model found
******************************************
Results 

CLL : -0.221247 

AUC ROC : 0.968252 

AUC PR : 0.303979 

Precision : 0.25163 

Recall : 0.684397 

F1 : 0.367969 

Total Learning Time : 12.304 

Total Inference Time : 7.7646400928497314 

Total revision time: 22.95573299026489
Best scored revision CLL: -0.232092


Results 

CLL : -0.221247 

AUC ROC : 0.968252 

AUC PR : 0.303979 

Precision : 0.25163 

Recall : 0.684397 

F1 : 0.367969 

Total Learning Time : 22.984814811706542 

Total Inference Time : 7.7646400928497314 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.243
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20138325853185626;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15084337178442936;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | | else return 0.15682496687645392;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15102202906053203;  // std dev = 5.196, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
%   | | | else return 0.11342333431712442;  // std dev = 6.620, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1668666786716464;  // std dev = 4.235, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | | else return 0.11898163529511982;  // std dev = 7.093, 228.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08163381614056284;  // std dev = 8.436, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07307706432089317;  // std dev = 8.399, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7046981158610797;  // std dev = 0.991, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2706847920099631;  // std dev = 0.034, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09666233194834783;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.04936410132781107;  // std dev = 5.262, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04032473120080333;  // std dev = 4.147, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.06058056816088121;  // std dev = 6.491, 190.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03188619822714014;  // std dev = 7.764, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039655647323009025;  // std dev = 7.670, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.220', 'seconds']
Parameter learned model CLL:-0.327905 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.951, 111, 52], 'false,false,false,false': [5.925, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.196, 79, 41], 'false,false,false,false': [6.62, 144, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.235, 47, 29], 'false,false,false,false': [7.093, 153, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.436, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.399, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.991, 1, 41], 'true,false': [0.034, 73, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.855, 42, 23], 'false,false,false,false': [5.262, 90, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.147, 83, 41], 'false,false,false,false': [6.491, 127, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.764, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.67, 205, 104]}]
{'': [nan, 0.22542452265028698], 'false': [nan, 0.22542452265028531], 'false,false': [nan, 0.22542452265028698], 'false,false,false': [nan, 0.22542452265028531]}
{'': [nan, 0.2183093866518382], 'false': [nan, 0.21830938665184305], 'false,false': [nan, 0.2183093866518382], 'false,false,false': [0.2172456622379478, 0.21937500000000135]}
{'': [nan, 0.21690167605752222], 'false': [nan, 0.21690167605752222], 'false,false': [nan, 0.21690167605752253], 'false,false,false': [0.22495113778230344, 0.21171654644495363]}
{'': [nan, 0.22490142418132283], 'false': [nan, 0.22490142418132283], 'false,false': [nan, 0.2249014241813234], 'false,false,false': [0.2359764542936288, 0.22063650313242839]}
{'': [nan, 0.2163003096227364], 'false': [nan, 0.2163003096227364], 'false,false': [nan, 0.2163003096227365], 'false,false,false': [nan, 0.2163003096227365]}
{'': [nan, 0.21909086826737012], 'false': [nan, 0.21909086826737012], 'false,false': [nan, 0.21909086826737023], 'false,false,false': [nan, 0.21909086826736981]}
{'': [0.22910492341731176, 0.21872199043097063], 'true': [0.02336882242056766, 1.610590612016966e-05], 'false': [nan, 0.21872199043097063], 'false,false': [nan, 0.21872199043097063], 'false,false,false': [0.22863905325443756, 0.21301775147928934], 'true,true': [nan, 0.02336882242056766], 'true,true,false': [nan, 0.02336882242056766]}
{'': [nan, 0.18904130456856025], 'false': [nan, 0.18904130456856025], 'false,false': [nan, 0.18904130456856025], 'false,false,false': [0.13871266660631992, 0.2217253341509359]}
{'': [nan, 0.18604681107717286], 'false': [nan, 0.18604681107717336], 'false,false': [nan, 0.18604681107717336], 'false,false,false': [nan, 0.18604681107717336]}
{'': [nan, 0.190367944232338], 'false': [nan, 0.190367944232338], 'false,false': [nan, 0.19036794423233777], 'false,false,false': [nan, 0.19036794423233777]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.21
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.7792015666784589;  // std dev = 1.662, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0.19148226843284555;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.11776431971489601;  // std dev = 4.471, 104.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.7337529772186846;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(C, E) )
%   | | then return 0.27170570697898655;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7352549954988055;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.14943364090968256;  // std dev = 0.147, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, H), location(A, I) )
%   | | | then return 0.1098029891538388;  // std dev = 4.024, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | | | else return -0.022497937460173614;  // std dev = 1.549, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2193261561552486;  // std dev = 4.519, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | | else return 0.09152366184593222;  // std dev = 3.089, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( location(A, E), interaction(F, A) )
%   | then return 0.09798766911545313;  // std dev = 0.379, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | else if ( complex(A, D), phenotype(C, G) )
%   | | then return 0.11218302893239786;  // std dev = 0.415, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.4987460768005692;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21595571355689042;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.6823322047602258;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.16666026051800498;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, K), interaction(A, L) )
%   | | then return 0.2939942095240347;  // std dev = 1.101, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.0741528912094123;  // std dev = 1.729, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.17213341803861917;  // std dev = 4.814, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.6080123641666372;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5141830121731711;  // std dev = 0.172, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( recursion_proteinclass(E, B), interaction(E, G) )
%   | | then return 0.6516958281247522;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.13295917280720745;  // std dev = 2.007, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.053388690219897166;  // std dev = 2.269, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.09115797376461937;  // std dev = 4.325, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | | | else return 0.2698180709832904;  // std dev = 2.325, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.410847259967601;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.021106563149702044;  // std dev = 2.874, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B), interaction(E, A) )
%   | then return 0.44738686033419867;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, F), enzyme(D, G) )
%   | | then return -0.021971782174339732;  // std dev = 0.307, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( phenotype(D, C), interaction(D, A) )
%   | | | then return 0.06951607706398773;  // std dev = 1.846, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.22864203996509874;  // std dev = 2.121, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.4464130392105776;  // std dev = 0.280, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.03311123458073349;  // std dev = 0.371, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then return 0.03688339212854285;  // std dev = 0.361, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.09281776219836493;  // std dev = 2.912, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.14622972442659563;  // std dev = 3.584, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), complex(C, E) )
%   | then if ( interaction(A, C), interaction(C, D) )
%   | | then return 0.56203258628452;  // std dev = 0.168, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.25954981501193136;  // std dev = 0.339, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(D, A), interaction(A, F) )
%   | | then return -0.10912897625059842;  // std dev = 0.217, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.41032579058581703;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03748645005488294;  // std dev = 5.227, 181.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=53 */
%   else if ( enzyme(A, G) )
%   | then return 0.47088668933302885;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then return 0.2600294728459092;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.052568415629138145;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1384640846854314;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49074471860882213;  // std dev = 0.172, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1754708161305651;  // std dev = 0.036, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( location(E, F), interaction(G, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2883673785755229;  // std dev = 0.311, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.041372782960182854;  // std dev = 2.479, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.31365786167443077;  // std dev = 0.608, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21752920524979982;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return -0.01126936875905327;  // std dev = 0.297, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.11712207398560077;  // std dev = 1.965, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.03870546998640337;  // std dev = 3.908, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then return -0.0055226294090994265;  // std dev = 0.297, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   else if ( interaction(A, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.20852784374688352;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.017269956781799805;  // std dev = 1.543, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5001043397534473;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13738450096466837;  // std dev = 1.362, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(I, K), interaction(L, I) )
%   | | | then return 0.10848013044255742;  // std dev = 2.265, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.020429147111533676;  // std dev = 3.710, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.23703578773298345;  // std dev = 1.145, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06598403673736719;  // std dev = 1.391, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(D, E), interaction(C, D) )
%   | then if ( phenotype(A, F), enzyme(C, G) )
%   | | then return 0.015581607590409906;  // std dev = 0.339, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5559011009199663;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1052389373613212;  // std dev = 2.161, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else return 0.0044029493984650385;  // std dev = 0.340, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.48594417736406936;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3898304716243239;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then return 0.07770830326843925;  // std dev = 0.938, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.0041286718742006056;  // std dev = 0.684, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04592876194527136;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.24969845323852194;  // std dev = 0.101, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.4634447181857368;  // std dev = 0.123, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.16199889558494635;  // std dev = 0.243, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return -0.006288198879709291;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2569925618763099;  // std dev = 0.212, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( phenotype(H, I), enzyme(H, J) )
%   | | | then return -0.06446093959026691;  // std dev = 1.802, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.04114336175595683;  // std dev = 3.053, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.08702044263297282;  // std dev = 2.305, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.011969181683914063;  // std dev = 3.194, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.224', 'seconds']
Refined model CLL: -0.242779


******************************************
Best model found
******************************************
Results 

CLL : -0.252349 

AUC ROC : 0.945728 

AUC PR : 0.423569 

Precision : 0.484099 

Recall : 0.516981 

F1 : 0.5 

Total Learning Time : 10.21 

Total Inference Time : 5.202657222747803 

Total revision time: 18.78218739318848
Best scored revision CLL: -0.242779


Results 

CLL : -0.252349 

AUC ROC : 0.945728 

AUC PR : 0.423569 

Precision : 0.484099 

Recall : 0.516981 

F1 : 0.5 

Total Learning Time : 18.81126921463013 

Total Inference Time : 5.202657222747803 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.199
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2027182234890256;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1907930625457289;  // std dev = 5.717, 142.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=51 */
%   | | | else return 0.2221143234444533;  // std dev = 4.999, 105.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.08353281203286556;  // std dev = 5.618, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   | | | else return 0.1618591487573639;  // std dev = 5.538, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09555542414324232;  // std dev = 4.248, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | else return 0.096949883658453;  // std dev = 6.699, 206.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08503880037004077;  // std dev = 7.901, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07505777151276487;  // std dev = 7.867, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7415150051405082;  // std dev = 0.020, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.257651245262247;  // std dev = 0.024, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07583249924689509;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.12588151300528153;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05711023914532365;  // std dev = 4.252, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.033779834654008814;  // std dev = 5.679, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02866428005309997;  // std dev = 7.139, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 1.6936525047677017E-4;  // std dev = 7.248, 306.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.791', 'seconds']
Parameter learned model CLL:-0.320564 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.717, 91, 51], 'false,false,false,false': [4.999, 64, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.618, 112, 44], 'false,false,false,false': [5.538, 85, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.248, 59, 26], 'false,false,false,false': [6.699, 140, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.901, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.867, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 44], 'true,false': [0.024, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 47, 25], 'false,false,false,false': [3.704, 34, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.252, 85, 44], 'false,false,false,false': [5.679, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.139, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.248, 214, 92]}]
{'': [nan, 0.22584129388825896], 'false': [nan, 0.2258412938882585], 'false,false': [nan, 0.22584129388825896], 'false,false,false': [nan, 0.2258412938882585]}
{'': [nan, 0.23373600616302664], 'false': [nan, 0.23373600616302645], 'false,false': [nan, 0.23373600616302664], 'false,false,false': [0.23016266613767306, 0.2380045351473925]}
{'': [nan, 0.21684240309768432], 'false': [nan, 0.21684240309768432], 'false,false': [nan, 0.21684240309768402], 'false,false,false': [0.20232657361655135, 0.23055685439709178]}
{'': [nan, 0.21621874546435985], 'false': [nan, 0.21621874546435985], 'false,false': [nan, 0.21621874546435926], 'false,false,false': [0.21231833910034498, 0.21782756845363702]}
{'': [nan, 0.2182487031541708], 'false': [nan, 0.2182487031541708], 'false,false': [nan, 0.21824870315417047], 'false,false,false': [nan, 0.21824870315417047]}
{'': [nan, 0.2202659336475078], 'false': [nan, 0.2202659336475078], 'false,false': [nan, 0.22026593364750674], 'false,false,false': [nan, 0.2202659336475072]}
{'': [0.2318436420309488, 0.23347622932054787], 'false': [nan, 0.23347622932054787], 'false,false': [nan, 0.23347622932054787], 'false,false,false': [0.22665895061728422, 0.24068944290550898], 'true': [9.531875729687753e-06, 7.884836118991695e-06], 'true,true': [nan, 9.531875729687753e-06], 'true,true,false': [nan, 9.531875729687753e-06]}
{'': [nan, 0.18317123750005823], 'false': [nan, 0.18317123750005823], 'false,false': [nan, 0.1831712375000587], 'false,false,false': [0.1401741438010381, 0.22090649046051586]}
{'': [nan, 0.18268364029543516], 'false': [nan, 0.18268364029543646], 'false,false': [nan, 0.18268364029543646], 'false,false,false': [nan, 0.18268364029543646]}
{'': [nan, 0.1716855124654035], 'false': [nan, 0.1716855124654035], 'false,false': [nan, 0.1716855124654035], 'false,false,false': [nan, 0.1716855124654035]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.558
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), interaction(D, F) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.041822404487267484;  // std dev = 0.387, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | else if ( interaction(D, G), complex(G, H) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.08891816586874314;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17866175561233225;  // std dev = 5.829, 156.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.788027697805357;  // std dev = 0.158, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else return -0.160309601854165;  // std dev = 0.119, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), interaction(H, E) )
%   | | then if ( interaction(E, H) )
%   | | | then return 0.34697655044517955;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16322892354848695;  // std dev = 1.960, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.6703124312281661;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2272791943731762;  // std dev = 1.864, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.010166306697677612;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.15253073058543504;  // std dev = 4.086, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.6693232218899678;  // std dev = 0.066, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14344719177546508;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.14202146151806058;  // std dev = 0.112, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5878705970362514;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.05798938962152003;  // std dev = 1.300, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.12882045386651536;  // std dev = 1.745, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5497043556460618;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1484310078531819;  // std dev = 2.741, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.24144233442922874;  // std dev = 3.948, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.42143193579350396;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6383587654763214;  // std dev = 0.712, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.15843996515127023;  // std dev = 0.244, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.4744123328490393;  // std dev = 2.930, 58.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | else if ( phenotype(A, G) )
%   | | then return -0.12672862219224973;  // std dev = 0.146, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.21918130832326058;  // std dev = 0.227, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(A, A) )
%   | then return 0.02910934297708634;  // std dev = 0.457, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.004420691421640939;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.39348992481050277;  // std dev = 0.115, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(F, C), interaction(C, F) )
%   | | then if ( complex(F, D) )
%   | | | then return -0.14314280383469252;  // std dev = 0.117, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.002498878337655522;  // std dev = 1.407, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( enzyme(C, G), enzyme(A, H) )
%   | | | then return -0.057384276519231614;  // std dev = 0.935, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.05077595187680681;  // std dev = 2.094, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.35128516137181753;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12801699427033159;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.09957310169002459;  // std dev = 2.633, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.03894661665964586;  // std dev = 3.912, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.22426714104083417;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2910154491916836;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.37180010812770586;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), phenotype(A, H) )
%   | | then return 0.08747605147136465;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2916262177377599;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.03853491273185344;  // std dev = 1.592, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.03151648975253746;  // std dev = 1.044, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.15068376468582295;  // std dev = 1.573, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.05141984783510175;  // std dev = 4.652, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21399189536294924;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.32042752161993954;  // std dev = 0.706, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.5855710718170647;  // std dev = 0.461, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14372135845323838;  // std dev = 0.050, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( location(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.49668973892304674;  // std dev = 0.148, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.23493836094356446;  // std dev = 0.114, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.2466440069965461;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.08425894607811013;  // std dev = 2.397, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.043206899097988895;  // std dev = 2.805, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1665021512415182;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, D) )
%   | | then return -0.016599788059548072;  // std dev = 0.216, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( complex(C, F) )
%   | | | then return 0.13217199591041853;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.03845431507450974;  // std dev = 0.315, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( complex(A, I) )
%   | | then return 0.013154270574925396;  // std dev = 0.222, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else return -0.0759416117343142;  // std dev = 0.300, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20130403058903837;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.029966064166490704;  // std dev = 2.824, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return 0.030318908441692275;  // std dev = 2.949, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16496199848409793;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, D), location(D, E) )
%   | | then if ( enzyme(A, F), interaction(A, A) )
%   | | | then return -0.16909036130820593;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05847821305186855;  // std dev = 0.673, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( phenotype(D, G), location(D, H) )
%   | | | then return 0.030829440690575118;  // std dev = 3.018, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | | else return -0.02316636867632198;  // std dev = 2.903, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.14371368025779693;  // std dev = 1.005, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.01566686745096548;  // std dev = 2.065, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.14221442584096836;  // std dev = 0.737, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.22491792120808085;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17255978379587913;  // std dev = 0.080, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( enzyme(A, E), interaction(D, D) )
%   | | | then return -0.03617653252005458;  // std dev = 0.657, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.13345112655863142;  // std dev = 0.588, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( enzyme(A, E), phenotype(A, H) )
%   | | | then return 0.06433549847014598;  // std dev = 0.353, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04215248747242306;  // std dev = 1.579, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), phenotype(K, L) )
%   | | | then return 0.07928292818572157;  // std dev = 1.942, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.005957443628093386;  // std dev = 1.755, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.16029106339833532;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.011833588734127612;  // std dev = 3.698, 146.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '33.478', 'seconds']
Refined model CLL: -0.204271


******************************************
Best model found
******************************************
Results 

CLL : -0.225081 

AUC ROC : 0.976675 

AUC PR : 0.342195 

Precision : 0.17199 

Recall : 0.758123 

F1 : 0.280374 

Total Learning Time : 14.558 

Total Inference Time : 11.284373044967651 

Total revision time: 28.92042520713806
Best scored revision CLL: -0.204271


Results 

CLL : -0.225081 

AUC ROC : 0.976675 

AUC PR : 0.342195 

Precision : 0.17199 

Recall : 0.758123 

F1 : 0.280374 

Total Learning Time : 28.94950702857971 

Total Inference Time : 11.284373044967651 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.161
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1901952671458448;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1524026792925606;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | | else return 0.17001793775092186;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1518042613630742;  // std dev = 4.294, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.10573821717744893;  // std dev = 6.392, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10880947316287681;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.10333590040082256;  // std dev = 6.793, 215.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10416520040651855;  // std dev = 7.582, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10669670720317498;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6608127848561102;  // std dev = 1.367, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else return -0.2722246657155007;  // std dev = 0.007, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09705643088567761;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.07740928366045385;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.051805457032900105;  // std dev = 3.442, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.0687628264885507;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051842088614902096;  // std dev = 7.032, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01832250114558729;  // std dev = 7.163, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.591', 'seconds']
Parameter learned model CLL:-0.346628 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.951, 111, 52], 'false,false,false,false': [4.749, 67, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.294, 54, 28], 'false,false,false,false': [6.392, 138, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [6.793, 148, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.582, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.367, 2, 28], 'true,false': [0.007, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.6, 59, 33], 'false,false,false,false': [4.054, 48, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.442, 54, 28], 'false,false,false,false': [6.143, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.032, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.163, 177, 86]}]
{'': [nan, 0.22179156542090983], 'false': [nan, 0.22179156542090966], 'false,false': [nan, 0.22179156542090983], 'false,false,false': [nan, 0.22179156542090966]}
{'': [nan, 0.21963957759412295], 'false': [nan, 0.21963957759412253], 'false,false': [nan, 0.21963957759412295], 'false,false,false': [0.2172456622379459, 0.22331144005489592]}
{'': [nan, 0.21371025070479968], 'false': [nan, 0.21371025070479968], 'false,false': [nan, 0.2137102507047995], 'false,false,false': [0.2248144086101167, 0.208438696229852]}
{'': [nan, 0.21544527269467822], 'false': [nan, 0.21544527269467822], 'false,false': [nan, 0.21544527269467834], 'false,false,false': [0.21832806664751533, 0.2146477291600296]}
{'': [nan, 0.22107833848659758], 'false': [nan, 0.22107833848659758], 'false,false': [nan, 0.22107833848659703], 'false,false,false': [nan, 0.22107833848659703]}
{'': [nan, 0.22818563343619302], 'false': [nan, 0.22818563343619302], 'false,false': [nan, 0.22818563343619336], 'false,false,false': [nan, 0.22818563343619316]}
{'': [0.21815346603236258, 0.22798249354795422], 'false': [nan, 0.22798249354795422], 'false,false': [nan, 0.22798249354795422], 'false,false,false': [0.23003308128544506, 0.22518296115593975], 'true': [0.06227705288491776, 9.647993611045836e-07], 'true,true': [nan, 0.06227705288491776], 'true,true,false': [nan, 0.06227705288491776]}
{'': [nan, 0.1999807610120396], 'false': [nan, 0.1999807610120396], 'false,false': [nan, 0.19998076101204026], 'false,false,false': [0.14445366954677935, 0.2273147283909891]}
{'': [nan, 0.200984563764968], 'false': [nan, 0.20098456376496754], 'false,false': [nan, 0.20098456376496754], 'false,false,false': [nan, 0.20098456376496754]}
{'': [nan, 0.1950707077609452], 'false': [nan, 0.1950707077609452], 'false,false': [nan, 0.19507070776094507], 'false,false,false': [nan, 0.19507070776094507]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.83
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.17931681831119048;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7986159715457796;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.7560581046743238;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4099393538905048;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(G, J) )
%   | | | then return -0.00323010201262639;  // std dev = 1.639, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.1195177549394661;  // std dev = 2.355, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.15244243942555472;  // std dev = 5.761, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7098204788438756;  // std dev = 0.282, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.18721015975773064;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.5647918873560316;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( interaction(A, H), phenotype(H, D) )
%   | | | then return -0.06722928957093467;  // std dev = 1.556, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.07152080227875514;  // std dev = 4.907, 142.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=37 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5988363556966777;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12083259147238685;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.4252340561934438;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10811348012207751;  // std dev = 3.589, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.48102492447992523;  // std dev = 0.250, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, D) )
%   | | then return -0.1283621928661723;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(F, D), interaction(A, G) )
%   | | | then return 0.21705820884983779;  // std dev = 2.051, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.06874894920768579;  // std dev = 3.914, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.475275202136206;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.21025835679304766;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.025104484747004066;  // std dev = 1.737, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.00944995923699856;  // std dev = 1.130, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17594276152902638;  // std dev = 3.674, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3526259296845614;  // std dev = 0.220, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.24267758472797202;  // std dev = 0.429, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6232968133388271;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), location(A, H) )
%   | | | then return -0.03256502017457404;  // std dev = 2.675, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
%   | | | else return 0.21418519185573642;  // std dev = 1.315, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return 0.029030686202266797;  // std dev = 1.865, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.30621321682365443;  // std dev = 2.284, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.13644840644749548;  // std dev = 2.819, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.05555090015122237;  // std dev = 3.374, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32277380150347457;  // std dev = 0.134, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(D, G) )
%   | | | then return 0.0031737334239170176;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09194503232648586;  // std dev = 1.276, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.47587667085253865;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.012243246733047684;  // std dev = 3.590, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6165943570576045;  // std dev = 1.117, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.23231829551245736;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.3079079523105889;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08694803670609631;  // std dev = 3.869, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.19048142277444197;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.670329227699425;  // std dev = 0.117, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.20696834796596097;  // std dev = 0.071, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.3839010226790337;  // std dev = 0.166, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, F), interaction(A, J) )
%   | | | then return -0.05074169377185412;  // std dev = 1.775, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.10996200644105641;  // std dev = 3.439, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2700160493380313;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.02569102613915784;  // std dev = 2.922, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.11194900066555769;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), complex(D, E) )
%   | then return 0.15288625105117135;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2979399959179399;  // std dev = 0.144, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.3310848927386263;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07213392424163685;  // std dev = 1.799, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.08530460593806592;  // std dev = 2.477, 68.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5231308267035496;  // std dev = 1.332, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.21677807045537492;  // std dev = 0.419, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.003981722558765747;  // std dev = 1.324, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.14538964062397325;  // std dev = 2.619, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1324975287935631;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.29041770030752373;  // std dev = 0.310, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3636757237775434;  // std dev = 0.396, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5434892071533046;  // std dev = 0.438, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16303018705078096;  // std dev = 0.055, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.09732786237680084;  // std dev = 1.235, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.005987426278155449;  // std dev = 1.626, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.05430027362997083;  // std dev = 1.526, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -2.0507374861603034E-5;  // std dev = 4.042, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.15623754079624017;  // std dev = 0.088, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.15788639302795918;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.26037174331509344;  // std dev = 0.210, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.49141166805157305;  // std dev = 0.388, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.15666501350441564;  // std dev = 0.037, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.0826556088537343;  // std dev = 0.485, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.03901072165803749;  // std dev = 0.549, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.11131706392437976;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0018852494525909056;  // std dev = 4.578, 163.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.619', 'seconds']
Refined model CLL: -0.218941


******************************************
Best model found
******************************************
Results 

CLL : -0.235723 

AUC ROC : 0.945523 

AUC PR : 0.29244 

Precision : 0.283531 

Recall : 0.590106 

F1 : 0.383028 

Total Learning Time : 6.83 

Total Inference Time : 3.1137938499450684 

Total revision time: 12.902722898483276
Best scored revision CLL: -0.218941


Results 

CLL : -0.235723 

AUC ROC : 0.945523 

AUC PR : 0.29244 

Precision : 0.283531 

Recall : 0.590106 

F1 : 0.383028 

Total Learning Time : 12.931804719924926 

Total Inference Time : 3.1137938499450684 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.358
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.1914822684328444;  // std dev = 4.899, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5918290789791347;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.508243899526118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7566616036219046;  // std dev = 2.347, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.163750681919535;  // std dev = 0.042, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1199914395065129;  // std dev = 1.674, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5903283035793059;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.634868538762975;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1069321474616392;  // std dev = 4.213, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6236008210046972;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1452604563438625;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26045815341616496;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10944440065775814;  // std dev = 1.353, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.36624741503914904;  // std dev = 0.911, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.46774604952379495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5657989199788277;  // std dev = 1.217, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.02695302061971002;  // std dev = 5.017, 244.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.580338413460662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07476526872665178;  // std dev = 1.665, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3456864539568392;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39552117426048883;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.061062459402579525;  // std dev = 5.369, 239.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.436304049742935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.19422987353219212;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20462062846955545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27235994087397347;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2615064204597745;  // std dev = 0.595, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3334816791804045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -4.929158774792537E-4;  // std dev = 2.201, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3139564777173201;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0589735675082;  // std dev = 4.699, 185.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=55 */
%   | | | else return 0.027148265405734236;  // std dev = 1.850, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26461526165802196;  // std dev = 0.278, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.26386782415344245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7964903977398742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5719357261999551;  // std dev = 0.403, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17978105413904458;  // std dev = 0.457, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25056240334103397;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04630925731933631;  // std dev = 4.098, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17834239320779877;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.03287542886688153;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41108977281050113;  // std dev = 2.459, 78.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=71 */
%   | | else return -0.1495475437941574;  // std dev = 0.240, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2158817215893718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08011342974897209;  // std dev = 1.502, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17955583904553146;  // std dev = 0.165, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.48878881411021113;  // std dev = 0.236, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.19732739601992524;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.043526979668355704;  // std dev = 1.379, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.05149473912310916;  // std dev = 0.362, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.004840313435317885;  // std dev = 1.701, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20116468198534634;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036712085808091495;  // std dev = 3.365, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return -0.03706823082703728;  // std dev = 1.468, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13535402167435054;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.29357005173833284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03219812767841475;  // std dev = 0.472, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.0032652339920162033;  // std dev = 2.116, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.170769695654681;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02049905981473981;  // std dev = 3.226, 142.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=40 */
%   | | | else return 0.0045574201654335995;  // std dev = 1.418, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.961', 'seconds']
Parameter learned model CLL:-0.194163 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.867, 84, 33], 'false,false,true,false': [4.899, 72, 36], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.904, 1, 5], 'false,true,true': [0.732, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.347, 6, 69], 'false,false,true,false': [0.042, 145, 0], 'false,false,false,true': [1.674, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.068, 0, 8], 'true,false': [0.026, 0, 3], 'false,true,true': [4.213, 79, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.353, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.911, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.217, 2, 14], 'false,true,false': [5.017, 187, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.665, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.01, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.033, 0, 4], 'false,true': [5.369, 168, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.01, 0, 7], 'true,true,false': [0.595, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.201, 36, 12], 'false,false,true': [0.008, 0, 3], 'false,false,false,true': [4.699, 130, 55], 'false,false,false,false': [1.85, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.278, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.403, 0, 33], 'true,false': [0.457, 63, 0], 'false,true': [0.007, 0, 3], 'false,false,true': [4.098, 90, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.908, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.459, 7, 71], 'false,true,false': [0.24, 171, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.502, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.165, 0, 8], 'true,false,true': [0.236, 2, 0], 'true,false,false': [0.039, 0, 3], 'false,true,true': [1.379, 39, 11], 'false,true,false,true': [0.362, 1, 1], 'false,true,false,false': [1.701, 45, 17], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [3.365, 84, 40], 'false,false,false,false': [1.468, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.023, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.472, 1, 3], 'false,true': [2.116, 71, 29], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.226, 102, 40], 'false,false,false,false': [1.418, 11, 4]}]
{'': [0.13017751479289916, 0.21590537353007022], 'false': [0.18750000000000006, 0.21314248072780492], 'false,false': [0.21262222222222243, 0.22222222222222207], 'false,false,false': [0.22222222222222224, 0.17283950617283952], 'false,false,true': [0.20249835634451155, 0.22222222222222346], 'false,true': [0.0, 1.4802973661668753e-16], 'true': [0.09876543209876527, 0.18750000000000006], 'false,true,false': [0.0, 0.0]}
{'': [0.07367725300727719, 0.21622141932550543], 'false': [0.13385372108722043, 0.21544941016439498], 'false,false': [0.21538497939428522, 0.21568801932448312], 'false,false,false': [0.21568801932448312, nan], 'false,false,true': [0.07341797798152877, 1.2059052613688397e-05], 'false,true': [0.13385372108722043, nan], 'true': [0.0, 0.13617725300727748]}
{'': [0.0008761292810486927, 0.15723528342039164], 'false': [0.15417852654150083, 0.20682059219318602], 'false,false': [0.25, 0.18303307092126708], 'false,false,true': [nan, 0.25], 'false,false,false': [0.18303307092126708, nan], 'false,true': [0.15709348696978642, 0.15151384911765053], 'false,true,false': [0.06923806323480494, -4.7580986769649563e-17], 'true': [0.0005762691624061622, 0.00023296895484673877]}
{'': [0.06988387649275829, 0.12429588335581017], 'false': [0.11927877823652006, 0.21502529609989082], 'false,false': [0.0, 0.21330826030103042], 'false,false,false': [0.21330826030103042, nan], 'false,true': [0.09263061034913611, 0.10315820503506293], 'false,true,true': [nan, 0.09263061034913606], 'true': [0.0753784584403975, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0006815115987924735, 0.12583528249180223], 'false': [0.12062265353379378, 0.225049450213805], 'false,false': [0.0, 0.24447110315757248], 'false,false,false': [0.24999999999999994, 0.24], 'true': [1.4593313183494264e-05, 0.00026820992277171163], 'true,true': [1.4593313183494264e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.029870573592660016, 0.11947953587817095], 'false': [0.10090351939966201, 0.12307502004160914], 'false,false': [2.0562511446201952e-05, 0.12390992731546006], 'false,false,false': [0.11937526104049997, 0.16294857966318932], 'true': [0.03223325476799537, 0.0], 'true,true': [1.4882050440058667e-05, 0.08854044408392896], 'true,false': [nan, 0.0]}
{'': [0.12796642697491917, 0.12717133194057825], 'true': [0.05891048143596708, 0.003320026486378371], 'false': [1.565835823395349e-05, 0.12916465572149502], 'false,false': [0.12916465572149502, nan], 'true,true': [0.007049151686588434, 0.05824459092240923], 'true,true,false': [0.0, 0.004933400388442565], 'true,true,true': [0.0077540160677178616, 0.0]}
{'': [0.07402592414482524, 0.09455009900048075], 'false': [0.09212438347688706, 0.11701953186657876], 'false,false': [0.0, 0.11879779811560826], 'false,false,false': [0.11879779811560826, nan], 'false,true': [0.07749801033325429, 0.0003361923340643252], 'false,true,true': [nan, 0.07749801033325411], 'true': [0.0, 0.13747152943236965], 'false,false,true': [0.0, nan]}
{'': [0.06555575241464136, 0.07285517766741409], 'false': [0.043656983916844055, 0.09476420833379667], 'false,false': [1.1483931829425753e-05, 0.0961541912016025], 'false,false,false': [0.09130660517052527, 0.1267258316390386], 'true': [0.0034126962773013483, 0.12444186180957154], 'true,false': [0.02790949638862819, 0.0004945905688638202], 'false,true': [0.03803662733165586, 0.04733035641954823], 'false,true,false': [0.06539110441739523, 0.046648575453337865]}
{'': [0.02376935068719152, 0.065335223881321], 'false': [0.04475533094837573, 0.07806521177945328], 'false,false': [8.925467454887204e-06, 0.07912470815827476], 'false,false,false': [0.07329554826567268, 0.13407756643111626], 'true': [0.002805855756943157, 0.05562134231423552], 'true,true': [0.002805855756943157, nan], 'true,true,true': [7.76532724984434e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5581489350995124;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.12183052713931335;  // std dev = 6.247, 201.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=53 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7124811684767283;  // std dev = 2.856, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.15747027170841213;  // std dev = 0.013, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.15860534448542846;  // std dev = 1.384, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.06604371005360375;  // std dev = 2.922, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return 0.2013356255594862;  // std dev = 2.675, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6648605990115509;  // std dev = 1.442, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.13831551069844147;  // std dev = 0.020, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.11519730123019678;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.27051246221498987;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.047930339326939776;  // std dev = 1.628, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.12631573806348165;  // std dev = 1.149, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.08677745207640142;  // std dev = 4.062, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
%   | | | else return 0.12734862525790747;  // std dev = 2.867, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5984657991285636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05575458825143764;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.037469795711296355;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.04848541615723892;  // std dev = 1.687, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.056672332136361775;  // std dev = 1.041, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.028113552642037853;  // std dev = 3.010, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0.10039478545368025;  // std dev = 3.880, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.45031720709625944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.15127690697039217;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.31364904546066386;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.18598948569813373;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3430557160604778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1406196391943136;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.02987533156963067;  // std dev = 2.277, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else return -0.13725830815284482;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.24482775743051055;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.002994171129058759;  // std dev = 2.581, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.06813118310443583;  // std dev = 4.286, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25053381423373594;  // std dev = 0.254, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27036686525838105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5848813487148659;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( interaction(F, A) )
%   | | then return -0.1681420458092625;  // std dev = 0.050, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.32260671563514876;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.05440967632627036;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, H) )
%   | | | then return 0.04494965346217282;  // std dev = 2.940, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return -0.00152020074364102;  // std dev = 2.694, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | else return 0.16243710589230204;  // std dev = 0.653, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1712320888954173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24630898134333812;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.3920052541558079;  // std dev = 2.274, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return 0.4842224750291712;  // std dev = 0.411, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.13240314448593157;  // std dev = 0.108, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.17700375517473008;  // std dev = 0.197, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.22043573617203127;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.0525412774138262;  // std dev = 1.200, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.17470111849908393;  // std dev = 0.732, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16422945878080086;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18715438239389992;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3322599228232778;  // std dev = 0.204, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12130100622486195;  // std dev = 0.218, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11390965094011436;  // std dev = 0.200, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.034395284056563565;  // std dev = 1.901, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24469573715514847;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.09637536625345199;  // std dev = 1.787, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return -0.02038911358200892;  // std dev = 3.139, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.12861928055608088;  // std dev = 0.000231, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1039690958101222;  // std dev = 0.493, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.16058453150040744;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08574133068369932;  // std dev = 0.004, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.04518492825446488;  // std dev = 1.295, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.01108242462895778;  // std dev = 1.617, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2023290473862135;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17451858011711247;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.007657469751547173;  // std dev = 3.588, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.606', 'seconds']
Refined model CLL: -0.195092


******************************************
Best model found
******************************************
Results 

CLL : -0.199949 

AUC ROC : 0.986226 

AUC PR : 0.284638 

Precision : 0.164236 

Recall : 0.758865 

F1 : 0.270032 

Total Learning Time : 5.215 

Total Inference Time : 7.578986644744873 

Total revision time: 21.334300325393677
Best scored revision CLL: -0.194163


Results 

CLL : -0.199949 

AUC ROC : 0.986226 

AUC PR : 0.284638 

Precision : 0.164236 

Recall : 0.758865 

F1 : 0.270032 

Total Learning Time : 21.35560898590088 

Total Inference Time : 7.578986644744873 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.397
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09479015647355703;  // std dev = 4.865, 131.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=31 */
%   | | | else return 0.17064893509951146;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6850288215140489;  // std dev = 3.430, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15868133130707912;  // std dev = 0.073, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13018172355004123;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4015202829001308;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10750392890311118;  // std dev = 4.287, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5406275730294796;  // std dev = 2.862, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14331412690669512;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8265927621111702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13987515880319334;  // std dev = 1.549, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3295147852508851;  // std dev = 1.342, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.45533373140070565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25575992268562325;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.48146584977303325;  // std dev = 2.019, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.04160188819447337;  // std dev = 5.153, 240.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5516902861509854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.054992702787056764;  // std dev = 1.686, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3755083113878544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12396912931489901;  // std dev = 1.498, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05239865818244859;  // std dev = 5.892, 299.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4147925722736592;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.024327276737419086;  // std dev = 1.695, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2968955641802939;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4564732536048217;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31886768102914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01818777515583054;  // std dev = 2.833, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.32642946396357875;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06305720584852217;  // std dev = 4.710, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | | else return 0.11622573858808986;  // std dev = 2.116, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.282949367925666;  // std dev = 0.258, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25391347003422093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24733023173386504;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5332869469852822;  // std dev = 1.287, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18603722584380278;  // std dev = 0.707, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2662233059737541;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05628326625563279;  // std dev = 4.507, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.06285467168622172;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.019089840815252675;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41753263181222794;  // std dev = 2.773, 91.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=82 */
%   | | else return -0.1535915440598518;  // std dev = 0.537, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.2501977908167706;  // std dev = 0.649, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 8.40679678737289E-4;  // std dev = 1.455, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.08852853604792024;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.12131874526919084;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23192837629144414;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.019347793341148643;  // std dev = 1.689, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09118050207514401;  // std dev = 0.966, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.03264763639407828;  // std dev = 1.371, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.052169519990508006;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030956764014343583;  // std dev = 3.861, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.07771804478415838;  // std dev = 1.349, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16584109226614988;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1970235348097721;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.6389129752659045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18858081767338494;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.027410636164808034;  // std dev = 2.434, 136.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.04264688942602688;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018543826383221888;  // std dev = 3.928, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.024523366122821022;  // std dev = 1.386, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.987', 'seconds']
Parameter learned model CLL:-0.198443 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.865, 100, 31], 'false,false,true,false': [5.562, 99, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [2.98e-08, 0, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.43, 14, 76], 'false,false,true,false': [0.073, 207, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.301, 2, 11], 'true,false': [0.0, 0, 6], 'false,true,true': [4.287, 82, 34], 'false,true,false,true': [2.862, 10, 48], 'false,true,false,false': [8.16e-08, 101, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.549, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.342, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.809, 1, 3], 'false,true,true,false': [2.019, 6, 21], 'false,true,false': [5.153, 182, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.686, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.498, 3, 10], 'false,true': [5.892, 217, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.695, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.026, 0, 9], 'true,true,false': [0.164, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.833, 54, 19], 'false,false,true': [0.045, 0, 8], 'false,false,false,true': [4.71, 124, 51], 'false,false,false,false': [2.116, 19, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.258, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.287, 2, 33], 'true,false': [0.707, 102, 0], 'false,true': [0.03, 0, 5], 'false,false,true': [4.507, 109, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [1.513, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.773, 9, 82], 'false,true,false': [0.537, 188, 0], 'false,false,true,true': [0.649, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.455, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.963, 1, 9], 'true,false,true': [0.689, 1, 2], 'true,false,false': [0.055, 0, 5], 'false,true,true': [1.689, 38, 13], 'false,true,false,true': [0.966, 4, 8], 'false,true,false,false': [1.371, 42, 11], 'false,false,true': [0.924, 1, 5], 'false,false,false,true': [3.861, 106, 47], 'false,false,false,false': [1.349, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.065, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.043, 0, 3], 'false,true': [2.434, 104, 32], 'false,false,true': [0.928, 1, 5], 'false,false,false,true': [3.928, 108, 47], 'false,false,false,false': [1.386, 10, 4]}]
{'': [-2.0898315757650005e-16, 0.20671366154677767], 'false': [-2.5376526277146434e-16, 0.19933633282554636], 'false,false': [0.1999867768595045, 0.18749999999999983], 'false,false,true': [0.18064215372064682, 0.21484375000000117], 'false,false,false': [0.18749999999999983, nan], 'true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [1.0449157878825003e-16, 0.19464356920998171], 'false': [0.10937500000000006, 0.1906675223488266], 'false,false': [0.18998560885422217, 0.2040816326530613], 'false,false,false': [0.2040816326530613, nan], 'false,false,true': [0.13075787065094704, 2.5641203610685774e-05], 'false,true': [0.10937500000000006, nan], 'true': [6.344131569286608e-17, 8.881784197001253e-17]}
{'': [0.09418282548476435, 0.16225651709358335], 'false': [0.15928697447522752, 0.21801742833658794], 'false,false': [0.21801742833658794, nan], 'false,false,true': [0.0, 0.19991008069594066], 'false,true': [0.15845950134621756, 0.1598899195339363], 'false,true,false': [0.14117802966963494, 6.5953843047039e-17], 'true': [0.13017751479289924, -7.401486830834377e-17]}
{'': [0.09556330196556412, 0.13646770324797997], 'false': [0.13318599866232508, 0.19204543142337963], 'false,false': [0.0, 0.18942917960246533], 'false,false,false': [0.18942917960246533, nan], 'false,true': [0.15825029725501139, 0.11064984238305271], 'false,true,true': [0.16344634382639328, 0.15090720089746143], 'true': [0.10003919497012898, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.1266274560867214, 0.11904448063282623], 'true': [0.0, 0.17266628486137228], 'false': [0.1161220442201945, 0.1675510171477727], 'false,false': [0.0, 0.16893678449859117], 'false,false,false': [0.16893678449859117, nan], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0]}
{'': [0.007549606124828634, 0.12447594310856233], 'false': [0.10992153713127852, 0.12850042198419961], 'false,false': [0.00025546871247626723, 0.1310601718535112], 'false,false,false': [0.1267919157891678, 0.15439185883172898], 'true': [0.007943402422195496, 0.0], 'true,true': [7.342643735618203e-05, 0.00446934302221184], 'true,false': [nan, 0.0]}
{'': [0.10897739249196885, 0.12747364092185998], 'false': [0.00017914709861498456, 0.13018480940855262], 'false,false': [0.13018480940855262, nan], 'true': [0.04710842064385032, 0.004898238854859598], 'true,true': [0.004217827096297949, 0.04955117239615296], 'true,true,false': [9.25185853854297e-18, 0.04734279129723303], 'true,true,true': [0.004446322858986829, 0.0]}
{'': [0.1522679546058972, 0.10332816437144243], 'true': [0.109375, 0.17610556064386015], 'false': [0.10027492884424498, 0.14730056456767474], 'false,false': [0.21074152806069246, 0.13236818705674483], 'false,false,true': [0.21074152806069246, nan], 'false,false,false': [0.13236818705674483, nan], 'false,true': [0.08447966309560903, 0.0015311296479678992], 'false,true,true': [nan, 0.084479663095609]}
{'': [0.09107627092473956, 0.0821932520772097], 'true': [0.09270906963105148, 0.08896887680105099], 'true,false': [0.15825995497127623, 0.0006004065648381074], 'false': [0.0501518440940528, 0.10295957225469249], 'false,false': [0.14236068057354898, 0.1015156725725045], 'false,false,false': [0.09743212282172213, 0.15155334123423583], 'false,true': [0.05593336631224604, 0.04557538495599164], 'false,true,false': [0.07775857714929187, 0.03545784146676405]}
{'': [0.037846194015954494, 0.07817260152746673], 'false': [0.04357475267524531, 0.10408339430268974], 'false,false': [0.14350941784016052, 0.10266454556100782], 'false,false,false': [0.09953369006886029, 0.1372947955582923], 'true': [0.045033515867575584, 0.0006241606265187197], 'true,true': [0.000569053152345208, 0.0], 'true,true,true': [-3.96508223080413e-18, 0.0007093782612937471], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 6.916
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G), interaction(H, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then if ( interaction(A, J), interaction(J, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.07633075328132997;  // std dev = 4.332, 110.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | | else return 0.15602127552504488;  // std dev = 6.270, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7308466201130137;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7449784760894348;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6857945656936718;  // std dev = 3.440, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15751814063742497;  // std dev = 0.107, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.23807559632345407;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08807559632345408;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4708621961949355;  // std dev = 0.277, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5781867804894839;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.14029201645845923;  // std dev = 4.029, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return -0.05522624552709761;  // std dev = 0.820, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6107395377584879;  // std dev = 2.309, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.13962683870072046;  // std dev = 0.035, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.32010325801705153;  // std dev = 0.989, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4952655984385666;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18178388674830384;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3766600306595935;  // std dev = 0.245, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.43539867637324525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5574460416330822;  // std dev = 2.109, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.14773457019867145;  // std dev = 0.295, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.13841538821353377;  // std dev = 1.956, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.04645981293135186;  // std dev = 2.900, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.42595037225784593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.28032536376068884;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.01556197719410769;  // std dev = 1.162, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.14106823126742307;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.3462505272235247;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(A, H), complex(F, H) )
%   | | | then return -0.044510134136799065;  // std dev = 1.670, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | | else return 0.048644628548630456;  // std dev = 5.004, 235.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=70 */
%   | | else if ( location(A, I) )
%   | | | then return 0.27686090892933535;  // std dev = 0.726, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15144513173987248;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.32643725863663764;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.20548004859333563;  // std dev = 0.936, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06575634165336797;  // std dev = 1.129, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.31729892131707127;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.059475236277408104;  // std dev = 1.193, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41135978842987075;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2590752245888047;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.012044655845396744;  // std dev = 0.308, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.08536528515365442;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.287530966772931;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.09434983072410574;  // std dev = 1.475, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.07134788494943876;  // std dev = 4.290, 175.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28557630305105175;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.029563816627982326;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4838316371923106;  // std dev = 1.502, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17581455635940216;  // std dev = 0.103, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.04792225652381301;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(G, I) )
%   | | | then return 0.11441703454476633;  // std dev = 3.029, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | | else return 0.01701118580345725;  // std dev = 1.354, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07585507563460198;  // std dev = 0.983, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006609489728715778;  // std dev = 1.204, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.22907048709475103;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F) )
%   | | then return -0.032660745080326424;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2057268521172567;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.23972972069075074;  // std dev = 2.045, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.3870859667742166;  // std dev = 2.085, 55.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=49 */
%   | | else return -0.1444709044227477;  // std dev = 0.044, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then return 0.28632727890025506;  // std dev = 0.599, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.11053783891868428;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.060434451510605745;  // std dev = 0.289, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19797403239450412;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(A, F), enzyme(D, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.15446522805530502;  // std dev = 0.822, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.08783753190218377;  // std dev = 0.487, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.30246902092283134;  // std dev = 1.186, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return -0.058311510061750726;  // std dev = 1.716, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.32627368910187715;  // std dev = 0.400, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.13808543535578982;  // std dev = 0.169, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04757285938074485;  // std dev = 2.809, 96.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=38 */
%   | | | else return 0.17355154191995556;  // std dev = 0.723, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1686046763873842;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.059267717081442184;  // std dev = 0.717, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.16030576761480897;  // std dev = 1.213, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, E) )
%   | | | then return -0.013140286479811083;  // std dev = 0.998, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.05830242113469497;  // std dev = 1.345, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.06782809646027815;  // std dev = 0.964, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.02181847294858634;  // std dev = 2.303, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.0746291429417073;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.035497733758526225;  // std dev = 2.896, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.900', 'seconds']
Refined model CLL: -0.186692


******************************************
Best model found
******************************************
Results 

CLL : -0.160349 

AUC ROC : 0.99079 

AUC PR : 0.389332 

Precision : 0.278205 

Recall : 0.818868 

F1 : 0.415311 

Total Learning Time : 6.916 

Total Inference Time : 10.0195951461792 

Total revision time: 27.07812932777405
Best scored revision CLL: -0.186692


Results 

CLL : -0.160349 

AUC ROC : 0.99079 

AUC PR : 0.389332 

Precision : 0.278205 

Recall : 0.818868 

F1 : 0.415311 

Total Learning Time : 27.099437988281252 

Total Inference Time : 10.0195951461792 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.422
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.12162198899172696;  // std dev = 5.693, 167.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7722238102038944;  // std dev = 1.924, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15618554423182116;  // std dev = 0.026, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10935070714281177;  // std dev = 3.608, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.16570995627360455;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4442553256351735;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.003683760795954486;  // std dev = 2.212, 50.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6991420397152935;  // std dev = 0.300, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13769552087890918;  // std dev = 9.19e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0827202940652916;  // std dev = 3.778, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15078354130949875;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4348503217503753;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42659473242082036;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38301645865150535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4252105742472814;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06146984137310185;  // std dev = 4.276, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5348577021628494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06456885044227126;  // std dev = 3.646, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.46147151095728606;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31730472829404216;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3391550654334986;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.08661839692651453;  // std dev = 4.220, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4024660531892169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1743587672965075;  // std dev = 3.403, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.2830984116446774;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2599128865445844;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.33141133763511105;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2540953390020848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.310524920410727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08123705914617693;  // std dev = 1.047, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2667272989610246;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07406064526593718;  // std dev = 3.974, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | | | else return 0.035972533984315054;  // std dev = 3.787, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22930121238720239;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2289829761664539;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22052486075016753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6039112350132266;  // std dev = 1.315, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.1909116261087537;  // std dev = 0.619, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.217375037878781;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.054973960496147806;  // std dev = 3.434, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17595026661764154;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18207263698960136;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4489019477893002;  // std dev = 0.795, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14102615482528136;  // std dev = 0.222, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19114361829432042;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05715645334314249;  // std dev = 3.074, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15244409102560766;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12389910020083483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16587011739956203;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06908617162629718;  // std dev = 0.455, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2181648515820266;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.008367230462093816;  // std dev = 1.208, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1570458981450084;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03603830936252175;  // std dev = 2.676, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | | else return 0.0691315378596656;  // std dev = 2.986, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12997742339427515;  // std dev = 0.000806, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14296808440076733;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14021667359719825;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.47786141477776495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.008843868036990365;  // std dev = 0.556, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.035407764834906465;  // std dev = 1.587, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13736062687522527;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02226606530604037;  // std dev = 2.742, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return -0.004763294257054819;  // std dev = 3.139, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.640', 'seconds']
Parameter learned model CLL:-0.181062 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.693, 123, 44], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.924, 4, 52], 'false,false,true,false': [0.026, 139, 0], 'false,false,false,true': [3.608, 47, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.212, 42, 8], 'false,true,false,true': [0.3, 0, 48], 'false,true,false,false': [9.19e-08, 120, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.778, 54, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.022, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.647, 1, 3], 'false,true,false': [4.276, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.646, 51, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 9], 'false,true': [4.22, 115, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.403, 30, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.023, 0, 7], 'true,true,false': [0.06, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.047, 26, 3], 'false,false,true': [0.018, 0, 6], 'false,false,false,true': [3.974, 105, 49], 'false,false,false,false': [3.787, 51, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.099, 0, 12], 'true,true,true,false': [0.027, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.315, 2, 36], 'true,false': [0.619, 93, 0], 'false,true': [0.016, 0, 5], 'false,false,true': [3.434, 78, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.015, 0, 6], 'true,false': [0.017, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.795, 0, 56], 'false,true,false': [0.222, 136, 0], 'false,false,true,true': [0.024, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.074, 40, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.018, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.015, 0, 4], 'false,true,true': [0.455, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.208, 32, 14], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.676, 74, 36], 'false,false,false,false': [2.986, 36, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000806, 0, 5], 'true,true,true,false': [0.018, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.556, 1, 4], 'false,true': [1.587, 62, 17], 'false,false,true': [0.011, 0, 5], 'false,false,false,true': [2.742, 77, 36], 'false,false,false,false': [3.139, 50, 20]}]
{'': [-2.5376526277146434e-16, 0.20633771441301027], 'false': [-1.4802973661668753e-16, 0.1992890857176169], 'false,false': [0.19054090125943446, 0.22407354208560717], 'false,false,false': [0.22417091836734643, 0.22222222222222224], 'false,false,true': [0.17283950617283966, 0.19405500376492607], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.2008989682274451], 'false': [7.401486830834377e-17, 0.19727464525327848], 'false,false': [0.1954274951692291, 0.20233788226400012], 'false,false,false': [0.20023397952128907, 0.22222222222222218], 'false,false,true': [0.06608323048823296, 4.799129298788478e-06], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.062222222222222, 0.1504718998574407], 'false': [0.13469341633834375, 0.19445733279552643], 'false,false': [0.1932000272948417, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.0, 0.1928322467919521], 'false,true': [0.09789692786018461, 0.14345469619010287], 'false,true,false': [0.0018792203644635297, 7.031412489292658e-17], 'true': [-7.401486830834377e-17, 0.09876543209876533]}
{'': [0.000181764559320222, 0.12524713319172687], 'false': [0.09758987957493087, 0.1989174054683139], 'false,false': [0.0034424105075658296, 0.20012868373831216], 'false,false,false': [0.19260427336174793, 0.22222222222222213], 'false,true': [0.0839539418730065, 0.0947552773845556], 'false,true,true': [0.0, 0.10458635866307622], 'false,false,true': [0.0, 0.0], 'true': [0.00017174998304920146, 0.00016493450753137426]}
{'': [0.0001435164141590268, 0.1356226610163261], 'false': [0.10415222278960247, 0.22969108652651862], 'false,false': [0.0016709375508607849, 0.23736978845948692], 'false,false,false': [0.23639057117980586, 0.25], 'false,false,true': [0.0, 0.0], 'true': [5.126329638782678e-07, 5.244966172895321e-05], 'true,true': [5.126329638782678e-07, nan]}
{'': [0.001397053850708255, 0.12353641378708159], 'false': [0.0377926096397111, 0.1318379555009928], 'false,false': [5.647301226106386e-05, 0.13426391584581798], 'false,false,false': [0.10255985620262549, 0.20203754130335738], 'true': [0.0015544129579549376, 0.0006943751470493142], 'true,true': [7.260066118967647e-05, 0.0008944754265294563], 'true,false': [2.8993032337443214e-07, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13456464890228867, 0.10017900419986775], 'true': [0.06138628641576507, 0.004126478997992176], 'false': [4.94551213546246e-05, 0.10346249520965269], 'false,false': [0.10346249520965269, nan], 'true,true': [0.000750540041038036, 0.0479951798156261], 'true,true,false': [0.0, 0.045489361838519315], 'true,true,true': [0.0008140138063554939, 0.0003696106425970444]}
{'': [4.529600432090497e-05, 0.09455562364910892], 'false': [0.07545109265229434, 0.15301751402916416], 'false,false': [0.0002832997546178828, 0.15752953965428385], 'false,false,false': [0.15752953965428385, nan], 'false,true': [0.01129713805643833, 0.00036300340676895086], 'false,true,true': [nan, 0.011297138056438425], 'false,false,true': [0.0002832997546178828, nan], 'true': [3.791890837945289e-05, 3.476450386062646e-05]}
{'': [0.00014520870025646376, 0.07812898518889534], 'false': [0.02994855586119369, 0.09461405745740382], 'false,false': [2.9723308461451768e-05, 0.09711018732989696], 'false,false,false': [0.0651234731944165, 0.159215523344969], 'false,true': [0.015939388966214715, 0.032159353650304374], 'false,true,false': [0.0, 0.03172362634155964], 'true': [3.6139996997703377e-05, 0.0003252557105242998], 'true,false': [0.0, 5.425638121620002e-05]}
{'': [0.041892244833613035, 0.0754248355020078], 'false': [0.0318896687558874, 0.09295918920865343], 'false,false': [2.3755258547722425e-05, 0.09507996181985813], 'false,false,false': [0.06651504248574261, 0.140740775984425], 'true': [0.03119622007464763, 0.06193041618355945], 'true,true': [7.873785134702993e-05, 0.08489344962872196], 'true,true,false': [0.0, 0.0], 'true,true,true': [1.2979735872775677e-07, 0.00010427797879488064]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.134
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.0773270172912932;  // std dev = 3.535, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return 0.17453311589047177;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.07352525466573477;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.839524658323929;  // std dev = 0.043, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15589950172523873;  // std dev = 0.147, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.4355477006448613;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.11054770064486133;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5787526129430666;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5540859847587529;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10931564653157351;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.13835654281246243;  // std dev = 1.927, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6624249236113879;  // std dev = 1.018, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14093108265036153;  // std dev = 0.050, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6282305288604311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08035581969756754;  // std dev = 3.763, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else return 0.06978908568445963;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.15745442367572413;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4142632654720131;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41383325140874555;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5430771523762904;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.11779460177926737;  // std dev = 0.168, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.1168836622498609;  // std dev = 3.910, 143.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5807595470535363;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.12476079232686407;  // std dev = 3.044, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.052556795254320623;  // std dev = 2.093, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36798394298877923;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3201241329479481;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08908482177882862;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.027009386868185443;  // std dev = 2.739, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | | else return 0.08402756593455901;  // std dev = 3.041, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.33528959276040504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5516180527856687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.045776729197344844;  // std dev = 1.745, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.0443309313057474;  // std dev = 3.424, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.30093351165648574;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.30749597578664256;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.09366449524530211;  // std dev = 0.013, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.12055634671027238;  // std dev = 0.660, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03910711227715836;  // std dev = 0.468, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.25499863302063963;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07713242862230718;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.028469907828006184;  // std dev = 3.496, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | | | else return 0.08061449866446106;  // std dev = 4.106, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2436345663068892;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21063627752889147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5944067530984373;  // std dev = 1.395, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.17675221727191856;  // std dev = 0.073, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.07355716140548764;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return -0.025759036704141453;  // std dev = 1.898, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.05832446904565097;  // std dev = 2.233, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.06379099946383904;  // std dev = 1.418, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.1545598842618821;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18825529414578646;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then return 0.2111056629581063;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19453832888421999;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.42132648624440194;  // std dev = 0.434, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.43649272156447394;  // std dev = 0.546, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14327979944192634;  // std dev = 0.032, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.23103696252119849;  // std dev = 0.083, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.011699545810656138;  // std dev = 1.403, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.08192237362134001;  // std dev = 2.717, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16172990428969383;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16497110314914004;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.05658546535079153;  // std dev = 0.005, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.01906561025307115;  // std dev = 0.324, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.1913406036336912;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.021494181509399093;  // std dev = 1.287, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18859621873307097;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.06772984893988973;  // std dev = 1.475, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.02496674325631615;  // std dev = 3.808, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1486129002678455;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1257993339075099;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.0720036131240168;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.012737766897986818;  // std dev = 0.791, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.015072692550827528;  // std dev = 0.853, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.03371319067612222;  // std dev = 0.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1615172140796337;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.028266537900844414;  // std dev = 2.493, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.03130458045557349;  // std dev = 3.276, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.465', 'seconds']
Refined model CLL: -0.177359


******************************************
Best model found
******************************************
Results 

CLL : -0.194577 

AUC ROC : 0.982223 

AUC PR : 0.21326 

Precision : 0.130459 

Recall : 0.851986 

F1 : 0.22627 

Total Learning Time : 3.134 

Total Inference Time : 2.9917831420898438 

Total revision time: 10.377471691131591
Best scored revision CLL: -0.177359


Results 

CLL : -0.194577 

AUC ROC : 0.982223 

AUC PR : 0.21326 

Precision : 0.130459 

Recall : 0.851986 

F1 : 0.22627 

Total Learning Time : 10.398780351638793 

Total Inference Time : 2.9917831420898438 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.666
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05814893509951237;  // std dev = 3.225, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return 0.15360348055405723;  // std dev = 5.242, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.748592982892723;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8415330842230057;  // std dev = 0.039, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1579820405131634;  // std dev = 0.068, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, I) )
%   | | | then return 0.18641593676940918;  // std dev = 2.686, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.3469765504451796;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5734183503905234;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.24833647012528157;  // std dev = 1.178, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07158246821509608;  // std dev = 2.736, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6387297866987709;  // std dev = 1.383, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14131890106234005;  // std dev = 7.30e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6385428156462011;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06629918778253209;  // std dev = 2.534, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14629172153100167;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4566908675832122;  // std dev = 0.174, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.49453904495650625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.532552839698081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5929879293148383;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.060084597279101704;  // std dev = 4.279, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39255987399574543;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16758167795405987;  // std dev = 0.605, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08758580663780509;  // std dev = 2.784, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.2716785481143287;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32134330902958996;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3886361069814568;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.03726612687385536;  // std dev = 4.529, 206.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3038302397305893;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42906974365926137;  // std dev = 0.177, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.030915172622500056;  // std dev = 2.580, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.027942705907896426;  // std dev = 1.496, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25421285907857566;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4050839338673018;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2436162420060135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3343682967821023;  // std dev = 0.160, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05830560573907561;  // std dev = 1.269, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.021206793576095513;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06445454653191518;  // std dev = 3.995, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
%   | | | else return 0.07290389146997674;  // std dev = 3.007, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24091074981394492;  // std dev = 0.178, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24584335603441154;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.04152362445148236;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5715710791434363;  // std dev = 1.075, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17344234669714167;  // std dev = 0.420, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.0709999369471623;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06346957665296274;  // std dev = 3.324, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.173283085546046;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1818593499390475;  // std dev = 0.687, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36242244179009886;  // std dev = 2.320, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.14032324642415972;  // std dev = 0.214, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.047793452941107095;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.017075428100962468;  // std dev = 2.520, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.08209389461354853;  // std dev = 0.762, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19033417062568547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1057804845269592;  // std dev = 0.574, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09650685376977174;  // std dev = 0.326, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24416715214680598;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0025595278021186335;  // std dev = 1.491, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2636242791968068;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.033139384597187654;  // std dev = 2.809, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.07089808917179473;  // std dev = 2.394, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1396845182364579;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11418800069018753;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.3256948371845578;  // std dev = 0.640, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1803998281680787;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20940336697920925;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02652059145910251;  // std dev = 1.780, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.14616101177552612;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03394984335616448;  // std dev = 2.770, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.008357142701201092;  // std dev = 2.480, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.081', 'seconds']
Parameter learned model CLL:-0.176675 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.225, 52, 13], 'false,false,true,false': [5.242, 93, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.519, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.042, 0, 7], 'false,true,true': [0.062, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.039, 0, 52], 'false,false,true,false': [0.068, 142, 0], 'false,false,false,true': [2.686, 21, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.038, 0, 11], 'true,false': [1.178, 2, 4], 'false,true,true': [2.736, 42, 14], 'false,true,false,true': [1.383, 2, 42], 'false,true,false,false': [7.3e-08, 87, 0], 'false,false,true,true': [0.216, 0, 3], 'false,false,true,false': [2.534, 26, 9], 'false,false,false,true': [1.415, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.174, 0, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.179, 0, 6], 'false,true,false': [4.279, 126, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.605, 1, 1], 'false,false,false,true': [2.784, 27, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.101, 0, 6], 'false,true': [4.529, 150, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.177, 0, 2], 'false,false,false,true': [2.58, 28, 9], 'false,false,false,false': [1.496, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.014, 0, 9], 'true,true,false': [0.051, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.16, 0, 2], 'false,true': [1.269, 22, 5], 'false,false,true': [1.226, 2, 5], 'false,false,false,true': [3.995, 103, 46], 'false,false,false,false': [3.007, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.178, 0, 13], 'true,true,true,false': [0.15, 0, 3], 'true,true,false,true': [0.856, 1, 3], 'true,true,false,false': [1.075, 1, 33], 'true,false': [0.42, 96, 0], 'false,true': [0.848, 1, 3], 'false,false,true': [3.324, 66, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.687, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.32, 6, 56], 'false,true,false': [0.214, 130, 0], 'false,false,true,true': [0.885, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.52, 33, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.762, 1, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.574, 1, 5], 'false,true,true': [0.326, 26, 1], 'false,true,false,true': [0.162, 0, 6], 'false,true,false,false': [1.491, 45, 17], 'false,false,true': [0.05, 0, 3], 'false,false,false,true': [2.809, 71, 31], 'false,false,false,false': [2.394, 24, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.677, 1, 2], 'true,true,false,true': [0.64, 1, 1], 'true,true,false,false': [0.025, 0, 2], 'true,false': [0.12, 0, 3], 'false,true': [1.78, 80, 24], 'false,false,true': [1.009, 2, 3], 'false,false,false,true': [2.77, 68, 31], 'false,false,false,false': [2.48, 32, 12]}]
{'': [0.10380622837370206, 0.2028539229536043], 'false': [0.10937499999999978, 0.1940083659333786], 'false,false': [0.19428483083820847, 0.19281663516067998], 'false,false,true': [0.15999999999999945, 0.2081611570247939], 'false,false,false': [0.19834710743801665, 0.17751479289940816], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [0.07100591715976314, 0.18750000000000006]}
{'': [0.00016732161202218283, 0.20680020635045251], 'false': [0.0005548461954012167, 0.20178787803568185], 'false,false': [0.19603635162312055, 0.22832235191837946], 'false,false,false': [0.22545104534481103, 0.25], 'false,false,true': [2.9384116666838403e-05, 3.218399183244343e-05], 'false,true': [0.0005548461954012167, nan], 'true': [-2.220446049250313e-16, 0.0002561045081969558]}
{'': [0.10580082987254041, 0.1566757107299704], 'false': [0.14583842767392902, 0.19967600753671844], 'false,false': [0.1940716415281419, 0.22235888043580765], 'false,false,false': [0.22235888043580765, nan], 'false,false,true': [0.01556525842642594, 0.18351986473294302], 'false,true': [0.1336504270393837, 0.15032661988444002], 'false,true,false': [0.04346099358663003, 6.125368411725002e-17], 'true': [0.0001285358148356185, 0.23115333852864825]}
{'': [0.05491238479016916, 0.12869869532742817], 'false': [0.11096578379515426, 0.20116063539452772], 'false,false': [0.10410051375216776, 0.20781285845016959], 'false,false,false': [0.20389797570590873, 0.25], 'false,true': [0.005002741352826602, 0.10463281439810602], 'false,false,true': [0.0, 0.18289343315724998], 'true': [0.0020208137859520766, 0.0], 'false,true,true': [0.0, 0.005314760141585569]}
{'': [0.0017672245796727401, 0.11600434969032332], 'false': [0.099551814683228, 0.18230318512837723], 'false,false': [0.013942162972710967, 0.1853249996237681], 'false,false,false': [0.1798932829662509, 0.20358850854705263], 'false,false,true': [0.0, 0.01568493334429988], 'true': [8.987539677423545e-07, 0.001699720924515961], 'true,true': [8.987539677423545e-07, nan]}
{'': [0.0060597969889116116, 0.12335757810548832], 'false': [0.05965870690147736, 0.13001238040957608], 'false,false': [0.21477494652203097, 0.1269300775891961], 'false,false,false': [0.10712168745299716, 0.18836462540659507], 'true': [0.005066219796903821, 0.010355442140694374], 'true,false': [0.0, 0.012787851395680824], 'true,true': [2.265121971639022e-05, 0.0006558851824102208], 'true,false,true': [0.0, nan]}
{'': [0.11165339237967728, 0.11655205746120238], 'false': [0.17981292385905, 0.11394111614454618], 'false,false': [0.11394111614454618, nan], 'true': [0.07025536789190868, 0.0018383031761186747], 'true,true': [0.003402652115304293, 0.07616871840543153], 'true,true,false': [0.18323207246062656, 0.03399931345880091], 'true,true,true': [0.002450384882911605, 0.007509374839820171]}
{'': [0.029514341238714367, 0.09622887498899638], 'false': [0.08352593761231626, 0.145920084171042], 'false,false': [0.19562979684937362, 0.14115793514794445], 'false,false,true': [0.19562979684937362, nan], 'false,false,false': [0.14115793514794445, nan], 'false,true': [0.0867850718623144, 0.00035335171979709206], 'false,true,true': [nan, 0.08678507186231445], 'true': [0.0, 0.0589919063219594]}
{'': [0.05116636997251667, 0.07190724485554507], 'false': [0.0310276102711199, 0.09793459753671276], 'false,false': [0.0008342309002185392, 0.09900973647697], 'false,false,false': [0.07737272899343249, 0.15926079813932958], 'true': [0.052726791624515455, 0.047932554984967124], 'true,false': [0.0, 0.05489998188728803], 'false,true': [0.0039345162781184205, 0.03797944130186751], 'false,true,false': [0.0043614660660324005, 0.035861553632402204]}
{'': [0.07880398279331847, 0.07265906250669787], 'true': [0.08837062862555775, 0.004829251116371613], 'true,true': [0.054508308871154404, 0.16647633997402292], 'true,true,false': [0.20457397275589417, 0.0003128020429530795], 'false': [0.030475223554536097, 0.10139874105578697], 'false,false': [0.20378771247169572, 0.09681650097484139], 'false,false,false': [0.07751436217083936, 0.1397928612114359], 'true,true,true': [-3.469446951953614e-18, 0.1529901585642983]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 4.324
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03783643509951207;  // std dev = 4.344, 128.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=23 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3381489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.1869160583871827;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7539967562052666;  // std dev = 1.948, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.16008230803387336;  // std dev = 0.182, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.2399056141063774;  // std dev = 2.156, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.42490899582596625;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.03659747781786273;  // std dev = 1.362, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.10613908965467288;  // std dev = 2.242, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5794741042946049;  // std dev = 2.198, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | | else return -0.14704385921838284;  // std dev = 0.323, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), phenotype(K, L) )
%   | | | then return 0.013592479380350273;  // std dev = 1.098, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3376548237141132;  // std dev = 1.575, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.04203809377426616;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13311916662822804;  // std dev = 1.830, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.29986652533478036;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.58248641584169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5277027447858387;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.05479497489759851;  // std dev = 3.426, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | | | else return 0.07337055430705;  // std dev = 2.671, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5116100435978569;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.028787420562256583;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.003865016450675657;  // std dev = 2.454, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.15169667316699711;  // std dev = 1.557, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3468633872836574;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, E) )
%   | | | then return -0.12965096386267738;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.13176152058274435;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.055903777613123616;  // std dev = 2.365, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.10598492581974978;  // std dev = 3.553, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.4248670658141307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4133038591056045;  // std dev = 0.092, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.030270463449558607;  // std dev = 2.099, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.3759188931967588;  // std dev = 1.533, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3079674155566808;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.32146790689808985;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, F), interaction(I, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4998406206487572;  // std dev = 0.606, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.10233466165928401;  // std dev = 2.270, 85.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=6 */
%   | | else return -0.17066953032774082;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4911215544487991;  // std dev = 0.887, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.18740805558961;  // std dev = 0.699, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08731515998088832;  // std dev = 1.936, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.2580500862936581;  // std dev = 1.109, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24889627914375173;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4627482888061456;  // std dev = 0.218, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.15816490950327744;  // std dev = 0.093, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.39196641438171315;  // std dev = 0.093, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.1361491963155763;  // std dev = 0.016, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5225304997465201;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18331279993024355;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.07390010875081875;  // std dev = 0.951, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.005951091189610829;  // std dev = 1.396, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1770326438435088;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E) )
%   | | then return 0.14560115070012866;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11928378734337593;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.2935711428524472;  // std dev = 0.232, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.12652213672744345;  // std dev = 0.039, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4800301007959393;  // std dev = 0.883, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.2262439380531025;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.024203258666613093;  // std dev = 1.222, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.12379191227818151;  // std dev = 1.108, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16512746721696264;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.23594046064225704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18091230236232841;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(A, J), interaction(I, K) )
%   | | | then return 0.017200119763325295;  // std dev = 0.850, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.022251643805867385;  // std dev = 1.167, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else return 0.06428448275408957;  // std dev = 0.514, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1386850033361593;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.10166507397940464;  // std dev = 1.205, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.009014327452660594;  // std dev = 2.793, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09165824268458346;  // std dev = 0.210, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.1562867179086136;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( location(E, F), interaction(E, A) )
%   | | then return -0.07374111324070756;  // std dev = 0.084, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( phenotype(E, G), complex(A, H) )
%   | | | then return 0.054619448218474;  // std dev = 1.474, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.024738732773948006;  // std dev = 2.070, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.18109251038999932;  // std dev = 1.221, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.11505614401993997;  // std dev = 0.294, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.16717115695303458;  // std dev = 1.214, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -0.005543408675394101;  // std dev = 0.986, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.708', 'seconds']
Refined model CLL: -0.161623


******************************************
Best model found
******************************************
Results 

CLL : -0.188676 

AUC ROC : 0.986716 

AUC PR : 0.250566 

Precision : 0.188416 

Recall : 0.908127 

F1 : 0.312083 

Total Learning Time : 4.324 

Total Inference Time : 3.5108070373535156 

Total revision time: 12.840276947021485
Best scored revision CLL: -0.161623


Results 

CLL : -0.188676 

AUC ROC : 0.986716 

AUC PR : 0.250566 

Precision : 0.188416 

Recall : 0.908127 

F1 : 0.312083 

Total Learning Time : 12.861585607528687 

Total Inference Time : 3.5108070373535156 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.214
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16656015005278196;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.19459753323035225;  // std dev = 4.888, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.763465875030611;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7080994489112463;  // std dev = 2.954, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16506285180111097;  // std dev = 0.022, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11609653502441451;  // std dev = 1.714, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3628105661253066;  // std dev = 1.279, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.6086233070824348;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07690326684977075;  // std dev = 4.335, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6315192438045371;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14548447157524064;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3401155215425955;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.01991069464834336;  // std dev = 1.454, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.47223336136274857;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4540238964825172;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5668528394282685;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.04790580699301346;  // std dev = 5.005, 218.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5602774992023537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1260575180459549;  // std dev = 1.646, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3506149308701899;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3696620475521323;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07686487491591165;  // std dev = 5.276, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4211658849671861;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05297625845230493;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.02033558130675361;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2680317986513289;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38195919043725696;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32318894156835254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.02583763626597384;  // std dev = 2.284, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31265545439314674;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07150313788831678;  // std dev = 4.665, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | | else return 0.06303601216268016;  // std dev = 1.868, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24311315465486377;  // std dev = 0.194, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25686177225395845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7740482981100512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5846496631276158;  // std dev = 0.489, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18827010428081986;  // std dev = 0.779, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2498305396689056;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06363333324600337;  // std dev = 3.882, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18627079161322957;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1856292299990441;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35071568456258745;  // std dev = 3.084, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | | else return -0.15814538951876606;  // std dev = 0.270, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21095046622207714;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009267605201693929;  // std dev = 1.493, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17221922789299374;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.38312645828776276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1604867670181098;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.050310711816596056;  // std dev = 1.686, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.274976638477385;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.022126937526117982;  // std dev = 1.576, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17741507416847424;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.053534622929419594;  // std dev = 3.416, 111.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
%   | | | else return 0.09871465515522493;  // std dev = 1.373, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13564618221396627;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24465906375449553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14012100972205277;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.0011246614452471305;  // std dev = 2.270, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.09152262048865573;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0029314638012410523;  // std dev = 3.595, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
%   | | | else return 0.039590891600164886;  // std dev = 1.415, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.674', 'seconds']
Parameter learned model CLL:-0.195759 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.777, 74, 33], 'false,false,true,false': [4.888, 71, 36], 'false,false,false,true': [1.291, 10, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.08, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.954, 10, 69], 'false,false,true,false': [0.022, 134, 0], 'false,false,false,true': [1.714, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.279, 2, 8], 'true,false': [0.079, 0, 3], 'false,true,true': [4.335, 94, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [0.0, 79, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.454, 15, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.118, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.317, 2, 14], 'false,true,false': [5.005, 161, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.646, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.005, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.105, 0, 4], 'false,true': [5.276, 158, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.053, 0, 7], 'true,true,false': [0.166, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.284, 43, 12], 'false,false,true': [0.044, 0, 3], 'false,false,false,true': [4.665, 118, 55], 'false,false,false,false': [1.868, 16, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.194, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.489, 0, 33], 'true,false': [0.779, 91, 0], 'false,true': [0.038, 0, 3], 'false,false,true': [3.882, 88, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.067, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.084, 13, 71], 'false,true,false': [0.27, 139, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.493, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.114, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.047, 0, 3], 'false,true,true': [1.686, 34, 11], 'false,true,false,true': [0.749, 2, 1], 'false,true,false,false': [1.576, 38, 17], 'false,false,true': [0.03, 0, 3], 'false,false,false,true': [3.416, 71, 40], 'false,false,false,false': [1.373, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.015, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.041, 0, 3], 'false,true': [2.27, 72, 29], 'false,false,true': [0.848, 1, 3], 'false,false,false,true': [3.595, 93, 40], 'false,false,false,false': [1.415, 10, 4]}]
{'': [0.13017751479289916, 0.21687295390486871], 'false': [0.23999999999999994, 0.21464314413032495], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false': [0.21846886190933723, 0.15999999999999986], 'false,false,true': [0.21329373744431968, 0.22325093894663411], 'false,false,false': [0.13888888888888892, 0.18750000000000003], 'true': [-2.220446049250313e-16, 0.23999999999999994], 'false,true,false': [0.0, 0.0]}
{'': [0.0010663012589196602, 0.2187039803966053], 'false': [0.0, 0.21745792951746498], 'false,false': [0.2188651607067458, 0.19577274420403412], 'false,false,true': [0.11045881778025626, 3.6874458403506868e-06], 'false,false,false': [0.19577274420403412, nan], 'true': [7.401486830834377e-17, 0.0012902245232925048], 'false,true': [0.0, nan]}
{'': [0.13709489515357334, 0.15347276184118833], 'false': [0.15260834058494538, 0.16087837149934636], 'false,false': [0.24999999999999994, 0.11750649673954691], 'false,false,true': [nan, 0.24999999999999994], 'false,true': [0.14683080651772498, 0.15804308681412715], 'false,true,false': [0.06937946794930369, -1.9674838411078724e-17], 'true': [0.16366220083250704, 0.002057283698007654], 'false,false,false': [0.11750649673954691, nan]}
{'': [0.0012891447909548568, 0.13611030412676378], 'false': [0.1316221345618712, 0.20600403385482702], 'false,false': [0.0, 0.20838285570925866], 'false,false,false': [0.20838285570925866, nan], 'false,true': [0.10833337550047167, 0.11491731427524854], 'false,true,true': [nan, 0.10833337550047184], 'true': [0.001387915214484492, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0010968203307456818, 0.12513401140491323], 'false': [0.12153339969431183, 0.1641106455506065], 'false,false': [0.0, 0.16415787363110212], 'false,false,false': [0.20408163265306128, 0.13888888888888892], 'true': [4.196324900245558e-06, 0.0027780442884962064], 'true,true': [4.196324900245558e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005281770794838895, 0.12281949175880114], 'false': [0.0948683835630216, 0.12840743544248404], 'false,false': [0.0006368809682766688, 0.12948501383739755], 'false,false,false': [0.125783302604353, 0.15853032103200027], 'true': [0.00576993739158167, 0.0], 'true,true': [0.0004024492664926723, 0.009208460930721696], 'true,false': [nan, 0.0]}
{'': [0.12150047648310273, 0.11580628414061062], 'true': [0.062641991674036, 0.006672495243056539], 'false': [0.0004891142340129606, 0.11771507459244093], 'false,false': [0.11771507459244093, nan], 'true,true': [0.003447320274323464, 0.05974552677088084], 'true,true,false': [0.0, 0.007260110518165882], 'true,true,true': [0.003774868257584341, 0.0]}
{'': [0.00040976189810874235, 0.10544228715935752], 'false': [0.10377202455173784, 0.12597713613212835], 'false,false': [0.0, 0.13112777943630835], 'false,false,false': [0.13112777943630835, nan], 'false,true': [0.11322306264797076, 0.0005228220430549624], 'false,true,true': [nan, 0.11322306264797055], 'true': [4.625929269271485e-18, 0.0009012516660365955], 'false,false,true': [0.0, nan]}
{'': [0.02457955587599354, 0.0881693647628766], 'false': [0.060388122338025006, 0.10807510451107752], 'false,false': [0.00029985589413429603, 0.1103639188144131], 'false,false,false': [0.10510910488192497, 0.15712885728648388], 'false,true': [0.06315944975632565, 0.05681498882527412], 'false,true,false': [0.18676705952798614, 0.04516097673859907], 'true': [0.0016282914114741226, 0.0559512049669445], 'true,false': [0.0, 0.000722771940729334]}
{'': [0.0011377284151927812, 0.08275023826737078], 'false': [0.05100414652228262, 0.10398144953252222], 'false,false': [0.17959620327116219, 0.10166977772132801], 'false,false,false': [0.09719893112447597, 0.14292689852073925], 'true': [0.0013262530236045067, 0.0005740833069647183], 'true,true': [0.0013262530236045067, nan], 'true,true,true': [3.024169854111612e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.533
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(H, J), complex(A, J) )
%   | | | then return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.17243464938522662;  // std dev = 3.884, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.2395048673029013;  // std dev = 5.276, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5766060205571715;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6618289742359763;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16776914540525836;  // std dev = 0.125, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.19845741736145914;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17204637473784587;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E), interaction(A, F) )
%   | | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5768185999929314;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.629527396717486;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.03172811858394295;  // std dev = 3.303, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | else return 0.16308964747082383;  // std dev = 2.754, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6397679010345854;  // std dev = 1.643, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14743759813071436;  // std dev = 0.057, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.12431100291709657;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5730279732739392;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.4596795296031908;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1394469401891466;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.028133744174968056;  // std dev = 0.672, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.04779305949036044;  // std dev = 1.913, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return -0.07948041188686489;  // std dev = 1.178, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.05751382291971676;  // std dev = 2.041, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.13377924328744106;  // std dev = 4.459, 145.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=53 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5962737838097032;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1307526970971782;  // std dev = 0.500, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36122470669680373;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21430460237400287;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F), enzyme(F, G) )
%   | | | then return -0.13698795739769068;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14235059987098256;  // std dev = 2.377, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.03617506983471442;  // std dev = 4.071, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
%   | | | else return 0.09974698771179927;  // std dev = 2.723, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4486044666859934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17322391099797968;  // std dev = 1.273, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.14760645039813378;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.1876731507145081;  // std dev = 0.295, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.34188274533895147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13780959269877505;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04588548582443617;  // std dev = 2.165, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.3337480339253545;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.11462346680659523;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.36322880660546336;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.1189625105008755;  // std dev = 2.281, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.033492697707741055;  // std dev = 4.518, 170.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2752457342556488;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.580403703395861;  // std dev = 1.045, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else if ( interaction(F, A) )
%   | | then return -0.1730186938708462;  // std dev = 0.060, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.25393071708879666;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2843452809061868;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), complex(A, K) )
%   | | | then return 0.182325879801538;  // std dev = 1.758, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.034254547816135024;  // std dev = 3.275, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else return 0.2352511697332448;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.18983004247653668;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11066006913630462;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.08667968404542477;  // std dev = 0.795, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.32268209020112304;  // std dev = 2.093, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.4403238783352126;  // std dev = 1.650, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return -0.16977268114054125;  // std dev = 0.035, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.21890759392952186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09145371089024837;  // std dev = 1.056, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07518480420476227;  // std dev = 0.717, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19441885409758078;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7428431706903182;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.1999098414954116;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10536112651832813;  // std dev = 0.060, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04766824660382473;  // std dev = 1.434, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.010198865766117088;  // std dev = 2.053, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.039876152054861086;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03928572438253244;  // std dev = 3.199, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return -0.11108942330100696;  // std dev = 1.460, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16604019404979015;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.018505718957723082;  // std dev = 0.529, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, E) )
%   | | | then return 0.40014677532498044;  // std dev = 0.449, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.41302233302594066;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1375206565041602;  // std dev = 0.038, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, J), phenotype(A, K) )
%   | | | then return -0.015238670250591536;  // std dev = 1.613, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.09956199290342796;  // std dev = 1.165, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.037426687864191434;  // std dev = 1.194, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 9.578987823963044E-4;  // std dev = 2.557, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.674', 'seconds']
Refined model CLL: -0.196946


******************************************
Best model found
******************************************
Results 

CLL : -0.196674 

AUC ROC : 0.986587 

AUC PR : 0.285577 

Precision : 0.171813 

Recall : 0.769504 

F1 : 0.280906 

Total Learning Time : 5.533 

Total Inference Time : 6.744431734085083 

Total revision time: 20.54823281478882
Best scored revision CLL: -0.195759


Results 

CLL : -0.196674 

AUC ROC : 0.986587 

AUC PR : 0.285577 

Precision : 0.171813 

Recall : 0.769504 

F1 : 0.280906 

Total Learning Time : 31.266240617752075 

Total Inference Time : 6.744431734085083 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.342
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10033643509951119;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.1772978712697243;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7334286728427661;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6205384727792422;  // std dev = 0.971, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7030269975642879;  // std dev = 3.219, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.15986618704164446;  // std dev = 0.070, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( location(A, I) )
%   | | | then return 0.20810380147211915;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5720412768839013;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.33212814666801943;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10551921619305696;  // std dev = 4.253, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.47474313454111405;  // std dev = 3.374, 63.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=48 */
%   | | | else return -0.14398628875348504;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8151379156364241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08403121505937419;  // std dev = 1.604, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4571514745463678;  // std dev = 0.141, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.06040162028050722;  // std dev = 0.665, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5911288433120586;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49932126279976075;  // std dev = 1.962, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.047825697785810854;  // std dev = 5.162, 234.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5590435790148327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 8.698602706216948E-4;  // std dev = 1.751, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3336175501800555;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2776011545227761;  // std dev = 0.938, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06365517418837018;  // std dev = 5.901, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42024634586675125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.01638940307358686;  // std dev = 1.706, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18801240988163934;  // std dev = 0.860, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.46241908130086545;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3225650858896226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.004471223586935651;  // std dev = 2.843, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.11355802801187771;  // std dev = 1.180, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0754722819994109;  // std dev = 4.651, 166.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
%   | | | else return 0.0429150977909644;  // std dev = 2.261, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28628552813958486;  // std dev = 0.247, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2564363979486788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3038228677008695;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49679860477996224;  // std dev = 1.613, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.17476032960095858;  // std dev = 0.562, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2591236893065984;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.023667629804424647;  // std dev = 4.687, 176.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return -0.024505463648273478;  // std dev = 1.166, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.0027210658752709295;  // std dev = 1.475, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38576145494526687;  // std dev = 3.317, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.1511758675264959;  // std dev = 0.216, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21065029961303938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.025894559191500494;  // std dev = 1.571, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19599563125900676;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2070695764994137;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21562213244592274;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03755395909020342;  // std dev = 1.859, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16773729080669778;  // std dev = 1.033, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.05767805425587125;  // std dev = 1.566, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21245012156680648;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018738846666195446;  // std dev = 4.028, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | | else return 0.01377040010631124;  // std dev = 1.494, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1582543777696436;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08773253957399442;  // std dev = 0.556, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20548503279993666;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.015695673794141024;  // std dev = 2.671, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1792968356651931;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02511346631996661;  // std dev = 3.953, 160.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=47 */
%   | | | else return 0.07915442739231772;  // std dev = 1.401, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.612', 'seconds']
Parameter learned model CLL:-0.196387 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.847, 97, 31], 'false,false,true,false': [5.535, 96, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.044, 0, 10], 'false,true,true': [0.971, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.219, 12, 76], 'false,false,true,false': [0.07, 185, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.05, 0, 11], 'true,false': [1.22, 2, 6], 'false,true,true': [4.253, 83, 34], 'false,true,false,true': [3.374, 15, 48], 'false,true,false,false': [0.0, 90, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.604, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.141, 0, 16], 'true,false': [0.665, 1, 1], 'false,true,true,true': [0.046, 0, 3], 'false,true,true,false': [1.962, 5, 21], 'false,true,false': [5.162, 176, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.751, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.938, 1, 10], 'false,true': [5.901, 195, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.706, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.86, 1, 9], 'true,true,false': [0.119, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.843, 64, 19], 'false,false,true': [1.18, 2, 8], 'false,false,false,true': [4.651, 115, 51], 'false,false,false,false': [2.261, 30, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.247, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.613, 4, 33], 'true,false': [0.562, 114, 0], 'false,true': [0.091, 0, 5], 'false,false,true': [4.687, 129, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.166, 2, 7], 'true,false': [1.475, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.317, 13, 82], 'false,true,false': [0.216, 181, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.571, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.072, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.079, 0, 5], 'false,true,true': [1.859, 35, 13], 'false,true,false,true': [1.033, 1, 8], 'false,true,false,false': [1.566, 56, 11], 'false,false,true': [0.08, 0, 5], 'false,false,false,true': [4.028, 119, 47], 'false,false,false,false': [1.494, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.556, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 3], 'false,true': [2.671, 81, 32], 'false,false,true': [0.071, 0, 5], 'false,false,false,true': [3.953, 113, 47], 'false,false,false,false': [1.401, 9, 4]}]
{'': [0.09418282548476423, 0.20794024705544434], 'false': [0.20999999999999988, 0.2019082794706074], 'false,true': [0.24000000000000005, 0.0], 'false,false': [0.202705877475436, 0.18749999999999983], 'false,false,true': [0.18353271484375117, 0.21729289271163532], 'false,false,false': [0.18749999999999983, nan], 'true': [0.1224489795918365, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.00016172952191162437, 0.2064424157978062], 'false': [0.11792942728935768, 0.20211989163720714], 'false,false': [0.2006274196969851, 0.23140495867768604], 'false,false,false': [0.23140495867768604, nan], 'false,false,true': [0.11777302790902654, 2.660469318194132e-05], 'false,true': [0.11792942728935768, nan], 'true': [-6.344131569286608e-17, 0.00019474929930156647]}
{'': [0.09251369871928165, 0.1640045582468089], 'false': [0.16171047319436735, 0.2047401178197054], 'false,false': [0.2047401178197054, nan], 'false,false,true': [0.0, 0.18372994477444035], 'false,true': [0.15461907933784116, 0.1671212897123527], 'false,true,false': [0.1806741662129198, -4.9343245538895844e-17], 'true': [0.00023140265370636857, 0.18607862367524652]}
{'': [0.05215230124830225, 0.1398974139217982], 'false': [0.13690559275791964, 0.1769458793350822], 'false,false': [0.0, 0.1703784217386647], 'false,false,false': [0.1703784217386647, nan], 'false,true': [0.13355953487831418, 0.1138871223443238], 'false,true,true': [0.0006989641396803284, 0.14801767330109736], 'true': [0.0012394141002023407, 0.2213565486865444], 'false,false,true': [nan, 0.0]}
{'': [0.04964473656308093, 0.12804305742547026], 'false': [0.12571715035648892, 0.16131923240535845], 'false,false': [0.0, 0.16169717881278964], 'false,false,false': [0.16169717881278964, nan], 'true': [-4.7580986769649563e-17, 0.08001657186662076], 'false,false,true': [nan, 0.0], 'true,true': [-4.7580986769649563e-17, nan]}
{'': [0.06101417157555432, 0.12244828675180802], 'false': [0.09738402309013787, 0.13048966428016895], 'false,false': [0.1392011493901839, 0.12997547903016757], 'false,false,false': [0.13028997551881308, 0.12781616782347877], 'true': [0.06476863179734871, 0.0], 'true,true': [0.07396594839514029, 0.002377882476417459], 'true,false': [nan, 0.0]}
{'': [0.10044574836610681, 0.1229178938305267], 'false': [0.001672010583208483, 0.1248308997037464], 'false,false': [0.1248308997037464, nan], 'true': [0.05742799868410604, 0.002774956174939627], 'true,true': [0.0038783371707782205, 0.06765741361313612], 'true,true,false': [0.0, 0.07035017721944777], 'true,true,true': [0.004081207321341326, 0.0]}
{'': [0.16080371278487768, 0.10667571266103076], 'true': [0.15104685978793655, 0.1672552046587814], 'false': [0.10511748247927878, 0.1260571272504747], 'false,false': [0.0, 0.12989403938389354], 'false,false,false': [0.12989403938389354, nan], 'false,true': [0.11583649348203685, 0.0002572054719701426], 'false,true,true': [nan, 0.11583649348203667], 'false,false,true': [0.0, nan]}
{'': [0.0007904940384133724, 0.08418266393078602], 'false': [0.05948763038750709, 0.09918102340095344], 'false,false': [0.0012920330085205768, 0.10085284433621092], 'false,false,false': [0.09773137121652617, 0.13131071899330665], 'false,true': [0.07196582334750597, 0.05158995829776356], 'false,true,false': [0.11849691356396577, 0.03658523710584339], 'true': [0.0005755846953088777, 0.0009007265052408278], 'true,false': [0.0, 0.0012401181892748192]}
{'': [0.02021527829091117, 0.08606939639504721], 'false': [0.06315111768971537, 0.09968298202152011], 'false,false': [0.0010116052795357989, 0.10190170082123283], 'false,false,false': [0.0976874217252822, 0.1510687796966336], 'true': [0.02331175505991041, 0.00016105117892140086], 'true,true': [0.02331175505991041, nan], 'true,true,true': [-3.96508223080413e-18, 0.04413684528857416]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.404
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08891816586874314;  // std dev = 3.397, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.17112603433615278;  // std dev = 5.307, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.09115864383737639;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.34827768028410255;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7505758863657384;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.762737198193532;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6591437804606113;  // std dev = 3.714, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.15684317169226397;  // std dev = 0.106, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.34697655044517955;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08875563133491426;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.43836204567689807;  // std dev = 0.345, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.6304525938345954;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5715660833448016;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0675940429006856;  // std dev = 4.264, 126.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6344989140863193;  // std dev = 2.111, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.138502150659097;  // std dev = 0.045, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.7394107291498103;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32348192689146477;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.18422910219396094;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42083151234823063;  // std dev = 0.225, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.029843823354540444;  // std dev = 0.636, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5025094530403351;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6132252459367572;  // std dev = 1.259, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.07380301542157769;  // std dev = 2.140, 98.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=10 */
%   | | | else return 0.11760630835401231;  // std dev = 4.402, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.44350144132230496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.006577272276083535;  // std dev = 1.041, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13054337416648887;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3724152366193728;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.024283653549644863;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.3830850033298792;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.013712924703463658;  // std dev = 1.120, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.005523635898427327;  // std dev = 0.320, 143.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=31 */
%   | | else return 0.05721728044768891;  // std dev = 0.349, 168.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3383927339583024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.018521634213894578;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.25593258436009764;  // std dev = 1.052, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.28376077969482044;  // std dev = 0.232, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.45256587247671687;  // std dev = 1.409, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.12465246386257013;  // std dev = 1.008, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14714313680582838;  // std dev = 0.628, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.020032461773427185;  // std dev = 2.535, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5315983633931952;  // std dev = 1.579, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return -0.14914285850088432;  // std dev = 0.121, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.02883290886437267;  // std dev = 1.206, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11019659653681801;  // std dev = 1.488, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22314295496150513;  // std dev = 0.234, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.07662714442287671;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.39976711419650945;  // std dev = 1.850, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.13495590782043818;  // std dev = 0.056, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.08931131705843175;  // std dev = 0.986, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( location(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47427196413351363;  // std dev = 0.774, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.16341247538570053;  // std dev = 0.563, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.00398568605078726;  // std dev = 2.148, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.0767179901635024;  // std dev = 1.012, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.10111235387115465;  // std dev = 0.701, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.20563082535816135;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.26685510209828944;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.24983679625956973;  // std dev = 3.005, 85.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=72 */
%   | | | else return 0.49513866006337476;  // std dev = 0.196, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1178763622612188;  // std dev = 0.237, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.18008651725010494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.14324161950841394;  // std dev = 1.057, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.0987657654316681;  // std dev = 0.677, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20360137943685586;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.007737224444920865;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20412277105374574;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.24119946641877635;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.04315807777325427;  // std dev = 1.345, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.007939330387054223;  // std dev = 1.871, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20492348787086642;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.020600015691439884;  // std dev = 3.106, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.0068489103645941185;  // std dev = 2.022, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.16262282482380228;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), complex(A, G) )
%   | | | then return 0.2023304411399503;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14843920221761173;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18823136992352582;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(A, J), phenotype(J, K) )
%   | | then return 0.03754785061837841;  // std dev = 0.225, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | else return -0.056603721698737945;  // std dev = 0.142, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17386531808021052;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.08089695689571029;  // std dev = 2.286, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.01544450828774284;  // std dev = 2.752, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.160', 'seconds']
Refined model CLL: -0.176805


******************************************
Best model found
******************************************
Results 

CLL : -0.158781 

AUC ROC : 0.989451 

AUC PR : 0.337488 

Precision : 0.276596 

Recall : 0.784906 

F1 : 0.409046 

Total Learning Time : 6.404 

Total Inference Time : 12.807697057723999 

Total revision time: 28.580652662277224
Best scored revision CLL: -0.176805


Results 

CLL : -0.158781 

AUC ROC : 0.989451 

AUC PR : 0.337488 

Precision : 0.276596 

Recall : 0.784906 

F1 : 0.409046 

Total Learning Time : 39.29866046524048 

Total Inference Time : 12.807697057723999 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.475
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.134878494847939;  // std dev = 5.641, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8052718656558775;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1574017787577405;  // std dev = 0.041, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13236171204470504;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.0369079676072364;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1115520939439311;  // std dev = 2.027, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6903573386004719;  // std dev = 0.282, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13913137428411526;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19146976156552334;  // std dev = 3.494, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3262800662288765;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.385094536191565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5929195769470815;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04923229150748273;  // std dev = 4.298, 196.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5077263577097946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0974273669622378;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.3032957661177701;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05209077747799095;  // std dev = 4.275, 201.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3830036789291862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.022758241693846;  // std dev = 3.764, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.006904352857664109;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3430458560438059;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2973765058936645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07856413619845372;  // std dev = 0.962, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05383064306521218;  // std dev = 4.105, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | | | else return 0.06606137442633526;  // std dev = 3.742, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23005251374775115;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22446719650726188;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6464707665145412;  // std dev = 0.759, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18090713318494883;  // std dev = 0.558, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07098350651359875;  // std dev = 3.359, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17415822538727466;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17636192965577668;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42817384508577516;  // std dev = 1.255, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1407071083095879;  // std dev = 0.248, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18785229933168318;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06567335760362077;  // std dev = 3.017, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15276763642398436;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12938164191132018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1666959100425487;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09009379424425383;  // std dev = 0.406, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18669976702629132;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.013333430272794811;  // std dev = 1.242, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.013827721535713136;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.042847903243534484;  // std dev = 2.671, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.07210053221090408;  // std dev = 2.952, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13195240136765915;  // std dev = 0.000226, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14410403898468405;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1320028596794124;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13624460880159936;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016663792458927216;  // std dev = 1.528, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15463795486541143;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -4.1725668137377085E-4;  // std dev = 2.829, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | | else return 0.04371463346549096;  // std dev = 2.969, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.597', 'seconds']
Parameter learned model CLL:-0.180038 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.522, 31, 8], 'false,false,true,false': [5.641, 115, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.39, 2, 52], 'false,false,true,false': [0.041, 134, 0], 'false,false,false,true': [3.562, 43, 18], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.027, 20, 8], 'false,true,false,true': [0.282, 0, 48], 'false,true,false,false': [0.0, 117, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.494, 33, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.124, 0, 3], 'false,true,false': [4.298, 144, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.523, 40, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.275, 145, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.764, 56, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.064, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.962, 22, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [4.105, 118, 49], 'false,false,false,false': [3.742, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.114, 0, 12], 'true,true,true,false': [0.021, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.759, 0, 36], 'true,false': [0.558, 113, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.359, 74, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.004, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.255, 1, 56], 'false,true,false': [0.248, 170, 0], 'false,false,true,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.017, 39, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.021, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.019, 0, 4], 'false,true,true': [0.406, 19, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.242, 43, 14], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.671, 72, 36], 'false,false,false,false': [2.952, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000226, 0, 5], 'true,true,true,false': [0.016, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.528, 47, 17], 'false,false,true': [3.73e-09, 0, 5], 'false,false,false,true': [2.829, 97, 36], 'false,false,false,false': [2.969, 38, 20]}]
{'': [-2.5376526277146434e-16, 0.20543209876543278], 'false': [-1.4802973661668753e-16, 0.19834710743801787], 'false,false': [0.19365370880522478, 0.2112029384756653], 'false,false,false': [0.21253902185223675, 0.18750000000000003], 'false,false,true': [0.1630506245890863, 0.20015031050986984], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.2040987085406656], 'false': [7.401486830834377e-17, 0.2006646262497262], 'false,false': [0.20001825811212393, 0.20237610911434561], 'false,false,false': [0.20803971403275562, 0.16000000000000003], 'false,false,true': [0.03577888094352383, 1.284245248475826e-05], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.1642904085118201], 'false': [0.14306196606352087, 0.22981790609409483], 'false,false': [0.2284846245878532, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.23034341838475764], 'false,true': [0.14680592474818893, 0.14241386940948686], 'false,true,false': [0.0016565948712185345, -3.036507417778206e-17], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12679490449854552], 'false': [0.09734278555106447, 0.2158602710531418], 'false,false': [0.0020345861279628674, 0.21888783656496016], 'false,false,false': [0.21400786058756033, 0.25], 'false,true': [0.01194613575014003, 0.09424958629862824], 'false,true,true': [0.0, 0.005130369108928686], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.11858863616907626], 'false': [0.09094162735926667, 0.18684952611174857], 'false,false': [0.0009700680762854824, 0.18886803901572155], 'false,false,false': [0.18892827472738383, 0.18750000000000006], 'false,false,true': [0.0, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.0018313176391194469, 0.12296200970020177], 'false': [0.03699657274776029, 0.1300761593702383], 'false,false': [9.25185853854297e-18, 0.13244278062065373], 'false,false,false': [0.10090472816219155, 0.21213639289324734], 'true': [0.0021542648275280174, 0.0003958221872747321], 'true,true': [2.3790493384824782e-17, 0.0010103734015897425], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12308902857479083, 0.09893764387645196], 'true': [0.04793285077827138, 0.0027597835685533785], 'false': [-5.551115123125783e-18, 0.10259749293691342], 'false,false': [0.10259749293691342, nan], 'true,true': [0.0009568855955757104, 0.020589168917494117], 'true,true,false': [0.0, 0.016006541930079197], 'true,true,true': [0.0010758485185219286, 0.00021636882760393827]}
{'': [2.114312926471922e-06, 0.0861168271318744], 'false': [0.06806204917912292, 0.14970885645972346], 'false,false': [0.00016613382752207057, 0.15428866871104807], 'false,false,false': [0.15428866871104807, nan], 'false,true': [0.02761471638376057, 0.0003610013639170299], 'false,true,true': [nan, 0.0276147163837606], 'false,false,true': [0.00016613382752207057, nan], 'true': [0.0, 1.6187708343391727e-06]}
{'': [0.0001451904754099747, 0.07642692501421383], 'false': [0.023896404001291508, 0.0990416737313198], 'false,false': [0.1388888888888889, 0.09741768415513755], 'false,false,false': [0.06606190170348596, 0.15842206111531038], 'false,true': [0.00823699577605654, 0.02743781119192569], 'false,true,false': [0.0, 0.02704415903556946], 'true': [4.698767137236345e-05, 0.00029508302974242675], 'true,false': [0.0, 9.038286594419478e-05]}
{'': [9.957262499641985e-05, 0.07455488208226724], 'false': [0.03649264723959384, 0.08671104079860174], 'false,false': [2.7755575615628915e-18, 0.0884690799477514], 'false,false,false': [0.06018428608277698, 0.15197283957174984], 'true': [5.653392576220329e-05, 0.00020687987969855368], 'true,true': [6.660586856557446e-05, 0.0], 'true,true,true': [1.0184164897508729e-08, 8.53097404153481e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.687
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.08481560176617904;  // std dev = 3.626, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return 0.1855298874804643;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.3861400788776212;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8187229673934883;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16074107912808933;  // std dev = 0.110, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.06592366299111559;  // std dev = 2.327, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.15903107814228643;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5954130011700851;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1088451336921273;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.16247466941374356;  // std dev = 1.886, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6853994500996342;  // std dev = 0.247, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14044144722533505;  // std dev = 0.058, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5509535346988008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0955272017378592;  // std dev = 3.745, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else return 0.08879111164703725;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43547255842350463;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5047810187471502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3911471072991848;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.0140271785818828;  // std dev = 1.863, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return 0.08233474040237032;  // std dev = 3.666, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41424854274987577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.527222281097232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08400143753089473;  // std dev = 3.596, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.3104626642964975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31681204273136954;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.0249976642586817;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.34165919229937186;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then return -0.03623652747339293;  // std dev = 0.200, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05478967281898451;  // std dev = 3.571, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   | | | else return 0.11666118226115345;  // std dev = 1.800, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3577202850169587;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.1131337256568005;  // std dev = 3.074, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.03175283111725379;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.30112069555194165;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.271337411103541;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A), enzyme(A, G) )
%   | | then return -0.26724461620282386;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return -0.039763221593493235;  // std dev = 0.732, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.10033293444624676;  // std dev = 0.604, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.0032091512586342277;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08254038271058659;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.051437751697516354;  // std dev = 5.343, 228.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=67 */
%   | | | else return -0.06319601051134446;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2379069334926978;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3782546196961155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6080654069882568;  // std dev = 1.420, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.17452194270478077;  // std dev = 0.056, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.09936709465678857;  // std dev = 0.862, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5058389881091485;  // std dev = 0.185, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1645093854935539;  // std dev = 0.361, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06716684722850493;  // std dev = 2.331, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.15298650429885235;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16942381583011032;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.07244915478010198;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24714822511207504;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.40562395455860406;  // std dev = 0.080, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.10531294875019048;  // std dev = 0.172, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.15064961533394342;  // std dev = 0.222, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return -0.1301328447645367;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03210759275615536;  // std dev = 3.041, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.1156807575603489;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17333260842117307;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.02634215440760574;  // std dev = 0.383, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.07359589492034442;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.22820246345278583;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.026653631275183966;  // std dev = 1.321, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.03254638827866192;  // std dev = 2.467, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.08869873977746062;  // std dev = 1.659, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.015700687012717342;  // std dev = 1.739, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | | else return -0.011978587703775887;  // std dev = 2.323, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14701778602292118;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0640649787611413;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16391978626875323;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.016069641385165027;  // std dev = 0.152, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.02148542619269213;  // std dev = 0.840, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.07370440493926159;  // std dev = 0.338, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1964015356168377;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.016090060114212983;  // std dev = 2.380, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.033031934731601945;  // std dev = 3.210, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.657', 'seconds']
Refined model CLL: -0.168687


******************************************
Best model found
******************************************
Results 

CLL : -0.19279 

AUC ROC : 0.98577 

AUC PR : 0.248225 

Precision : 0.139234 

Recall : 0.931408 

F1 : 0.242254 

Total Learning Time : 2.687 

Total Inference Time : 2.7451083660125732 

Total revision time: 9.930231391906737
Best scored revision CLL: -0.168687


Results 

CLL : -0.19279 

AUC ROC : 0.98577 

AUC PR : 0.248225 

Precision : 0.139234 

Recall : 0.931408 

F1 : 0.242254 

Total Learning Time : 20.648239194869994 

Total Inference Time : 2.7451083660125732 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.551
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05814893509951237;  // std dev = 3.225, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return 0.1407576307516857;  // std dev = 5.289, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6259028553107229;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.49725118998873225;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.788336285201652;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1559196800243304;  // std dev = 0.060, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15778784241253777;  // std dev = 2.742, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.3332054912315484;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5814606499088855;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.279661181116304;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.051455742623743285;  // std dev = 2.800, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6750100380108642;  // std dev = 0.994, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14001540196006174;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6804363724320531;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09916484141657106;  // std dev = 2.509, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.30062407932463603;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4066532592347173;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5970393554538258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6030028133923496;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05243285458345612;  // std dev = 4.368, 185.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4413126341389728;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5855101504704449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04011818553168465;  // std dev = 2.863, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.05938629417328245;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33363449242117116;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27737740553948775;  // std dev = 0.957, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.07277709272573425;  // std dev = 4.381, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.336897883594623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3885828615063752;  // std dev = 0.073, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08817693570557741;  // std dev = 2.499, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.03690962746689159;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1819620431475853;  // std dev = 0.791, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4168326168010238;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2661885906268935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3020152436909618;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04211867428136712;  // std dev = 1.199, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.08865996900645708;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05711015256301937;  // std dev = 4.024, 157.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=46 */
%   | | | else return 0.09512138459310227;  // std dev = 2.963, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25872326957735836;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23442744374912883;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3244972835786993;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5462486967319673;  // std dev = 1.320, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17202507347859483;  // std dev = 0.670, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.11369452226037843;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.1123060597267111;  // std dev = 3.142, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.185670221349447;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.167155507573494;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41936874443843586;  // std dev = 1.478, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14715671445769982;  // std dev = 0.227, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1952227844538875;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03714096442743479;  // std dev = 2.454, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16168344172009902;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20236195819150493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18230984243721274;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09521456033353412;  // std dev = 0.304, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23724840143157053;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.013113430676068388;  // std dev = 1.616, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29657673267043644;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07638906985988414;  // std dev = 2.508, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | | | else return -0.006816197214833905;  // std dev = 2.571, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.027634597251502684;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.149819869052015;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1593904151829718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16754621887056892;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.03098584338523465;  // std dev = 0.427, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014854526479454452;  // std dev = 1.662, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2388277080115009;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013746276775912468;  // std dev = 2.705, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.012720857512183041;  // std dev = 2.493, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.017', 'seconds']
Parameter learned model CLL:-0.183611 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.225, 52, 13], 'false,false,true,false': [5.289, 99, 39], 'false,false,false,true': [2.598, 27, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.919, 1, 7], 'false,true,true': [1.247, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.06, 134, 0], 'false,false,false,true': [2.742, 24, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.068, 0, 11], 'true,false': [1.172, 2, 4], 'false,true,true': [2.8, 51, 14], 'false,true,false,true': [0.994, 1, 42], 'false,true,false,false': [5.58e-08, 84, 0], 'false,false,true,true': [0.174, 0, 3], 'false,false,true,false': [2.509, 22, 9], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.963, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.188, 0, 6], 'false,true,false': [4.368, 136, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.863, 34, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.023, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.957, 1, 6], 'false,true': [4.381, 126, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.073, 0, 2], 'false,false,false,true': [2.499, 22, 9], 'false,false,false,false': [1.456, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.791, 1, 9], 'true,true,false': [0.017, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.065, 0, 2], 'false,true': [1.199, 22, 5], 'false,false,true': [1.185, 2, 5], 'false,false,false,true': [4.024, 111, 46], 'false,false,false,false': [2.963, 29, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.151, 0, 13], 'true,true,true,false': [0.06, 0, 3], 'true,true,false,true': [0.04, 0, 3], 'true,true,false,false': [1.32, 2, 33], 'true,false': [0.67, 89, 0], 'false,true': [0.848, 1, 3], 'false,false,true': [3.142, 51, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.879, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.478, 2, 56], 'false,true,false': [0.227, 126, 0], 'false,false,true,true': [0.053, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.454, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.03, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.047, 0, 5], 'false,true,true': [0.304, 19, 1], 'false,true,false,true': [0.166, 0, 6], 'false,true,false,false': [1.616, 44, 17], 'false,false,true': [0.05, 0, 3], 'false,false,false,true': [2.508, 49, 31], 'false,false,false,false': [2.571, 33, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.943, 1, 8], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.006, 0, 2], 'true,false': [0.427, 1, 3], 'false,true': [1.662, 69, 24], 'false,false,true': [0.043, 0, 3], 'false,false,false,true': [2.705, 69, 31], 'false,false,false,false': [2.493, 32, 12]}]
{'': [0.10380622837370206, 0.20090734332948912], 'false': [-2.5376526277146434e-16, 0.19146722164412192], 'false,false': [0.19054090125943446, 0.19555555555555507], 'false,false,false': [0.1875000000000001, 0.2222222222222221], 'false,false,true': [0.15999999999999945, 0.2027410207939514], 'true': [0.07100591715976314, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05575812246546347, 0.20637479530665134], 'false': [0.17283950617283964, 0.20245417707181856], 'false,false': [0.19896577294916817, 0.2183137870540403], 'false,false,false': [0.21483983001604467, 0.25], 'false,false,true': [0.05149961824211392, 2.6984029318909867e-05], 'false,true': [0.17283950617283964, nan], 'true': [-2.220446049250313e-16, 0.1055941632872846]}
{'': [0.10182225415386839, 0.15962906207105396], 'false': [0.1459759408057507, 0.22159810332084637], 'false,false': [0.2131715601924797, 0.2501799934318867], 'false,false,false': [0.2501799934318867, nan], 'false,false,true': [0.01010525340942022, 0.20301049772981117], 'false,true': [0.12060380731973656, 0.15654541594681773], 'false,true,false': [0.022997716922419798, 3.700743415417188e-17], 'true': [0.0004193866517101115, 0.2287915045941982]}
{'': [0.0580049117186745, 0.1259226543644712], 'false': [0.11017969456948053, 0.18517209375636703], 'false,false': [0.004620649714703366, 0.18464748803532635], 'false,false,false': [0.18211930200553594, 0.2222222222222222], 'false,true': [0.005037488261264362, 0.1031407075111578], 'true': [0.0580049117186745, nan], 'false,true,true': [0.0, 0.005871989233772412], 'false,false,true': [0.0, 0.0]}
{'': [0.058063941431332006, 0.12321386966941045], 'false': [0.10545560312154027, 0.19624044125540516], 'false,false': [0.00237452172598962, 0.20446477020335196], 'false,false,false': [0.2014352314003437, 0.21186906137767197], 'true': [5.93961004583902e-05, 0.1308609803483656], 'false,false,true': [0.0, 0.002671336941738295], 'true,true': [5.93961004583902e-05, nan]}
{'': [0.04663066002805588, 0.12030066605522632], 'false': [0.05327046556795644, 0.12769310549172413], 'false,false': [0.2006950722411885, 0.12511955588097634], 'false,false,false': [0.10315040114498371, 0.20419830599416314], 'true': [0.05596544365328608, 0.0016836387657407543], 'true,true': [0.06256263407908344, 6.94773257245429e-05], 'true,false': [0.0, 0.002097608458686756], 'true,false,true': [0.0, nan]}
{'': [0.11259844175436905, 0.12313578776126395], 'false': [0.1798484480692781, 0.12036922686029844], 'false,false': [0.12036922686029844, nan], 'true': [0.05106606589273029, 0.005049964060652085], 'true,true': [0.0017491084567114318, 0.04949302845621466], 'true,true,false': [0.0005352357064270508, 0.04980727733121567], 'true,true,true': [0.0017640976866417208, 0.0012045468154643542]}
{'': [0.048425852768014546, 0.0924906710121681], 'false': [0.08142696337723324, 0.13853744593067963], 'false,false': [0.0009302670052493967, 0.14690240968563698], 'false,false,false': [0.14690240968563698, nan], 'false,true': [0.03765342775942006, 0.00040731903773638136], 'true': [0.0, 0.09668030822292639], 'false,true,true': [nan, 0.03765342775942009], 'false,false,true': [0.0009302670052493967, nan]}
{'': [0.0003514127958810197, 0.07795811581251734], 'false': [0.037269337429712356, 0.10379627197346573], 'false,false': [0.0008402348881075087, 0.1048007137498191], 'false,false,false': [0.07861790419996342, 0.14691713618719618], 'false,true': [0.004626300272842559, 0.044502087799772945], 'false,true,false': [0.00456839674380959, 0.04281676375063515], 'true': [9.181655232806674e-05, 0.000425019978207893], 'true,false': [0.0, 0.00044300941614555114]}
{'': [0.0629546236234016, 0.06879059391243404], 'false': [0.02971866351008943, 0.09309045829334057], 'false,false': [0.0006301561788868796, 0.09397992285197677], 'false,false,false': [0.07319021592046435, 0.1412285265895473], 'true': [0.06750710655271065, 0.04554902793204043], 'true,true': [0.08307821760059614, 2.6023987695948197e-05], 'true,true,true': [0.09876543209876544, 0.0002709191038629162], 'true,true,false': [0.0, 1.6863603613710004e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.993
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.0650454868236503;  // std dev = 3.085, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return 0.19581127276184904;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3861400788776211;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.7417903431046247;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8346155486315643;  // std dev = 0.040, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15731338495963998;  // std dev = 0.158, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.14605103319443064;  // std dev = 2.210, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.2934910242361887;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.478707530816918;  // std dev = 0.279, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2620796678367517;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.023877888283347398;  // std dev = 0.325, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6326286701555462;  // std dev = 1.394, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14364344994173253;  // std dev = 0.060, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7897425834636635;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16953822554943573;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.18683560269825242;  // std dev = 1.833, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.009433917476185482;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.45144598382781986;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2716736274326988;  // std dev = 0.406, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6628862136116219;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4417270814516212;  // std dev = 0.959, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0055584065451755905;  // std dev = 2.352, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return 0.07636892084618475;  // std dev = 3.470, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5575495737293981;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.3017948747160874;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.02966055767541904;  // std dev = 2.438, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.38190400928204865;  // std dev = 0.066, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.12076555070521618;  // std dev = 0.737, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.05502078765910855;  // std dev = 1.082, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.11530407221781488;  // std dev = 2.110, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.07588631617660689;  // std dev = 3.481, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32631169494422185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16579888334299375;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.04224277581803316;  // std dev = 2.225, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.16654762930616454;  // std dev = 1.484, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2642412309484305;  // std dev = 0.225, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F), location(A, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.06622898046512704;  // std dev = 1.440, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.039914850972907236;  // std dev = 1.939, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( enzyme(A, J), interaction(E, A) )
%   | | | then return 0.32989512264966175;  // std dev = 0.616, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.043659798857519694;  // std dev = 2.345, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.659630691601666;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19884946448669208;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.13617157792682388;  // std dev = 1.624, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06963046156656294;  // std dev = 2.866, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4020474255768668;  // std dev = 0.267, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | else return -0.16307149181207656;  // std dev = 0.071, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.1819468797359597;  // std dev = 1.035, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.02344716961798876;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(F, I) )
%   | | | then return -0.02144133184244594;  // std dev = 2.290, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.08227068029008269;  // std dev = 1.151, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.477549061977379;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1566642915818765;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.31746022481792635;  // std dev = 0.548, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1472959725339703;  // std dev = 1.86e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.12621561358262248;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32811711841226704;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.3400789359556068;  // std dev = 0.751, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.4429379605172956;  // std dev = 1.110, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.144585503080636;  // std dev = 0.045, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2361051928286635;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.013489340153099423;  // std dev = 1.834, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.10692355067867727;  // std dev = 1.294, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13357503431933537;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2947748182053064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20305237263010706;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08238404526130037;  // std dev = 0.007, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.11138770426149905;  // std dev = 0.866, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.010516859537994925;  // std dev = 1.725, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.189660522451479;  // std dev = 1.200, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.003990307229912084;  // std dev = 2.470, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | | else return 0.05174733959577074;  // std dev = 2.321, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13371569992805124;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.06919326175386967;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, H) )
%   | | | then return -0.10380836383185671;  // std dev = 0.906, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return -0.023946785100600602;  // std dev = 0.407, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.05118624472356807;  // std dev = 0.671, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.04568968578730251;  // std dev = 1.387, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3396145895668175;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.12238167526883822;  // std dev = 1.243, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.006638024161805087;  // std dev = 3.081, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.113', 'seconds']
Refined model CLL: -0.1748


******************************************
Best model found
******************************************
Results 

CLL : -0.191793 

AUC ROC : 0.985245 

AUC PR : 0.244881 

Precision : 0.149938 

Recall : 0.855124 

F1 : 0.25514 

Total Learning Time : 3.993 

Total Inference Time : 3.1366078853607178 

Total revision time: 11.794461578369141
Best scored revision CLL: -0.1748


Results 

CLL : -0.191793 

AUC ROC : 0.985245 

AUC PR : 0.244881 

Precision : 0.149938 

Recall : 0.855124 

F1 : 0.25514 

Total Learning Time : 22.512469381332398 

Total Inference Time : 3.1366078853607178 

