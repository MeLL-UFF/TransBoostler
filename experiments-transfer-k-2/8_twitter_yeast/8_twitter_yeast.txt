Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.6140646934509277
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4540393460584141;  // std dev = 0.491, 146.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.4008758673308457;  // std dev = 5.674, 135.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=82 */
%   | else return 0.29346845992343795;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3298469307666948;  // std dev = 0.488, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4858693938150494;  // std dev = 3.659, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | else return -0.25968159883183595;  // std dev = 2.183, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2023145270864339;  // std dev = 4.850, 133.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=82 */
%   | else return 0.35256967257464983;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926089;  // std dev = 6.04e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1049129882703778;  // std dev = 5.341, 157.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else return -0.007797731827741646;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.67e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1157835193793207;  // std dev = 0.425, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109166;  // std dev = 4.01e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.041142679034860886;  // std dev = 5.413, 160.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=86 */
%   | else return -0.11496904473249288;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13917518171988785;  // std dev = 4.687, 131.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.013166430925139852;  // std dev = 5.603, 164.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
Inference time using transfer learning 18.614651679992676
Parameter learned model CLL:-0.271828 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 59, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 100, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.674, 53, 82], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 104, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.488, 56, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.659, 16, 82], 'true,false': [2.183, 53, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 113, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.85, 51, 82], 'true,false': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.04e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.341, 71, 86], 'true,true,false': [0.809, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.67e-08, 102, 0], 'false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.425, 60, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.01e-08, 76, 0], 'false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.413, 74, 86], 'true,false': [0.857, 3, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.687, 44, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.603, 77, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 100, 0]}]
{'': [0.2408050290861346, 7.993605777301127e-17], 'false': [nan, 7.993605777301127e-17]}
{'': [0.24000000000000168, -6.22554967079527e-18], 'true': [0.23846364883402002, 0.25], 'false': [nan, -6.22554967079527e-18], 'false,false': [nan, -6.22554967079527e-18], 'false,false,false': [-8.540177112501205e-18, -4.625929269271485e-18]}
{'': [0.23813707164687062, 6.740639792367021e-17], 'false': [nan, 6.740639792367021e-17], 'false,false': [nan, 6.740639792367021e-17]}
{'': [0.24619078947612935, -2.2204460492503132e-17], 'true': [0.13660974593919342, 0.08215948124064494], 'false': [nan, -2.2204460492503132e-17], 'false,false': [nan, -2.2204460492503132e-17], 'false,false,false': [-1.1789979022568034e-17, -1.982541115402065e-18]}
{'': [0.18136410897814523, 3.66679164096382e-17], 'true': [0.17689454161409351, 0.2343750000000001], 'false': [nan, 3.66679164096382e-17]}
{'': [0.18259254252881335, 3.172065784643304e-17], 'true': [0.18259254252881335, nan], 'true,true': [0.18167866598610885, 0.21795323633411604], 'false': [nan, 3.172065784643304e-17], 'false,false': [3.1565164425617195e-17, 0.0]}
{'': [0.18064067558498534, 2.7755575615628914e-17], 'true': [0.18064067558498534, nan], 'false': [nan, 2.7755575615628914e-17], 'false,false': [2.1181886654032593e-17, 0.0]}
{'': [0.1837409635160747, -2.1147105230955365e-18], 'true': [0.18314547460806224, 0.18378406100963016], 'false': [nan, -2.1147105230955365e-18], 'false,false': [nan, -2.1147105230955365e-18]}
{'': [0.1677278484348155, 2.7533531010703882e-17], 'true': [0.1677278484348155, nan], 'false': [nan, 2.7533531010703882e-17], 'false,false': [nan, 2.7533531010703882e-17]}
{'': [0.19139560629937402, -1.4988010832439614e-17], 'true': [0.19139560629937402, nan], 'false': [nan, -1.4988010832439614e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.090991258621216
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, A) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), complex(A, I) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5724346493852266;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.48777856472914194;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.3933602027051453;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.781737899979841;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), complex(G, E) )
%   | | | then return 0.06739979583737545;  // std dev = 1.711, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.32908004081186043;  // std dev = 4.047, 67.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=36 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(H, A), phenotype(H, J) )
%   | | | then return 0.023392169631548658;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3811787091503167;  // std dev = 1.899, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.8006769495212631;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.47438346816606025;  // std dev = 2.591, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else if ( interaction(M, A) )
%   | then return -0.12544463852839108;  // std dev = 7.74e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.5949478068665857;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7467852951938614;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.25032061657003724;  // std dev = 2.240, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.11774626251720643;  // std dev = 3.414, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K), interaction(L, I) )
%   | | | then return 0.3160311693652061;  // std dev = 2.534, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.7171550940739705;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.12012838020466465;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.32494189783574057;  // std dev = 2.619, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.11231637819360624;  // std dev = 7.33e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( complex(A, H), complex(E, H) )
%   | | | then return 0.2990070795042625;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.579969763229755;  // std dev = 0.957, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6284086625694351;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21065471250855153;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.3448422333291385;  // std dev = 2.376, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | | else return 0.11825718350011083;  // std dev = 2.160, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( location(A, M) )
%   | | | then return 0.1288418123926619;  // std dev = 4.095, 69.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   | | | else return 0.4213853387305935;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783663;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3762401371871273;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5524025185969862;  // std dev = 0.158, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.3270601601206144;  // std dev = 0.282, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.15127773046933857;  // std dev = 4.225, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5608131863676897;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.38814351691227367;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.35461631537781857;  // std dev = 2.259, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return 0.13354582028299658;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.09269127618926086;  // std dev = 6.59e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( enzyme(F, H), enzyme(E, I) )
%   | | | then return 0.16245444717683993;  // std dev = 0.917, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4627501632656456;  // std dev = 0.396, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(E, J) )
%   | | | then return 0.2163400810428569;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06718104442888921;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5078705004465801;  // std dev = 0.280, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.47882850000066157;  // std dev = 0.414, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(N, A), interaction(A, N) )
%   | | | then return 0.2884252886276256;  // std dev = 1.186, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.11612758023790015;  // std dev = 4.306, 78.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=46 */
%   else return -0.08518475138839682;  // std dev = 5.43e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return -0.024786780946850714;  // std dev = 1.081, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.20796769994244774;  // std dev = 0.594, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(D, H), location(A, I) )
%   | | | then return -0.19926023015890515;  // std dev = 1.792, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.039085469950094945;  // std dev = 2.336, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( interaction(L, A), location(L, K) )
%   | | | then return 0.39695657665491607;  // std dev = 0.989, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.0924757698498979;  // std dev = 1.180, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.17639215716599668;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07776571743861689;  // std dev = 4.063, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   else return -0.07877675473109158;  // std dev = 5.89e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), location(D, G) )
%   | | then if ( enzyme(D, H), location(E, F) )
%   | | | then return -0.05291266475719457;  // std dev = 2.384, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.06716919765897682;  // std dev = 4.488, 98.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=59 */
%   | | else return 0.45134510531083283;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3891193961454008;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.377423529471174;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.1723905769253639;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.2149549035936479;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.07324622576333706;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.3923621624182645;  // std dev = 1.175, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.18746192315036758;  // std dev = 0.766, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.2667365759473145;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.08261517588537193;  // std dev = 1.776, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(A, K), location(K, L) )
%   | | then if ( interaction(K, A), location(A, L) )
%   | | | then return -0.04509567918992866;  // std dev = 1.461, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.17557988569111052;  // std dev = 1.891, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.06322085230929493;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return -0.038970424190446086;  // std dev = 3.066, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else return -0.06842697784420265;  // std dev = 4.75e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, D) )
%   | | then return -0.11344217990826826;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.25039718025010405;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38309906750625994;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.34814508088298984;  // std dev = 1.014, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.43174652009175624;  // std dev = 0.388, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.0674674116807508;  // std dev = 2.910, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.0173210374202255;  // std dev = 3.470, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 12.932414770126343
Refined model CLL: -0.272186


******************************************
Best model found
******************************************
Results 

CLL : -0.259058 

AUC ROC : 0.968809 

AUC PR : 0.136701 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 10.090991258621216 

Total Inference Time : 4.326505899429321 

Total revision time: 21.852954149246216
Best scored revision CLL: -0.271828


Results 

CLL : -0.259058 

AUC ROC : 0.968809 

AUC PR : 0.136701 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 21.86215901374817 

Total Inference Time : 4.326505899429321 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.1962287425994873
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43273457045862546;  // std dev = 0.494, 181.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.141851064900488;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.35311775855214783;  // std dev = 6.629, 178.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=99 */
%   | else return 0.5112236975569624;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839116;  // std dev = 7.30e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29142256124478444;  // std dev = 0.497, 186.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360615;  // std dev = 8.84e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6071690864598788;  // std dev = 2.557, 106.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=99 */
%   | else return -0.26556576680026606;  // std dev = 2.089, 77.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19715138698955667;  // std dev = 5.368, 161.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=99 */
%   | else return 0.6963940324740954;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926074;  // std dev = 6.97e-09, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14947808355669526;  // std dev = 5.393, 168.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=102 */
%   | | else return 0.11073693562066732;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.99e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.15945290592058237;  // std dev = 0.400, 158.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109157;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.05291104974701236;  // std dev = 5.516, 177.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=102 */
%   | else return 0.46595303556505563;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633373;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0594773130110434;  // std dev = 5.439, 172.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.01465532748824221;  // std dev = 5.668, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
Inference time using transfer learning 21.74811100959778
Parameter learned model CLL:-0.272249 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 77, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.629, 79, 99], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 136, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 82, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.84e-09, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.557, 7, 99], 'true,false': [2.089, 72, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.11e-08, 104, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.368, 62, 99], 'true,false': [2.11e-08, 0, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 141, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.393, 66, 102], 'true,true,false': [0.845, 2, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.99e-08, 139, 0], 'false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.4, 54, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.41e-08, 111, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.516, 75, 102], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 149, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.439, 68, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 135, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.668, 80, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 148, 0]}]
{'': [0.24443698299808006, -8.443949764754712e-17], 'false': [nan, -8.443949764754712e-17]}
{'': [0.2461358655953249, 2.4844151600003503e-17], 'true': [0.2468438328493874, 0.2040816326530612], 'false': [nan, 2.4844151600003503e-17], 'false,false': [nan, 2.4844151600003503e-17], 'false,false,false': [3.918434204559376e-17, -1.982541115402065e-18]}
{'': [0.246560729927597, 7.66210256431446e-17], 'false': [nan, 7.66210256431446e-17], 'false,false': [nan, 7.66210256431446e-17]}
{'': [0.24521063631608309, -6.0557619525008536e-18], 'true': [0.06167675329298762, 0.05668401350851878], 'false': [nan, -6.0557619525008536e-18], 'false,false': [nan, -6.0557619525008536e-18], 'false,false,false': [4.270088556250602e-18, -2.3129646346357427e-18]}
{'': [0.180851953495844, 4.881831739486504e-17], 'true': [0.17896114791513143, 8.881784197001253e-17], 'false': [nan, 4.881831739486504e-17]}
{'': [0.17328457585234208, 3.6252180395923476e-17], 'true': [0.17328457585234208, nan], 'true,true': [0.17312210665122707, 0.17864230986143448], 'false': [nan, 3.6252180395923476e-17], 'false,false': [3.5143750419789125e-17, 0.0]}
{'': [0.15999206512320344, 3.8616453030440226e-17], 'true': [0.15999206512320344, nan], 'false': [nan, 3.8616453030440226e-17], 'false,false': [3.700743415417188e-17, 0.0]}
{'': [0.17184707757913695, -9.686509610823513e-18], 'true': [0.17188266607543332, 0.0], 'false': [nan, -9.686509610823513e-18], 'false,false': [nan, -9.686509610823513e-18]}
{'': [0.17202012678109851, 2.878355989768924e-17], 'true': [0.17202012678109851, nan], 'false': [nan, 2.878355989768924e-17], 'false,false': [nan, 2.878355989768924e-17]}
{'': [0.17459823586396042, -1.050210969240013e-17], 'true': [0.17459823586396042, nan], 'false': [nan, -1.050210969240013e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.528047800064087
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6407576307516862;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return 0.14386322081379804;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.46042166237224025;  // std dev = 4.591, 88.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=53 */
%   else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), complex(A, I) )
%   | | | then return 0.4478080215931011;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7811413549264344;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18393033979986628;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3249024774491664;  // std dev = 6.061, 152.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=80 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283912;  // std dev = 6.66e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return 0.3021262322605522;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16500523277836396;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.26723777247925556;  // std dev = 2.762, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.4334032393133852;  // std dev = 3.260, 52.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=36 */
%   | | | else return 0.2514443383870945;  // std dev = 4.008, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   else if ( interaction(A, J) )
%   | then return -0.11231637819360628;  // std dev = 5.74e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D), interaction(D, E) )
%   | | | then return 0.5724633584388459;  // std dev = 0.494, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.12953493413971404;  // std dev = 1.884, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.49021132147538404;  // std dev = 3.149, 75.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=63 */
%   | | | else return -0.3065880690740862;  // std dev = 0.365, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0.49677743446325767;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( enzyme(F, G), complex(E, H) )
%   | | | then return 0.27443771026577257;  // std dev = 2.996, 65.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=46 */
%   | | | else return 0.12590631721419487;  // std dev = 3.833, 93.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=48 */
%   | | else return 0.4231081746790624;  // std dev = 0.744, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.06498772594026647;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5383593187674964;  // std dev = 0.278, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, J) )
%   | then return -0.09269127618926103;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.254970042525639;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.46889280611776835;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, G), interaction(H, D) )
%   | | | then return 0.02473322839596359;  // std dev = 4.992, 143.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=66 */
%   | | | else return 0.320545872498215;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.3376167823835173;  // std dev = 0.723, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1820485373598964;  // std dev = 1.863, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return -0.05896695437236072;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(L, A) )
%   | then return -0.08518475138839678;  // std dev = 5.27e-09, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else return -0.08518475138839683;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.20967715945660403;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3589586541532859;  // std dev = 0.219, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, G) )
%   | | | then return 0.14024126787175265;  // std dev = 4.155, 110.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=67 */
%   | | | else return -0.02130999033401603;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4310464177450104;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.380538218976287;  // std dev = 0.165, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13896235935508172;  // std dev = 1.563, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.008356262088879228;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.07877675473109154;  // std dev = 6.25e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.40509293585333656;  // std dev = 0.463, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.3928419588898785;  // std dev = 0.463, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07751107498907561;  // std dev = 3.273, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | | | else return 0.014892284504555894;  // std dev = 3.010, 53.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | else return 0.43703106939702746;  // std dev = 0.123, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, H) )
%   | then if ( interaction(A, I) )
%   | | then if ( enzyme(I, H) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(A, F) )
%   | | then return 0.3136131607798434;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, G), interaction(A, A) )
%   | | | then return 0.16371935441428723;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23465619989901804;  // std dev = 0.169, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.11199458483456949;  // std dev = 3.283, 84.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=55 */
%   | | | else return -0.376672200705801;  // std dev = 0.331, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.11881505474783903;  // std dev = 1.584, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return -0.05064330939274913;  // std dev = 2.714, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   else if ( interaction(A, M) )
%   | then return -0.06842697784420268;  // std dev = 2.63e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06842697784420267;  // std dev = 3.61e-09, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), phenotype(D, E) )
%   | | then return 0.14252824517973478;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16799419520654954;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2272370872517353;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3061591026281526;  // std dev = 0.468, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.34144455231819193;  // std dev = 0.855, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.03753264923885471;  // std dev = 3.622, 96.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=50 */
%   | | | else return 0.179804362605025;  // std dev = 1.173, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( interaction(L, A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 12.210510730743408
Refined model CLL: -0.203336


******************************************
Best model found
******************************************
Results 

CLL : -0.192516 

AUC ROC : 0.988573 

AUC PR : 0.398193 

Precision : 0.160151 

Recall : 0.958491 

F1 : 0.274446 

Total Learning Time : 7.528047800064087 

Total Inference Time : 4.633249044418335 

Total revision time: 18.604631662368774
Best scored revision CLL: -0.203336


Results 

CLL : -0.192516 

AUC ROC : 0.988573 

AUC PR : 0.398193 

Precision : 0.160151 

Recall : 0.958491 

F1 : 0.274446 

Total Learning Time : 18.613836526870728 

Total Inference Time : 4.633249044418335 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8492977619171143
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42605016966741094;  // std dev = 0.495, 162.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 1.86e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.32926755855606843;  // std dev = 4.889, 96.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else return 0.409957857063531;  // std dev = 3.989, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839108;  // std dev = 7.74e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32954741226654294;  // std dev = 0.491, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.23e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6332347129791204;  // std dev = 1.394, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.09619714718973452;  // std dev = 4.129, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783621;  // std dev = 4.08e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17675158399224689;  // std dev = 4.427, 95.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=51 */
%   | else return 0.22683080052529772;  // std dev = 3.063, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926079;  // std dev = 6.59e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16897323271815246;  // std dev = 4.784, 120.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=72 */
%   | | else return -0.048311486350036785;  // std dev = 2.807, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 4.08e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.08518475138839685;  // std dev = 3.07e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13350008701793184;  // std dev = 0.424, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109173;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.07877675473109176;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07503066237475726;  // std dev = 4.921, 125.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=72 */
%   | else return 0.012817059551638517;  // std dev = 2.564, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06624769858941322;  // std dev = 5.405, 159.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.10e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04197373264377236;  // std dev = 5.487, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning 35.04022574424744
Parameter learned model CLL:-0.265607 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 70, 92], 'false,true': [0.0, 0, 0], 'false,false': [1.86e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.889, 45, 51], 'true,false': [3.989, 26, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.74e-08, 101, 0], 'false,false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 62, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.23e-09, 120, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.394, 2, 70], 'true,false': [4.129, 70, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.08e-08, 58, 0], 'false,false,false,false': [2.11e-08, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.427, 44, 51], 'true,false': [3.063, 20, 41], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.784, 48, 72], 'true,true,false': [2.807, 32, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.08e-08, 68, 0], 'false,false,false': [3.07e-08, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.424, 61, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.69e-08, 62, 0], 'false,false,false': [2.11e-08, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.921, 53, 72], 'true,false': [2.564, 21, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 131, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.405, 67, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.487, 69, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 104, 0]}]
{'': [0.24538942234415734, 0.0], 'false': [nan, 0.0]}
{'': [0.24585042718958075, 5.551115123125783e-17], 'true': [0.24902343749999897, 0.23746936957005924], 'false': [nan, 5.551115123125783e-17], 'false,false': [nan, 5.551115123125783e-17], 'false,false,false': [5.93584587423351e-17, -2.413528314402514e-18]}
{'': [0.24123486183766885, 6.846375318521799e-17], 'false': [nan, 6.846375318521799e-17], 'false,false': [nan, 6.846375318521799e-17]}
{'': [0.24684589584771668, 8.707631565687502e-18], 'true': [0.027001747312709126, 0.18530576268363158], 'false': [nan, 8.707631565687502e-18], 'false,false': [nan, 8.707631565687502e-18], 'false,false,false': [2.871266442996095e-17, 1.0092936587501423e-17]}
{'': [0.18636059344835224, 4.4408920985006264e-17], 'true': [0.20629506394564706, 0.15378784280565141], 'false': [nan, 4.4408920985006264e-17]}
{'': [0.18880825469504, 3.4866508211368553e-17], 'true': [0.18880825469504, nan], 'true,true': [0.19070195050530755, 0.15149912990066355], 'false': [nan, 3.4866508211368553e-17], 'false,false': [2.44902137784961e-17, 1.7805463602478925e-17]}
{'': [0.17995228566646188, 3.9782991715734776e-17], 'true': [0.17995228566646188, nan], 'false': [nan, 3.9782991715734776e-17], 'false,false': [1.1639434935586319e-17, 7.656710514656252e-18]}
{'': [0.1862098228372649, -1.2712477381204082e-17], 'true': [0.1937561064282059, 0.16028830315753886], 'false': [nan, -1.2712477381204082e-17], 'false,false': [nan, -1.2712477381204082e-17]}
{'': [0.1837169381328891, 2.6294755846385285e-17], 'true': [0.1837169381328891, nan], 'false': [nan, 2.6294755846385285e-17], 'false,false': [nan, 2.6294755846385285e-17]}
{'': [0.18703284269022866, -1.6012832085939756e-17], 'true': [0.18703284269022866, nan], 'false': [nan, -1.6012832085939756e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.766889572143555
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(E, G), interaction(H, A) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.5381489350995123;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.411340424461215;  // std dev = 4.820, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7481372860078584;  // std dev = 0.126, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(F, E), interaction(G, F) )
%   | | | then return 0.031213269934723842;  // std dev = 1.730, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.38837827419560206;  // std dev = 2.296, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.44875643561300355;  // std dev = 2.662, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.3421690170173758;  // std dev = 4.276, 75.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=41 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839108;  // std dev = 7.74e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5482775709562223;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6396850578686979;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6985606340173619;  // std dev = 1.026, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.26264166022084245;  // std dev = 0.145, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.5076769368863118;  // std dev = 1.451, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.1894182070537561;  // std dev = 4.454, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   else if ( interaction(A, J) )
%   | then if ( interaction(J, J) )
%   | | then return -0.11231637819360644;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.11231637819360647;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.412276152628985;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return -0.17562216205867934;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3131112776280739;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.42268696940028905;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5612630020870644;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.40493572252245125;  // std dev = 1.401, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.22703576872723738;  // std dev = 5.003, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   else if ( interaction(A, K) )
%   | then return -0.10159632948783617;  // std dev = 6.04e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.10159632948783623;  // std dev = 5.10e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), phenotype(D, G) )
%   | | then if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.15415960036354637;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6120416898663056;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( recursion_proteinclass(E, B), interaction(A, I) )
%   | | | then return 0.395552965801882;  // std dev = 0.334, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09833151010888896;  // std dev = 3.869, 74.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=36 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.4515835059360562;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.30795296997790156;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.1974924382308138;  // std dev = 1.342, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.37003882791397685;  // std dev = 2.168, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   else return -0.09269127618926104;  // std dev = 2.28e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( phenotype(A, E), location(A, F) )
%   | | | then return 0.26924710018824155;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23729066206764332;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2956295340053153;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3618871776433251;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( enzyme(A, K), interaction(J, J) )
%   | | | then return 0.22089396707939302;  // std dev = 0.960, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.07087257061732213;  // std dev = 2.470, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.07741919513835835;  // std dev = 2.884, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | | | else return 0.17884521429348943;  // std dev = 3.508, 60.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=37 */
%   else return -0.0851847513883968;  // std dev = 5.51e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2680077334346358;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.054179741159163325;  // std dev = 1.514, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.22322866724222643;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06931612660200477;  // std dev = 2.026, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.194371383519311;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06810318460334547;  // std dev = 1.830, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.2829994371203639;  // std dev = 1.667, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.12229773647202898;  // std dev = 3.755, 73.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=43 */
%   else return -0.07877675473109157;  // std dev = 6.11e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2138633122183357;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12602705388876187;  // std dev = 1.898, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( complex(D, F), location(A, G) )
%   | | | then return 0.13205715814892036;  // std dev = 0.612, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.015826208099746004;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.010088325259198876;  // std dev = 0.995, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3528134769759711;  // std dev = 1.051, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.06810767088110883;  // std dev = 4.091, 84.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=48 */
%   | | | else return -0.04139837641849261;  // std dev = 1.366, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.07324622576333709;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.1934903547117646;  // std dev = 2.516, 50.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=38 */
%   | | | else return -0.48090162871512737;  // std dev = 0.371, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.312643469195627;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.48131692734690107;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.19319697616924433;  // std dev = 3.177, 69.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=51 */
%   | | | else return -0.4241173100450911;  // std dev = 0.372, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11876925176399496;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420265;  // std dev = 4.93e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.19540219044877705;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0721905634229855;  // std dev = 0.904, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, D), phenotype(G, H) )
%   | | | then return 0.23759217950495312;  // std dev = 1.105, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.06335859119471987;  // std dev = 1.446, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2542431820254716;  // std dev = 1.003, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.4157439487957446;  // std dev = 0.416, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10993506455366818;  // std dev = 2.121, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return 0.018358687645627;  // std dev = 3.033, 54.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 20.61864161491394
Refined model CLL: -0.244543


******************************************
Best model found
******************************************
Results 

CLL : -0.272821 

AUC ROC : 0.941947 

AUC PR : 0.149867 

Precision : 0.040377 

Recall : 0.880866 

F1 : 0.077215 

Total Learning Time : 7.766889572143555 

Total Inference Time : 3.599868059158325 

Total revision time: 16.503227949142456
Best scored revision CLL: -0.244543


Results 

CLL : -0.272821 

AUC ROC : 0.941947 

AUC PR : 0.149867 

Precision : 0.040377 

Recall : 0.880866 

F1 : 0.077215 

Total Learning Time : 16.51243281364441 

Total Inference Time : 3.599868059158325 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.9260172843933105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4553711573217323;  // std dev = 0.490, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6.97e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4197561464631482;  // std dev = 4.407, 83.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   | else return 0.3245001223667609;  // std dev = 3.992, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3207626212523519;  // std dev = 0.491, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6294836005993093;  // std dev = 1.397, 73.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   | else return -0.1288622494638044;  // std dev = 3.396, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783613;  // std dev = 5.96e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15128687861580825;  // std dev = 4.311, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else return 0.174461509985343;  // std dev = 3.114, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 5.43e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13265983579214446;  // std dev = 4.721, 118.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=68 */
%   | | else return 0.09291188471490683;  // std dev = 2.403, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.25e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.08518475138839687;  // std dev = 1.67e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09144320513872153;  // std dev = 0.431, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.08723647047467951;  // std dev = 4.629, 117.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=68 */
%   | else return 0.09904374016367466;  // std dev = 2.209, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.055362007173189995;  // std dev = 5.245, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.014222215414583166;  // std dev = 5.440, 159.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning 37.95867705345154
Parameter learned model CLL:-0.262992 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 58, 86], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.407, 31, 52], 'true,false': [3.992, 30, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 105, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 58, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.397, 2, 71], 'true,false': [3.396, 54, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.96e-08, 79, 0], 'false,false,false,false': [0.0, 39, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.311, 42, 52], 'true,false': [3.114, 24, 34], 'false,true': [0.0, 0, 0], 'false,false': [5.43e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.721, 50, 68], 'true,true,false': [2.403, 15, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.25e-08, 54, 0], 'false,false,false': [1.67e-08, 38, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.431, 66, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.25e-08, 67, 0], 'false,false,false': [0.0, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.629, 49, 68], 'true,false': [2.209, 12, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 92, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.245, 64, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.44, 73, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 120, 0]}]
{'': [0.2405478395061749, 5.1089909097794814e-17], 'false': [nan, 5.1089909097794814e-17]}
{'': [0.24276921653014802, -6.628197161941233e-18], 'true': [0.23399622586732297, 0.24902343749999994], 'false': [nan, -6.628197161941233e-18], 'false,false': [nan, -6.628197161941233e-18], 'false,false,false': [-8.458842092382146e-18, -7.656710514656252e-18]}
{'': [0.24062286900053254, 6.5953843047039e-17], 'false': [nan, 6.5953843047039e-17], 'false,false': [nan, 6.5953843047039e-17]}
{'': [0.23861225410092637, -1.881733940042638e-17], 'true': [0.026737341915525296, 0.16712571871888376], 'false': [nan, -1.881733940042638e-17], 'false,false': [nan, -1.881733940042638e-17], 'false,false,false': [4.4971059225322796e-17, -1.423362852083534e-18]}
{'': [0.1862017979458279, 2.8548592061789737e-17], 'true': [0.1977226589764885, 0.16719792625556892], 'false': [nan, 2.8548592061789737e-17]}
{'': [0.186138920242181, 3.137586808723268e-17], 'true': [0.186138920242181, nan], 'true,true': [0.18889754586452273, 0.1750401202343415], 'false': [nan, 3.137586808723268e-17], 'false,false': [1.9531701359146273e-17, 7.304098846218135e-18]}
{'': [0.1854714008838636, 3.5979449872111554e-17], 'true': [0.1854714008838636, nan], 'false': [nan, 3.5979449872111554e-17], 'false,false': [1.5741968259610428e-17, 0.0]}
{'': [0.1789948426561206, -7.84396702180817e-18], 'true': [0.1831680041414997, 0.16260855259614573], 'false': [nan, -7.84396702180817e-18], 'false,false': [nan, -7.84396702180817e-18]}
{'': [0.1833985955592024, 2.5232341468753557e-17], 'true': [0.1833985955592024, nan], 'false': [nan, 2.5232341468753557e-17], 'false,false': [nan, 2.5232341468753557e-17]}
{'': [0.18609737995938522, -1.850371707708594e-17], 'true': [0.18609737995938522, nan], 'false': [nan, -1.850371707708594e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.845766067504883
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H), location(A, I) )
%   | | | then return 0.4652917922423695;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.31078051404688006;  // std dev = 4.851, 95.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=43 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7313757753542449;  // std dev = 0.118, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.19012459011898883;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, A), interaction(A, E) )
%   | | | then return 0.14280303102026626;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.3771089657701835;  // std dev = 5.265, 114.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=66 */
%   else if ( interaction(F, A) )
%   | then return -0.12544463852839108;  // std dev = 7.45e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.569294106350171;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21909209525565346;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.7022741855990139;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6698704631996226;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1679666555081618;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.1248575315338718;  // std dev = 3.208, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.25969115244033153;  // std dev = 4.952, 100.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=52 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360642;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360625;  // std dev = 7.21e-09, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.645000126378636;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3022376470288547;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.6947878130779305;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2279102755626233;  // std dev = 1.130, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, I), interaction(J, A) )
%   | | | then return 0.4359884656341624;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5229151893296974;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.03904455428201346;  // std dev = 2.896, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.254088390285405;  // std dev = 4.186, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   else return -0.10159632948783653;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.36134724291349396;  // std dev = 0.179, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6121495201955924;  // std dev = 0.390, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.1408478044791221;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.31063691901605883;  // std dev = 0.191, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K), complex(A, L) )
%   | | | then return 0.34208365016252634;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.038576669994320655;  // std dev = 2.163, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.4438202686632994;  // std dev = 2.163, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return 0.20142255577052368;  // std dev = 2.956, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.09269127618926087;  // std dev = 6.04e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, E), complex(D, F) )
%   | | | then return 0.23936672998789266;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27328766187274756;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.40562827558288844;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32283637613413985;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3262802051680621;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.02270539163327321;  // std dev = 3.534, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.2496620142680601;  // std dev = 2.328, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.06068805080918033;  // std dev = 3.176, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   else return -0.08518475138839682;  // std dev = 5.35e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3171442987594522;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5148516833907875;  // std dev = 0.334, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.30033053842310437;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.5357233614677701;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.21672211840101419;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.26111381415428503;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.05618359832132769;  // std dev = 2.429, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.08626409565725894;  // std dev = 4.064, 76.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   else return -0.07877675473109161;  // std dev = 5.51e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.12050300991691149;  // std dev = 0.524, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.35291782760942303;  // std dev = 0.459, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return -0.08938103898770088;  // std dev = 2.476, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.0518602286241157;  // std dev = 3.763, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3272590737333999;  // std dev = 1.005, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.2976888297016554;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.40160078994133475;  // std dev = 0.212, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3344111429756028;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333706;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(A, F), phenotype(E, G) )
%   | | then if ( enzyme(E, H), phenotype(A, G) )
%   | | | then return 0.3194983469761668;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02198119131610071;  // std dev = 1.150, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( enzyme(E, I), interaction(E, J) )
%   | | | then return 0.09344639494448816;  // std dev = 0.885, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.31759455845156787;  // std dev = 0.984, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.12329711529237002;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=52 */
%   | | | else return -0.4164668366495217;  // std dev = 0.540, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.26742903845371674;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420274;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06842697784420265;  // std dev = 4.47e-09, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.13991273487126113;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.23408082763748458;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, F), phenotype(A, G) )
%   | | | then return 0.048061305301201174;  // std dev = 2.152, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return -0.04966061124331475;  // std dev = 2.562, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.38801507169726;  // std dev = 1.108, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.4315613815346676;  // std dev = 0.275, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.2523057507948543;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.017974501611343802;  // std dev = 2.335, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else return -0.06419184008202626;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
Inference time using transfer learning 14.95193600654602
Refined model CLL: -0.236711


******************************************
Best model found
******************************************
Results 

CLL : -0.234236 

AUC ROC : 0.964955 

AUC PR : 0.175275 

Precision : 0.075543 

Recall : 0.848057 

F1 : 0.138728 

Total Learning Time : 5.845766067504883 

Total Inference Time : 2.882575750350952 

Total revision time: 13.558369398117065
Best scored revision CLL: -0.236711


Results 

CLL : -0.234236 

AUC ROC : 0.964955 

AUC PR : 0.175275 

Precision : 0.075543 

Recall : 0.848057 

F1 : 0.138728 

Total Learning Time : 13.567574262619019 

Total Inference Time : 2.882575750350952 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.6358065605163574
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46654054349111845;  // std dev = 0.488, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3417478641809182;  // std dev = 6.072, 149.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=82 */
%   | else return 0.2459577482565755;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.33423437253559385;  // std dev = 0.490, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.23e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5128601200568309;  // std dev = 3.458, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | else return -0.26079632489164767;  // std dev = 2.190, 65.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.16073099890469805;  // std dev = 5.192, 145.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=82 */
%   | else return 0.23381466073457385;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 4.56e-09, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.12745182019641468;  // std dev = 5.283, 155.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=86 */
%   | | else return 0.015791229717477335;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11103686780776012;  // std dev = 0.422, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109165;  // std dev = 4.47e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.06480430507337065;  // std dev = 5.295, 157.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else return 0.15521619206113685;  // std dev = 0.711, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03249370649907795;  // std dev = 5.539, 162.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.024118410579511824;  // std dev = 5.500, 164.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning 18.417004346847534
Parameter learned model CLL:-0.254839 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.488, 56, 87], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.072, 67, 82], 'true,false': [1.651, 6, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 91, 0], 'false,false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 57, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.23e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.458, 14, 82], 'true,false': [2.19, 60, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 107, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.192, 63, 82], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 99, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.283, 69, 86], 'true,true,false': [0.821, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 101, 0], 'false,false,false': [2.63e-09, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.422, 66, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.47e-08, 81, 0], 'false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.295, 71, 86], 'true,false': [0.711, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.539, 75, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.5, 77, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 105, 0]}]
{'': [0.23825125923028226, -3.6104813808948184e-18], 'false': [nan, -3.6104813808948184e-18]}
{'': [0.24808593750000174, 5.782411586589357e-17], 'true': [0.24746633034548174, 0.2479338842975206], 'false': [nan, 5.782411586589357e-17], 'false,false': [nan, 5.782411586589357e-17], 'false,false,false': [5.856121448572254e-17, 0.0]}
{'': [0.2396688851246728, 6.774242184153498e-17], 'false': [nan, 6.774242184153498e-17], 'false,false': [nan, 6.774242184153498e-17]}
{'': [0.2481500533624181, -6.0557619525008536e-18], 'true': [0.12456597222222206, 0.07377825770895409], 'false': [nan, -6.0557619525008536e-18], 'false,false': [nan, -6.0557619525008536e-18], 'false,false,false': [0.0, -1.1564823173178713e-18]}
{'': [0.19035952143256943, 2.1307310573614114e-17], 'true': [0.18590179003600038, 0.25], 'false': [nan, 2.1307310573614114e-17]}
{'': [0.18116658000512675, 3.112774835397635e-17], 'true': [0.18116658000512675, nan], 'true,true': [0.18009284555921845, 0.2244115080822495], 'false': [nan, 3.112774835397635e-17], 'false,false': [3.0778460088618204e-17, 1.1564823173178713e-18]}
{'': [0.17803841013468893, 2.837236618486511e-17], 'true': [0.17803841013468893, nan], 'false': [nan, 2.837236618486511e-17], 'false,false': [2.4671622769447922e-17, -1.5419764230904951e-18]}
{'': [0.17959669771782788, -2.1147105230955365e-18], 'true': [0.17856426311177404, 0.2525713264851052], 'false': [nan, -2.1147105230955365e-18], 'false,false': [nan, -2.1147105230955365e-18]}
{'': [0.18939264161981686, 2.6122894697062506e-17], 'true': [0.18939264161981686, nan], 'false': [nan, 2.6122894697062506e-17], 'false,false': [nan, 2.6122894697062506e-17]}
{'': [0.1844477792772118, -1.586032892321652e-17], 'true': [0.1844477792772118, nan], 'false': [nan, -1.586032892321652e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.783053874969482
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, E), complex(A, F) )
%   | | | then return 0.33314893509951227;  // std dev = 3.158, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.477714152490817;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=57 */
%   else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.7674199653149861;  // std dev = 0.166, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.13056727089851955;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.18637800433354332;  // std dev = 0.144, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.32251289439481495;  // std dev = 3.059, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.3392011298488123;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.6559893319123715;  // std dev = 1.600, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.6079749853316181;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.318973525295046;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   else return -0.12544463852839108;  // std dev = 7.21e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( location(D, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.5434975420101643;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7178166276921194;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10638322937518079;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.237477862563036;  // std dev = 3.648, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(A, G), phenotype(F, H) )
%   | | | then return 0.48464113263138703;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22672216511135693;  // std dev = 1.783, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.0049191344776817565;  // std dev = 1.791, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.16753613148856886;  // std dev = 4.121, 68.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   else return -0.1123163781936062;  // std dev = 9.66e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then return 0.4087666212360565;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5416584081786386;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(A, H), phenotype(F, I) )
%   | | | then return 0.35457126147469786;  // std dev = 2.152, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.1442669946784041;  // std dev = 3.461, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.21449195585561678;  // std dev = 2.357, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.4127811561239803;  // std dev = 2.413, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   else if ( interaction(L, A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), phenotype(A, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.32087279889625325;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4673431953229465;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3843876815785065;  // std dev = 1.510, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.15903592390163787;  // std dev = 4.919, 107.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=57 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.10034582683129899;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.0652429564714246;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( enzyme(A, I) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(A, J) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), phenotype(D, F) )
%   | | then if ( interaction(A, A), complex(A, G) )
%   | | | then return 0.12445306274437411;  // std dev = 0.307, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.34419712166745386;  // std dev = 1.260, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( enzyme(D, H), location(A, I) )
%   | | | then return 0.06836412166897425;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21063626100242722;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( enzyme(J, L), complex(J, M) )
%   | | | then return -0.15479795381912542;  // std dev = 1.529, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.06644252961072662;  // std dev = 4.777, 101.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=51 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.07604548091203911;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.28879450608984625;  // std dev = 1.151, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08518475138839682;  // std dev = 5.35e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then return 0.4626159175499831;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, H), phenotype(H, I) )
%   | | | then return -0.02125523227923465;  // std dev = 1.519, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3312786795166844;  // std dev = 0.854, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L) )
%   | | | then return 0.06053084796448481;  // std dev = 2.585, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.30615933435406245;  // std dev = 1.246, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.07126728101881999;  // std dev = 3.132, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return -0.011908092882745257;  // std dev = 3.389, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   else if ( interaction(P, A) )
%   | then return -0.07877675473109154;  // std dev = 6.38e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.19986346994228632;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39130594586423745;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.1568431302280697;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.18462018628950821;  // std dev = 1.552, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.04121236183024707;  // std dev = 1.269, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.07508983211415697;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.352704642292699;  // std dev = 1.232, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.10797873000092087;  // std dev = 4.393, 82.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   else return -0.07324622576333707;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.17152719413200138;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.195111177607785;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(D, F) )
%   | | | then return -0.09654915168026243;  // std dev = 1.193, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.041130624876858576;  // std dev = 1.472, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return 0.26114002764109584;  // std dev = 2.112, 37.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.10581232110816802;  // std dev = 3.529, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1871482595557243;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.13749031449935317;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.06842697784420264;  // std dev = 5.35e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.18141908421837288;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41157023820209726;  // std dev = 0.397, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1562502746561081;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.5622968852507129;  // std dev = 0.395, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.29824115842625337;  // std dev = 1.425, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.48645962572548734;  // std dev = 0.418, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.26702419049916315;  // std dev = 0.806, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.12874300541458772;  // std dev = 2.570, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   else return -0.06419184008202626;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
Inference time using transfer learning 14.003938674926758
Refined model CLL: -0.263795


******************************************
Best model found
******************************************
Results 

CLL : -0.242308 

AUC ROC : 0.934159 

AUC PR : 0.126444 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 8.783053874969482 

Total Inference Time : 5.106554746627808 

Total revision time: 21.29126524925232
Best scored revision CLL: -0.254839


Results 

CLL : -0.242308 

AUC ROC : 0.934159 

AUC PR : 0.126444 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 21.30082654953003 

Total Inference Time : 5.106554746627808 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4494438171386719
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43273457045862546;  // std dev = 0.494, 181.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.141851064900488;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4088782817787114;  // std dev = 3.989, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | else return 0.35446010716505416;  // std dev = 5.280, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839108;  // std dev = 7.74e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31633245647733615;  // std dev = 0.493, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360615;  // std dev = 8.93e-09, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5237177905889349;  // std dev = 3.709, 115.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=99 */
%   | else return -0.25706043608941354;  // std dev = 2.139, 62.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783617;  // std dev = 5.05e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.17450164299464757;  // std dev = 3.623, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | else return 0.16703944580624777;  // std dev = 4.589, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.72e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19023590946584096;  // std dev = 3.711, 81.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=51 */
%   | | else return 0.152768494928284;  // std dev = 4.026, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.58e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08518475138839682;  // std dev = 4.59e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14418257865159387;  // std dev = 0.419, 165.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07877675473109165;  // std dev = 4.28e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.16539540636955297;  // std dev = 3.372, 73.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=51 */
%   | else return 0.017698648383147584;  // std dev = 4.329, 104.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333728;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07302331476418508;  // std dev = 5.523, 169.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06559563531311756;  // std dev = 5.411, 167.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
Inference time using transfer learning 8.48730731010437
Parameter learned model CLL:-0.282475 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 77, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.989, 26, 41], 'true,false': [5.28, 50, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.74e-08, 113, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 73, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.93e-09, 141, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.709, 16, 99], 'true,false': [2.139, 57, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.05e-08, 67, 0], 'false,false,false,false': [5.77e-08, 76, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.623, 31, 41], 'true,false': [4.589, 50, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.711, 30, 51], 'true,true,false': [4.026, 37, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.58e-08, 48, 0], 'false,false,false': [4.59e-08, 77, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.419, 61, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-08, 54, 0], 'false,false,false': [4.28e-08, 78, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.372, 22, 51], 'true,false': [4.329, 51, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 146, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.523, 65, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.411, 63, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 141, 0]}]
{'': [0.24443698299808006, -7.930164461608261e-17], 'false': [nan, -7.930164461608261e-17]}
{'': [0.24395061728395037, 5.3217302006825687e-17], 'true': [0.23746936957005924, 0.24669120526274596], 'false': [nan, 5.3217302006825687e-17], 'false,false': [nan, 5.3217302006825687e-17], 'false,false,false': [5.3054905601556156e-17, 0.0]}
{'': [0.24301940482941273, 7.716443717252861e-17], 'false': [nan, 7.716443717252861e-17], 'false,false': [nan, 7.716443717252861e-17]}
{'': [0.24230369655466866, -5.124106267500723e-17], 'true': [0.11959965874899112, 0.0738225877198361], 'false': [nan, -5.124106267500723e-17], 'false,false': [nan, -5.124106267500723e-17], 'false,false,false': [3.811213368116209e-17, 4.382459307730881e-17]}
{'': [0.18480503535961026, 4.297637514678025e-17], 'true': [0.18226628906845102, 0.1864009718545433], 'false': [nan, 4.297637514678025e-17]}
{'': [0.1756919801059463, 3.4638958368304884e-17], 'true': [0.1756919801059463, nan], 'true,true': [0.17004685456330018, 0.18010763181174178], 'false': [nan, 3.4638958368304884e-17], 'false,false': [1.3877787807814457e-17, 2.739511359464672e-17]}
{'': [0.17547352761114748, 4.2053902447922596e-17], 'true': [0.17547352761114748, nan], 'false': [nan, 4.2053902447922596e-17], 'false,false': [2.05596856412066e-18, 2.348548705937831e-17]}
{'': [0.17539628420711753, -2.3573228605054692e-17], 'true': [0.15577453230451385, 0.18017237315553233], 'false': [nan, -2.3573228605054692e-17], 'false,false': [nan, -2.3573228605054692e-17]}
{'': [0.18051786845077228, 2.7974123455122054e-17], 'true': [0.18051786845077228, nan], 'false': [nan, 2.7974123455122054e-17], 'false,false': [nan, 2.7974123455122054e-17]}
{'': [0.17530322196109666, -1.2598275456739365e-17], 'true': [0.17530322196109666, nan], 'false': [nan, -1.2598275456739365e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.855167150497437
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(D, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3737739350995134;  // std dev = 5.654, 128.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=66 */
%   | | | else return 0.524815601766179;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return 0.10044560168191438;  // std dev = 2.191, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.3342791248232567;  // std dev = 3.429, 47.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.40861318732450774;  // std dev = 4.466, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   | | | else return 0.7816289395752953;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839105;  // std dev = 8.02e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5534470773005027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.671340006603176;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5935524796546361;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1567862922303665;  // std dev = 0.948, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( complex(A, J), interaction(I, A) )
%   | | | then return 0.24531818707961664;  // std dev = 2.521, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.08549557281700099;  // std dev = 3.842, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.30613936778370426;  // std dev = 4.142, 70.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | | else return 0.1383144777215385;  // std dev = 2.273, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return -0.11231637819360618;  // std dev = 8.43e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5031439599825238;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6743496849705753;  // std dev = 0.175, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return -0.2676748979089286;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3573149642053221;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.16366405654682414;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4919962030048528;  // std dev = 0.250, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.2081879778850004;  // std dev = 5.099, 108.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=56 */
%   | | | else return 0.10044818113104494;  // std dev = 2.593, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.4739074187629725;  // std dev = 3.071, 103.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=92 */
%   | | | else return -0.23070440530911002;  // std dev = 1.753, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.2754520901232044;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.34494811071138115;  // std dev = 0.136, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.2519140515989504;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6152827670892209;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, J) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.2690568847841741;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21114994915303778;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.3863262722279424;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2600613395780272;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.261740679727805;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.19031600052642775;  // std dev = 3.107, 60.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=34 */
%   | | | else return 0.08536526883664029;  // std dev = 4.188, 103.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=54 */
%   else if ( complex(A, J) )
%   | then return -0.08518475138839685;  // std dev = 4.17e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839682;  // std dev = 5.35e-09, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, G), interaction(G, D) )
%   | | | then return 0.49403937079143334;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22607065503891327;  // std dev = 0.876, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.4125388521445466;  // std dev = 0.358, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0734501751386569;  // std dev = 2.494, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.2180793543263931;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.34346102791417904;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.05785721748600205;  // std dev = 4.087, 106.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=50 */
%   | | | else return 0.2968263041911111;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109153;  // std dev = 6.59e-09, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.2974727335196485;  // std dev = 3.117, 103.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=92 */
%   | | | else return -0.2348645708695124;  // std dev = 1.673, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.23273649682246977;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.304200393585878;  // std dev = 0.164, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.14312246223516276;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.10261387257551065;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.2339590722916676;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.0732462257633372;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.08587343731167776;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2671459937800962;  // std dev = 0.274, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, H), complex(D, I) )
%   | | | then return 0.07199043408124803;  // std dev = 1.860, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.07196534663389148;  // std dev = 2.048, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3692734405253732;  // std dev = 0.379, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.2710170583438389;  // std dev = 0.321, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.18379481643335024;  // std dev = 0.281, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.02313165103875867;  // std dev = 3.237, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   else return -0.06842697784420264;  // std dev = 5.27e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.11918802968857911;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13076741445912998;  // std dev = 1.046, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, F), complex(D, G) )
%   | | | then return 0.18630808746957192;  // std dev = 0.929, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.03772442539091051;  // std dev = 1.077, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.1306822979058726;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20469505047717976;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.167661611834991;  // std dev = 0.978, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.06865452268934077;  // std dev = 3.695, 114.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=66 */
%   else return -0.06419184008202626;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
Inference time using transfer learning 49.487016916275024
Refined model CLL: -0.196891


******************************************
Best model found
******************************************
Results 

CLL : -0.174673 

AUC ROC : 0.988987 

AUC PR : 0.41925 

Precision : 0.196078 

Recall : 0.90566 

F1 : 0.322364 

Total Learning Time : 10.855167150497437 

Total Inference Time : 7.182385444641113 

Total revision time: 22.038071870803833
Best scored revision CLL: -0.196891


Results 

CLL : -0.174673 

AUC ROC : 0.988987 

AUC PR : 0.41925 

Precision : 0.196078 

Recall : 0.90566 

F1 : 0.322364 

Total Learning Time : 22.047633171081543 

Total Inference Time : 7.182385444641113 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4990990161895752
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.49263169372019966;  // std dev = 0.482, 145.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 1.86e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3302823216249714;  // std dev = 4.483, 81.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   | else return 0.38707244508176153;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839108;  // std dev = 7.45e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3107061004343502;  // std dev = 0.491, 156.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6546366445166604;  // std dev = 0.054, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.09051383380268621;  // std dev = 4.037, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.14989434356767367;  // std dev = 3.832, 79.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
%   | else return 0.1463638266099336;  // std dev = 4.135, 88.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 5.43e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17361298623675855;  // std dev = 3.883, 85.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=53 */
%   | | else return 0.12289716184162443;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.49e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.08518475138839683;  // std dev = 4.01e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0769540039528838;  // std dev = 0.434, 167.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109175;  // std dev = 2.11e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.07877675473109172;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.030819505844221412;  // std dev = 4.317, 101.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=53 */
%   | else return 0.06373957949606744;  // std dev = 3.694, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09187598458445959;  // std dev = 5.281, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04307884124493437;  // std dev = 5.490, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning 8.176162481307983
Parameter learned model CLL:-0.266059 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.482, 53, 92], 'false,true': [0.0, 0, 0], 'false,false': [1.86e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.483, 37, 44], 'true,false': [4.382, 32, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-08, 95, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 64, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.054, 0, 70], 'true,false': [4.037, 64, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.94e-08, 57, 0], 'false,false,false,false': [5.58e-08, 73, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.832, 35, 44], 'true,false': [4.135, 40, 48], 'false,true': [0.0, 0, 0], 'false,false': [5.43e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.883, 32, 53], 'true,true,false': [3.657, 31, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.49e-08, 59, 0], 'false,false,false': [4.01e-08, 66, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.434, 75, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 59, 0], 'false,false,false': [2.79e-08, 63, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.317, 48, 53], 'true,false': [3.694, 33, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.281, 61, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.49, 69, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 113, 0]}]
{'': [0.23191438763377173, 0.0], 'false': [nan, 0.0]}
{'': [0.24489795918367374, 5.551115123125783e-17], 'true': [0.24813290656912004, 0.2399999999999995], 'false': [nan, 5.551115123125783e-17], 'false,false': [nan, 5.551115123125783e-17], 'false,false,false': [5.843279076974508e-17, -5.742532885992189e-18]}
{'': [0.24151290729942815, 6.69962170032422e-17], 'false': [nan, 6.69962170032422e-17], 'false,false': [nan, 6.69962170032422e-17]}
{'': [0.2418521884054409, -3.586874387250506e-17], 'true': [4.111296016472263e-05, 0.18952485888235815], 'false': [nan, -3.586874387250506e-17], 'false,false': [nan, -3.586874387250506e-17], 'false,false,false': [2.7268635692547703e-17, 4.258389683493751e-17]}
{'': [0.19033019635075485, 3.142140635731575e-17], 'true': [0.18590169785981217, 0.19429988381941826], 'false': [nan, 3.142140635731575e-17]}
{'': [0.1841689996726254, 3.4638958368304884e-17], 'true': [0.1841689996726254, nan], 'true,true': [0.17734433558752624, 0.19104558815178757], 'false': [nan, 3.4638958368304884e-17], 'false,false': [2.069907334046902e-17, 2.4391263419795106e-17]}
{'': [0.1884921066656078, 4.0950849268960694e-17], 'true': [0.1884921066656078, nan], 'false': [nan, 4.0950849268960694e-17], 'false,false': [7.526935760170553e-18, 1.2335811384723961e-17]}
{'': [0.1868726348710098, -9.100188726435709e-18], 'true': [0.18449732518159903, 0.18957196792805578], 'false': [nan, -9.100188726435709e-18], 'false,false': [nan, -9.100188726435709e-18]}
{'': [0.1822640743997969, 2.5620531337503614e-17], 'true': [0.1822640743997969, nan], 'false': [nan, 2.5620531337503614e-17], 'false,false': [nan, 2.5620531337503614e-17]}
{'': [0.18717622631426903, -1.7193719407911715e-17], 'true': [0.18717622631426903, nan], 'false': [nan, -1.7193719407911715e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.904656648635864
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3152917922423695;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.4226650641317692;  // std dev = 3.904, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | | | else return 0.6081489350995123;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7341717694960774;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A), complex(A, G) )
%   | | | then return 0.21629273633025428;  // std dev = 3.815, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.3650585138337917;  // std dev = 4.449, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   else if ( interaction(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5517340137373213;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, E), enzyme(A, F) )
%   | | | then return -0.039997624422351476;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.29761930104562695;  // std dev = 3.578, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.23729517853224386;  // std dev = 2.074, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.5944244674334135;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.4317296587923951;  // std dev = 1.419, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.1456675982775655;  // std dev = 4.104, 74.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   else return -0.11231637819360617;  // std dev = 8.64e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.4159771789052135;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5014589385147332;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6905836404625025;  // std dev = 0.290, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.6344933821484546;  // std dev = 0.176, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), complex(A, K) )
%   | | | then return -0.29272737359049955;  // std dev = 0.137, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.33945333513731074;  // std dev = 0.272, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.45195476804482126;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12046654061560913;  // std dev = 2.703, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   else return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.3615351138894434;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, D), complex(A, G) )
%   | | | then return 0.14244905907488645;  // std dev = 1.172, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.07767920393877588;  // std dev = 1.786, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.31311986746135245;  // std dev = 3.583, 99.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=73 */
%   | | | else return -0.2758339506631795;  // std dev = 0.323, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.05271874538759049;  // std dev = 0.455, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05704311063751544;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926101;  // std dev = 3.48e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), location(A, F) )
%   | | then return 0.2528297987130455;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G), phenotype(G, H) )
%   | | | then return 0.2984762456543188;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3189187174641606;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.22360720539096554;  // std dev = 3.913, 111.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=76 */
%   | | | else return -0.2296754447606284;  // std dev = 0.377, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.13877189844369017;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( complex(A, K) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839683;  // std dev = 4.27e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839685;  // std dev = 4.06e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then return 0.2206213222023555;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.23944236267011024;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3515919915819855;  // std dev = 0.175, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, G), enzyme(A, I) )
%   | | | then return 0.161263763775321;  // std dev = 1.288, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.08679349706602409;  // std dev = 1.923, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09934528816402191;  // std dev = 3.004, 81.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=47 */
%   | | | else return 0.19413148299364014;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else if ( complex(A, K) )
%   | then return -0.07877675473109176;  // std dev = 2.28e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07877675473109179;  // std dev = 9.31e-10, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), location(D, G) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.2676260462057834;  // std dev = 0.777, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04115193328941297;  // std dev = 1.625, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( complex(D, J) )
%   | | | then return 0.322699718930047;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37704842840965885;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( location(A, L), interaction(M, A) )
%   | | | then return 0.20613456712595798;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.30677747047744897;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return -0.14920585279737889;  // std dev = 1.289, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0667652421297856;  // std dev = 3.593, 92.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=50 */
%   else return -0.07324622576333685;  // std dev = 6.04e-09, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.3313013075425376;  // std dev = 0.428, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.07336872561574112;  // std dev = 1.014, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( enzyme(H, E), interaction(H, H) )
%   | | | then return -0.343894226397907;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.3901448804694796;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1849758305548516;  // std dev = 3.066, 89.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=71 */
%   | | | else return -0.23168970197970393;  // std dev = 0.428, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.4008412034283932;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, K) )
%   | then return -0.06842697784420271;  // std dev = 1.86e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06842697784420268;  // std dev = 3.09e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.06955409659960012;  // std dev = 0.537, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2832282650661023;  // std dev = 1.086, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | else if ( phenotype(G, D), interaction(G, G) )
%   | | | then return -0.2721657517453047;  // std dev = 0.625, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.4963497083328841;  // std dev = 0.267, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.15837060588207016;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20545819763179038;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.005883731800580025;  // std dev = 2.015, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.07886412858281637;  // std dev = 2.407, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   else return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
Inference time using transfer learning 20.516555547714233
Refined model CLL: -0.199596


******************************************
Best model found
******************************************
Results 

CLL : -0.218821 

AUC ROC : 0.985161 

AUC PR : 0.259003 

Precision : 0.102864 

Recall : 0.98556 

F1 : 0.186285 

Total Learning Time : 5.904656648635864 

Total Inference Time : 3.671470880508423 

Total revision time: 13.132565259933472
Best scored revision CLL: -0.199596


Results 

CLL : -0.218821 

AUC ROC : 0.985161 

AUC PR : 0.259003 

Precision : 0.102864 

Recall : 0.98556 

F1 : 0.186285 

Total Learning Time : 13.142126560211182 

Total Inference Time : 3.671470880508423 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7847211360931396
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3890131326303742;  // std dev = 0.499, 162.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.31841430548798494;  // std dev = 5.871, 138.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=71 */
%   | else return 0.42892155186479686;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32706205644906844;  // std dev = 0.492, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6551516664446582;  // std dev = 1.395, 73.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   | else return -0.07995352322461356;  // std dev = 3.292, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1218471971154075;  // std dev = 4.915, 138.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=71 */
%   | else return 0.30089206043854405;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926083;  // std dev = 6.59e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.09213647344304048;  // std dev = 5.295, 151.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=78 */
%   | | else return 0.19253510389733033;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.08518475138839694;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13572194766514123;  // std dev = 0.432, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.11419849964588831;  // std dev = 4.709, 130.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=78 */
%   | else return -0.07112999386217099;  // std dev = 2.121, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.23e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03126618864061976;  // std dev = 5.458, 163.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.75e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.058742974957768944;  // std dev = 5.221, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 27.144110918045044
Parameter learned model CLL:-0.260287 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 76, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.871, 67, 71], 'true,false': [2.372, 9, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 103, 0], 'false,false,false,false': [0.0, 18, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 62, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.395, 2, 71], 'true,false': [3.292, 46, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.83e-08, 92, 0], 'false,false,false,false': [0.0, 19, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.915, 67, 71], 'true,false': [2.372, 9, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.295, 73, 78], 'true,true,false': [1.792, 6, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 84, 0], 'false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.432, 59, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 93, 0], 'false,false,false': [0.0, 16, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.709, 52, 78], 'true,false': [2.121, 14, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.23e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.458, 77, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 100, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.221, 65, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 108, 0]}]
{'': [0.24904740131077768, 7.91446116564468e-17], 'false': [nan, 7.91446116564468e-17]}
{'': [0.2490474013107749, -3.670158759091427e-18], 'true': [0.24978996009241766, 0.23437500000000053], 'false': [nan, -3.670158759091427e-18], 'false,false': [nan, -3.670158759091427e-18], 'false,false,false': [-1.0778864316749092e-17, -3.0839528461809902e-18]}
{'': [0.24250450484794742, 7.162729191130042e-17], 'false': [nan, 7.162729191130042e-17], 'false,false': [nan, 7.162729191130042e-17]}
{'': [0.22941936504638769, -8.001607384685813e-18], 'true': [0.02664665040345224, 0.1776958708278115], 'false': [nan, -8.001607384685813e-18], 'false,false': [nan, -8.001607384685813e-18], 'false,false,false': [2.5342047301226398e-17, -5.843279076974508e-18]}
{'': [0.18788119936226136, 4.404190510909712e-17], 'true': [0.17504612645975484, 0.23437499999999978], 'false': [nan, 4.404190510909712e-17]}
{'': [0.19014199371404014, 3.112774835397635e-17], 'true': [0.19014199371404014, nan], 'true,true': [0.18565213941438233, 0.22934365734698728], 'false': [nan, 3.112774835397635e-17], 'false,false': [2.9077269692563625e-17, -6.033820786006285e-18]}
{'': [0.18633357657264563, 3.564936317603714e-17], 'true': [0.18633357657264563, nan], 'false': [nan, 3.564936317603714e-17], 'false,false': [3.1038493161563513e-17, -8.673617379884035e-19]}
{'': [0.17972986128193139, 1.101047627727428e-17], 'true': [0.17057741292630907, 0.20443708588122347], 'false': [nan, 1.101047627727428e-17], 'false,false': [nan, 1.101047627727428e-17]}
{'': [0.18274707740282203, 2.3314683517128286e-17], 'true': [0.18274707740282203, nan], 'false': [nan, 2.3314683517128286e-17], 'false,false': [nan, 2.3314683517128286e-17]}
{'': [0.1805239808822414, -1.644774851296528e-17], 'true': [0.1805239808822414, nan], 'false': [nan, -1.644774851296528e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.66745138168335
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.41912454485560896;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.2722903492409258;  // std dev = 4.901, 99.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=41 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.7350122940520397;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7251239146986218;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.017297220781437538;  // std dev = 1.283, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2594592805791185;  // std dev = 2.851, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.38200804517753845;  // std dev = 4.462, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   | | | else return 0.6788138187522679;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(L, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then return 0.214392839600717;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, A), complex(D, H) )
%   | | | then return 0.6121216914648566;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5628794688141954;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.4017919454352277;  // std dev = 1.286, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.24430853970856017;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.3130355528204945;  // std dev = 5.157, 109.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=62 */
%   | | | else return 0.7416207773699995;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360636;  // std dev = 2.95e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1123163781936062;  // std dev = 8.01e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then return 0.5090292876958346;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.4113416757896979;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4418089549967658;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.0910928597936762;  // std dev = 0.854, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.18923036687771772;  // std dev = 2.158, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3798485623275095;  // std dev = 2.461, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return 0.2371682729768011;  // std dev = 4.099, 69.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   else if ( interaction(M, A) )
%   | then return -0.10159632948783621;  // std dev = 5.59e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), complex(A, G) )
%   | | | then return 0.36867013232841667;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3260702706656476;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5214369587468622;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, H) )
%   | | | then return -0.2511248643470618;  // std dev = 0.669, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.1321569162978372;  // std dev = 4.655, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3967733608807142;  // std dev = 1.807, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.13699985644282914;  // std dev = 1.741, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.09269127618926105;  // std dev = 2.28e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.31376837099015265;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G) )
%   | | | then return -0.07925534767099249;  // std dev = 2.544, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.27637510619237865;  // std dev = 1.120, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I), phenotype(H, J) )
%   | | | then return 0.07054624883105608;  // std dev = 0.953, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3772483726122854;  // std dev = 1.113, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.18033739680018884;  // std dev = 3.517, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | | else return 0.1067678971137804;  // std dev = 2.648, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   else if ( interaction(L, A) )
%   | then return -0.0851847513883968;  // std dev = 5.74e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.08518475138839685;  // std dev = 2.63e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.285831520147788;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2103362685213385;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07791630710444646;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return 0.06493542563401533;  // std dev = 3.240, 47.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | | else return -0.09539887854970985;  // std dev = 2.733, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.028979417031959463;  // std dev = 1.828, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.15772202123533793;  // std dev = 3.177, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   else if ( interaction(L, A) )
%   | then return -0.07877675473109165;  // std dev = 5.02e-09, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( phenotype(E, F), complex(A, G) )
%   | | | then return 0.22270596688005895;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17298331660780095;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3666994967358697;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26247184117225303;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.30610521339334085;  // std dev = 1.470, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.05301882891443906;  // std dev = 1.131, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.06779468021126321;  // std dev = 1.946, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.06199421318931864;  // std dev = 4.685, 90.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=50 */
%   else return -0.0732462257633371;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.36900582947895916;  // std dev = 2.246, 74.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=69 */
%   | | | else return -0.20538235341331101;  // std dev = 2.987, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.5112217378308965;  // std dev = 0.292, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.3892729422271276;  // std dev = 0.282, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A) )
%   | | then return -0.13319935708972022;  // std dev = 1.020, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.3941396579105044;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I) )
%   | | then return -0.06842697784420271;  // std dev = 1.61e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06842697784420271;  // std dev = 1.61e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( complex(D, F), location(D, E) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.28145198426615287;  // std dev = 0.837, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.058041446855373525;  // std dev = 2.343, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | else if ( interaction(I, D), enzyme(I, J) )
%   | | | then return -0.05803945429815944;  // std dev = 2.052, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.03084479301959455;  // std dev = 2.438, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then return 4.0171950505311454E-4;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.21099721450776318;  // std dev = 1.494, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.5538463537615137;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 31.075013875961304
Refined model CLL: -0.251699


******************************************
Best model found
******************************************
Results 

CLL : -0.254957 

AUC ROC : 0.940948 

AUC PR : 0.140817 

Precision : 0.059776 

Recall : 0.848057 

F1 : 0.11168 

Total Learning Time : 7.66745138168335 

Total Inference Time : 3.8167927265167236 

Total revision time: 15.8541841506958
Best scored revision CLL: -0.251699


Results 

CLL : -0.254957 

AUC ROC : 0.940948 

AUC PR : 0.140817 

Precision : 0.059776 

Recall : 0.848057 

F1 : 0.11168 

Total Learning Time : 15.86374545097351 

Total Inference Time : 3.8167927265167236 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.6572329998016357
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.39189126638785327;  // std dev = 0.499, 163.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.38502775357935276;  // std dev = 5.858, 141.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=82 */
%   | else return 0.25801292443686386;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2740881119101444;  // std dev = 0.499, 162.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6003075251983966;  // std dev = 2.540, 89.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=82 */
%   | else return -0.228858465330845;  // std dev = 2.191, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17632292999985066;  // std dev = 5.007, 144.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=82 */
%   | else return 0.46545648137393425;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926085;  // std dev = 6.59e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.17627980194002535;  // std dev = 4.880, 140.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=86 */
%   | | else return 0.6546200060522189;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0831006851670414;  // std dev = 0.421, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.0787767547310916;  // std dev = 5.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.06757112557664925;  // std dev = 5.218, 153.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=86 */
%   | else return 0.47544202383048473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.06e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.007670468009586435;  // std dev = 5.615, 167.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.27e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.056849744087503054;  // std dev = 5.220, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.46e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
Inference time using transfer learning 18.801276922225952
Parameter learned model CLL:-0.259766 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 76, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.858, 59, 82], 'true,false': [1.651, 6, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 105, 0], 'false,false,false,false': [5.27e-09, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 75, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.54, 7, 82], 'true,false': [2.191, 51, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27e-08, 89, 0], 'false,false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.007, 62, 82], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.88, 54, 86], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.14e-08, 114, 0], 'false,false,false': [3.73e-09, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.421, 70, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.77e-08, 99, 0], 'false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.218, 67, 86], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.06e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.615, 80, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.22, 64, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.46e-09, 110, 0]}]
{'': [0.24886145507922985, 7.703588334133739e-17], 'false': [nan, 7.703588334133739e-17]}
{'': [0.24476281163434951, -5.9476233462061954e-18], 'true': [0.2433479201247435, 0.24793388429752075], 'false': [nan, -5.9476233462061954e-18], 'false,false': [nan, -5.9476233462061954e-18], 'false,false,false': [-8.458842092382146e-18, 3.96508223080413e-18]}
{'': [0.24855195805984445, 6.344131569286608e-17], 'false': [nan, 6.344131569286608e-17], 'false,false': [nan, 6.344131569286608e-17]}
{'': [0.24055104801113747, 2.5069552168955147e-17], 'true': [0.07246559777805636, 0.08569412631703134], 'false': [nan, 2.5069552168955147e-17], 'false,false': [nan, 2.5069552168955147e-17], 'false,false,false': [3.118604001756058e-17, 0.0]}
{'': [0.1791572897349169, 4.291618414517412e-17], 'true': [0.17407027599876393, 0.20408163265306123], 'false': [nan, 4.291618414517412e-17]}
{'': [0.17051523476445538, 3.429957311850077e-17], 'true': [0.17051523476445538, nan], 'true,true': [0.17011043937337003, 0.0], 'false': [nan, 3.429957311850077e-17], 'false,false': [3.311191476952221e-17, 1.5419764230904951e-18]}
{'': [0.1770963688428713, 3.700743415417188e-17], 'true': [0.1770963688428713, nan], 'false': [nan, 3.700743415417188e-17], 'false,false': [3.364312195833808e-17, -7.709882115452476e-19]}
{'': [0.17786484018966206, 1.6917684184764292e-17], 'true': [0.17794710438344538, 0.0], 'false': [nan, 1.6917684184764292e-17], 'false,false': [nan, 1.6917684184764292e-17]}
{'': [0.18881098032864063, 2.818258447125397e-17], 'true': [0.18881098032864063, nan], 'false': [nan, 2.818258447125397e-17], 'false,false': [nan, 2.818258447125397e-17]}
{'': [0.18042095287309834, 6.560408781875925e-18], 'true': [0.18042095287309834, nan], 'false': [nan, 6.560408781875925e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.124728918075562
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, A), phenotype(A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_proteinclass(D, B), enzyme(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.3781489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.5074995844501616;  // std dev = 4.187, 77.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=50 */
%   else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.20348313992679298;  // std dev = 0.129, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.7700336546205394;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.27879419609434425;  // std dev = 3.100, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.3902661820753983;  // std dev = 4.780, 96.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839108;  // std dev = 7.60e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, F) )
%   | | then if ( interaction(A, G), complex(E, H) )
%   | | | then return 0.7017644518509327;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.39007107816818093;  // std dev = 2.293, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5828022502493909;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.25042118359621357;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3529592713290435;  // std dev = 4.316, 85.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=54 */
%   | | | else return -0.2747218569485158;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.4878708114506339;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, L) )
%   | then return -0.11231637819360628;  // std dev = 5.59e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return 0.380890304198931;  // std dev = 2.013, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.12037867684838971;  // std dev = 2.031, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.23458822266157148;  // std dev = 1.133, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.060991671976706865;  // std dev = 3.217, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6347928585856616;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.27870581776604747;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.45079555469456284;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2664513534392449;  // std dev = 3.129, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   else return -0.10159632948783626;  // std dev = 4.75e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G), interaction(F, H) )
%   | | | then return 0.37187797593394184;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6157184475685202;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.25601891025887563;  // std dev = 0.863, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.10630868773151765;  // std dev = 1.956, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), interaction(M, J) )
%   | | | then return 0.2210383518412136;  // std dev = 3.217, 50.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   | | | else return 0.45917300469663513;  // std dev = 1.272, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(A, N), location(N, P) )
%   | | | then return 0.29530682431794614;  // std dev = 1.071, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1432317972640084;  // std dev = 2.770, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   else return -0.09269127618926096;  // std dev = 5.10e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0.2899433461563254;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40988234362822984;  // std dev = 0.167, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.30477451231358693;  // std dev = 0.249, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.12333207342530975;  // std dev = 5.262, 133.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0851847513883969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.08518475138839689;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08518475138839685;  // std dev = 3.07e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(A, F), complex(D, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return -0.004494475855712471;  // std dev = 1.460, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.17550432056423518;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, I), complex(D, J) )
%   | | | then return 0.45389642452405726;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.26786237671318586;  // std dev = 1.718, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2879320414087819;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3372666944996697;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), interaction(A, N) )
%   | | | then return -0.029757011279972243;  // std dev = 2.117, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.05813836674284144;  // std dev = 4.017, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   else return -0.07877675473109155;  // std dev = 6.18e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( location(F, G) )
%   | | | then return 0.03337879114492867;  // std dev = 3.623, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return -0.3385125756106424;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(A, H) )
%   | | | then return 0.11245113740041782;  // std dev = 3.668, 68.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=43 */
%   | | | else return 0.4053023390246885;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4669297523672006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.07324622576333706;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.04534676435045318;  // std dev = 1.910, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.30622649872175817;  // std dev = 1.206, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2374562843686264;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06574220914401767;  // std dev = 3.821, 65.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J), location(A, K) )
%   | | | then return -0.1349038241889406;  // std dev = 0.359, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.015453219431960893;  // std dev = 0.608, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.4774091232007575;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15586295138910403;  // std dev = 2.356, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   else return -0.06842697784420265;  // std dev = 5.02e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.22517122524701594;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3061636993271187;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.027395233599470936;  // std dev = 0.798, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.24432862903062208;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.28016127749599185;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.051340173233163956;  // std dev = 2.442, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.023320039811478805;  // std dev = 4.749, 108.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=61 */
%   else return -0.06419184008202626;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
Inference time using transfer learning 13.106655359268188
Refined model CLL: -0.305292


******************************************
Best model found
******************************************
Results 

CLL : -0.252476 

AUC ROC : 0.962344 

AUC PR : 0.079366 

Precision : 0.108428 

Recall : 0.875887 

F1 : 0.192969 

Total Learning Time : 10.124728918075562 

Total Inference Time : 3.473545789718628 

Total revision time: 21.03894543647766
Best scored revision CLL: -0.259766


Results 

CLL : -0.252476 

AUC ROC : 0.962344 

AUC PR : 0.079366 

Precision : 0.108428 

Recall : 0.875887 

F1 : 0.192969 

Total Learning Time : 21.048550844192505 

Total Inference Time : 3.473545789718628 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.2351186275482178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4490580260086004;  // std dev = 0.492, 176.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3632491039924567;  // std dev = 6.532, 174.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=99 */
%   | else return 0.29428358675107574;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839116;  // std dev = 7.30e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32022729353587825;  // std dev = 0.492, 176.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360615;  // std dev = 8.84e-09, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5691923080285063;  // std dev = 3.014, 109.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=99 */
%   | else return -0.2635128721986568;  // std dev = 2.183, 68.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.16440150544017776;  // std dev = 5.490, 174.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=99 */
%   | else return 0.5643808948485822;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892608;  // std dev = 6.84e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.09372382695766579;  // std dev = 5.850, 192.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=102 */
%   | | else return 0.29906084639927233;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.83e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.16248934853298808;  // std dev = 0.408, 162.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109154;  // std dev = 7.52e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09903318361426156;  // std dev = 5.325, 166.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=102 */
%   | else return 0.49350358462879484;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.031800265581131006;  // std dev = 5.761, 183.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05056959918827513;  // std dev = 5.455, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
Inference time using transfer learning 21.772398710250854
Parameter learned model CLL:-0.27265 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 72, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 143, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.532, 75, 99], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 136, 0], 'false,false,false,false': [0.0, 12, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 72, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.84e-09, 143, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.014, 10, 99], 'true,false': [2.183, 63, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 114, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.49, 75, 99], 'true,false': [0.913, 1, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.85, 90, 102], 'true,true,false': [0.755, 1, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.83e-08, 131, 0], 'false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.408, 58, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.52e-08, 132, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.325, 64, 102], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.761, 79, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.455, 73, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 143, 0]}]
{'': [0.24173553719008575, -9.006004955001269e-17], 'false': [nan, -9.006004955001269e-17]}
{'': [0.24574669187145629, 2.100421938480026e-17], 'true': [0.24524375743162818, 0.25], 'false': [nan, 2.100421938480026e-17], 'false,false': [nan, 2.100421938480026e-17], 'false,false,false': [3.918434204559376e-17, -4.625929269271485e-18]}
{'': [0.24169575424599873, 7.763797375001094e-17], 'false': [nan, 7.763797375001094e-17], 'false,false': [nan, 7.763797375001094e-17]}
{'': [0.2422929070957983, -1.8978171361113787e-17], 'true': [0.08332631933339081, 0.07009923939748164], 'false': [nan, -1.8978171361113787e-17], 'false,false': [nan, -1.8978171361113787e-17], 'false,false,false': [-1.1686558153949016e-17, -1.1564823173178713e-18]}
{'': [0.17722632523157145, 4.5818728000403283e-17], 'true': [0.173215522063395, 0.13888888888888903], 'false': [nan, 4.5818728000403283e-17]}
{'': [0.17903170870480054, 3.5626559745434126e-17], 'true': [0.17903170870480054, nan], 'true,true': [0.1782132089147822, 0.18990106973670087], 'false': [nan, 3.5626559745434126e-17], 'false,false': [3.559493666737143e-17, 0.0]}
{'': [0.1666545737556594, 4.244970388272657e-17], 'true': [0.1666545737556594, nan], 'false': [nan, 4.244970388272657e-17], 'false,false': [4.289498049688105e-17, 0.0]}
{'': [0.1705971270770476, -2.0371064672021222e-18], 'true': [0.17080005108744878, 0.0], 'false': [nan, -2.0371064672021222e-18], 'false,false': [nan, -2.0371064672021222e-18]}
{'': [0.181369100482508, 2.9341608507950566e-17], 'true': [0.181369100482508, nan], 'false': [nan, 2.9341608507950566e-17], 'false,false': [nan, 2.9341608507950566e-17]}
{'': [0.16813497613161207, -1.2422075800001751e-17], 'true': [0.16813497613161207, nan], 'false': [nan, -1.2422075800001751e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.057974576950073
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, D) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, F), location(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8248156017661784;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.4891013160518926;  // std dev = 4.423, 84.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=53 */
%   else return -0.14185106490048785;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.7313730497173961;  // std dev = 0.071, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.36898584381831234;  // std dev = 5.600, 142.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=82 */
%   | | | else return 0.7574838189643657;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return -0.12544463852839105;  // std dev = 8.30e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, A), phenotype(A, E) )
%   | | | then return 0.6131275684997737;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5524261025068926;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, F), interaction(G, A) )
%   | | | then return 0.6615556992768575;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5765341419250196;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.2765175081156427;  // std dev = 2.459, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.0913566872403533;  // std dev = 2.620, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.374207311492028;  // std dev = 3.847, 71.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   | | | else return 0.21606786241614948;  // std dev = 2.095, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else return -0.1123163781936062;  // std dev = 8.23e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( location(A, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.4352971423643645;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.47243744100476115;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return -0.007441490700320132;  // std dev = 2.052, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.22469850958833734;  // std dev = 3.306, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5194801546780192;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.20143960700176003;  // std dev = 2.514, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.3357455428745753;  // std dev = 3.001, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   else if ( interaction(J, A) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3461200417085129;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5576135074619131;  // std dev = 0.338, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( enzyme(D, G), complex(D, H) )
%   | | | then return 0.3036411539292999;  // std dev = 1.918, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.10404093298390044;  // std dev = 4.088, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3230849139654467;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.41719314381911154;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.31824240413358423;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08063383516680651;  // std dev = 2.222, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else return -0.09269127618926085;  // std dev = 6.59e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.19169594069035256;  // std dev = 2.312, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | | | else return -0.001171115159012704;  // std dev = 1.806, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.45378530085346364;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.27085362562052046;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3743592297746728;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.10878138535685976;  // std dev = 2.387, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.00881855644199494;  // std dev = 4.216, 80.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=35 */
%   else if ( interaction(L, A) )
%   | then return -0.0851847513883968;  // std dev = 5.89e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.0851847513883969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.2800153469363429;  // std dev = 0.206, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.056095584781464564;  // std dev = 2.496, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.27030020320829473;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07668587887037102;  // std dev = 2.079, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2479184561419827;  // std dev = 3.570, 74.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | | else return -0.44605029026574466;  // std dev = 0.175, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.1325354276058414;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09188070859275269;  // std dev = 1.227, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07877675473109154;  // std dev = 6.38e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( complex(A, G), enzyme(E, H) )
%   | | | then return -0.005038487601171116;  // std dev = 1.855, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return 0.18903299207418847;  // std dev = 2.419, 45.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | else if ( location(A, I) )
%   | | | then return -0.024869984944501003;  // std dev = 4.542, 103.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=50 */
%   | | | else return 0.32776806883359194;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3445672727113489;  // std dev = 0.103, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(A, J) )
%   | | then return -0.07324622576333707;  // std dev = 2.46e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(J, J) )
%   | | | then return -0.07324622576333709;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333707;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.1837323002088736;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15236821679047194;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2643316953081653;  // std dev = 0.185, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18291185110141076;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I), complex(H, J) )
%   | | | then return -0.23731282300205073;  // std dev = 2.084, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.010386535175501373;  // std dev = 2.553, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.043078411131483516;  // std dev = 4.097, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | | | else return -0.09080781074240821;  // std dev = 2.352, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   else return -0.06842697784420265;  // std dev = 5.19e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.30207864860765665;  // std dev = 2.298, 70.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | | | else return -0.05679564901326627;  // std dev = 3.520, 72.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=34 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.24652320196010274;  // std dev = 0.237, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.38531054080880917;  // std dev = 0.299, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.15056739827975268;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.030143640977213716;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.2144413863389895;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( phenotype(A, K) )
%   | then return -0.06419184008202626;  // std dev = 2.08e-09, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
Inference time using transfer learning 32.93320608139038
Refined model CLL: -0.238432


******************************************
Best model found
******************************************
Results 

CLL : -0.22263 

AUC ROC : 0.966629 

AUC PR : 0.276237 

Precision : 0.074905 

Recall : 0.818868 

F1 : 0.137255 

Total Learning Time : 10.057974576950073 

Total Inference Time : 7.676620006561279 

Total revision time: 24.609385013580322
Best scored revision CLL: -0.238432


Results 

CLL : -0.22263 

AUC ROC : 0.966629 

AUC PR : 0.276237 

Precision : 0.074905 

Recall : 0.818868 

F1 : 0.137255 

Total Learning Time : 24.618990421295166 

Total Inference Time : 7.676620006561279 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8425052165985107
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3838632208137952;  // std dev = 0.499, 175.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.54e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4047320707788173;  // std dev = 4.517, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else return 0.3587861248328698;  // std dev = 4.276, 74.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3119616603913822;  // std dev = 0.495, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.659959669722556;  // std dev = 0.990, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | else return -0.08145080755975494;  // std dev = 4.052, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2258245893578552;  // std dev = 4.112, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else return 0.15314549427674087;  // std dev = 3.530, 74.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926072;  // std dev = 7.09e-09, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16079681553373776;  // std dev = 4.782, 122.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=72 */
%   | | else return 0.08648098741273048;  // std dev = 2.578, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.83e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.08518475138839685;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12824723374950092;  // std dev = 0.426, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15680439200561958;  // std dev = 4.329, 108.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=72 */
%   | else return 0.04673534671357735;  // std dev = 2.528, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07734695972466751;  // std dev = 5.209, 150.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06098902159910955;  // std dev = 5.179, 150.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 34.37438726425171
Parameter learned model CLL:-0.281311 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 83, 92], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.517, 34, 51], 'true,false': [4.276, 33, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 89, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 68, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.99, 1, 70], 'true,false': [4.052, 67, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.59e-08, 62, 0], 'false,false,false,false': [3.65e-08, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.112, 34, 51], 'true,false': [3.53, 33, 41], 'false,true': [0.0, 0, 0], 'false,false': [7.09e-09, 144, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.782, 50, 72], 'true,true,false': [2.578, 18, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.83e-08, 81, 0], 'false,false,false': [2.98e-08, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.426, 62, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.07e-08, 65, 0], 'false,false,false': [3.33e-08, 68, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.329, 36, 72], 'true,false': [2.528, 17, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.209, 58, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.179, 58, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 112, 0]}]
{'': [0.24933877551020658, 7.259150545626024e-17], 'false': [nan, 7.259150545626024e-17]}
{'': [0.2438194691665684, -3.7634678800852764e-18], 'true': [0.23999999999999813, 0.2470781592403222], 'false': [nan, -3.7634678800852764e-18], 'false,false': [nan, -3.7634678800852764e-18], 'false,false,false': [-1.7464182409833923e-17, -7.656710514656252e-18]}
{'': [0.24473304020411546, 6.618637262188433e-17], 'false': [nan, 6.618637262188433e-17], 'false,false': [nan, 6.618637262188433e-17]}
{'': [0.244422337189616, -1.5313421029312504e-17], 'true': [0.013794515331686281, 0.18448161613584627], 'false': [nan, -1.5313421029312504e-17], 'false,false': [nan, -1.5313421029312504e-17], 'false,false,false': [3.40229636578677e-17, 2.4671622769447922e-17]}
{'': [0.18604903418394117, 4.7801269115805354e-17], 'true': [0.1989243724147509, 0.16843594952389046], 'false': [nan, 4.7801269115805354e-17]}
{'': [0.18542095766065234, 3.5059674461847047e-17], 'true': [0.18542095766065234, nan], 'true,true': [0.18740267327778207, 0.17484744026059676], 'false': [nan, 3.5059674461847047e-17], 'false,false': [2.878355989768924e-17, 1.708035422500241e-17]}
{'': [0.18163405701629937, 4.2572461846528557e-17], 'true': [0.18163405701629937, nan], 'false': [nan, 4.2572461846528557e-17], 'false,false': [1.4518301091252048e-17, 1.6326809185664067e-17]}
{'': [0.17563230323398948, -9.40866970021319e-18], 'true': [0.17352036551664723, 0.17277314694442683], 'false': [nan, -9.40866970021319e-18], 'false,false': [nan, -9.40866970021319e-18]}
{'': [0.18087413421926524, 2.6122894697062506e-17], 'true': [0.18087413421926524, nan], 'false': [nan, 2.6122894697062506e-17], 'false,false': [nan, 2.6122894697062506e-17]}
{'': [0.17882634185580662, -1.734723475976807e-17], 'true': [0.17882634185580662, nan], 'false': [nan, -1.734723475976807e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.89546799659729
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.30814893509951113;  // std dev = 3.854, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.44256451951509584;  // std dev = 4.324, 77.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7563676228571746;  // std dev = 0.161, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.42029521651146107;  // std dev = 5.325, 123.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=76 */
%   | | | else return -0.1975764193060685;  // std dev = 0.118, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.04534257995369262;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( interaction(G, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5462383706401287;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6275115036738494;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.2435609263578307;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.21776967377059575;  // std dev = 1.722, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6605319516321105;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3045459656463376;  // std dev = 5.209, 119.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=66 */
%   else if ( phenotype(A, I) )
%   | then return -0.11231637819360633;  // std dev = 3.48e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, J) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.4107768313081489;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41077683130814896;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, F), complex(A, G) )
%   | | | then return 0.5177687193093071;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46654797441112605;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.16345979169423897;  // std dev = 0.956, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.18173432199177517;  // std dev = 3.721, 62.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.4354142642208431;  // std dev = 1.610, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.21597776918042796;  // std dev = 3.805, 62.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   else return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.3407894263189651;  // std dev = 0.847, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.6066997477375687;  // std dev = 0.310, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12898896743201047;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.33130287949389803;  // std dev = 0.221, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.23460141678188817;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.02599467093987473;  // std dev = 2.085, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.42438706129558545;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18229329945800649;  // std dev = 3.928, 68.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   else return -0.09269127618926087;  // std dev = 5.74e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.256336427321548;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(E, F), interaction(G, A) )
%   | | | then return -0.04488863429528005;  // std dev = 1.621, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.07734692564281556;  // std dev = 1.891, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H), complex(A, J) )
%   | | | then return 0.0423848171736063;  // std dev = 1.086, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.4263348804830332;  // std dev = 1.223, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.09311896222858693;  // std dev = 1.117, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17337820432459658;  // std dev = 3.729, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   else if ( interaction(A, M) )
%   | then return -0.08518475138839679;  // std dev = 3.36e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.08518475138839679;  // std dev = 2.46e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2267360392463482;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04456720247970108;  // std dev = 1.526, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, H), phenotype(D, H) )
%   | | | then return 0.45079191205068236;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1653476134775648;  // std dev = 3.651, 91.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3987375113241136;  // std dev = 0.289, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3786054570301148;  // std dev = 0.363, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.026940933823266355;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.18666520465032094;  // std dev = 1.667, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else return -0.07877675473109157;  // std dev = 5.96e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.2371008478504356;  // std dev = 0.741, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4349452989009869;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.3385089111539779;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11418021574604871;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return -0.062240665307105376;  // std dev = 2.524, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.19972978120442597;  // std dev = 0.512, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06191309271104931;  // std dev = 3.385, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.17497813873540824;  // std dev = 1.711, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.17083089260614973;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08980804017733884;  // std dev = 0.868, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.1679142685365184;  // std dev = 1.384, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.38524193057982337;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.05738597146589817;  // std dev = 1.150, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.16266372986214583;  // std dev = 1.256, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.036574619054092;  // std dev = 2.084, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.10537848086911801;  // std dev = 3.549, 66.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   else return -0.06842697784420264;  // std dev = 5.02e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(F, A), location(A, G) )
%   | | | then return 0.06264247196669502;  // std dev = 1.082, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.15420067042362923;  // std dev = 1.545, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.34543168025734755;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( enzyme(H, J), phenotype(H, K) )
%   | | | then return 0.3179008596047202;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06428675907854808;  // std dev = 3.659, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.15607509375266598;  // std dev = 1.199, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.508009703564679;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
Inference time using transfer learning 12.785888910293579
Refined model CLL: -0.264069


******************************************
Best model found
******************************************
Results 

CLL : -0.278529 

AUC ROC : 0.939958 

AUC PR : 0.140746 

Precision : 0.039735 

Recall : 0.888087 

F1 : 0.076067 

Total Learning Time : 5.89546799659729 

Total Inference Time : 2.9822840690612793 

Total revision time: 14.017912149429321
Best scored revision CLL: -0.264069


Results 

CLL : -0.278529 

AUC ROC : 0.939958 

AUC PR : 0.140746 

Precision : 0.039735 

Recall : 0.888087 

F1 : 0.076067 

Total Learning Time : 14.027517557144165 

Total Inference Time : 2.9822840690612793 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.880732774734497
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43923001618059104;  // std dev = 0.493, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3211373370151659;  // std dev = 4.969, 99.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=52 */
%   | else return 0.41406662994445903;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.15e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.36875671058661735;  // std dev = 0.481, 135.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.90e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5982357864215754;  // std dev = 1.949, 75.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=71 */
%   | else return -0.17592675846727163;  // std dev = 3.559, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783617;  // std dev = 4.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.13842778980627402;  // std dev = 4.501, 102.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=52 */
%   | else return 0.14335444831908198;  // std dev = 3.159, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.092691276189261;  // std dev = 4.17e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17205691555667646;  // std dev = 4.558, 114.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=68 */
%   | | else return 0.09349769225376334;  // std dev = 2.308, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.08518475138839685;  // std dev = 2.58e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1035526001221174;  // std dev = 0.428, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 2.89e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.05112207217638656;  // std dev = 4.878, 128.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=68 */
%   | else return 0.002844222377749919;  // std dev = 2.462, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 2.08e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05446098864425309;  // std dev = 5.329, 155.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1423790260190141;  // std dev = 4.562, 128.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 38.89012408256531
Parameter learned model CLL:-0.273286 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 62, 86], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.969, 47, 52], 'true,false': [3.603, 21, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.15e-08, 81, 0], 'false,false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.481, 49, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.9e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.949, 4, 71], 'true,false': [3.559, 74, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.83e-08, 66, 0], 'false,false,false,false': [2.24e-08, 45, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.501, 50, 52], 'true,false': [3.159, 25, 34], 'false,true': [0.0, 0, 0], 'false,false': [4.17e-09, 97, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.558, 46, 68], 'true,true,false': [2.308, 15, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.73e-08, 62, 0], 'false,false,false': [2.58e-08, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 64, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.89e-08, 64, 0], 'false,false,false': [0.0, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.878, 60, 68], 'true,false': [2.462, 18, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.329, 69, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.562, 42, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 119, 0]}]
{'': [0.24342585829072522, 2.6569439905559303e-17], 'false': [nan, 2.6569439905559303e-17]}
{'': [0.24658458424692115, 5.93584587423351e-17], 'true': [0.2493623099683712, 0.23603305785124035], 'false': [nan, 5.93584587423351e-17], 'false,false': [nan, 5.93584587423351e-17], 'false,false,false': [6.304970263303358e-17, 0.0]}
{'': [0.23106306995182552, 6.251741303714473e-17], 'false': [nan, 6.251741303714473e-17], 'false,false': [nan, 6.251741303714473e-17]}
{'': [0.24912692290332755, -8.001607384685813e-18], 'true': [0.050645083337894053, 0.14230413516790252], 'false': [nan, -8.001607384685813e-18], 'false,false': [nan, -8.001607384685813e-18], 'false,false,false': [3.532527805625498e-17, 1.1102230246251566e-17]}
{'': [0.18781658681174665, 1.8312957107219077e-17], 'true': [0.19859362190099322, 0.16916972515098552], 'false': [nan, 1.8312957107219077e-17]}
{'': [0.17861886755002204, 3.1867512743870234e-17], 'true': [0.17861886755002204, nan], 'true,true': [0.1822050277603614, 0.16144421288170757], 'false': [nan, 3.1867512743870234e-17], 'false,false': [2.238352872228138e-17, 1.4481169886415085e-17]}
{'': [0.18348703437546182, 3.828355257328126e-17], 'true': [0.18348703437546182, nan], 'false': [nan, 3.828355257328126e-17], 'false,false': [1.3010426069826053e-17, 0.0]}
{'': [0.1824420169182129, 3.496765431890257e-18], 'true': [0.18589724121083168, 0.16833765242798018], 'false': [nan, 3.496765431890257e-18], 'false,false': [nan, 3.496765431890257e-18]}
{'': [0.18319684562101973, 2.461343497989734e-17], 'true': [0.18319684562101973, nan], 'false': [nan, 2.461343497989734e-17], 'false,false': [nan, 2.461343497989734e-17]}
{'': [0.16262400180737369, -1.7259769710559157e-17], 'true': [0.16262400180737369, nan], 'false': [nan, -1.7259769710559157e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.823290109634399
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3287371703936289;  // std dev = 3.565, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.44023848733831783;  // std dev = 4.037, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   else return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( enzyme(E, G), interaction(H, A) )
%   | | | then return 0.25458088574696536;  // std dev = 1.972, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.5105210018331017;  // std dev = 2.517, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5992265984390386;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.27788762961993174;  // std dev = 4.365, 77.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=37 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283911;  // std dev = 7.15e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7154228342412963;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.1561351755537763;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15923067011285694;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.21939335411224858;  // std dev = 4.660, 89.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=44 */
%   | | | else return 0.3815173011327796;  // std dev = 2.990, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360643;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I) )
%   | | then return -0.11231637819360629;  // std dev = 5.74e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.11231637819360644;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.4517205169619413;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13201706021445428;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4206786237738932;  // std dev = 0.772, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03274542560047081;  // std dev = 3.029, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(J, H), complex(J, I) )
%   | | | then return 0.4357227367451617;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11384050910243936;  // std dev = 2.062, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.39662481085392975;  // std dev = 2.581, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.23814174138429642;  // std dev = 2.767, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.10159632948783637;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, D) )
%   | | then return -0.00651242432961161;  // std dev = 0.649, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.6355016755633806;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3321611839248468;  // std dev = 1.833, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, J) )
%   | | | then return 0.19837435149277613;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4756978961009412;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.37590333275971943;  // std dev = 0.186, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.09463574345473795;  // std dev = 4.965, 107.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=51 */
%   else if ( interaction(A, M) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.27329098357235904;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3901533627909049;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5052936328662521;  // std dev = 0.312, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.033133993908434294;  // std dev = 3.673, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.3364267235843649;  // std dev = 1.966, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return 0.11753859382277561;  // std dev = 2.922, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0.6111836675192126;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, J) )
%   | then return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.33992213223148365;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5602450655258513;  // std dev = 0.239, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(H, D), complex(H, I) )
%   | | | then return -0.5206118042028111;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.4298887003855573;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, J), interaction(K, A) )
%   | | | then return 0.2264161974062101;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.30764183376696463;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.08853526420077176;  // std dev = 2.976, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.07331909555389758;  // std dev = 3.963, 65.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=36 */
%   else return -0.07877675473109157;  // std dev = 5.96e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(E, F) )
%   | | | then return 0.23348912858620313;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17574976623304772;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.31626643882714184;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44027468103751094;  // std dev = 0.434, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.37512034363720514;  // std dev = 0.592, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.14915311146411675;  // std dev = 2.753, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | | else return 0.015531565975546741;  // std dev = 3.673, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   else return -0.07324622576333706;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, D), phenotype(D, I) )
%   | | | then return 0.014304360168635694;  // std dev = 1.165, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2622936388630046;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.22855063176374912;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07461115847647817;  // std dev = 2.527, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.23386840362396505;  // std dev = 0.387, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.05509081126785626;  // std dev = 2.807, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.0537391516082034;  // std dev = 1.959, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.19448954294600362;  // std dev = 2.144, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.06842697784420264;  // std dev = 4.93e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(A, H), complex(D, I) )
%   | | | then return -0.043242201285468795;  // std dev = 1.030, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.10345583544478455;  // std dev = 1.790, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else if ( complex(A, J), complex(D, J) )
%   | | | then return -0.27681652254562866;  // std dev = 1.080, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.019127359936927425;  // std dev = 2.805, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.47477156424936023;  // std dev = 0.330, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.3768118490176284;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.17716606189080533;  // std dev = 0.174, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.02275747848021749;  // std dev = 3.014, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
Inference time using transfer learning 15.546613216400146
Refined model CLL: -0.243544


******************************************
Best model found
******************************************
Results 

CLL : -0.248457 

AUC ROC : 0.950337 

AUC PR : 0.177914 

Precision : 0.042333 

Recall : 0.879859 

F1 : 0.080779 

Total Learning Time : 5.823290109634399 

Total Inference Time : 2.5866048336029053 

Total revision time: 13.188235521316528
Best scored revision CLL: -0.243544


Results 

CLL : -0.248457 

AUC ROC : 0.950337 

AUC PR : 0.177914 

Precision : 0.042333 

Recall : 0.879859 

F1 : 0.080779 

Total Learning Time : 13.197840929031372 

Total Inference Time : 2.5866048336029053 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.5906693935394287
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4122890624880448;  // std dev = 0.497, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.12e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3736531293312945;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else return 0.5145122701904352;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3122987079945761;  // std dev = 0.493, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.79e-09, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5598820196949879;  // std dev = 2.985, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | else return -0.2560682257844624;  // std dev = 2.087, 60.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1663204514498677;  // std dev = 5.077, 146.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=82 */
%   | else return 0.4078781055224926;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926089;  // std dev = 6.18e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.17319139587177748;  // std dev = 4.894, 140.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=86 */
%   | | else return 0.1445122355482431;  // std dev = 0.645, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.115794594196549;  // std dev = 0.425, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 5.96e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.06656449619989196;  // std dev = 5.137, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   | else return 0.08344515428281621;  // std dev = 0.642, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06954219238567516;  // std dev = 5.105, 145.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07449159747607192;  // std dev = 4.908, 140.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
Inference time using transfer learning 18.608205556869507
Parameter learned model CLL:-0.277283 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 70, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.914, 61, 82], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 87, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 63, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 94, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.985, 10, 82], 'true,false': [2.087, 55, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.71e-08, 94, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.077, 64, 82], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.894, 54, 86], 'true,true,false': [0.645, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.48e-08, 97, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.425, 57, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 102, 0], 'false,false,false': [0.0, 2, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.137, 65, 86], 'true,false': [0.642, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.105, 58, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.908, 53, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 96, 0]}]
{'': [0.24706884660635534, 6.579099405186112e-17], 'false': [nan, 6.579099405186112e-17]}
{'': [0.24360000000000176, -1.7270135938613546e-17], 'true': [0.24460853831483298, 0.2040816326530612], 'false': [nan, -1.7270135938613546e-17], 'false,false': [nan, -1.7270135938613546e-17], 'false,false,false': [-1.7865657867531254e-17, -4.625929269271485e-18]}
{'': [0.24350439714094516, 6.141659285160441e-17], 'false': [nan, 6.141659285160441e-17], 'false,false': [nan, 6.141659285160441e-17]}
{'': [0.24635919559913025, 1.3322676295501878e-17], 'true': [0.09688090737239922, 0.07259027777695826], 'false': [nan, 1.3322676295501878e-17], 'false,false': [nan, 1.3322676295501878e-17], 'false,false,false': [2.362176648138631e-17, -2.3129646346357427e-18]}
{'': [0.1803740240109269, 3.835315903250541e-17], 'true': [0.17656774541382328, 0.20408163265306123], 'false': [nan, 3.835315903250541e-17]}
{'': [0.17164593273769707, 3.0778460088618204e-17], 'true': [0.17164593273769707, nan], 'true,true': [0.17111126000349852, 0.2082621143206042], 'false': [nan, 3.0778460088618204e-17], 'false,false': [3.0903115118432194e-17, 0.0]}
{'': [0.18085745712540194, 3.416070845000482e-17], 'true': [0.18085745712540194, nan], 'false': [nan, 3.416070845000482e-17], 'false,false': [3.483052626275001e-17, 0.0]}
{'': [0.17515731865732437, -4.270088556250602e-18], 'true': [0.1747473657223545, 0.20582753355333963], 'false': [nan, -4.270088556250602e-18], 'false,false': [nan, -4.270088556250602e-18]}
{'': [0.17973719905401012, 2.3713501496848002e-17], 'true': [0.17973719905401012, nan], 'false': [nan, 2.3713501496848002e-17], 'false,false': [nan, 2.3713501496848002e-17]}
{'': [0.1720450999752227, -1.4456028966473393e-17], 'true': [0.1720450999752227, nan], 'false': [nan, -1.4456028966473393e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.920867919921875
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.476705636130441;  // std dev = 4.784, 97.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=60 */
%   | | | else return 0.2110901115701005;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.737322868470617;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.23533959555287684;  // std dev = 1.187, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.801175208684591;  // std dev = 0.063, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.19788591171409628;  // std dev = 0.078, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( location(A, I) )
%   | | | then return 0.400490388269663;  // std dev = 4.617, 89.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=54 */
%   | | | else return 0.10669449682910814;  // std dev = 1.418, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.5509545461977046;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6117153122728184;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.17906180367212807;  // std dev = 1.568, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.03737686268388048;  // std dev = 1.761, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6300714249623874;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21934428182848648;  // std dev = 2.850, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.2778413760350199;  // std dev = 2.473, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.41492606130168913;  // std dev = 3.178, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   else return -0.1123163781936062;  // std dev = 8.01e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, F) )
%   | | | then return 0.2727985516480295;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6703783992037595;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, H), interaction(A, I) )
%   | | | then return -0.03342868871956018;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.17952389370336316;  // std dev = 2.814, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), interaction(A, J) )
%   | | | then return 0.5862158104770885;  // std dev = 0.426, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22834258473953187;  // std dev = 3.652, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.3465404265539107;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6406632879358866;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1015963294878364;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.39439167382951373;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2923568553157274;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5171334769222283;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.10829676346325906;  // std dev = 2.042, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return -0.018033551597168223;  // std dev = 3.472, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.495421370952827;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15216544842755722;  // std dev = 4.047, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   else if ( enzyme(A, J) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return 0.5331124439842156;  // std dev = 0.516, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.12142678886141066;  // std dev = 4.173, 86.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=50 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.2633050779308365;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.4404947531626069;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.517845493674489;  // std dev = 0.235, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I) )
%   | | then return -0.08518475138839679;  // std dev = 2.79e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0851847513883968;  // std dev = 2.24e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, G) )
%   | | | then return 0.289145200326424;  // std dev = 2.166, 48.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=40 */
%   | | | else return 0.1511644448273171;  // std dev = 3.517, 66.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=43 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.2361482801758531;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.33857688157249405;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.12939384021664618;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.11685761835601194;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109158;  // std dev = 5.74e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), complex(A, G) )
%   | | then if ( phenotype(E, H), phenotype(A, H) )
%   | | | then return 0.37920889692716536;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12050488445113282;  // std dev = 1.761, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.32768006102241426;  // std dev = 0.522, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.0041070226192819175;  // std dev = 3.995, 91.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=44 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.08063890722337969;  // std dev = 1.086, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.6198655400615772;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.07575870637230304;  // std dev = 0.497, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03918069120583356;  // std dev = 0.878, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.07324622576333709;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), location(D, F) )
%   | | then if ( location(A, F), interaction(A, G) )
%   | | | then return -0.03829165458343162;  // std dev = 2.223, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.0660218144412994;  // std dev = 2.431, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.07549135927849293;  // std dev = 1.208, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.20830285660470185;  // std dev = 2.434, 42.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=30 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then return 0.07927405676679618;  // std dev = 0.766, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.1125744294872539;  // std dev = 1.274, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1563761858963675;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06842697784420265;  // std dev = 4.66e-09, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), location(E, G) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15761530658920875;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16609298253143773;  // std dev = 1.703, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.20910144283073637;  // std dev = 0.810, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.010068504378991821;  // std dev = 2.065, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), interaction(A, I) )
%   | | | then return 0.008875153938763244;  // std dev = 0.595, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3661183551984545;  // std dev = 0.331, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2174605467989577;  // std dev = 1.102, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.0720766042995446;  // std dev = 2.921, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 45.483527183532715
Refined model CLL: -0.247102


******************************************
Best model found
******************************************
Results 

CLL : -0.265595 

AUC ROC : 0.960007 

AUC PR : 0.284927 

Precision : 0.043099 

Recall : 0.946809 

F1 : 0.082446 

Total Learning Time : 11.920867919921875 

Total Inference Time : 6.313347339630127 

Total revision time: 26.04232883453369
Best scored revision CLL: -0.247102


Results 

CLL : -0.265595 

AUC ROC : 0.960007 

AUC PR : 0.284927 

Precision : 0.043099 

Recall : 0.946809 

F1 : 0.082446 

Total Learning Time : 26.052008390426636 

Total Inference Time : 6.313347339630127 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.717755079269409
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44571955656843604;  // std dev = 0.492, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.299682916237339;  // std dev = 5.074, 103.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=52 */
%   | else return 0.385737638214391;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839113;  // std dev = 7.60e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3347393793602777;  // std dev = 0.489, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.43e-09, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5164118538685932;  // std dev = 3.798, 116.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=99 */
%   | else return -0.2663048134290869;  // std dev = 2.177, 73.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2392607520279507;  // std dev = 3.916, 83.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   | else return 0.17061108043218562;  // std dev = 3.966, 91.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892608;  // std dev = 6.72e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.10663589904264284;  // std dev = 4.932, 127.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=69 */
%   | | else return 0.11336885100963388;  // std dev = 3.291, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 4.01e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.08518475138839683;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09600603762154876;  // std dev = 0.429, 185.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.0787767547310917;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07877675473109172;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11629804426395128;  // std dev = 4.540, 113.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=69 */
%   | else return 0.056526564464848016;  // std dev = 3.304, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 1.61e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.017406666498650993;  // std dev = 6.116, 196.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04928012950083651;  // std dev = 5.832, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
Inference time using transfer learning 28.62960195541382
Parameter learned model CLL:-0.258833 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 73, 104], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.074, 51, 52], 'true,false': [4.612, 36, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.6e-08, 135, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 69, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.43e-09, 131, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.798, 17, 99], 'true,false': [2.177, 68, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.48e-08, 86, 0], 'false,false,false,false': [4.59e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.916, 31, 52], 'true,false': [3.966, 39, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.932, 58, 69], 'true,true,false': [3.291, 29, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.01e-08, 67, 0], 'false,false,false': [4.08e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.429, 81, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.16e-08, 66, 0], 'false,false,false': [3.07e-08, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.54, 44, 69], 'true,false': [3.304, 30, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.61e-09, 128, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.116, 92, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 147, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.832, 78, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 118, 0]}]
{'': [0.2423313862555491, 2.6569439905559303e-17], 'false': [nan, 2.6569439905559303e-17]}
{'': [0.24801951700885505, 2.7949670550003944e-17], 'true': [0.2499764351022695, 0.24173553719008065], 'false': [nan, 2.7949670550003944e-17], 'false,false': [nan, 2.7949670550003944e-17], 'false,false,false': [4.2764146133709734e-17, 0.0]}
{'': [0.239428803774074, 7.28848703189034e-17], 'false': [nan, 7.28848703189034e-17], 'false,false': [nan, 7.28848703189034e-17]}
{'': [0.246613615927699, -5.551115123125783e-17], 'true': [0.12433807264864093, 0.06489932458125686], 'false': [nan, -5.551115123125783e-17], 'false,false': [nan, -5.551115123125783e-17], 'false,false,false': [3.4855839145208403e-17, 3.40229636578677e-17]}
{'': [0.17973101097887115, 4.370956789862821e-17], 'true': [0.18480062806903041, 0.17285902551749746], 'false': [nan, 4.370956789862821e-17]}
{'': [0.18408604585517974, 3.591898020846095e-17], 'true': [0.18408604585517974, nan], 'true,true': [0.19155852979461738, 0.1692276928909556], 'false': [nan, 3.591898020846095e-17], 'false,false': [2.4027214712036968e-17, 2.413528314402514e-17]}
{'': [0.1839157056592402, 4.152742611193334e-17], 'true': [0.1839157056592402, nan], 'false': [nan, 4.152742611193334e-17], 'false,false': [1.5139404881252134e-17, 1.4518301091252048e-17]}
{'': [0.17796615090171666, 2.6020852139652106e-18], 'true': [0.18242292086465964, 0.16795020994265444], 'false': [nan, 2.6020852139652106e-18], 'false,false': [nan, 2.6020852139652106e-18]}
{'': [0.19086931042720728, 3.0210150329936235e-17], 'true': [0.19086931042720728, nan], 'false': [nan, 3.0210150329936235e-17], 'false,false': [nan, 3.0210150329936235e-17]}
{'': [0.18686648599727126, -1.787647243040506e-17], 'true': [0.18686648599727126, nan], 'false': [nan, -1.787647243040506e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.524164915084839
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.43592671287729085;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   | | | else return 0.30259337954395615;  // std dev = 3.944, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7411136970972522;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1966569345197441;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.2770151007029705;  // std dev = 4.178, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3551492945814255;  // std dev = 4.701, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839108;  // std dev = 7.88e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.6653397618744846;  // std dev = 1.042, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.18541221492582605;  // std dev = 1.579, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.2161771358989561;  // std dev = 0.183, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.2990270581618998;  // std dev = 4.893, 101.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=57 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return -0.002172645744201618;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.37796059995045717;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.01754836386534972;  // std dev = 1.415, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2280938204780073;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.11231637819360618;  // std dev = 8.43e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.5476917602493464;  // std dev = 0.485, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.11609272854080606;  // std dev = 1.067, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.18423619319392712;  // std dev = 0.131, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.16752333607266182;  // std dev = 2.894, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6812869505019503;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.3304237413336567;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5196599200579666;  // std dev = 0.215, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.25513896545096376;  // std dev = 4.088, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   else return -0.10159632948783638;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.28298899916826836;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15816490160645846;  // std dev = 0.145, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, E), phenotype(D, F) )
%   | | | then return 0.10337932139514233;  // std dev = 1.891, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.34736580154915114;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(G, I), complex(A, J) )
%   | | | then return 0.1189637048405617;  // std dev = 1.738, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.6578513703654753;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( location(A, K) )
%   | | | then return 0.19271416170586658;  // std dev = 4.311, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | | else return 0.3453494749594367;  // std dev = 1.133, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926071;  // std dev = 6.97e-09, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.22930361796886353;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, E), phenotype(A, F) )
%   | | | then return 0.047793080508496615;  // std dev = 1.924, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return -0.05418649777157541;  // std dev = 1.278, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4350074552257981;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.015437239688977148;  // std dev = 1.985, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.13339301235782558;  // std dev = 2.917, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | | else return 0.21713512505982813;  // std dev = 3.646, 66.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=44 */
%   else if ( interaction(A, L) )
%   | then return -0.08518475138839683;  // std dev = 4.84e-09, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08518475138839682;  // std dev = 5.27e-09, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( complex(D, G), phenotype(F, H) )
%   | | | then return 0.06160957709424757;  // std dev = 4.670, 124.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=67 */
%   | | | else return 0.2243745829326904;  // std dev = 1.263, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.05523153773188057;  // std dev = 1.300, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.08609646613734247;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then return 0.47944862001380867;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.21060402138510817;  // std dev = 1.699, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.010034023423911846;  // std dev = 1.269, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, M) )
%   | then return -0.07877675473109169;  // std dev = 4.06e-09, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.07877675473109168;  // std dev = 4.37e-09, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.4221165746106865;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(G, D), interaction(G, H) )
%   | | | then return -0.11064554887620696;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3518380514718702;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3906922775935576;  // std dev = 1.100, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return -0.40251519177122896;  // std dev = 0.614, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.1359416813522181;  // std dev = 1.612, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.056192026901584625;  // std dev = 4.213, 85.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   else return -0.07324622576333725;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16422540090522586;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3038849370018303;  // std dev = 0.259, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.051650698500924776;  // std dev = 4.324, 123.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=68 */
%   | | | else return -0.19895627374966343;  // std dev = 1.388, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.37415397943209666;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.5568191017134159;  // std dev = 0.223, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2590216692287274;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.027087143579730712;  // std dev = 2.334, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.20594602984211516;  // std dev = 0.258, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.08571828610665996;  // std dev = 2.446, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else if ( phenotype(D, G), interaction(H, A) )
%   | | | then return 0.3963907226915726;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018081870444347087;  // std dev = 1.183, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), phenotype(I, L) )
%   | | | then return 0.07147997103300338;  // std dev = 2.064, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return -0.12447077990707534;  // std dev = 1.409, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.1053481702807349;  // std dev = 3.254, 58.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=37 */
%   | | | else return 0.4551850377021912;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 11.089853286743164
Refined model CLL: -0.253905


******************************************
Best model found
******************************************
Results 

CLL : -0.278097 

AUC ROC : 0.924281 

AUC PR : 0.207492 

Precision : 0.036663 

Recall : 0.822642 

F1 : 0.070198 

Total Learning Time : 11.524164915084839 

Total Inference Time : 5.671292543411255 

Total revision time: 25.64192247390747
Best scored revision CLL: -0.253905


Results 

CLL : -0.278097 

AUC ROC : 0.924281 

AUC PR : 0.207492 

Precision : 0.036663 

Recall : 0.822642 

F1 : 0.070198 

Total Learning Time : 25.651602029800415 

Total Inference Time : 5.671292543411255 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8445696830749512
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43314893509950975;  // std dev = 0.494, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.41132875061355945;  // std dev = 4.434, 83.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | else return 0.30937091928825655;  // std dev = 4.471, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.30e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3064671418354302;  // std dev = 0.494, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6422041634481679;  // std dev = 1.400, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.12914570935632863;  // std dev = 4.137, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783615;  // std dev = 5.67e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2103059672726486;  // std dev = 4.165, 87.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | else return 0.10511049460603679;  // std dev = 3.781, 84.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 6.18e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16747616936395693;  // std dev = 4.752, 122.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=72 */
%   | | else return 0.013247991986851428;  // std dev = 2.880, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.80e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839685;  // std dev = 2.58e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11588069282091433;  // std dev = 0.427, 162.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109165;  // std dev = 4.34e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13277746005952865;  // std dev = 4.502, 115.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=72 */
%   | else return -0.004208936475893925;  // std dev = 2.816, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07078572304506832;  // std dev = 5.351, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.35e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07535520261269607;  // std dev = 5.215, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
Inference time using transfer learning 35.5355281829834
Parameter learned model CLL:-0.264108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 68, 92], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.434, 32, 51], 'true,false': [4.471, 39, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 88, 0], 'false,false,false,false': [0.0, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 68, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.4, 2, 70], 'true,false': [4.137, 85, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.67e-08, 74, 0], 'false,false,false,false': [4.34e-08, 60, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.165, 36, 51], 'true,false': [3.781, 43, 41], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.752, 50, 72], 'true,true,false': [2.88, 27, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.8e-08, 63, 0], 'false,false,false': [2.58e-08, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.427, 70, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.34e-08, 81, 0], 'false,false,false': [7.45e-09, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.502, 43, 72], 'true,false': [2.816, 26, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.351, 69, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.35e-09, 129, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.215, 61, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 118, 0]}]
{'': [0.24437500000000245, -3.75767792950053e-17], 'false': [nan, -3.75767792950053e-17]}
{'': [0.2458504271895811, 5.411171044391519e-17], 'true': [0.23689940484830757, 0.24984374999999978], 'false': [nan, 5.411171044391519e-17], 'false,false': [nan, 5.411171044391519e-17], 'false,false,false': [6.055761952500853e-17, -7.162729191130042e-18]}
{'': [0.24408708562563194, 6.926161988487215e-17], 'false': [nan, 6.926161988487215e-17], 'false,false': [nan, 6.926161988487215e-17]}
{'': [0.24964253583259463, -4.142623226213271e-17], 'true': [0.027234974745417154, 0.1599781439600401], 'false': [nan, -4.142623226213271e-17], 'false,false': [nan, -4.142623226213271e-17], 'false,false,false': [4.350874015422911e-17, 3.14563190310461e-17]}
{'': [0.18784350403445857, 3.700743415417188e-17], 'true': [0.1994149599697227, 0.170228667138301], 'false': [nan, 3.700743415417188e-17]}
{'': [0.18744738977147335, 3.2593703475233955e-17], 'true': [0.18744738977147335, nan], 'true,true': [0.18507805394700036, 0.17642638332705796], 'false': [nan, 3.2593703475233955e-17], 'false,false': [2.2909364000201642e-17, 1.4481169886415085e-17]}
{'': [0.18251890227906598, 4.142623226213271e-17], 'true': [0.18251890227906598, nan], 'false': [nan, 4.142623226213271e-17], 'false,false': [2.3300977060034148e-17, 1.047380211910525e-18]}
{'': [0.17897703742489612, 0.0], 'true': [0.17626706309648227, 0.1723482069346742], 'false': [nan, 0.0], 'false,false': [nan, 0.0]}
{'': [0.17785584431766324, 2.7540416114732565e-17], 'true': [0.17785584431766324, nan], 'false': [nan, 2.7540416114732565e-17], 'false,false': [nan, 2.7540416114732565e-17]}
{'': [0.17778712325664023, -1.787647243040506e-17], 'true': [0.17778712325664023, nan], 'false': [nan, -1.787647243040506e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.613255262374878
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.41052988748046365;  // std dev = 5.095, 105.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=58 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), phenotype(F, H) )
%   | | | then return 0.5285839606311455;  // std dev = 1.889, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.2106624518993409;  // std dev = 4.167, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.6785500882272341;  // std dev = 0.915, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.41427031994081925;  // std dev = 3.277, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839108;  // std dev = 7.45e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( phenotype(D, H) )
%   | | | then return 0.13216057860188102;  // std dev = 1.343, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.40009340488321316;  // std dev = 0.856, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.3416653150440793;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.5682889115602097;  // std dev = 2.041, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), phenotype(A, M) )
%   | | | then return 0.5878116239884525;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6443011388394004;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.1274008544291027;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.29300915664451715;  // std dev = 3.727, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   else return -0.1123163781936062;  // std dev = 8.12e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( interaction(H, F) )
%   | | | then return 0.17819367221968532;  // std dev = 2.439, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.6997906251970496;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.45598584366156825;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0030132293231035314;  // std dev = 1.916, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( enzyme(A, K), interaction(L, J) )
%   | | | then return 0.26142617444058874;  // std dev = 1.492, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.504988437481555;  // std dev = 0.848, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.12227059456580992;  // std dev = 2.574, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.2630954498929541;  // std dev = 3.689, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   else return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.3619294295207977;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.3937621336609064;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4549394936124417;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.2095475512906021;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10172005318568503;  // std dev = 2.605, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return -0.0036037708918317574;  // std dev = 2.281, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.21626561722361332;  // std dev = 4.515, 88.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=55 */
%   else if ( interaction(A, L) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(A, F), interaction(E, A) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.40847171370286117;  // std dev = 0.244, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3425686529949947;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, E), interaction(H, A) )
%   | | | then return 0.5472901087061608;  // std dev = 0.388, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29384840384896443;  // std dev = 1.787, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2660138696834991;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.328833201421364;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3470503636698658;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04352960302387172;  // std dev = 5.371, 118.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=56 */
%   else return -0.0851847513883968;  // std dev = 5.59e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, E) )
%   | | | then return 0.2596047821575832;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.5269898420378684;  // std dev = 0.181, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.3776955554110878;  // std dev = 0.281, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4153420426206849;  // std dev = 0.757, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.4523882227906797;  // std dev = 0.483, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.007739789446576327;  // std dev = 2.701, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.23845347868048433;  // std dev = 2.904, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   else if ( interaction(A, L) )
%   | then return -0.07877675473109179;  // std dev = 7.45e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.17381716887840237;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34778589780355107;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, G), complex(G, H) )
%   | | | then return -0.12597440147654662;  // std dev = 2.033, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.13979221953089457;  // std dev = 1.464, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2039212276815578;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2666096631077901;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07719444793313143;  // std dev = 2.029, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return 0.15434229378359043;  // std dev = 3.681, 72.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=48 */
%   else return -0.07324622576333695;  // std dev = 4.17e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( recursion_proteinclass(D, B), complex(A, H) )
%   | | | then return 0.22565104769827207;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026944744288171663;  // std dev = 1.899, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(I, D), phenotype(I, J) )
%   | | | then return 0.11218496636540194;  // std dev = 1.823, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.3085895800676331;  // std dev = 1.189, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.05558332709148077;  // std dev = 3.832, 87.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=52 */
%   | | | else return -0.43018482677698955;  // std dev = 0.536, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.2322725322759022;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, M) )
%   | then return -0.06842697784420268;  // std dev = 3.61e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.0684269778442027;  // std dev = 2.79e-09, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1512654902443191;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11888841260576277;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18703348058667305;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.17280748208045213;  // std dev = 1.396, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08399318401092358;  // std dev = 3.102, 60.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=36 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.09210257340349952;  // std dev = 2.987, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return -0.014020098120710651;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 17.88683533668518
Refined model CLL: -0.248789


******************************************
Best model found
******************************************
Results 

CLL : -0.248984 

AUC ROC : 0.947995 

AUC PR : 0.181752 

Precision : 0.066645 

Recall : 0.747292 

F1 : 0.122377 

Total Learning Time : 5.613255262374878 

Total Inference Time : 2.9235708713531494 

Total revision time: 13.605561017990112
Best scored revision CLL: -0.248789


Results 

CLL : -0.248984 

AUC ROC : 0.947995 

AUC PR : 0.181752 

Precision : 0.066645 

Recall : 0.747292 

F1 : 0.122377 

Total Learning Time : 13.615240573883057 

Total Inference Time : 2.9235708713531494 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4580786228179932
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42768535894056947;  // std dev = 0.495, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 1.86e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2977538612536636;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0.38361244711224757;  // std dev = 4.901, 99.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3392674407385998;  // std dev = 0.490, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.43e-09, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6094017715940538;  // std dev = 1.950, 75.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=71 */
%   | else return -0.11410963086112735;  // std dev = 3.424, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783633;  // std dev = 1.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.16089858087837053;  // std dev = 3.198, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | else return 0.158336118157362;  // std dev = 4.395, 103.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926089;  // std dev = 6.32e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.09963169370849254;  // std dev = 3.456, 62.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   | | else return 0.11918894965762447;  // std dev = 4.240, 97.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.58e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839683;  // std dev = 3.87e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11960565038412135;  // std dev = 0.425, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07877675473109168;  // std dev = 3.80e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.04415653901567339;  // std dev = 3.515, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else return 0.08852506577992167;  // std dev = 4.036, 93.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11039103974730503;  // std dev = 5.011, 136.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07854953715357127;  // std dev = 4.996, 139.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
Inference time using transfer learning 9.063618898391724
Parameter learned model CLL:-0.278518 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 65, 86], 'false,true': [0.0, 0, 0], 'false,false': [1.86e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.742, 28, 28], 'true,false': [4.901, 41, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-08, 93, 0], 'false,false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 56, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.43e-09, 136, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [1.95, 4, 71], 'true,false': [3.424, 52, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.49e-08, 42, 0], 'false,false,false,false': [4.34e-08, 60, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.198, 24, 28], 'true,false': [4.395, 45, 58], 'false,true': [0.0, 0, 0], 'false,false': [6.32e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.456, 30, 32], 'true,true,false': [4.24, 43, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.58e-08, 47, 0], 'false,false,false': [3.87e-08, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.425, 63, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 38, 0], 'false,false,false': [3.8e-08, 73, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.515, 29, 32], 'true,false': [4.036, 39, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.011, 50, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.996, 53, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 132, 0]}]
{'': [0.2451646857593986, 0.0], 'false': [nan, 0.0]}
{'': [0.2469927159209169, 5.551115123125783e-17], 'true': [0.24999999999999994, 0.24262830323436513], 'false': [nan, 5.551115123125783e-17], 'false,false': [nan, 5.551115123125783e-17], 'false,false,false': [5.968940992608368e-17, -4.11193712824132e-18]}
{'': [0.2396406499742219, 7.34706413354883e-17], 'false': [nan, 7.34706413354883e-17], 'false,false': [nan, 7.34706413354883e-17]}
{'': [0.23976802132006844, 8.707631565687502e-18], 'true': [0.050681659593269424, 0.1749518857556411], 'false': [nan, 8.707631565687502e-18], 'false,false': [nan, 8.707631565687502e-18], 'false,false,false': [5.28677630773884e-18, 3.14563190310461e-17]}
{'': [0.1905747682334657, 3.865955175034027e-17], 'true': [0.19661592742522796, 0.18752265976279825], 'false': [nan, 3.865955175034027e-17]}
{'': [0.1882689997140801, 3.300663046182898e-17], 'true': [0.1882689997140801, nan], 'true,true': [0.19266403154507583, 0.18531065852500186], 'false': [nan, 3.300663046182898e-17], 'false,false': [1.4173059888831785e-17, 2.3418766925686896e-17]}
{'': [0.18050685892434987, 3.700743415417188e-17], 'true': [0.18050685892434987, nan], 'false': [nan, 3.700743415417188e-17], 'false,false': [0.0, 1.977109495907813e-17]}
{'': [0.18647032614589165, -2.1147105230955365e-18], 'true': [0.20258785311541855, 0.17511885817923656], 'false': [nan, -2.1147105230955365e-18], 'false,false': [nan, -2.1147105230955365e-18]}
{'': [0.18461388703104226, 2.4671622769447922e-17], 'true': [0.18461388703104226, nan], 'false': [nan, 2.4671622769447922e-17], 'false,false': [nan, 2.4671622769447922e-17]}
{'': [0.1795672241527046, -1.5139404881252134e-17], 'true': [0.1795672241527046, nan], 'false': [nan, -1.5139404881252134e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.981459856033325
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.33272520628595187;  // std dev = 3.836, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | | else return 0.4897278824679324;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7998245836829042;  // std dev = 0.059, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.19571856107835753;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.29032441893046085;  // std dev = 2.831, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.13649484770620005;  // std dev = 1.984, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.35734873579512094;  // std dev = 3.734, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(E, F), phenotype(A, G) )
%   | | | then return 0.575794813004296;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6662687892000344;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.23560096994523996;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.20073557267661576;  // std dev = 2.021, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6387029015831037;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.28873709940555403;  // std dev = 4.806, 102.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=56 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1123163781936062;  // std dev = 8.01e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.41641145759222276;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4473773175402101;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21928976469924327;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), interaction(F, I) )
%   | | | then return 0.028411452545176092;  // std dev = 1.759, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.23174085880351514;  // std dev = 1.883, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1958319541774425;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.26398691198439467;  // std dev = 4.498, 93.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=55 */
%   else if ( complex(A, J) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.10159632948783615;  // std dev = 6.59e-09, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.31873409001310726;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16681319226346583;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4710074428114534;  // std dev = 2.004, 56.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=51 */
%   | | | else return -0.31268274329396706;  // std dev = 0.278, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.052367320630275035;  // std dev = 2.008, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.2219269417226452;  // std dev = 2.769, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( complex(A, J) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(D, F), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2728361794230421;  // std dev = 0.551, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.013905458543063222;  // std dev = 1.582, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(I, D), interaction(A, J) )
%   | | | then return 0.2833847138208949;  // std dev = 1.564, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.1434976757960262;  // std dev = 3.275, 63.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=38 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.375782322163084;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.21492803988526835;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.007680600285610137;  // std dev = 2.318, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( complex(A, M) )
%   | then return -0.08518475138839679;  // std dev = 3.36e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.0851847513883968;  // std dev = 2.79e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( location(E, D) )
%   | | | then return 0.061494436828358603;  // std dev = 2.129, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return 0.34646604690409216;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, H), complex(E, I) )
%   | | | then return 0.13967732209668077;  // std dev = 1.060, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.06058382908042578;  // std dev = 2.998, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.48328067021555676;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.3742629966893303;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.02849250480728405;  // std dev = 1.818, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.15005741889160903;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.07877675473109161;  // std dev = 5.35e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.365724542634751;  // std dev = 0.474, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.1663802585043921;  // std dev = 0.679, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.17663450382010482;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3298185217152787;  // std dev = 0.279, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29200838789543226;  // std dev = 1.705, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.32315214460721586;  // std dev = 0.246, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.12109482847357213;  // std dev = 1.899, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.04210764664204943;  // std dev = 2.573, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   else return -0.07324622576333706;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.14461936147901022;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21744351682681148;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.30098326026275624;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.08147365824072461;  // std dev = 3.878, 116.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=67 */
%   | | | else return -0.28909708137983026;  // std dev = 0.570, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.2414392227007051;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420272;  // std dev = 9.31e-10, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.06842697784420268;  // std dev = 3.48e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return -0.09868483417479282;  // std dev = 1.571, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.10674165546859145;  // std dev = 1.246, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( interaction(E, E), interaction(H, A) )
%   | | | then return 0.09180754239560801;  // std dev = 0.890, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.4168349179907018;  // std dev = 0.532, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31723371725946475;  // std dev = 0.298, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1748351241607281;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.0194019129556322;  // std dev = 2.604, 61.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | | else return -0.23348429148815322;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
Inference time using transfer learning 16.613184213638306
Refined model CLL: -0.191374


******************************************
Best model found
******************************************
Results 

CLL : -0.208752 

AUC ROC : 0.980351 

AUC PR : 0.340883 

Precision : 0.090941 

Recall : 0.918728 

F1 : 0.1655 

Total Learning Time : 5.981459856033325 

Total Inference Time : 3.031278610229492 

Total revision time: 12.423243522644043
Best scored revision CLL: -0.191374


Results 

CLL : -0.208752 

AUC ROC : 0.980351 

AUC PR : 0.340883 

Precision : 0.090941 

Recall : 0.918728 

F1 : 0.1655 

Total Learning Time : 12.432923078536987 

Total Inference Time : 3.031278610229492 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.5616633892059326
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4122890624880448;  // std dev = 0.497, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3859408416190068;  // std dev = 5.829, 140.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=82 */
%   | else return 0.21689322257138755;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3096770762139847;  // std dev = 0.494, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.237204909342882;  // std dev = 6.126, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17344463109030675;  // std dev = 5.995, 146.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=82 */
%   | else return 0.00825599586512494;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926094;  // std dev = 5.10e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1576325683031034;  // std dev = 5.991, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | | else return 0.6492353348512274;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12344998260816199;  // std dev = 0.491, 148.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.58e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.05015770149106113;  // std dev = 6.239, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | else return -0.07978494845270495;  // std dev = 0.765, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04178633907923331;  // std dev = 6.259, 158.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.35e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08950210050027835;  // std dev = 5.839, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 18.19231867790222
Parameter learned model CLL:-0.329525 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 70, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 96, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [5.829, 58, 82], 'true,false': [1.708, 7, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 97, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 64, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.126, 66, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.21e-08, 97, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.995, 64, 82], 'true,false': [1.793, 9, 5], 'false,true': [0.0, 0, 0], 'false,false': [5.1e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.991, 61, 86], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.77e-08, 103, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.491, 61, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 95, 0], 'false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.239, 72, 86], 'true,false': [0.765, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.259, 71, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.35e-09, 134, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.839, 56, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 112, 0]}]
{'': [0.24706884660635534, 7.864079757761526e-17], 'false': [nan, 7.864079757761526e-17]}
{'': [0.24476281163435082, -1.1445598192011922e-17], 'true': [0.24265306122449073, 0.2430555555555555], 'false': [nan, -1.1445598192011922e-17], 'false,false': [nan, -1.1445598192011922e-17], 'false,false,false': [nan, -1.1445598192011922e-17]}
{'': [0.24394104401239333, 6.817158923136926e-17], 'false': [nan, 6.817158923136926e-17], 'false,false': [nan, 6.817158923136926e-17]}
{'': [0.2453078147998795, 2.1147105230955365e-18], 'true': [nan, 0.2453078147998795], 'false': [nan, 2.1147105230955365e-18], 'false,false': [nan, 2.1147105230955365e-18], 'false,false,false': [1.8312957107219077e-17, -5.204170427930421e-18]}
{'': [0.24692553913915144, 2.5869274360197823e-17], 'true': [0.24620003753049285, 0.22959183673469385], 'false': [nan, 2.5869274360197823e-17]}
{'': [0.2441085067352675, 3.112774835397635e-17], 'true': [0.2441085067352675, nan], 'true,true': [0.24413618125380895, 0.0], 'false': [nan, 3.112774835397635e-17], 'false,false': [3.2336592950247276e-17, 0.0]}
{'': [0.24103551967725706, 3.4492365813597093e-17], 'true': [0.24103551967725706, nan], 'false': [nan, 3.4492365813597093e-17], 'false,false': [3.272236283105724e-17, -2.6020852139652106e-18]}
{'': [0.24718023441190384, -3.895519384649672e-18], 'true': [0.24639849674599978, 0.29226348139734265], 'false': [nan, -3.895519384649672e-18], 'false,false': [nan, -3.895519384649672e-18]}
{'': [0.2479785791010212, 2.816983793825024e-17], 'true': [0.2479785791010212, nan], 'false': [nan, 2.816983793825024e-17], 'false,false': [nan, 2.816983793825024e-17]}
{'': [0.23838442610993738, -1.734723475976807e-17], 'true': [0.23838442610993738, nan], 'false': [nan, -1.734723475976807e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.6746649742126465
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4098730730305468;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.25814893509951237;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( location(A, J) )
%   | | | then return 0.4659920723544132;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then return 0.4479398574136346;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7613686012874195;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.20394233710800674;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.36583690385979095;  // std dev = 4.487, 84.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=48 */
%   | | | else return 0.4651329994862505;  // std dev = 3.025, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   else return -0.12544463852839105;  // std dev = 8.02e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5929875316649238;  // std dev = 0.131, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(D, E), interaction(A, G) )
%   | | | then return 0.15240727361646147;  // std dev = 3.374, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.3485549544945615;  // std dev = 4.250, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.6830299043755601;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22887820783994778;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7326682218088313;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.41754649401700006;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.028830704381678535;  // std dev = 2.014, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( phenotype(D, G), interaction(D, E) )
%   | | | then return 0.48893166907335284;  // std dev = 2.383, 39.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | | else return 0.21608432472492622;  // std dev = 3.715, 61.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5506259516488013;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.4050020588816065;  // std dev = 0.128, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12624997851735154;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30961573939452164;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1015963294878364;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(A, F) )
%   | | then return 0.32647504619714635;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5129546614009006;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.22758646146893097;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.19876045675762127;  // std dev = 4.206, 78.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=48 */
%   | | | else return 0.30431130508144955;  // std dev = 2.626, 38.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   else return -0.092691276189261;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.10512728331463016;  // std dev = 3.471, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return 0.38654633502964275;  // std dev = 0.950, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.16646377394006995;  // std dev = 1.898, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.021437501516091157;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(J, A) )
%   | then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(A, F) )
%   | | then return 0.05196177294685471;  // std dev = 0.796, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return 0.2937822257371341;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39437256156516454;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47323200402354304;  // std dev = 0.468, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.4732409723438462;  // std dev = 0.247, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.19343438771458288;  // std dev = 1.762, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.015638407196746147;  // std dev = 4.453, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   else if ( interaction(M, A) )
%   | then return -0.0787767547310916;  // std dev = 5.74e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( complex(E, G), interaction(A, D) )
%   | | | then return 0.21188244157934355;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23943810161177162;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.30611778612714247;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(A, H) )
%   | | | then return 0.40787475073590584;  // std dev = 0.807, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.026397501786766694;  // std dev = 4.887, 122.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=55 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.045253552311428774;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4032791950389144;  // std dev = 0.296, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F), interaction(D, D) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.009707971007342473;  // std dev = 1.311, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.20690224557183165;  // std dev = 0.665, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, H), phenotype(H, E) )
%   | | | then return 0.015000399285439689;  // std dev = 1.756, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.1437808865367089;  // std dev = 2.994, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3554497286186782;  // std dev = 0.489, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.4623450466795961;  // std dev = 0.256, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.09721815447247457;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0739034798605231;  // std dev = 2.511, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   else return -0.06842697784420265;  // std dev = 4.66e-09, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3692953261664542;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3492424787754913;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2201975121017556;  // std dev = 1.090, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3695642162826307;  // std dev = 0.898, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.14882073381590488;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2094066402523282;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return -0.07605404142502512;  // std dev = 2.364, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.005237923277604949;  // std dev = 3.492, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   else return -0.06419184008202626;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning 11.094404458999634
Refined model CLL: -0.266964


******************************************
Best model found
******************************************
Results 

CLL : -0.262339 

AUC ROC : 0.951776 

AUC PR : 0.180019 

Precision : 0.044397 

Recall : 0.893617 

F1 : 0.084592 

Total Learning Time : 7.6746649742126465 

Total Inference Time : 3.59596848487854 

Total revision time: 19.12297034263611
Best scored revision CLL: -0.266964


Results 

CLL : -0.262339 

AUC ROC : 0.951776 

AUC PR : 0.180019 

Precision : 0.044397 

Recall : 0.893617 

F1 : 0.084592 

Total Learning Time : 19.175122499465942 

Total Inference Time : 3.59596848487854 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.17472505569458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4391545216916882;  // std dev = 0.493, 179.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3748444441539031;  // std dev = 6.456, 171.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=99 */
%   | else return 0.5101827900185636;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839116;  // std dev = 7.30e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3147767729407712;  // std dev = 0.492, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360624;  // std dev = 7.79e-09, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21056929358648635;  // std dev = 6.839, 189.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783642;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2319195411601979;  // std dev = 6.144, 160.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=99 */
%   | else return 0.2056194043492106;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926076;  // std dev = 6.84e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.12860198559270838;  // std dev = 6.609, 178.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=102 */
%   | | else return 0.20557102921604983;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.99e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return -0.0851847513883969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11772338465588522;  // std dev = 0.491, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109154;  // std dev = 7.22e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.05514490988137301;  // std dev = 6.698, 182.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=102 */
%   | else return 0.12497648225505902;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333727;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.030795777589719017;  // std dev = 6.829, 189.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.04377602426229786;  // std dev = 7.323, 215.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
Inference time using transfer learning 21.08562135696411
Parameter learned model CLL:-0.305918 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 75, 104], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [6.456, 72, 99], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.3e-08, 138, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 73, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 148, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.839, 85, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 135, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.144, 61, 99], 'true,false': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 135, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [6.609, 76, 102], 'true,true,false': [0.794, 1, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.99e-08, 137, 0], 'false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.491, 71, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.22e-08, 126, 0], 'false,false,false': [0.0, 11, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.698, 80, 102], 'true,false': [0.794, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.829, 85, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.323, 111, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 118, 0]}]
{'': [0.24343809494086013, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.2428986239111235, 3.8616453030440226e-17], 'true': [0.2437673130193906, 0.2040816326530611], 'false': [nan, 3.8616453030440226e-17], 'false,false': [nan, 3.8616453030440226e-17], 'false,false,false': [nan, 3.8616453030440226e-17]}
{'': [0.2420837652652219, 5.8511754000515e-17], 'false': [nan, 5.8511754000515e-17], 'false,false': [nan, 5.8511754000515e-17]}
{'': [0.2475012578219644, -4.666154741178194e-17], 'true': [nan, 0.2475012578219644], 'false': [nan, -4.666154741178194e-17], 'false,false': [nan, -4.666154741178194e-17], 'false,false,false': [-4.2764146133709734e-17, -1.1564823173178713e-18]}
{'': [0.23585726234450247, 4.769847068759932e-17], 'true': [0.23589843750000022, 0.234375], 'false': [nan, 4.769847068759932e-17]}
{'': [0.24487337277176538, 3.5465457731081387e-17], 'true': [0.24487337277176538, nan], 'true,true': [0.24535680291746823, 0.2103638088354921], 'false': [nan, 3.5465457731081387e-17], 'false,false': [3.565679787117291e-17, 0.0]}
{'': [0.24103568975904782, 4.3760615569166756e-17], 'true': [0.24103568975904782, nan], 'false': [nan, 4.3760615569166756e-17], 'false,false': [4.1413081077287586e-17, 0.0]}
{'': [0.24597089481739695, -4.758098676964957e-18], 'true': [0.24647913820428372, 0.21034009172266233], 'false': [nan, -4.758098676964957e-18], 'false,false': [nan, -4.758098676964957e-18]}
{'': [0.2467559023633382, 2.7533531010703882e-17], 'true': [0.2467559023633382, nan], 'false': [nan, 2.7533531010703882e-17], 'false,false': [nan, 2.7533531010703882e-17]}
{'': [0.24945495398156645, -1.787647243040506e-17], 'true': [0.24945495398156645, nan], 'false': [nan, -1.787647243040506e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.33665132522583
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, I) )
%   | | | then return 0.36849376268572037;  // std dev = 6.020, 145.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=74 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.1418510649004879;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7261635345062833;  // std dev = 0.110, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, E), interaction(A, F) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, G) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.22887457004854914;  // std dev = 4.305, 76.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.33561783888489566;  // std dev = 4.041, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.4325730053395152;  // std dev = 2.272, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   else return -0.12544463852839116;  // std dev = 7.30e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(D, F), phenotype(D, E) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6682846314284285;  // std dev = 1.081, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.23507065688124965;  // std dev = 0.039, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2687885490373471;  // std dev = 1.764, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.5562328477451074;  // std dev = 2.008, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(A, J), recursion_proteinclass(I, B) )
%   | | | then return 0.054540122559782675;  // std dev = 0.998, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.49217127452323733;  // std dev = 1.679, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.126193713813838;  // std dev = 2.231, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.2831115431209516;  // std dev = 2.830, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   else return -0.11231637819360617;  // std dev = 9.42e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), interaction(A, H) )
%   | | | then return 0.2565322597730988;  // std dev = 1.806, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5769572483251683;  // std dev = 1.681, 77.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=74 */
%   | | else if ( phenotype(A, E), complex(D, I) )
%   | | | then return -0.2372518600894905;  // std dev = 0.242, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.33376961338705485;  // std dev = 0.211, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.6388721663433826;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1267312230418928;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.18984951325707267;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.028828899568135148;  // std dev = 2.080, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else return -0.1015963294878364;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.31691024797318723;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, E), complex(D, E) )
%   | | | then return -0.23967109969002426;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11110172592757461;  // std dev = 2.201, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3097086336416916;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4362413373562831;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.16290720643731804;  // std dev = 4.428, 111.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else return 0.3418095761390865;  // std dev = 1.478, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.09269127618926079;  // std dev = 7.74e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), location(A, G) )
%   | | then if ( enzyme(A, H), location(D, G) )
%   | | | then return 0.02523214774194707;  // std dev = 1.531, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2841620035055849;  // std dev = 1.865, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.3109883983989429;  // std dev = 1.374, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.06561340239802428;  // std dev = 3.254, 76.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   | else if ( interaction(K, A) )
%   | | then if ( complex(K, L), enzyme(A, M) )
%   | | | then return 0.22267439549557663;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5344300265459346;  // std dev = 0.354, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.04834808440046416;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2952864191045029;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, A) )
%   | | | then return 0.38486460069312856;  // std dev = 0.573, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.14400011754442532;  // std dev = 1.585, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2315028011257611;  // std dev = 0.273, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.015648973173539082;  // std dev = 2.377, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.41586516818226166;  // std dev = 0.311, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.3630466906010031;  // std dev = 0.267, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.10803238773306419;  // std dev = 1.638, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.20166008827108656;  // std dev = 2.307, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   else return -0.07877675473109155;  // std dev = 6.32e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.25080168045179047;  // std dev = 2.446, 72.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=63 */
%   | | | else return -0.34724341887609034;  // std dev = 0.757, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.15785044952907848;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.48513262809971336;  // std dev = 0.303, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.21717214133890708;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2610000384309788;  // std dev = 1.062, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.32707476579217154;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.018473805440646234;  // std dev = 2.968, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   else return -0.0732462257633373;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.271862755055675;  // std dev = 0.618, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.39248236534331715;  // std dev = 1.062, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.10807827937744525;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3480250400716853;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( phenotype(A, I), recursion_proteinclass(H, B) )
%   | | | then return -0.15006827616137333;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.032117435085863184;  // std dev = 1.261, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( location(A, J) )
%   | | | then return 0.1255840056832768;  // std dev = 2.898, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | | | else return 0.2555044779086909;  // std dev = 0.739, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06842697784420264;  // std dev = 6.75e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.2325198782922904;  // std dev = 1.874, 98.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=92 */
%   | | | else return -0.17463312495381128;  // std dev = 1.560, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else if ( interaction(A, G), location(G, D) )
%   | | | then return -0.16298394112159859;  // std dev = 0.168, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.3482283078038436;  // std dev = 0.450, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.26348265166728907;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1263362247655145;  // std dev = 1.155, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.10190551717450066;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
Inference time using transfer learning 60.57413291931152
Refined model CLL: -0.184443


******************************************
Best model found
******************************************
Results 

CLL : -0.187698 

AUC ROC : 0.986673 

AUC PR : 0.493836 

Precision : 0.132345 

Recall : 0.909434 

F1 : 0.231064 

Total Learning Time : 18.33665132522583 

Total Inference Time : 13.085636615753174 

Total revision time: 37.91879963874817
Best scored revision CLL: -0.184443


Results 

CLL : -0.187698 

AUC ROC : 0.986673 

AUC PR : 0.493836 

Precision : 0.132345 

Recall : 0.909434 

F1 : 0.231064 

Total Learning Time : 37.970951795578 

Total Inference Time : 13.085636615753174 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7528846263885498
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45945612464199354;  // std dev = 0.490, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3188951567897994;  // std dev = 5.758, 133.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=70 */
%   | else return 0.4592460339827818;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839108;  // std dev = 7.74e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3374678226843854;  // std dev = 0.489, 151.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 8.01e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24996970302809618;  // std dev = 6.127, 155.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783615;  // std dev = 5.67e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19021214610077947;  // std dev = 5.401, 120.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=70 */
%   | else return 0.1370435024619748;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926072;  // std dev = 6.84e-09, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15316477343154497;  // std dev = 5.802, 139.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=83 */
%   | | else return 0.048712884109656435;  // std dev = 2.081, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839683;  // std dev = 5.05e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.08518475138839686;  // std dev = 1.97e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12103038710994368;  // std dev = 0.490, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.04914512871917221;  // std dev = 6.048, 148.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=83 */
%   | else return -0.018080523147630236;  // std dev = 2.129, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 1.61e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06609031403835837;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04239735741342468;  // std dev = 6.213, 159.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.28e-09, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
Inference time using transfer learning 26.12385129928589
Parameter learned model CLL:-0.329055 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 61, 92], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [5.758, 63, 70], 'true,false': [2.708, 11, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.74e-08, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 59, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.127, 63, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.67e-08, 74, 0], 'false,false,false,false': [0.0, 22, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.401, 50, 70], 'true,false': [3.097, 17, 22], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 150, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.802, 56, 83], 'true,true,false': [2.081, 9, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.05e-08, 84, 0], 'false,false,false': [1.97e-08, 40, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.49, 61, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 104, 0], 'false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.048, 65, 83], 'true,false': [2.129, 10, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.61e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.161, 65, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.213, 67, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.28e-09, 139, 0]}]
{'': [0.23973685334700573, -1.4210854715202004e-17], 'false': [nan, -1.4210854715202004e-17]}
{'': [0.24706053128175665, 5.877651306839064e-17], 'true': [0.249307479224378, 0.22222222222222202], 'false': [nan, 5.877651306839064e-17], 'false,false': [nan, 5.877651306839064e-17], 'false,false,false': [nan, 5.877651306839064e-17]}
{'': [0.23863996556626818, 6.452578262778688e-17], 'false': [nan, 6.452578262778688e-17], 'false,false': [nan, 6.452578262778688e-17]}
{'': [0.24216291044829474, 2.1973164029039556e-17], 'true': [nan, 0.24216291044829474], 'false': [nan, 2.1973164029039556e-17], 'false,false': [nan, 2.1973164029039556e-17], 'false,false,false': [4.350874015422911e-17, -1.261617073437678e-18]}
{'': [0.244274322400536, 4.7369515717340015e-17], 'true': [0.24305555555555594, 0.24589086127547674], 'false': [nan, 4.7369515717340015e-17]}
{'': [0.24309019654996022, 3.4918304806758956e-17], 'true': [0.24309019654996022, nan], 'true,true': [0.24217138624839935, 0.2405261073282071], 'false': [nan, 3.4918304806758956e-17], 'false,false': [3.0398963769498337e-17, 9.714451465470119e-18]}
{'': [0.24021831942593294, 4.108699382471052e-17], 'true': [0.24021831942593294, nan], 'false': [nan, 4.108699382471052e-17], 'false,false': [3.416070845000482e-17, 0.0]}
{'': [0.24664595596090463, 2.7988815746852687e-18], 'true': [0.24716952633556608, 0.2385625005583411], 'false': [nan, 2.7988815746852687e-18], 'false,false': [nan, 2.7988815746852687e-18]}
{'': [0.24173972422459494, 2.5005023077143166e-17], 'true': [0.24173972422459494, nan], 'false': [nan, 2.5005023077143166e-17], 'false,false': [nan, 2.5005023077143166e-17]}
{'': [0.24279637575057333, 4.792329602698518e-18], 'true': [0.24279637575057333, nan], 'false': [nan, 4.792329602698518e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.767326354980469
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.3983788201569827;  // std dev = 4.649, 87.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=47 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7503544807003385;  // std dev = 0.141, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.246303804497856;  // std dev = 1.980, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.37749017002192;  // std dev = 5.227, 112.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=65 */
%   else return -0.12544463852839127;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5882885489115078;  // std dev = 0.186, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.21591253281412798;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, E), complex(E, F) )
%   | | | then return 0.19707180099746427;  // std dev = 3.664, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | | else return 0.33543504308934285;  // std dev = 4.476, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.4020833482733672;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4994596106878257;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.2500640038838146;  // std dev = 0.192, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19107709953909988;  // std dev = 1.757, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.09291609797675703;  // std dev = 2.830, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.2541134074786454;  // std dev = 4.816, 97.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=57 */
%   else if ( interaction(I, A) )
%   | then return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( location(D, E), recursion_proteinclass(D, B) )
%   | | | then return 0.365625364436679;  // std dev = 0.222, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.02521410163760216;  // std dev = 2.065, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( phenotype(D, G), interaction(D, H) )
%   | | | then return 0.46727461934707515;  // std dev = 1.631, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.18612862776325215;  // std dev = 2.375, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3578101789536546;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.046393589691047205;  // std dev = 2.808, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.14892067777237764;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   else if ( interaction(A, L) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(A, F), interaction(G, D) )
%   | | then if ( interaction(A, H), phenotype(G, I) )
%   | | | then return 0.09859397472618467;  // std dev = 1.484, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.3726227177146016;  // std dev = 1.495, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( enzyme(A, J), location(A, E) )
%   | | | then return 0.1804639467131831;  // std dev = 2.240, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.050265603185930346;  // std dev = 3.739, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.30567181226683465;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.01792825776496869;  // std dev = 3.273, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return -0.1242203935599672;  // std dev = 1.453, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( interaction(N, A) )
%   | then return -0.08518475138839682;  // std dev = 5.43e-09, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.08518475138839693;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( interaction(D, F), location(A, G) )
%   | | | then return 0.02553798686530296;  // std dev = 2.171, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.25824736735106496;  // std dev = 1.697, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( enzyme(E, H), phenotype(E, I) )
%   | | | then return 0.31882278846377116;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.07312660953848897;  // std dev = 3.720, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, L), interaction(J, L) )
%   | | | then return 0.08888252256633102;  // std dev = 2.444, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.2951632926750738;  // std dev = 1.474, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.01631400422636744;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.46317077947411855;  // std dev = 0.954, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.07877675473109154;  // std dev = 6.32e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( interaction(H, G), phenotype(H, I) )
%   | | | then return 0.013222734586423892;  // std dev = 3.395, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | | | else return 0.31190259514565116;  // std dev = 1.392, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( enzyme(A, J), complex(D, K) )
%   | | | then return 0.0684100824859923;  // std dev = 1.769, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.4092701779913093;  // std dev = 1.116, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.0949827478443049;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.1519136521536035;  // std dev = 2.344, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( complex(A, Q) )
%   | | | then return -0.10212822702862495;  // std dev = 1.406, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.27675274467862193;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.0732462257633371;  // std dev = 3.23e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A), location(A, F) )
%   | | | then return 0.20832214039229302;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16286787112278106;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.4216703359095292;  // std dev = 1.165, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.4976387846746135;  // std dev = 0.651, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), enzyme(J, I) )
%   | | | then return -0.15186839102011998;  // std dev = 0.664, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.007781644620041678;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.19244924052847842;  // std dev = 2.609, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.08233242673361929;  // std dev = 2.720, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else return -0.06842697784420265;  // std dev = 5.10e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.4691997514417186;  // std dev = 0.362, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10952014966340028;  // std dev = 0.690, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, G), phenotype(D, H) )
%   | | | then return -0.03386878575408031;  // std dev = 1.943, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.10649200932605779;  // std dev = 2.242, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3664514910362735;  // std dev = 0.624, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.4917651400189867;  // std dev = 0.552, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.07128183527538073;  // std dev = 1.801, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.06966478865231056;  // std dev = 2.356, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   else return -0.06419184008202626;  // std dev = 1.61e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
Inference time using transfer learning 12.256526708602905
Refined model CLL: -0.261377


******************************************
Best model found
******************************************
Results 

CLL : -0.258019 

AUC ROC : 0.961611 

AUC PR : 0.155079 

Precision : 0.053564 

Recall : 0.938628 

F1 : 0.101345 

Total Learning Time : 5.767326354980469 

Total Inference Time : 2.6168394088745117 

Total revision time: 13.304589986801147
Best scored revision CLL: -0.261377


Results 

CLL : -0.258019 

AUC ROC : 0.961611 

AUC PR : 0.155079 

Precision : 0.053564 

Recall : 0.938628 

F1 : 0.101345 

Total Learning Time : 13.356742143630981 

Total Inference Time : 2.6168394088745117 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8302874565124512
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4512523833753721;  // std dev = 0.491, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.54e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.35297992153120633;  // std dev = 5.595, 127.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=71 */
%   | else return 0.4757429852391505;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29143654093215393;  // std dev = 0.496, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2335437839933655;  // std dev = 6.090, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19280587176919967;  // std dev = 5.479, 123.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=71 */
%   | else return 0.07000936427593032;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 6.04e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15551856745583162;  // std dev = 5.679, 133.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=78 */
%   | | else return 0.013499837246431022;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09680697911329568;  // std dev = 0.495, 153.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.12546218404701842;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=78 */
%   | else return 0.012412876921592911;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 3.73e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.012222660932099923;  // std dev = 6.351, 162.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420267;  // std dev = 4.47e-09, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03146917754269344;  // std dev = 6.187, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
Inference time using transfer learning 26.565633058547974
Parameter learned model CLL:-0.316405 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 59, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [5.595, 56, 71], 'true,false': [2.185, 7, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 66, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.09, 65, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27e-08, 89, 0], 'false,false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.479, 52, 71], 'true,false': [2.782, 16, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.04e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.679, 55, 78], 'true,true,false': [2.108, 10, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 101, 0], 'false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.495, 67, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 104, 0], 'false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.451, 48, 78], 'true,false': [2.058, 9, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.73e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.351, 76, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.47e-09, 83, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.187, 70, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 103, 0]}]
{'': [0.2413317479191459, 7.259150545626024e-17], 'false': [nan, 7.259150545626024e-17]}
{'': [0.24404306112337326, -6.22554967079527e-18], 'true': [0.24651249302498582, 0.2169421487603305], 'false': [nan, -6.22554967079527e-18], 'false,false': [nan, -6.22554967079527e-18], 'false,false,false': [nan, -6.22554967079527e-18]}
{'': [0.24603998599344232, 6.877487763164686e-17], 'false': [nan, 6.877487763164686e-17], 'false,false': [nan, 6.877487763164686e-17]}
{'': [0.24562843308021132, -4.0742129344042444e-18], 'true': [nan, 0.24562843308021132], 'false': [nan, -4.0742129344042444e-18], 'false,false': [nan, -4.0742129344042444e-18], 'false,false,false': [3.118604001756058e-17, -1.3877787807814458e-18]}
{'': [0.24760745019757674, 3.633457171500512e-17], 'true': [0.24403463546830584, 0.24973985431841852], 'false': [nan, 3.633457171500512e-17]}
{'': [0.24516464476374755, 3.34981085016211e-17], 'true': [0.24516464476374755, nan], 'true,true': [0.24252316363579646, 0.24691722535915872], 'false': [nan, 3.34981085016211e-17], 'false,false': [3.0778460088618204e-17, -1.8503717077085942e-18]}
{'': [0.24529969074306238, 4.011730257048885e-17], 'true': [0.24529969074306238, nan], 'false': [nan, 4.011730257048885e-17], 'false,false': [3.416070845000482e-17, 0.0]}
{'': [0.23874864592385492, 1.351575856065408e-17], 'true': [0.23582744325338006, 0.24913908497117787], 'false': [nan, 1.351575856065408e-17], 'false,false': [nan, 1.351575856065408e-17]}
{'': [0.24902049321235972, 2.00642715293703e-17], 'true': [0.24902049321235972, nan], 'false': [nan, 2.00642715293703e-17], 'false,false': [nan, 2.00642715293703e-17]}
{'': [0.2453534093273126, -1.509041004344873e-17], 'true': [0.2453534093273126, nan], 'false': [nan, -1.509041004344873e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.290980815887451
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.47135648226932425;  // std dev = 5.014, 106.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=65 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7554259819244267;  // std dev = 0.142, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1409528334544568;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.32633500411070365;  // std dev = 2.403, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.5006313516021966;  // std dev = 2.203, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.32123583686824936;  // std dev = 4.380, 77.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   else return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5936022504691005;  // std dev = 0.188, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.3197521045791861;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6424666667074084;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.11215544676643006;  // std dev = 2.686, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.2900606285067578;  // std dev = 4.775, 93.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=52 */
%   else return -0.11231637819360618;  // std dev = 8.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.422131839124841;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5268302807687869;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return -0.15942934550382057;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.24016545983421297;  // std dev = 1.453, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.22536383229662757;  // std dev = 4.134, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.3438704539882324;  // std dev = 2.825, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   else if ( interaction(J, A) )
%   | then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, E) )
%   | | | then return 0.3594989671397347;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.44949839675990083;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30379119691390505;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.41877191512979506;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0472135684857424;  // std dev = 3.125, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1192533062425171;  // std dev = 2.199, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.2335021726544515;  // std dev = 3.775, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926101;  // std dev = 2.28e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926101;  // std dev = 3.73e-09, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24600494782613228;  // std dev = 0.800, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.00760691651824077;  // std dev = 4.021, 73.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
%   | | else if ( phenotype(A, I), phenotype(D, J) )
%   | | | then return 0.3697817488802085;  // std dev = 1.568, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.0804615103621529;  // std dev = 2.183, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.5910068522598898;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1847004470727214;  // std dev = 1.636, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.3782052074709298;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(N, A) )
%   | then return -0.08518475138839682;  // std dev = 5.27e-09, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.08518475138839693;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.3523924107280355;  // std dev = 0.345, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(D, G), interaction(A, H) )
%   | | | then return -0.1606162228288392;  // std dev = 1.375, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.012020826190368377;  // std dev = 2.355, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.47612674702298996;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14269568517352582;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.08943306862965747;  // std dev = 3.356, 60.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=35 */
%   | | | else return 0.1692757809711686;  // std dev = 2.645, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   else if ( interaction(P, A) )
%   | then return -0.07877675473109161;  // std dev = 5.51e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.37223401454066035;  // std dev = 0.364, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, F), interaction(G, A) )
%   | | | then return -0.03917311584383616;  // std dev = 2.034, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.2930529607028706;  // std dev = 1.429, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.08438710637201867;  // std dev = 2.005, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.19492042232283488;  // std dev = 1.512, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.06970030530319177;  // std dev = 1.932, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.15712373764808182;  // std dev = 3.451, 56.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   else return -0.07324622576333706;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.07233114468309769;  // std dev = 0.659, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.46638523185555303;  // std dev = 0.355, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( enzyme(G, D), complex(G, H) )
%   | | | then return -0.5920144610639839;  // std dev = 0.248, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.4871269490019995;  // std dev = 0.365, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3071265102586755;  // std dev = 0.596, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.0461064546099625;  // std dev = 2.965, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.19021182971232783;  // std dev = 1.605, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.04414948350966693;  // std dev = 2.959, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.04879264919601727;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.17393095463613967;  // std dev = 1.148, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1034712246125504;  // std dev = 2.204, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return 0.3725758692668305;  // std dev = 0.821, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return 0.13192671242563983;  // std dev = 2.046, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.08180974848071337;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.044216550619507966;  // std dev = 2.181, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return -0.09202290041628354;  // std dev = 2.219, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 16.23827362060547
Refined model CLL: -0.277512


******************************************
Best model found
******************************************
Results 

CLL : -0.258999 

AUC ROC : 0.930291 

AUC PR : 0.154714 

Precision : 0.044872 

Recall : 0.717314 

F1 : 0.08446 

Total Learning Time : 5.290980815887451 

Total Inference Time : 2.4777886867523193 

Total revision time: 12.186244010925293
Best scored revision CLL: -0.277512


Results 

CLL : -0.258999 

AUC ROC : 0.930291 

AUC PR : 0.154714 

Precision : 0.044872 

Recall : 0.717314 

F1 : 0.08446 

Total Learning Time : 12.238396167755127 

Total Inference Time : 2.4777886867523193 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.2316954135894775
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4381489350995099;  // std dev = 0.494, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4246318081335356;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | else return 0.3618498532463176;  // std dev = 4.321, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839108;  // std dev = 7.88e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3047147428576557;  // std dev = 0.494, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.90e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2518883425770506;  // std dev = 5.959, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18068837403357338;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | else return 0.15337223512842144;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926092;  // std dev = 5.74e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17051347069259332;  // std dev = 4.917, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | | else return 0.08843617145161704;  // std dev = 3.426, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.65e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.08518475138839685;  // std dev = 2.98e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10026523137776205;  // std dev = 0.494, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109176;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.05899074821526871;  // std dev = 5.193, 111.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | else return 0.051641902318954276;  // std dev = 3.397, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07360470265499834;  // std dev = 5.979, 148.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05848052636199659;  // std dev = 5.961, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning 26.457962036132812
Parameter learned model CLL:-0.33237 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 63, 87], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [4.043, 26, 44], 'true,false': [4.321, 33, 43], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.88e-08, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 63, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.9e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.959, 60, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 59, 0], 'false,false,false,false': [0.0, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.265, 31, 44], 'true,false': [4.427, 36, 43], 'false,true': [0.0, 0, 0], 'false,false': [5.74e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.917, 40, 63], 'true,true,false': [3.426, 22, 24], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.65e-08, 60, 0], 'false,false,false': [2.98e-08, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.494, 64, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 58, 0], 'false,false,false': [0.0, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.193, 48, 63], 'true,false': [3.397, 21, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.979, 61, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.961, 60, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 104, 0]}]
{'': [0.24360000000000212, 2.6569439905559303e-17], 'false': [nan, 2.6569439905559303e-17]}
{'': [0.24080502908613327, 5.86532918669894e-17], 'true': [0.23346938775510273, 0.24567174515235535], 'false': [nan, 5.86532918669894e-17], 'false,false': [nan, 5.86532918669894e-17], 'false,false,false': [nan, 5.86532918669894e-17]}
{'': [0.24365254408133694, 6.508203937457814e-17], 'false': [nan, 6.508203937457814e-17], 'false,false': [nan, 6.508203937457814e-17]}
{'': [0.24157649893661873, -4.163336342344337e-17], 'true': [nan, 0.24157649893661873], 'false': [nan, -4.163336342344337e-17], 'false,false': [nan, -4.163336342344337e-17], 'false,false,false': [-3.010774304068221e-17, -2.0947604238210502e-17]}
{'': [0.2455215038640996, 3.2468786569226275e-17], 'true': [0.24248888888888936, 0.248037173529883], 'false': [nan, 3.2468786569226275e-17]}
{'': [0.24250133413278796, 3.300663046182898e-17], 'true': [0.24250133413278796, nan], 'true,true': [0.2347712620500523, 0.2551530720901209], 'false': [nan, 3.300663046182898e-17], 'false,false': [2.2204460492503132e-17, 1.7415263131375004e-17]}
{'': [0.24447215096601155, 3.631570641297241e-17], 'true': [0.24447215096601155, nan], 'false': [nan, 3.631570641297241e-17], 'false,false': [7.656710514656252e-18, 0.0]}
{'': [0.24682640589984287, -4.353815782843751e-18], 'true': [0.24290327020900895, 0.25646504692122657], 'false': [nan, -4.353815782843751e-18], 'false,false': [nan, -4.353815782843751e-18]}
{'': [0.24154945289568952, 2.6122894697062506e-17], 'true': [0.24154945289568952, nan], 'false': [nan, 2.6122894697062506e-17], 'false,false': [nan, 2.6122894697062506e-17]}
{'': [0.24174006842952292, -1.6012832085939756e-17], 'true': [0.24174006842952292, nan], 'false': [nan, -1.6012832085939756e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.70737361907959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( phenotype(A, G), phenotype(E, G) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.4025933795439561;  // std dev = 4.725, 90.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=49 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B), phenotype(E, F) )
%   | | then return 0.7589791247510738;  // std dev = 0.123, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2267556560288786;  // std dev = 2.448, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.08169176553758356;  // std dev = 2.029, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(A, J), complex(H, K) )
%   | | | then return 0.5620270419316878;  // std dev = 1.726, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.4115801140200182;  // std dev = 2.970, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.22523454019249706;  // std dev = 2.127, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.36891664173545247;  // std dev = 2.682, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6543255565877288;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7366446395908991;  // std dev = 0.153, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.1716226593786;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.27068631097682067;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), interaction(I, A) )
%   | | | then return 0.5455910007205133;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6814076378732189;  // std dev = 0.150, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.3379111485266845;  // std dev = 4.581, 92.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   | | | else return 0.0994378100121603;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else return -0.11231637819360622;  // std dev = 7.88e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.26501951089483633;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, G), interaction(A, H) )
%   | | | then return 0.43861388542766494;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6304281371425259;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.07987055870119189;  // std dev = 1.251, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.19266721235227818;  // std dev = 1.850, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.4633783956478225;  // std dev = 1.141, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.21659610835261306;  // std dev = 4.760, 99.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=54 */
%   else if ( interaction(A, M) )
%   | then return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4215233226331269;  // std dev = 0.853, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.3031463128685158;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.17702925893925167;  // std dev = 1.076, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.024879619995203637;  // std dev = 2.396, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.43936744443053494;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.3029695989782379;  // std dev = 1.075, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.1722948636673683;  // std dev = 4.501, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   else if ( interaction(A, M) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(A, F), location(D, E) )
%   | | then if ( interaction(D, G), enzyme(D, H) )
%   | | | then return -0.017029184154442455;  // std dev = 1.181, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3214054053983361;  // std dev = 0.861, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.23399967039882796;  // std dev = 1.448, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.09574479032790283;  // std dev = 2.841, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.45475644137782206;  // std dev = 0.293, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3810428695677865;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1425988097921567;  // std dev = 2.251, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.28106560999752545;  // std dev = 2.755, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   else return -0.0851847513883968;  // std dev = 5.89e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(F, D) )
%   | | then return 0.11552363534280245;  // std dev = 0.489, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.287868793207832;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39046493815524763;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, A), phenotype(I, J) )
%   | | | then return 0.16131304651990375;  // std dev = 1.603, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -0.003266210415942542;  // std dev = 3.126, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.0908241124885505;  // std dev = 2.751, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return 0.21672582953622155;  // std dev = 2.466, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   else if ( interaction(A, M) )
%   | then return -0.07877675473109177;  // std dev = 1.86e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07877675473109179;  // std dev = 1.32e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.34843339541770635;  // std dev = 0.456, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.10049215701348142;  // std dev = 0.981, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.3249344385472666;  // std dev = 0.358, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.09587281349354777;  // std dev = 4.630, 102.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.16900604542336592;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.11670502339809581;  // std dev = 0.658, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.02010324504281259;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), phenotype(A, F) )
%   | | then if ( location(E, D), interaction(E, E) )
%   | | | then return 0.026743878864797076;  // std dev = 1.051, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.23955652027553404;  // std dev = 1.330, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( location(E, D), enzyme(A, G) )
%   | | | then return 0.09826752429097206;  // std dev = 2.101, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return -0.026181402393660114;  // std dev = 4.251, 85.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=43 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.4320444480697088;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06329767487293576;  // std dev = 0.495, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26214746228997277;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06842697784420265;  // std dev = 4.66e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21041007417569385;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18125760332757318;  // std dev = 0.440, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.3264435891404677;  // std dev = 0.843, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.08234732067264973;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.08207498559363545;  // std dev = 4.347, 101.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=63 */
%   | | | else return -0.482021604595973;  // std dev = 0.446, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.20804112715082484;  // std dev = 0.803, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
Inference time using transfer learning 13.950729131698608
Refined model CLL: -0.256586


******************************************
Best model found
******************************************
Results 

CLL : -0.258072 

AUC ROC : 0.949199 

AUC PR : 0.203253 

Precision : 0.045071 

Recall : 0.87234 

F1 : 0.085714 

Total Learning Time : 7.70737361907959 

Total Inference Time : 3.8625104427337646 

Total revision time: 21.32347583770752
Best scored revision CLL: -0.256586


Results 

CLL : -0.258072 

AUC ROC : 0.949199 

AUC PR : 0.203253 

Precision : 0.045071 

Recall : 0.87234 

F1 : 0.085714 

Total Learning Time : 21.349477767944336 

Total Inference Time : 3.8625104427337646 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.198037624359131
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46633606960243357;  // std dev = 0.488, 171.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3988080092095429;  // std dev = 6.235, 163.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=99 */
%   | else return 0.5057317603050716;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283913;  // std dev = 5.16e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3184475499880232;  // std dev = 0.489, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360629;  // std dev = 6.84e-09, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24912867062273147;  // std dev = 6.445, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783642;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.20191260612481812;  // std dev = 6.205, 162.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=99 */
%   | else return 0.18972379005582596;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926067;  // std dev = 6.59e-09, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15471059078102756;  // std dev = 6.276, 166.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=102 */
%   | | else return 0.5176507023312938;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06514021764946333;  // std dev = 0.496, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109153;  // std dev = 7.74e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08951348072586514;  // std dev = 6.355, 169.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=102 */
%   | else return 0.3746875981706774;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333722;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08050051945171896;  // std dev = 6.276, 168.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.024469512944943476;  // std dev = 6.582, 178.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
Inference time using transfer learning 21.06386637687683
Parameter learned model CLL:-0.344103 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.488, 67, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 129, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [6.235, 64, 99], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.16e-08, 152, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 69, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.84e-09, 156, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.445, 69, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 136, 0], 'false,false,false,false': [0.0, 14, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.205, 63, 99], 'true,false': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 159, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [6.276, 64, 102], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.05e-08, 111, 0], 'false,false,false': [0.0, 2, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.496, 80, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 139, 0], 'false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.355, 67, 102], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 138, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.276, 64, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 149, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.582, 74, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 138, 0]}]
{'': [0.23829554392804936, -3.0982968129074136e-17], 'false': [nan, -3.0982968129074136e-17]}
{'': [0.23750865051902906, 1.7529837230923523e-17], 'true': [0.2384734088599475, 0.20408163265306126], 'false': [nan, 1.7529837230923523e-17], 'false,false': [nan, 1.7529837230923523e-17], 'false,false,false': [nan, 1.7529837230923523e-17]}
{'': [0.23942727302209604, 4.839433697084016e-17], 'false': [nan, 4.839433697084016e-17], 'false,false': [nan, 4.839433697084016e-17]}
{'': [0.24008975117109338, -5.773159728050814e-17], 'true': [nan, 0.24008975117109338], 'false': [nan, -5.773159728050814e-17], 'false,false': [nan, -5.773159728050814e-17], 'false,false,false': [-4.408238480129298e-17, -7.93016446160826e-18]}
{'': [0.2375066623923656, 4.1895208476421005e-17], 'true': [0.23765432098765432, 0.234375], 'false': [nan, 4.1895208476421005e-17]}
{'': [0.23601642082314375, 3.3404940563942766e-17], 'true': [0.23601642082314375, nan], 'true,true': [0.23729183115155142, 0.0], 'false': [nan, 3.3404940563942766e-17], 'false,false': [3.300663046182898e-17, 0.0]}
{'': [0.24582443866693351, 4.455997173665594e-17], 'true': [0.24582443866693351, nan], 'false': [nan, 4.455997173665594e-17], 'false,false': [4.313096642428666e-17, -2.6020852139652106e-18]}
{'': [0.23709988071421018, -1.769920763895177e-17], 'true': [0.2389546353247585, 0.0], 'false': [nan, -1.769920763895177e-17], 'false,false': [nan, -1.769920763895177e-17]}
{'': [0.23447824404506482, 2.905952883247054e-17], 'true': [0.23447824404506482, nan], 'false': [nan, 2.905952883247054e-17], 'false,false': [nan, 2.905952883247054e-17]}
{'': [0.24335047734633308, -1.2872151010146743e-17], 'true': [0.24335047734633308, nan], 'false': [nan, -1.2872151010146743e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.434574604034424
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.3707539771163201;  // std dev = 5.453, 119.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=61 */
%   | | | else return 0.4914822684328456;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(D, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7275971321409967;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7300259165602674;  // std dev = 1.369, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.19794801940692452;  // std dev = 0.048, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.4786160052906987;  // std dev = 2.787, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.3191428982053104;  // std dev = 4.170, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   else return -0.12544463852839116;  // std dev = 7.60e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), phenotype(A, E) )
%   | | then return 0.2248891625973239;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6129485703450416;  // std dev = 0.148, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B), interaction(G, F) )
%   | | | then return 0.5840902054534641;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13388031345748552;  // std dev = 4.063, 74.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=30 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1916203461835782;  // std dev = 2.775, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.37603380776503853;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   else return -0.11231637819360617;  // std dev = 1.03e-07, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then return 0.24770451405286567;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.46699726489056953;  // std dev = 0.160, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.22571828471411404;  // std dev = 3.368, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.35296599128316597;  // std dev = 2.682, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.09464841056347156;  // std dev = 1.303, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19067371668654517;  // std dev = 3.629, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   else if ( interaction(J, A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), phenotype(D, F) )
%   | | then if ( complex(D, G), interaction(D, E) )
%   | | | then return 0.5612230268200049;  // std dev = 0.588, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.31623454468570916;  // std dev = 0.996, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, D), phenotype(D, H) )
%   | | | then return -0.32895499768735814;  // std dev = 0.281, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.2032887659947235;  // std dev = 4.633, 108.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=66 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.24164763160187733;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.4937183104566745;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5932690110110075;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, L) )
%   | then return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.24993694757564658;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.33367192688853425;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34262732231031645;  // std dev = 0.176, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08433449578834233;  // std dev = 5.714, 158.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=80 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.08518475138839689;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.08518475138839694;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08518475138839685;  // std dev = 4.06e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(A, A), complex(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2014211466654015;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2909859012328877;  // std dev = 0.081, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, A), interaction(D, H) )
%   | | | then return 0.07239741371191082;  // std dev = 3.541, 77.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return -0.0841628872108703;  // std dev = 1.457, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2102226160376591;  // std dev = 3.570, 68.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=48 */
%   | | | else return -0.42886992410613256;  // std dev = 0.195, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.46435732569487076;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(K, A) )
%   | then return -0.07877675473109155;  // std dev = 6.11e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, E) )
%   | | | then return 0.29043241252985336;  // std dev = 1.797, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return -0.004396282322309438;  // std dev = 4.966, 143.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=66 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.19521621011839105;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.019270309812573116;  // std dev = 1.357, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0.4427435225536783;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07324622576333717;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.22824637954512944;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16989092027886973;  // std dev = 1.255, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.0042088906326155865;  // std dev = 1.710, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.1963826876974631;  // std dev = 1.291, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.226128224295647;  // std dev = 3.500, 94.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=73 */
%   | | | else return -0.3321300527920024;  // std dev = 0.300, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08930422480175111;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14635758133830437;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(G, A) )
%   | | then if ( enzyme(D, H), phenotype(A, E) )
%   | | | then return 0.23114925088270086;  // std dev = 0.665, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.02580188254615736;  // std dev = 2.777, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.00603072784859271;  // std dev = 1.269, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.3255326472548928;  // std dev = 0.758, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(A, M), enzyme(K, N) )
%   | | | then return -0.213294720680446;  // std dev = 0.708, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0071805971614189315;  // std dev = 4.078, 86.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   | | else if ( complex(A, P), enzyme(A, Q) )
%   | | | then return -0.007651925590161379;  // std dev = 0.519, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14168972271159805;  // std dev = 1.992, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
Inference time using transfer learning 15.313668012619019
Refined model CLL: -0.244914


******************************************
Best model found
******************************************
Results 

CLL : -0.259244 

AUC ROC : 0.945715 

AUC PR : 0.157756 

Precision : 0.045366 

Recall : 0.883019 

F1 : 0.086299 

Total Learning Time : 9.434574604034424 

Total Inference Time : 4.883656024932861 

Total revision time: 20.749629735946655
Best scored revision CLL: -0.244914


Results 

CLL : -0.259244 

AUC ROC : 0.945715 

AUC PR : 0.157756 

Precision : 0.045366 

Recall : 0.883019 

F1 : 0.086299 

Total Learning Time : 20.77563166618347 

Total Inference Time : 4.883656024932861 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6675379276275635
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.440427416112168;  // std dev = 0.493, 158.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.34498599726528967;  // std dev = 4.193, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | else return 0.38457911150629126;  // std dev = 4.668, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3078709092228647;  // std dev = 0.494, 159.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2655655644014607;  // std dev = 6.062, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.10159632948783626;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.21790804550351356;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | else return 0.13441522360107389;  // std dev = 4.962, 99.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 6.32e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2060304972510261;  // std dev = 4.678, 96.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=62 */
%   | | else return 0.09978868073477032;  // std dev = 3.751, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.36e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08518475138839683;  // std dev = 3.87e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.15434545515849935;  // std dev = 0.481, 145.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109177;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.11684469496147758;  // std dev = 4.671, 96.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=62 */
%   | else return 0.01879033978497621;  // std dev = 3.819, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.01669046425956412;  // std dev = 6.373, 166.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.75e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09365421825202853;  // std dev = 5.750, 145.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 11.552725553512573
Parameter learned model CLL:-0.342054 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 66, 92], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [4.193, 32, 39], 'true,false': [4.668, 37, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 67, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.062, 61, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 32, 0], 'false,false,false,false': [2.98e-08, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.903, 25, 39], 'true,false': [4.962, 46, 53], 'false,true': [0.0, 0, 0], 'false,false': [6.32e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'phenotype(A, G)'}, {'true,true,true': [4.678, 34, 62], 'true,true,false': [3.751, 26, 30], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.36e-08, 43, 0], 'false,false,false': [3.87e-08, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'phenotype(A, F)'}, {'true,true': [0.481, 53, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 49, 0], 'false,false,false': [1.49e-08, 55, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.671, 34, 62], 'true,false': [3.819, 28, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.86e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.373, 74, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 97, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.75, 53, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 109, 0]}]
{'': [0.24323025156225206, 6.00120553851436e-17], 'false': [nan, 6.00120553851436e-17]}
{'': [0.24489795918367357, -3.929993007522678e-18], 'true': [0.24756992660186447, 0.2420987654321], 'false': [nan, -3.929993007522678e-18], 'false,false': [nan, -3.929993007522678e-18], 'false,false,false': [nan, -3.929993007522678e-18]}
{'': [0.24402733072763555, 6.950961545479241e-17], 'false': [nan, 6.950961545479241e-17], 'false,false': [nan, 6.950961545479241e-17]}
{'': [0.24016127402626872, 4.06179155350667e-17], 'true': [nan, 0.24016127402626872], 'false': [nan, 4.06179155350667e-17], 'false,false': [nan, 4.06179155350667e-17], 'false,false,false': [-1.734723475976807e-18, 1.7763568394002505e-17]}
{'': [0.24620619948722577, 3.992907369265914e-17], 'true': [0.2380371093750003, 0.2487501275380074], 'false': [nan, 3.992907369265914e-17]}
{'': [0.23916934426499226, 3.112774835397635e-17], 'true': [0.23916934426499226, nan], 'true,true': [0.22797761362334654, 0.251226332278938], 'false': [nan, 3.112774835397635e-17], 'false,false': [1.290957005378089e-17, 2.3418766925686896e-17]}
{'': [0.2313875986313631, 3.416070845000482e-17], 'true': [0.2313875986313631, nan], 'false': [nan, 3.416070845000482e-17], 'false,false': [0.0, 4.037174635000569e-18]}
{'': [0.2386228609115436, 2.846725704167068e-18], 'true': [0.22723381258323797, 0.25148014737695246], 'false': [nan, 2.846725704167068e-18], 'false,false': [nan, 2.846725704167068e-18]}
{'': [0.24470282251282846, 2.2891196384023845e-17], 'true': [0.24470282251282846, nan], 'false': [nan, 2.2891196384023845e-17], 'false,false': [nan, 2.2891196384023845e-17]}
{'': [0.22804444263362245, -1.5787575120816447e-17], 'true': [0.22804444263362245, nan], 'false': [nan, -1.5787575120816447e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;phenotype(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;phenotype(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;phenotype(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.423918962478638
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.34201990284144784;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3902590268426306;  // std dev = 5.209, 109.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=58 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7325805735367481;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13815014721646235;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.34390666032862727;  // std dev = 5.764, 134.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=72 */
%   else return -0.12544463852839105;  // std dev = 8.02e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, D) )
%   | | | then return 0.5929273494436333;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7459001801482702;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.25392513071072176;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5742488665456015;  // std dev = 0.156, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.11506730188317962;  // std dev = 2.527, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.3118927284211382;  // std dev = 4.660, 92.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   else return -0.11231637819360618;  // std dev = 1.00e-07, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.4332578075138183;  // std dev = 0.124, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then if ( interaction(F, G), complex(G, E) )
%   | | | then return 0.3906524693323957;  // std dev = 1.302, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.05622419931143599;  // std dev = 2.492, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.5149084405752901;  // std dev = 1.212, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.23518650811193748;  // std dev = 4.408, 84.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=47 */
%   else if ( phenotype(A, J) )
%   | then return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), location(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3782857489739856;  // std dev = 1.069, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.05123814593123883;  // std dev = 2.603, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.19405657721442449;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1277142388521191;  // std dev = 2.007, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(L, M), location(L, N) )
%   | | | then return 0.22961951025259028;  // std dev = 2.773, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.04142892607604279;  // std dev = 2.452, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( complex(A, P), enzyme(A, Q) )
%   | | | then return 0.04235508217500566;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3797438078259974;  // std dev = 2.073, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   else return -0.09269127618926101;  // std dev = 3.73e-09, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, D), enzyme(E, F) )
%   | | then if ( interaction(E, E), complex(A, G) )
%   | | | then return 0.1434395763176959;  // std dev = 1.600, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.36107627754614363;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, D) )
%   | | | then return -0.021240623651797567;  // std dev = 2.944, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.13544291368472133;  // std dev = 2.163, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.25157263298233346;  // std dev = 0.629, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5016973242178662;  // std dev = 0.348, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.25941612293894095;  // std dev = 1.883, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.13433104506414295;  // std dev = 3.250, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   else return -0.0851847513883968;  // std dev = 5.89e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), location(A, E) )
%   | | then return 0.19958145406031447;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.26474573320895484;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31863909000565327;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G), interaction(H, H) )
%   | | | then return -0.22936090883934587;  // std dev = 0.980, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.0690816969796293;  // std dev = 4.218, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.0652352377616639;  // std dev = 1.831, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.20916356294802552;  // std dev = 2.803, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   else if ( phenotype(A, K) )
%   | then return -0.0787767547310918;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07877675473109179;  // std dev = 1.32e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.20336725410255174;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.45478365944798516;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, E), enzyme(A, F) )
%   | | | then return -0.2998091960203428;  // std dev = 0.868, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06513288777381877;  // std dev = 4.039, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.43402280686415007;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -8.81038234671431E-4;  // std dev = 1.523, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.15372082062772738;  // std dev = 2.837, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   else return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return -0.07099097836771874;  // std dev = 0.541, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, F), phenotype(D, G) )
%   | | | then return 0.05132725682160715;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.24722612912017686;  // std dev = 1.620, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(H, I), enzyme(A, J) )
%   | | | then return -0.02986784286649402;  // std dev = 2.078, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return 0.09595176421490496;  // std dev = 3.892, 72.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.18766405231093491;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.15977284573897627;  // std dev = 2.326, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else if ( interaction(A, M) )
%   | then return -0.0684269778442027;  // std dev = 2.63e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06842697784420268;  // std dev = 3.36e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.262169842900785;  // std dev = 0.453, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.4751988248170897;  // std dev = 0.318, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.35198436562141205;  // std dev = 0.167, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.41471232916018735;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), location(I, J) )
%   | | | then return -0.018968241172428846;  // std dev = 3.048, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return -0.13621259759930415;  // std dev = 2.330, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.04665676291189257;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1553980773327191;  // std dev = 1.653, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 10.931254148483276
Refined model CLL: -0.25745


******************************************
Best model found
******************************************
Results 

CLL : -0.255848 

AUC ROC : 0.94637 

AUC PR : 0.149463 

Precision : 0.043063 

Recall : 0.862816 

F1 : 0.082032 

Total Learning Time : 5.423918962478638 

Total Inference Time : 2.5010721683502197 

Total revision time: 11.9460768699646
Best scored revision CLL: -0.25745


Results 

CLL : -0.255848 

AUC ROC : 0.94637 

AUC PR : 0.149463 

Precision : 0.043063 

Recall : 0.862816 

F1 : 0.082032 

Total Learning Time : 11.972078800201416 

Total Inference Time : 2.5010721683502197 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.9973695278167725
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4905018762759808;  // std dev = 0.482, 136.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.74e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4294044703397073;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=52 */
%   | else return 0.32711170138027346;  // std dev = 3.956, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3085270831622256;  // std dev = 0.491, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23771726593346176;  // std dev = 5.941, 146.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.19446038192832213;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   | else return 0.2611855349186273;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926096;  // std dev = 4.93e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.0652793861607262;  // std dev = 5.655, 129.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=68 */
%   | | else return 0.0872079378529519;  // std dev = 2.872, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 5.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.08518475138839686;  // std dev = 1.83e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12650545913235475;  // std dev = 0.489, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.0787767547310917;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10255971140623361;  // std dev = 5.120, 111.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=68 */
%   | else return 0.08764662769567866;  // std dev = 2.701, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12103413433883119;  // std dev = 5.434, 131.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.75e-09, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.013699632217105986;  // std dev = 6.206, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
Inference time using transfer learning 38.13254690170288
Parameter learned model CLL:-0.344087 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.482, 50, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.74e-09, 92, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [4.315, 29, 52], 'true,false': [3.956, 29, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 86, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 59, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.941, 60, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.58e-08, 73, 0], 'false,false,false,false': [2.98e-08, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.493, 33, 52], 'true,false': [3.431, 18, 34], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [5.655, 61, 68], 'true,true,false': [2.872, 15, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.05e-08, 86, 0], 'false,false,false': [1.83e-08, 39, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.489, 56, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.16e-08, 66, 0], 'false,false,false': [0.0, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.12, 43, 68], 'true,false': [2.701, 12, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 96, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.434, 45, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 99, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.206, 70, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 128, 0]}]
{'': [0.23248269896193965, 7.723290606088045e-17], 'false': [nan, 7.723290606088045e-17]}
{'': [0.2405478395061754, -1.8073398075293247e-17], 'true': [0.22984301173601718, 0.24842529604434402], 'false': [nan, -1.8073398075293247e-17], 'false,false': [nan, -1.8073398075293247e-17], 'false,false,false': [nan, -1.8073398075293247e-17]}
{'': [0.24098232532860553, 7.225260953909749e-17], 'false': [nan, 7.225260953909749e-17], 'false,false': [nan, 7.225260953909749e-17]}
{'': [0.24177502751190982, -2.5480528434019987e-17], 'true': [nan, 0.24177502751190982], 'false': [nan, -2.5480528434019987e-17], 'false,false': [nan, -2.5480528434019987e-17], 'false,false,false': [4.258389683493751e-17, 1.8126090197961738e-17]}
{'': [0.23431465598500173, 2.3945986805640632e-17], 'true': [0.23750865051903164, 0.2263313609467453], 'false': [nan, 2.3945986805640632e-17]}
{'': [0.24843242916113184, 3.4638958368304884e-17], 'true': [0.24843242916113184, nan], 'true,true': [0.24793555228571584, 0.24999185790237685], 'false': [nan, 3.4638958368304884e-17], 'false,false': [2.9692011123696044e-17, 8.540177112501205e-18]}
{'': [0.23887143104483163, 3.6677010634938206e-17], 'true': [0.23887143104483163, nan], 'false': [nan, 3.6677010634938206e-17], 'false,false': [1.5139404881252134e-17, 0.0]}
{'': [0.2377064461682341, -6.938893903907228e-18], 'true': [0.2361703230440151, 0.24321502082501265], 'false': [nan, -6.938893903907228e-18], 'false,false': [nan, -6.938893903907228e-18]}
{'': [0.2254302700121314, 2.2428747972225384e-17], 'true': [0.2254302700121314, nan], 'false': [nan, 2.2428747972225384e-17], 'false,false': [nan, 2.2428747972225384e-17]}
{'': [0.24685257490183737, -1.5612511283791264e-17], 'true': [0.24685257490183737, nan], 'false': [nan, -1.5612511283791264e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.205785274505615
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.06492798797741087;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.5538011090125557;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.38901313263037574;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1341296881584762;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.24004844081168306;  // std dev = 3.050, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.38968012759937287;  // std dev = 4.678, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   else return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5653780778522347;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(D, E), interaction(D, D) )
%   | | | then return -0.09424993715866731;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.2382544471522833;  // std dev = 2.230, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.7074335700125333;  // std dev = 0.176, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25616804355066614;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5668083122959419;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.26278297931230044;  // std dev = 4.903, 97.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=51 */
%   else return -0.11231637819360622;  // std dev = 6.23e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.411184881037943;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6575646305076898;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6343453292001359;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07538921871997674;  // std dev = 3.716, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.22998928234989227;  // std dev = 3.142, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | | | else return 0.36103314043522194;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   else if ( interaction(A, J) )
%   | then return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.3198581795162914;  // std dev = 0.000284, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3096738327290863;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.3563306221108434;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.38692780521954;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.41727288266871054;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0176386592004384;  // std dev = 2.783, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.49551151778714503;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15361471806120372;  // std dev = 4.750, 91.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=48 */
%   else return -0.09269127618926083;  // std dev = 6.84e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.24711984688035002;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25491362652122423;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.11917355473068872;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.24396531371170738;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(H, J), interaction(H, K) )
%   | | | then return 0.13632451197279785;  // std dev = 1.350, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.32644218484884446;  // std dev = 1.949, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return -0.017671243590929225;  // std dev = 2.487, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.17606686993042192;  // std dev = 4.085, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   else return -0.08518475138839682;  // std dev = 5.59e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), phenotype(D, G) )
%   | | | then return 0.00949256957640432;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3229652857021208;  // std dev = 0.608, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09107367238702829;  // std dev = 3.091, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.10713990275143889;  // std dev = 3.901, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), interaction(L, K) )
%   | | | then return 0.5170813794064137;  // std dev = 0.352, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2568383013664231;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.04049070018547029;  // std dev = 1.286, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.34887856903042186;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109155;  // std dev = 6.25e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, E) )
%   | | | then return 0.19344035837716617;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35597402780504667;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15712168771962143;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.47502569049207427;  // std dev = 1.008, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.42840191450687987;  // std dev = 0.281, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.0697547947192738;  // std dev = 2.033, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.043708628541657274;  // std dev = 4.072, 67.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   else if ( interaction(K, A) )
%   | then return -0.07324622576333707;  // std dev = 1.32e-09, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return -0.07324622576333709;  // std dev = 2.08e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then return 0.2825618236438894;  // std dev = 0.739, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.05457459149609507;  // std dev = 1.175, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.12498816991176415;  // std dev = 1.111, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.11613302635058216;  // std dev = 1.667, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return -0.1503580428994781;  // std dev = 1.318, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.25362172150808315;  // std dev = 1.704, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.13100477369072547;  // std dev = 3.237, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420279;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06842697784420265;  // std dev = 5.02e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20236888760766383;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(D, G), enzyme(A, E) )
%   | | | then return 0.09036138094158706;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15414215786694557;  // std dev = 2.793, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.24255554908831023;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14458333486920105;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.012131425815157275;  // std dev = 3.800, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   | | | else return 0.09083119516041106;  // std dev = 2.105, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( interaction(N, A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
Inference time using transfer learning 9.544459104537964
Refined model CLL: -0.263037


******************************************
Best model found
******************************************
Results 

CLL : -0.267023 

AUC ROC : 0.942158 

AUC PR : 0.149479 

Precision : 0.040681 

Recall : 0.844523 

F1 : 0.077623 

Total Learning Time : 5.205785274505615 

Total Inference Time : 2.500811815261841 

Total revision time: 12.750425100326538
Best scored revision CLL: -0.263037


Results 

CLL : -0.267023 

AUC ROC : 0.942158 

AUC PR : 0.149479 

Precision : 0.040681 

Recall : 0.844523 

F1 : 0.077623 

Total Learning Time : 12.776427030563354 

Total Inference Time : 2.500811815261841 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.3346800804138184
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4343078754968609;  // std dev = 0.494, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3332686256305475;  // std dev = 4.516, 82.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | else return 0.45822172131535055;  // std dev = 3.815, 65.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30084541841200163;  // std dev = 0.495, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.54e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30086688611129253;  // std dev = 5.604, 136.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.19271014894851812;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | else return 0.048376997419382575;  // std dev = 4.762, 91.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 5.43e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14440986530688715;  // std dev = 5.118, 108.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=63 */
%   | | else return 0.02424624827012064;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.47e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.08518475138839685;  // std dev = 3.41e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08944868830538677;  // std dev = 0.496, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15915286666730605;  // std dev = 4.648, 96.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=63 */
%   | else return 0.015088139360519255;  // std dev = 3.538, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08454302338375276;  // std dev = 5.872, 145.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.036270249072847975;  // std dev = 6.095, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning 26.259040355682373
Parameter learned model CLL:-0.33008 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 64, 87], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [4.516, 38, 44], 'true,false': [3.815, 22, 43], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 64, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.54e-09, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.604, 49, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.37e-08, 71, 0], 'false,false,false,false': [4.59e-08, 63, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.265, 31, 44], 'true,false': [4.762, 48, 43], 'false,true': [0.0, 0, 0], 'false,false': [5.43e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [5.118, 45, 63], 'true,true,false': [3.603, 28, 24], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.47e-08, 44, 0], 'false,false,false': [3.41e-08, 57, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.496, 70, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 52, 0], 'false,false,false': [1.83e-08, 57, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.648, 33, 63], 'true,false': [3.538, 26, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.872, 58, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.095, 64, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 120, 0]}]
{'': [0.24419981579755487, 5.551115123125783e-17], 'false': [nan, 5.551115123125783e-17]}
{'': [0.24156601416076603, -5.9476233462061954e-18], 'true': [0.24866151100535405, 0.22390532544378683], 'false': [nan, -5.9476233462061954e-18], 'false,false': [nan, -5.9476233462061954e-18], 'false,false,false': [nan, -5.9476233462061954e-18]}
{'': [0.24480478305690964, 7.283063041541027e-17], 'false': [nan, 7.283063041541027e-17], 'false,false': [nan, 7.283063041541027e-17]}
{'': [0.23088374198421893, -4.142623226213271e-17], 'true': [nan, 0.23088374198421893], 'false': [nan, -4.142623226213271e-17], 'false,false': [nan, -4.142623226213271e-17], 'false,false,false': [4.065605442289306e-17, 3.348291661567932e-17]}
{'': [0.25135231412097575, 3.142140635731575e-17], 'true': [0.24248888888888914, 0.24924526023427115], 'false': [nan, 3.142140635731575e-17]}
{'': [0.24806180773655714, 3.0778460088618204e-17], 'true': [0.24806180773655714, nan], 'true,true': [0.24257498812085124, 0.24971098598526367], 'false': [nan, 3.0778460088618204e-17], 'false,false': [1.3877787807814457e-17, 2.0451476769410777e-17]}
{'': [0.24583392430778658, 3.66679164096382e-17], 'true': [0.24583392430778658, nan], 'false': [nan, 3.66679164096382e-17], 'false,false': [0.0, 5.843279076974508e-18]}
{'': [0.23839147168743696, -3.0278809762504268e-18], 'true': [0.22505844918207538, 0.2503439846047045], 'false': [nan, -3.0278809762504268e-18], 'false,false': [nan, -3.0278809762504268e-18]}
{'': [0.23782879835931398, 2.3401759832785162e-17], 'true': [0.23782879835931398, nan], 'false': [nan, 2.3401759832785162e-17], 'false,false': [nan, 2.3401759832785162e-17]}
{'': [0.24602327072156782, -1.7578531223231644e-17], 'true': [0.24602327072156782, nan], 'false': [nan, -1.7578531223231644e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.203601598739624
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), interaction(A, G) )
%   | | | then return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.37142327138269904;  // std dev = 5.313, 113.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then return 0.7491491781726733;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.43143463810982513;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7634680783024451;  // std dev = 0.989, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.1860396075707179;  // std dev = 0.081, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15274913398852166;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.32700558253057166;  // std dev = 4.579, 86.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   else return -0.1254446385283911;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then return 0.561027576466148;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7116200000173201;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.556745025067255;  // std dev = 0.782, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.11728232161500844;  // std dev = 2.901, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.18287264666590178;  // std dev = 1.805, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3832892211769586;  // std dev = 3.736, 66.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=43 */
%   else return -0.11231637819360621;  // std dev = 8.43e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.42172548297475376;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5637517703640598;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23291862179855724;  // std dev = 0.737, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14915296640305353;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1893240265698047;  // std dev = 1.884, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6296626435267928;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25903920609845693;  // std dev = 4.620, 105.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=61 */
%   else if ( interaction(A, H) )
%   | then return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, D) )
%   | | | then return 0.3776467439167752;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5675924992025302;  // std dev = 0.347, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( complex(H, D), enzyme(H, I) )
%   | | | then return -0.2250525243830228;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3394010647085063;  // std dev = 0.219, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( location(A, K), interaction(J, A) )
%   | | | then return 0.344877495278363;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4985482705869939;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.20978584003809048;  // std dev = 4.120, 94.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=55 */
%   | | | else return -0.1360947558143952;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.0926912761892609;  // std dev = 5.89e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), interaction(D, G) )
%   | | then if ( complex(A, H), recursion_proteinclass(G, B) )
%   | | | then return 0.3064855895928843;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04768253795721803;  // std dev = 1.456, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.4803564018055206;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2830735211096415;  // std dev = 1.374, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(L, L), enzyme(A, M) )
%   | | | then return 0.0332853224623045;  // std dev = 1.088, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.2511617864525094;  // std dev = 1.874, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.14703945494888393;  // std dev = 1.540, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.048751389155620106;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=27 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then return 0.43618095269592677;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return -0.030925682219070133;  // std dev = 1.452, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.04787756703012633;  // std dev = 2.245, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( phenotype(I, K), location(I, J) )
%   | | | then return 0.1414667034871534;  // std dev = 2.030, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | | else return 0.40905045788784333;  // std dev = 0.221, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.11558212053390932;  // std dev = 1.536, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.04564348439053443;  // std dev = 3.195, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   else if ( interaction(A, M) )
%   | then return -0.07877675473109176;  // std dev = 2.63e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), phenotype(G, D) )
%   | | | then return 0.27372220671406655;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.392418114211422;  // std dev = 0.204, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.2766895963213566;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.22686667993568274;  // std dev = 1.621, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return -0.3969621631535602;  // std dev = 0.461, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.06939831547263386;  // std dev = 2.011, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.1831909097825036;  // std dev = 2.860, 41.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   else return -0.07324622576333707;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(D, F), complex(E, F) )
%   | | then if ( complex(A, G), interaction(E, E) )
%   | | | then return 0.09664049657544622;  // std dev = 0.979, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return -0.09907740690720508;  // std dev = 2.324, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( location(D, H) )
%   | | | then return 0.06704416594477529;  // std dev = 3.576, 86.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=50 */
%   | | | else return -0.21872274747343864;  // std dev = 1.035, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.006234028323644197;  // std dev = 0.486, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.3438867195294768;  // std dev = 0.265, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20761405432590077;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, L) )
%   | then return -0.0684269778442027;  // std dev = 2.46e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06842697784420268;  // std dev = 3.36e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.18018748524992956;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16974689424498698;  // std dev = 1.198, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( location(A, E), complex(D, G) )
%   | | | then return 0.1717451532096298;  // std dev = 1.257, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.04013924030123109;  // std dev = 1.743, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), interaction(H, I) )
%   | | | then return 0.03028980380875573;  // std dev = 2.651, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return -0.076593766865983;  // std dev = 2.828, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else return 0.39551792546055653;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 12.70412278175354
Refined model CLL: -0.231315


******************************************
Best model found
******************************************
Results 

CLL : -0.239401 

AUC ROC : 0.966884 

AUC PR : 0.271752 

Precision : 0.054653 

Recall : 0.953901 

F1 : 0.103382 

Total Learning Time : 9.203601598739624 

Total Inference Time : 3.7677159309387207 

Total revision time: 22.98996376991272
Best scored revision CLL: -0.231315


Results 

CLL : -0.239401 

AUC ROC : 0.966884 

AUC PR : 0.271752 

Precision : 0.054653 

Recall : 0.953901 

F1 : 0.103382 

Total Learning Time : 23.015413522720337 

Total Inference Time : 3.7677159309387207 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.1658897399902344
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41134042446121144;  // std dev = 0.497, 188.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.37932553421881976;  // std dev = 6.456, 171.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=99 */
%   | else return 0.633711499131102;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283911;  // std dev = 7.88e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3039858950688689;  // std dev = 0.496, 181.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.23e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1994055372288481;  // std dev = 6.976, 195.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1015963294878364;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.22751338330516035;  // std dev = 6.264, 164.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=99 */
%   | else return 0.06255960689903368;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926075;  // std dev = 6.84e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15460756947356313;  // std dev = 6.499, 174.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=102 */
%   | | else return 0.22112643860233216;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return -0.0851847513883969;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08870772469934243;  // std dev = 0.496, 186.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109154;  // std dev = 7.38e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09721004190361976;  // std dev = 6.478, 173.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=102 */
%   | else return 0.14393475265187308;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 2.46e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06370478058477223;  // std dev = 6.605, 179.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.43e-09, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06827148616312462;  // std dev = 6.439, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.95e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
Inference time using transfer learning 21.346215963363647
Parameter learned model CLL:-0.331044 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 84, 104], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [6.456, 72, 99], 'true,false': [0.913, 1, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.88e-08, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 77, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.23e-09, 135, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.976, 91, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 130, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.264, 65, 99], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [6.499, 72, 102], 'true,true,false': [0.798, 1, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.14e-08, 114, 0], 'false,false,false': [3.73e-09, 10, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.496, 82, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.38e-08, 131, 0], 'false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.478, 71, 102], 'true,false': [0.798, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.46e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.605, 75, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 141, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.439, 69, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.95e-09, 123, 0]}]
{'': [0.247170665459487, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.24233138625554446, 4.674623261579606e-17], 'true': [0.24376731301938942, 0.13888888888888892], 'false': [nan, 4.674623261579606e-17], 'false,false': [nan, 4.674623261579606e-17], 'false,false,false': [nan, 4.674623261579606e-17]}
{'': [0.24571060335640585, 6.908054375445419e-17], 'false': [nan, 6.908054375445419e-17], 'false,false': [nan, 6.908054375445419e-17]}
{'': [0.24959111660901076, -4.408238480129298e-17], 'true': [nan, 0.24959111660901076], 'false': [nan, -4.408238480129298e-17], 'false,false': [nan, -4.408238480129298e-17], 'false,false,false': [-3.586874387250506e-17, -2.3129646346357427e-18]}
{'': [0.24134634813302763, 4.6910832026415064e-17], 'true': [0.23925490779298061, 0.25000000000000006], 'false': [nan, 4.6910832026415064e-17]}
{'': [0.24227776036237184, 3.40229636578677e-17], 'true': [0.24227776036237184, nan], 'true,true': [0.2427156670115602, 0.2125294106906379], 'false': [nan, 3.40229636578677e-17], 'false,false': [3.311191476952221e-17, 1.3877787807814458e-18]}
{'': [0.24648706840228782, 4.326604434200978e-17], 'true': [0.24648706840228782, nan], 'false': [nan, 4.326604434200978e-17], 'false,false': [4.152742611193334e-17, -6.938893903907229e-19]}
{'': [0.2421154595752858, 5.4601132358614255e-18], 'true': [0.2425933337143166, 0.21241206590907968], 'false': [nan, 5.4601132358614255e-18], 'false,false': [nan, 5.4601132358614255e-18]}
{'': [0.24369262355945298, 2.913351199370978e-17], 'true': [0.24369262355945298, nan], 'false': [nan, 2.913351199370978e-17], 'false,false': [nan, 2.913351199370978e-17]}
{'': [0.23966312472091167, 9.026203452237045e-18], 'true': [0.23966312472091167, nan], 'false': [nan, 9.026203452237045e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.066750288009644
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(E, G), interaction(H, A) )
%   | | | then return 0.4263307532813295;  // std dev = 3.286, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.35319844005000817;  // std dev = 5.025, 101.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=50 */
%   else return -0.1418510649004879;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( interaction(A, A), complex(A, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41230638439211537;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7778826660131701;  // std dev = 0.122, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), interaction(I, G) )
%   | | | then return 0.3435640064393378;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return -0.020668845832028722;  // std dev = 1.501, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.39963278139272546;  // std dev = 4.988, 105.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=63 */
%   | | | else return 0.2631388591258306;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else return -0.12544463852839124;  // std dev = 6.32e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then return 0.35873350150260896;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5618062379267252;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6490668374704108;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4287363137082036;  // std dev = 4.064, 79.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=55 */
%   | | | else return -0.2621882646816986;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.07171203745396548;  // std dev = 2.421, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.2504122086668371;  // std dev = 3.285, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   else return -0.11231637819360617;  // std dev = 9.54e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.4464667585641692;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07498676982528354;  // std dev = 3.051, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( complex(A, I), interaction(A, D) )
%   | | | then return 0.1761680245489425;  // std dev = 2.098, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.29128652984748193;  // std dev = 3.881, 73.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=47 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then return 0.2078297689460153;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.6274832606924586;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.375850178248567;  // std dev = 2.036, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else if ( interaction(N, A) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.3738824687370813;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39876620448006816;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, F), interaction(G, A) )
%   | | | then return 0.5224829508840292;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4145551972761021;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4271344030792267;  // std dev = 1.749, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return -0.11288655561110471;  // std dev = 2.821, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12402330175786527;  // std dev = 4.888, 101.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=52 */
%   | | | else return 0.4876691179042196;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926076;  // std dev = 6.97e-09, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.41317041789303594;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3920429407894506;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.29835058399595255;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07266272292572716;  // std dev = 2.116, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.48131769277970354;  // std dev = 0.530, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.361861170155735;  // std dev = 0.491, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.32993278470838333;  // std dev = 1.877, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.17152408669470376;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), interaction(D, E) )
%   | | then if ( complex(D, F), phenotype(D, G) )
%   | | | then return 0.05148723941789136;  // std dev = 3.006, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.32274483889729766;  // std dev = 1.306, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3980034282334468;  // std dev = 0.284, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.04214102410358421;  // std dev = 4.246, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.35046382486727173;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07120369399650744;  // std dev = 0.499, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23317163369595795;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(J, A) )
%   | then return -0.07877675473109155;  // std dev = 6.25e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D), interaction(D, E) )
%   | | | then return 0.334098468632956;  // std dev = 0.501, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.10917320447119577;  // std dev = 1.736, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.40772643696887645;  // std dev = 0.432, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.10380184881664999;  // std dev = 4.724, 110.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=63 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.2858823961381173;  // std dev = 0.939, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.029351311341287288;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0732462257633372;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.20180979254080195;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.40746076711056173;  // std dev = 0.391, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.2292513996343129;  // std dev = 0.159, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.4481949449696889;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.07763185852194941;  // std dev = 4.667, 121.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=77 */
%   | | | else return -0.31966832692733005;  // std dev = 0.745, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.21700190836957553;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.33898034899495727;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17906364265343278;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(D, F), phenotype(D, G) )
%   | | | then return -0.14933200035440747;  // std dev = 1.333, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.037181182633094896;  // std dev = 0.662, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.2110548763302665;  // std dev = 0.207, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.014072678783469628;  // std dev = 0.409, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.017850343058300754;  // std dev = 3.922, 98.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=46 */
%   | | | else return 0.033985169470689185;  // std dev = 3.410, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   else return -0.06419184008202626;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
Inference time using transfer learning 16.8345685005188
Refined model CLL: -0.229636


******************************************
Best model found
******************************************
Results 

CLL : -0.247903 

AUC ROC : 0.951308 

AUC PR : 0.25095 

Precision : 0.052918 

Recall : 0.845283 

F1 : 0.0996 

Total Learning Time : 9.066750288009644 

Total Inference Time : 6.2824273109436035 

Total revision time: 21.803164958953857
Best scored revision CLL: -0.229636


Results 

CLL : -0.247903 

AUC ROC : 0.951308 

AUC PR : 0.25095 

Precision : 0.052918 

Recall : 0.845283 

F1 : 0.0996 

Total Learning Time : 21.828614711761475 

Total Inference Time : 6.2824273109436035 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.5848891735076904
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3961606310059423;  // std dev = 0.499, 171.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.47520622476083213;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=39 */
%   | else return 0.332792431657386;  // std dev = 4.991, 100.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839105;  // std dev = 8.02e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3298357785861314;  // std dev = 0.491, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360622;  // std dev = 7.68e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2938597492585683;  // std dev = 5.837, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.10159632948783615;  // std dev = 5.67e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.1249448868676837;  // std dev = 4.193, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | else return 0.16209265693869032;  // std dev = 4.872, 96.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926083;  // std dev = 6.59e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2594517377873067;  // std dev = 4.276, 88.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=62 */
%   | | else return 0.06823921153000084;  // std dev = 3.894, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839683;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08628808127941259;  // std dev = 0.495, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then return -0.07877675473109173;  // std dev = 2.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07877675473109168;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.13575870027767578;  // std dev = 4.538, 93.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=62 */
%   | else return 0.06412865669104025;  // std dev = 3.767, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333722;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08708566426688527;  // std dev = 5.857, 148.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.35e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02554595642787479;  // std dev = 6.143, 159.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 11.856183290481567
Parameter learned model CLL:-0.340039 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 79, 92], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [3.574, 19, 39], 'true,false': [4.991, 47, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.02e-08, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 62, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.68e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.837, 54, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.8e-08, 55, 0], 'false,false,false,false': [5.67e-08, 75, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.193, 32, 39], 'true,false': [4.872, 43, 53], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'phenotype(A, G)'}, {'true,true,true': [4.276, 26, 62], 'true,true,false': [3.894, 30, 30], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.24e-08, 42, 0], 'false,false,false': [4.08e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'phenotype(A, F)'}, {'true,true': [0.495, 68, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.47e-08, 61, 0], 'false,false,false': [3.8e-08, 72, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.538, 31, 62], 'true,false': [3.767, 26, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.857, 56, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.35e-09, 138, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.143, 67, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 116, 0]}]
{'': [0.24855511097431934, -3.75767792950053e-17], 'false': [nan, -3.75767792950053e-17]}
{'': [0.24323025156224892, 5.5036696947229984e-17], 'true': [0.22027348394768134, 0.24909999999999827], 'false': [nan, 5.5036696947229984e-17], 'false,false': [nan, 5.5036696947229984e-17], 'false,false,false': [nan, 5.5036696947229984e-17]}
{'': [0.2412963076100267, 6.111319401606367e-17], 'false': [nan, 6.111319401606367e-17], 'false,false': [nan, 6.111319401606367e-17]}
{'': [0.23334258326509774, -3.586874387250506e-17], 'true': [nan, 0.23334258326509774], 'false': [nan, -3.586874387250506e-17], 'false,false': [nan, -3.586874387250506e-17], 'false,false,false': [2.62416351275037e-17, 4.2928623618839385e-17]}
{'': [0.24774473168914582, 4.332577657073782e-17], 'true': [0.24756992660186433, 0.24728732638888895], 'false': [nan, 4.332577657073782e-17]}
{'': [0.23477332659254807, 3.300663046182898e-17], 'true': [0.23477332659254807, nan], 'true,true': [0.20775777268893164, 0.252656434542643], 'false': [nan, 3.300663046182898e-17], 'false,false': [1.1895246692412391e-17, 2.413528314402514e-17]}
{'': [0.24466669845793168, 4.2572461846528557e-17], 'true': [0.24466669845793168, nan], 'false': [nan, 4.2572461846528557e-17], 'false,false': [1.001020759907928e-17, 2.0045693500176437e-17]}
{'': [0.23463768197180138, -1.9199345538630526e-17], 'true': [0.22144698407578473, 0.2533411773565075], 'false': [nan, -1.9199345538630526e-17], 'false,false': [nan, -1.9199345538630526e-17]}
{'': [0.2317867885942605, 2.896233977283017e-17], 'true': [0.2317867885942605, nan], 'false': [nan, 2.896233977283017e-17], 'false,false': [nan, 2.896233977283017e-17]}
{'': [0.23732430242172742, -1.7706143065142584e-17], 'true': [0.23732430242172742, nan], 'false': [nan, -1.7706143065142584e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;phenotype(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;phenotype(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;phenotype(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.673494338989258
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.40360348055405665;  // std dev = 5.477, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.18251039307010672;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.13339266460088087;  // std dev = 1.589, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.28245442751858046;  // std dev = 3.897, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | | else return 0.3824909485886977;  // std dev = 4.264, 76.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7461728758300114;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.15772340056865974;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.2566764558204712;  // std dev = 0.038, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6565279039024221;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.3876098658893689;  // std dev = 2.433, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.2732013948584816;  // std dev = 4.334, 77.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=42 */
%   else return -0.1123163781936062;  // std dev = 9.06e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4820374376707144;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(E, D) )
%   | | | then return -0.06149876051178699;  // std dev = 2.000, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.23169525958073725;  // std dev = 1.693, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3258893227891383;  // std dev = 1.386, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.6509929212369591;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.0987958583008313;  // std dev = 1.650, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.2627105986970912;  // std dev = 4.115, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   else return -0.10159632948783666;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4102736736157491;  // std dev = 0.352, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5738128260706606;  // std dev = 0.269, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.23973736656517486;  // std dev = 0.145, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.33243745611235903;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.015943758583526757;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5514094804661053;  // std dev = 0.407, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.15880638094265467;  // std dev = 3.621, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return -0.0016555012800499563;  // std dev = 2.679, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   else return -0.09269127618926076;  // std dev = 8.02e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.11261526828888341;  // std dev = 0.330, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40506416775610743;  // std dev = 0.487, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.17290965198512637;  // std dev = 0.191, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.29212653355726154;  // std dev = 0.191, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3141294948696197;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02796034057773438;  // std dev = 1.628, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.16285198993647368;  // std dev = 2.481, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.28292202194556576;  // std dev = 2.710, 42.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( interaction(D, E), enzyme(E, G) )
%   | | | then return 0.23560299815406818;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17523158870391364;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.29488233895386856;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.17934500822636643;  // std dev = 1.089, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.020791305990432902;  // std dev = 1.421, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.13949148510074755;  // std dev = 2.240, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return 0.05477358256760864;  // std dev = 4.027, 88.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=47 */
%   else if ( phenotype(A, L) )
%   | then return -0.0787767547310918;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B), interaction(F, A) )
%   | | | then return 0.17979142437402043;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3319744868685176;  // std dev = 0.211, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3557758775348412;  // std dev = 0.329, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.030917772310117872;  // std dev = 3.458, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(I, H) )
%   | | | then return 0.2931620099739266;  // std dev = 1.065, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.0038346121589965076;  // std dev = 2.056, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.21097518962872847;  // std dev = 1.529, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.11857893026579683;  // std dev = 1.505, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.07324622576333707;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, E), interaction(D, D) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.12184213934459488;  // std dev = 0.835, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4196033602128361;  // std dev = 0.290, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, D), complex(G, H) )
%   | | | then return 0.01115367084537223;  // std dev = 3.246, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.1204494090298647;  // std dev = 2.220, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3711719825802278;  // std dev = 0.789, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.28775792964004915;  // std dev = 0.352, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.16743543307266762;  // std dev = 2.133, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.1873466505205422;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420264;  // std dev = 5.27e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, D) )
%   | | | then return 0.09484687492139829;  // std dev = 0.706, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.2794129824087019;  // std dev = 0.324, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( enzyme(G, D), interaction(A, G) )
%   | | | then return -0.1140967790367341;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.2299761894434648;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, H), interaction(I, A) )
%   | | | then return 0.1349611832982601;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25387324144432794;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.14317692294428389;  // std dev = 1.819, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.005089134919246545;  // std dev = 4.112, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 9.917876482009888
Refined model CLL: -0.224858


******************************************
Best model found
******************************************
Results 

CLL : -0.235275 

AUC ROC : 0.942825 

AUC PR : 0.219919 

Precision : 0.039245 

Recall : 0.841155 

F1 : 0.074992 

Total Learning Time : 5.673494338989258 

Total Inference Time : 2.648979425430298 

Total revision time: 12.336168050765991
Best scored revision CLL: -0.224858


Results 

CLL : -0.235275 

AUC ROC : 0.942825 

AUC PR : 0.219919 

Precision : 0.039245 

Recall : 0.841155 

F1 : 0.074992 

Total Learning Time : 12.361617803573608 

Total Inference Time : 2.648979425430298 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6028482913970947
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42768535894056947;  // std dev = 0.495, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3615836484877043;  // std dev = 4.808, 94.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   | else return 0.4323692458690482;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=33 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3079677721094892;  // std dev = 0.494, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2476834228520608;  // std dev = 5.976, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.1526626468678907;  // std dev = 4.933, 98.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=53 */
%   | else return 0.18419410717338153;  // std dev = 3.682, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 5.43e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11734908772951982;  // std dev = 5.704, 131.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=72 */
%   | | else return -0.04222923268614527;  // std dev = 2.861, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 4.21e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.08518475138839686;  // std dev = 2.58e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14667507206822375;  // std dev = 0.487, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then return -0.07877675473109169;  // std dev = 3.41e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.0957619356206033;  // std dev = 5.430, 121.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=72 */
%   | else return -0.07732380553851943;  // std dev = 2.878, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09424643113171303;  // std dev = 5.815, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06330734484009097;  // std dev = 5.893, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
Inference time using transfer learning 12.43572211265564
Parameter learned model CLL:-0.329349 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 65, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [4.808, 41, 53], 'true,false': [3.472, 19, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 62, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.976, 61, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.37e-08, 72, 0], 'false,false,false,false': [0.0, 33, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.933, 45, 53], 'true,false': [3.682, 23, 33], 'false,true': [0.0, 0, 0], 'false,false': [5.43e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'phenotype(A, G)'}, {'true,true,true': [5.704, 59, 72], 'true,true,false': [2.861, 21, 14], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 70, 0], 'false,false,false': [2.58e-08, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'phenotype(A, F)'}, {'true,true': [0.487, 57, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.41e-08, 69, 0], 'false,false,false': [0.0, 32, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.43, 49, 72], 'true,false': [2.878, 22, 14], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 128, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.815, 57, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.893, 58, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 95, 0]}]
{'': [0.2451646857593986, 5.551115123125783e-17], 'false': [nan, 5.551115123125783e-17]}
{'': [0.24207168324263575, -8.148425868808489e-18], 'true': [0.24592575826165794, 0.23187869822485171], 'false': [nan, -8.148425868808489e-18], 'false,false': [nan, -8.148425868808489e-18], 'false,false,false': [nan, -8.148425868808489e-18]}
{'': [0.24449261199333436, 6.767073673905717e-17], 'false': [nan, 6.767073673905717e-17], 'false,false': [nan, 6.767073673905717e-17]}
{'': [0.24290382473550587, 2.1147105230955365e-18], 'true': [nan, 0.24290382473550587], 'false': [nan, 2.1147105230955365e-18], 'false,false': [nan, 2.1147105230955365e-18], 'false,false,false': [4.0091387000352874e-17, 0.0]}
{'': [0.24627101929080691, 3.0374026145405226e-17], 'true': [0.24833402748854724, 0.24202806122448978], 'false': [nan, 3.0374026145405226e-17]}
{'': [0.24955492459548015, 3.293034395074617e-17], 'true': [0.24955492459548015, nan], 'true,true': [0.2483932122570738, 0.23380698475407824], 'false': [nan, 3.293034395074617e-17], 'false,false': [2.5376526277146434e-17, 1.3877787807814457e-17]}
{'': [0.23704548494444055, 3.29769215235195e-17], 'true': [0.23704548494444055, nan], 'false': [nan, 3.29769215235195e-17], 'false,false': [1.68946982008176e-17, 0.0]}
{'': [0.24583906220098467, -4.336808689942018e-18], 'true': [0.24364798692419973, 0.23011434068515038], 'false': [nan, -4.336808689942018e-18], 'false,false': [nan, -4.336808689942018e-18]}
{'': [0.23649003281130088, 2.461343497989734e-17], 'true': [0.23649003281130088, nan], 'false': [nan, 2.461343497989734e-17], 'false,false': [nan, 2.461343497989734e-17]}
{'': [0.2411641394200241, -1.460819769243627e-17], 'true': [0.2411641394200241, nan], 'false': [nan, -1.460819769243627e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;phenotype(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;phenotype(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;phenotype(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 6.071260213851929
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5089425858931634;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | | | else return 0.39148226843284567;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( interaction(F, F), phenotype(D, E) )
%   | | | then return 0.7356865875854797;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2744570749006432;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7338851236549768;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.19378685033665827;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2780399015027122;  // std dev = 5.584, 132.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=64 */
%   else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5516563827081574;  // std dev = 0.000630, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6423351558001162;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.35959557569227873;  // std dev = 1.193, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.15125121539458095;  // std dev = 2.446, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.27240415359116016;  // std dev = 3.864, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | | else return 0.4211198583091254;  // std dev = 2.420, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.414767551935675;  // std dev = 0.000618, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.5626298541061435;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.47875546217675996;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(G, H) )
%   | | | then return 0.5256753945642795;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09859020102523011;  // std dev = 4.294, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | | else if ( location(A, I) )
%   | | | then return 0.3070910119441012;  // std dev = 3.112, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | | | else return -0.002173362654529042;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( phenotype(A, J) )
%   | then return -0.10159632948783615;  // std dev = 5.67e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.31858993786748235;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31898114611606654;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4115467817827752;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.26447530578056155;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.2667499635013099;  // std dev = 3.129, 53.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   | | | else return 0.14973844916607465;  // std dev = 4.066, 72.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=37 */
%   else if ( interaction(A, A) )
%   | then return -0.092691276189261;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3975683353421364;  // std dev = 0.251, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.4323129485082836;  // std dev = 0.335, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2581933243456436;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.016697149703010117;  // std dev = 2.113, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2942476490562875;  // std dev = 1.729, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.12535603423086392;  // std dev = 3.319, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.16710111975481293;  // std dev = 1.756, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.3810612675365012;  // std dev = 1.531, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.08518475138839679;  // std dev = 5.59e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F), location(A, G) )
%   | | then if ( phenotype(E, H), complex(D, I) )
%   | | | then return 0.056427523979243305;  // std dev = 1.781, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return -0.10342059194598567;  // std dev = 2.409, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.39245279376417713;  // std dev = 1.181, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.03443692050674892;  // std dev = 1.624, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(A, M), interaction(N, K) )
%   | | | then return 0.09099635890942634;  // std dev = 1.791, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.39612383148294406;  // std dev = 0.961, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(P, A), location(A, Q) )
%   | | | then return 0.03485957809067672;  // std dev = 2.885, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.2787796533658538;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109158;  // std dev = 5.82e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.10255742312472159;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5022700892818271;  // std dev = 0.227, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.26640498612317565;  // std dev = 0.277, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08573161358549379;  // std dev = 3.709, 66.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.02978792117942295;  // std dev = 1.098, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.413000336339756;  // std dev = 0.307, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.11750567187361768;  // std dev = 2.194, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.0450625760147254;  // std dev = 2.226, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else return -0.07324622576333717;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.02206083593581094;  // std dev = 0.812, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.23348260716885005;  // std dev = 1.456, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else return -0.23144330031388619;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.16790804264823686;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2544786409765347;  // std dev = 0.164, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.08260813245739353;  // std dev = 2.064, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.015383273947190149;  // std dev = 4.368, 86.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   else if ( interaction(A, K) )
%   | then return -0.0684269778442027;  // std dev = 2.79e-09, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420271;  // std dev = 1.86e-09, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), location(A, G) )
%   | | then if ( interaction(H, D), location(H, G) )
%   | | | then return -0.005968740721896288;  // std dev = 2.736, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | | | else return -0.14594131869979582;  // std dev = 1.701, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(I, D), complex(I, J) )
%   | | | then return 0.17814529516745722;  // std dev = 1.626, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.010349695719260766;  // std dev = 2.621, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, K) )
%   | | | then return -0.04373093416404424;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.461537291668332;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.0034840756249217377;  // std dev = 1.736, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.1264875512110329;  // std dev = 1.852, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.06419184008202626;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
Inference time using transfer learning 10.298068523406982
Refined model CLL: -0.281493


******************************************
Best model found
******************************************
Results 

CLL : -0.286391 

AUC ROC : 0.921289 

AUC PR : 0.118666 

Precision : 0.032914 

Recall : 0.869258 

F1 : 0.063427 

Total Learning Time : 6.071260213851929 

Total Inference Time : 2.5490293502807617 

Total revision time: 12.371860980987549
Best scored revision CLL: -0.281493


Results 

CLL : -0.286391 

AUC ROC : 0.921289 

AUC PR : 0.118666 

Precision : 0.032914 

Recall : 0.869258 

F1 : 0.063427 

Total Learning Time : 12.397310733795166 

Total Inference Time : 2.5490293502807617 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.5642781257629395
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4158412427918175;  // std dev = 0.497, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 5.89e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.37308465787179246;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else return 0.29965808444521874;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.34221412262603607;  // std dev = 0.488, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23521966601807792;  // std dev = 6.090, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.15340927181919115;  // std dev = 6.097, 150.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=82 */
%   | else return -0.04254803433774395;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.12859921233499025;  // std dev = 6.174, 155.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=86 */
%   | | else return 0.6340462445355439;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0966365011429723;  // std dev = 0.495, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109154;  // std dev = 7.15e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.10240636079498376;  // std dev = 5.969, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | else return 0.45485631426257145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.37e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1693494927066151;  // std dev = 5.282, 128.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.10e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1224990998987009;  // std dev = 5.317, 129.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.46e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
Inference time using transfer learning 18.37963080406189
Parameter learned model CLL:-0.364757 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 69, 87], 'false,true': [0.0, 0, 0], 'false,false': [5.89e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [5.914, 61, 82], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.488, 56, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.09, 65, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.98e-08, 102, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.097, 68, 82], 'true,false': [1.826, 10, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [6.174, 69, 86], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 95, 0], 'false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.495, 70, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.15e-08, 124, 0], 'false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.969, 61, 86], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.37e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.282, 41, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.317, 42, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.46e-09, 103, 0]}]
{'': [0.24667159763313826, 3.4455197315953135e-17], 'false': [nan, 3.4455197315953135e-17]}
{'': [0.2452902729719326, -6.00120553851436e-18], 'true': [0.2446085383148299, 0.24999999999999992], 'false': [nan, -6.00120553851436e-18], 'false,false': [nan, -6.00120553851436e-18], 'false,false,false': [nan, -6.00120553851436e-18]}
{'': [0.2385256948626786, 6.817158923136926e-17], 'false': [nan, 6.817158923136926e-17], 'false,false': [nan, 6.817158923136926e-17]}
{'': [0.24401975336489995, -2.05596856412066e-18], 'true': [nan, 0.24401975336489995], 'false': [nan, -2.05596856412066e-18], 'false,false': [nan, -2.05596856412066e-18], 'false,false,false': [8.707631565687502e-18, -2.3129646346357427e-18]}
{'': [0.24866844253927067, 4.327988062098068e-17], 'true': [0.2478222222222227, 0.22222222222222235], 'false': [nan, 4.327988062098068e-17]}
{'': [0.2460063690666785, 3.0778460088618204e-17], 'true': [0.2460063690666785, nan], 'true,true': [0.24595583576264823, 0.0], 'false': [nan, 3.0778460088618204e-17], 'false,false': [3.0385051200267444e-17, -1.1564823173178713e-18]}
{'': [0.24484230143838148, 4.289498049688105e-17], 'true': [0.24484230143838148, nan], 'false': [nan, 4.289498049688105e-17], 'false,false': [4.118569284899774e-17, 0.0]}
{'': [0.2415769016331335, 1.9176579516252704e-17], 'true': [0.24238095104000545, 0.0], 'false': [nan, 1.9176579516252704e-17], 'false,false': [nan, 1.9176579516252704e-17]}
{'': [0.2179638306296279, 2.6344275160596936e-17], 'true': [0.2179638306296279, nan], 'false': [nan, 2.6344275160596936e-17], 'false,false': [nan, 2.6344275160596936e-17]}
{'': [0.21918870543015384, 5.928375374212001e-18], 'true': [0.21918870543015384, nan], 'false': [nan, 5.928375374212001e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.865957498550415
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), phenotype(F, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6081489350995122;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.39762261931003856;  // std dev = 4.345, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.5010060779566552;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.3581489350995122;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7478414982968814;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16354024498274475;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.32775498055754254;  // std dev = 2.154, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7952337104880516;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.5637705266733548;  // std dev = 1.544, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.3783718805582343;  // std dev = 4.691, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   else return -0.1254446385283913;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(D, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.585348872544491;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14202034476280953;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( complex(A, H), complex(D, H) )
%   | | | then return 0.26799795126566484;  // std dev = 1.443, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.41250982998567465;  // std dev = 4.239, 86.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4105142222786643;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.33541892177171034;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.457485078802395;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360618;  // std dev = 1.01e-07, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.3350986222052261;  // std dev = 1.195, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.5920091907374293;  // std dev = 0.292, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2248721330027017;  // std dev = 0.268, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.23385908114995213;  // std dev = 4.833, 98.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=59 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.21422021443731323;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.5071517988457472;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6604926269219016;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(J, A) )
%   | then return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.47216982440752336;  // std dev = 2.387, 84.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=78 */
%   | | | else return -0.26799202839751823;  // std dev = 1.798, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.19293635217474212;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.41957466291477996;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.24458953823358628;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.18186325717209845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.16904746681458774;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, K) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.20774206923271965;  // std dev = 3.806, 120.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=83 */
%   | | | else return -0.30388164780810434;  // std dev = 0.441, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.3443454397335466;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return -0.08518475138839693;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08518475138839686;  // std dev = 1.97e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.08518475138839693;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0851847513883969;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.20118812499487215;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23913332295120882;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4136916769944949;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), enzyme(F, H) )
%   | | | then return -0.15692087967337773;  // std dev = 0.906, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.031153135499680573;  // std dev = 2.126, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13666206167804765;  // std dev = 2.296, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return 0.04700420826116817;  // std dev = 2.971, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   else if ( interaction(J, A) )
%   | then return -0.07877675473109158;  // std dev = 5.67e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(F, G), interaction(H, F) )
%   | | | then return 0.057238690117484475;  // std dev = 3.952, 125.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=69 */
%   | | | else return 0.2555375019047481;  // std dev = 0.858, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.06159655416122152;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.18529897655539973;  // std dev = 1.693, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return 0.3506922845480901;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, K) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(L, A) )
%   | | then return -0.07324622576333706;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.16305218933590235;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18950512359671692;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, F), interaction(G, A) )
%   | | | then return -0.1605494152787953;  // std dev = 1.303, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.03854207037072459;  // std dev = 0.991, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.29590185554666304;  // std dev = 0.646, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.10136335848446053;  // std dev = 2.011, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.012353809785113313;  // std dev = 3.304, 76.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   | | | else return -0.11349872793954371;  // std dev = 1.375, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.06842697784420265;  // std dev = 4.84e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), location(A, G) )
%   | | then if ( recursion_proteinclass(F, B), location(E, G) )
%   | | | then return 0.2294164813777737;  // std dev = 0.207, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1753604201504668;  // std dev = 1.767, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.377293079753261;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.005411526874997597;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( location(A, J) )
%   | | | then return 0.016211532403579032;  // std dev = 3.659, 96.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   | | | else return 0.20112445171932897;  // std dev = 1.297, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else return 0.41886161766922864;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
Inference time using transfer learning 37.4153356552124
Refined model CLL: -0.229366


******************************************
Best model found
******************************************
Results 

CLL : -0.242627 

AUC ROC : 0.983015 

AUC PR : 0.3006 

Precision : 0.073056 

Recall : 0.989362 

F1 : 0.136064 

Total Learning Time : 11.865957498550415 

Total Inference Time : 5.712178468704224 

Total revision time: 25.46129298210144
Best scored revision CLL: -0.229366


Results 

CLL : -0.242627 

AUC ROC : 0.983015 

AUC PR : 0.3006 

Precision : 0.073056 

Recall : 0.989362 

F1 : 0.136064 

Total Learning Time : 25.487356662750244 

Total Inference Time : 5.712178468704224 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.1374123096466064
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4391545216916882;  // std dev = 0.493, 179.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3816958923008978;  // std dev = 6.404, 169.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=99 */
%   | else return 0.6292304090661825;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31578910789931386;  // std dev = 0.491, 176.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360622;  // std dev = 8.01e-09, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2239196117065701;  // std dev = 6.729, 183.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19047873351744155;  // std dev = 6.430, 170.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=99 */
%   | else return 0.10338544287393407;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892608;  // std dev = 6.72e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.17541969879828473;  // std dev = 6.268, 166.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=102 */
%   | | else return 0.2020508680226273;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.91e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1009211248878473;  // std dev = 0.493, 178.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109153;  // std dev = 7.74e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.05470404944533025;  // std dev = 6.686, 181.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=102 */
%   | else return 0.1265614425026793;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.48e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09279557530582759;  // std dev = 6.321, 169.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.43e-09, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.010007209265538145;  // std dev = 6.949, 194.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.95e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
Inference time using transfer learning 21.265602827072144
Parameter learned model CLL:-0.326022 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 75, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [6.404, 70, 99], 'true,false': [0.913, 1, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.16e-08, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 72, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 147, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.729, 79, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 113, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.43, 71, 99], 'true,false': [1.491, 4, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [6.268, 64, 102], 'true,true,false': [0.784, 1, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.91e-08, 134, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.493, 74, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 139, 0], 'false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.686, 79, 102], 'true,false': [0.784, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.48e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.321, 65, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 144, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.949, 90, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.95e-09, 126, 0]}]
{'': [0.24343809494086013, -3.6104813808948184e-18], 'false': [nan, -3.6104813808948184e-18]}
{'': [0.24111020408163375, 5.415722071342227e-17], 'true': [0.24263856307552253, 0.13888888888888876], 'false': [nan, 5.415722071342227e-17], 'false,false': [nan, 5.415722071342227e-17], 'false,false,false': [nan, 5.415722071342227e-17]}
{'': [0.24132976267375905, 6.193080817636927e-17], 'false': [nan, 6.193080817636927e-17], 'false,false': [nan, 6.193080817636927e-17]}
{'': [0.24742689769011172, -2.3856031934094273e-17], 'true': [nan, 0.24742689769011172], 'false': [nan, -2.3856031934094273e-17], 'false,false': [nan, -2.3856031934094273e-17], 'false,false,false': [-1.1789979022568034e-17, -5.204170427930421e-18]}
{'': [0.24376600999783174, 4.370956789862821e-17], 'true': [0.24321799307958678, 0.2469135802469136], 'false': [nan, 4.370956789862821e-17]}
{'': [0.23612463435945805, 3.539841527790354e-17], 'true': [0.23612463435945805, nan], 'true,true': [0.23667665062597784, 0.20488310479392635], 'false': [nan, 3.539841527790354e-17], 'false,false': [3.5626559745434126e-17, 0.0]}
{'': [0.24258116941962962, 4.50090415388577e-17], 'true': [0.24258116941962962, nan], 'false': [nan, 4.50090415388577e-17], 'false,false': [4.313096642428666e-17, -7.709882115452476e-19]}
{'': [0.24634995491304587, 1.2231270610277148e-17], 'true': [0.24695379780770502, 0.2048388025860176], 'false': [nan, 1.2231270610277148e-17], 'false,false': [nan, 1.2231270610277148e-17]}
{'': [0.23641372288390658, 3.0068540250264654e-17], 'true': [0.23641372288390658, nan], 'false': [nan, 3.0068540250264654e-17], 'false,false': [nan, 3.0068540250264654e-17]}
{'': [0.2489429662734606, 8.8112938462314e-18], 'true': [0.2489429662734606, nan], 'false': [nan, 8.8112938462314e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 12.422486066818237
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( interaction(A, F), enzyme(F, E) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.36835301673216486;  // std dev = 3.499, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5525933795439559;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.3514822684328445;  // std dev = 4.330, 75.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=37 */
%   else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then return 0.4153682098514578;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7606994634246944;  // std dev = 0.156, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1996353918713898;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.3107678312783768;  // std dev = 5.868, 140.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=72 */
%   | | | else return 0.40553135847568555;  // std dev = 2.437, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else return -0.12544463852839105;  // std dev = 8.30e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5451644584943854;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6268199891822448;  // std dev = 0.132, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.38475246856631096;  // std dev = 4.380, 84.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | | | else return -0.249146742619703;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6411505413353642;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16049201550365666;  // std dev = 4.044, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   else return -0.11231637819360625;  // std dev = 9.31e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.4219018343493544;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.49514694683479016;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.21135849273622828;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10626501525132723;  // std dev = 3.134, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I), complex(H, J) )
%   | | | then return 0.37879796820148665;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08574540402732357;  // std dev = 2.117, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.5569836752245182;  // std dev = 0.929, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.26471426446497626;  // std dev = 4.605, 92.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=54 */
%   else return -0.10159632948783642;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.12814768921869887;  // std dev = 2.894, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return -0.08221301628337788;  // std dev = 1.537, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(D, D), phenotype(D, H) )
%   | | | then return 0.0448380231918465;  // std dev = 1.837, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.19974400160764663;  // std dev = 4.294, 84.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.6096172179278733;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.003599555602174762;  // std dev = 1.243, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.6087788975075054;  // std dev = 0.237, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.34540681340759294;  // std dev = 1.186, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926093;  // std dev = 5.58e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.4677462530712043;  // std dev = 1.880, 67.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=63 */
%   | | | else return -0.41067457827930687;  // std dev = 0.431, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.13475879006557154;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3430211793717706;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.03316625108769655;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3817722646491877;  // std dev = 0.203, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.00531410770819659;  // std dev = 3.892, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | | else return 0.259779445166251;  // std dev = 1.082, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3211972518499427;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4407123139200467;  // std dev = 0.318, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(H, A), enzyme(H, D) )
%   | | | then return -0.225770411532845;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3430951847189932;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.09135630067505927;  // std dev = 1.761, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.34036001837283114;  // std dev = 0.630, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.02398220817064535;  // std dev = 2.531, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.10283947813620027;  // std dev = 3.912, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   else return -0.07877675473109155;  // std dev = 6.25e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.33831938025445984;  // std dev = 2.578, 100.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=92 */
%   | | | else return -0.2843057550794991;  // std dev = 1.611, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.2349905525159608;  // std dev = 0.197, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.37122868209444554;  // std dev = 0.213, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, H) )
%   | | then return -6.294159719384185E-4;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.221935372782668;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11629102441699965;  // std dev = 1.424, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.07324622576333727;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1928274859096708;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(D, E), enzyme(A, F) )
%   | | | then return 0.12909965327971717;  // std dev = 0.550, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.06425478131832131;  // std dev = 2.294, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.16274313943801424;  // std dev = 3.228, 97.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=72 */
%   | | | else return -0.2562376759438293;  // std dev = 0.271, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.15955409741115323;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3674831088491078;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420264;  // std dev = 6.41e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return -0.0792902737163575;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06203031014595417;  // std dev = 1.955, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | else if ( enzyme(A, J), interaction(D, A) )
%   | | | then return 0.4414937927953389;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.217177766090816;  // std dev = 1.179, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(K, M), complex(K, N) )
%   | | | then return 0.04031956474989453;  // std dev = 2.826, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | | | else return -0.09324665335903297;  // std dev = 2.092, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | else if ( enzyme(A, P) )
%   | | | then return -0.131022027478127;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.36748819513840253;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning 51.53514575958252
Refined model CLL: -0.213563


******************************************
Best model found
******************************************
Results 

CLL : -0.21222 

AUC ROC : 0.983241 

AUC PR : 0.359272 

Precision : 0.122255 

Recall : 0.924528 

F1 : 0.215954 

Total Learning Time : 12.422486066818237 

Total Inference Time : 8.050058603286743 

Total revision time: 26.935117721557617
Best scored revision CLL: -0.213563


Results 

CLL : -0.21222 

AUC ROC : 0.983241 

AUC PR : 0.359272 

Precision : 0.122255 

Recall : 0.924528 

F1 : 0.215954 

Total Learning Time : 26.96118140220642 

Total Inference Time : 8.050058603286743 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.938504934310913
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.39303265602974213;  // std dev = 0.499, 172.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 6.18e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.42523839299422855;  // std dev = 4.391, 82.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=51 */
%   | else return 0.3807519622144278;  // std dev = 4.162, 71.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2958318010322925;  // std dev = 0.496, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24100299641568612;  // std dev = 6.278, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16986415011994685;  // std dev = 4.735, 91.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=51 */
%   | else return 0.11996050298337746;  // std dev = 4.528, 82.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892608;  // std dev = 6.72e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1717292112887906;  // std dev = 5.379, 121.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=72 */
%   | | else return 0.06094031898699825;  // std dev = 3.278, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.41e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.08518475138839686;  // std dev = 2.58e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14109755572184846;  // std dev = 0.489, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109168;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14748988133516394;  // std dev = 5.011, 111.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=72 */
%   | else return -0.0013361265674206849;  // std dev = 3.321, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.008129260458804778;  // std dev = 6.565, 175.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.10e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03991965757888732;  // std dev = 6.309, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
Inference time using transfer learning 34.63231539726257
Parameter learned model CLL:-0.315761 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 80, 92], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [4.391, 31, 51], 'true,false': [4.162, 30, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 71, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 129, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.278, 69, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.48e-08, 86, 0], 'false,false,false,false': [4.59e-08, 63, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.735, 40, 51], 'true,false': [4.528, 41, 41], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 129, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [5.379, 49, 72], 'true,true,false': [3.278, 22, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.41e-08, 57, 0], 'false,false,false': [2.58e-08, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.489, 62, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.8e-08, 72, 0], 'false,false,false': [7.45e-09, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.011, 39, 72], 'true,false': [3.321, 23, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.565, 83, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.309, 73, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 137, 0]}]
{'': [0.24878312601406408, 3.8616453030440226e-17], 'false': [nan, 3.8616453030440226e-17]}
{'': [0.23973685334700434, -8.074349270001138e-18], 'true': [0.23512790005948944, 0.24399920650664647], 'false': [nan, -8.074349270001138e-18], 'false,false': [nan, -8.074349270001138e-18], 'false,false,false': [nan, -8.074349270001138e-18]}
{'': [0.2457871725886187, 7.401486830834377e-17], 'false': [nan, 7.401486830834377e-17], 'false,false': [nan, 7.401486830834377e-17]}
{'': [0.24476489333376045, -5.662882541712208e-17], 'true': [nan, 0.24476489333376045], 'false': [nan, -5.662882541712208e-17], 'false,false': [nan, -5.662882541712208e-17], 'false,false,false': [3.4855839145208403e-17, 3.348291661567932e-17]}
{'': [0.24869941959341663, 4.475317618644042e-17], 'true': [0.2463470595338725, 0.2500000000000005], 'false': [nan, 4.475317618644042e-17]}
{'': [0.24576512267081047, 3.172065784643304e-17], 'true': [0.24576512267081047, nan], 'true,true': [0.23912025058420133, 0.25579717587370526], 'false': [nan, 3.172065784643304e-17], 'false,false': [2.0451476769410777e-17, 1.3877787807814457e-17]}
{'': [0.23907603510564063, 4.085620730620576e-17], 'true': [0.23907603510564063, nan], 'false': [nan, 4.085620730620576e-17], 'false,false': [2.0045693500176437e-17, 1.047380211910525e-18]}
{'': [0.23913106085181804, -6.817158923136926e-18], 'true': [0.22620368528887919, 0.25653705884855305], 'false': [nan, -6.817158923136926e-18], 'false,false': [nan, -6.817158923136926e-18]}
{'': [0.2462855347972542, 2.5005023077143166e-17], 'true': [0.2462855347972542, nan], 'false': [nan, 2.5005023077143166e-17], 'false,false': [nan, 2.5005023077143166e-17]}
{'': [0.24121002107768733, -1.2966108316790149e-17], 'true': [0.24121002107768733, nan], 'false': [nan, -1.2966108316790149e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.657823324203491
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.41023226843284494;  // std dev = 4.872, 96.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=53 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), complex(A, F) )
%   | | then return 0.7443054813522177;  // std dev = 0.137, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, D), complex(E, G) )
%   | | | then return -0.16984475927318485;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3840514311694456;  // std dev = 4.105, 78.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=46 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.05055516023028616;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3333957664100216;  // std dev = 3.752, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else return -0.1254446385283914;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(A, F) )
%   | | then return 0.561614536086523;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6753732859836509;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.2663692324043244;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.01615885581233917;  // std dev = 1.012, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.39777049932968955;  // std dev = 2.894, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   | | | else return 0.28250704854077735;  // std dev = 4.325, 82.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=45 */
%   else return -0.11231637819360617;  // std dev = 9.42e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.4357843496202784;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5891650793244695;  // std dev = 0.383, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.13355599393971365;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.27564517253700466;  // std dev = 0.276, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.23784110958541946;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6544473632070534;  // std dev = 0.228, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.18012132552208104;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2748835468906995;  // std dev = 3.535, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), phenotype(A, H) )
%   | | | then return 0.25824431909104906;  // std dev = 1.232, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.5084756705830806;  // std dev = 0.465, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.2500041657682808;  // std dev = 0.226, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.4112581640416808;  // std dev = 0.149, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.15887898547736365;  // std dev = 0.616, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.44959873781994175;  // std dev = 0.295, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.2907090381001431;  // std dev = 1.797, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.15546298270133893;  // std dev = 3.335, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   else return -0.09269127618926085;  // std dev = 7.30e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F), interaction(A, G) )
%   | | | then return 0.04676342730573425;  // std dev = 0.734, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2441722182112537;  // std dev = 1.345, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( interaction(H, D), phenotype(H, I) )
%   | | | then return -0.023547803044070167;  // std dev = 2.829, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.1104633362268022;  // std dev = 2.611, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J) )
%   | | | then return 0.048954849281510365;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20292712910088095;  // std dev = 0.754, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.4603194510481485;  // std dev = 0.815, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.19416014435895307;  // std dev = 1.556, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.0851847513883968;  // std dev = 5.89e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then return 0.23465683827542438;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3456258204745641;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.2985995498166773;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.04820967395599936;  // std dev = 2.843, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return -0.02319603858138755;  // std dev = 4.228, 103.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=44 */
%   else if ( interaction(A, J) )
%   | then return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07877675473109182;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then return 0.1836818250394285;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G), phenotype(D, H) )
%   | | | then return 0.2701130975030724;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21907608675106424;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.10258860793934763;  // std dev = 0.993, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.09838973734765426;  // std dev = 2.662, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.13206947992045723;  // std dev = 2.282, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return 0.04334684589262321;  // std dev = 3.242, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   else return -0.07324622576333707;  // std dev = 1.05e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.3196534087770932;  // std dev = 0.700, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.3173161958774528;  // std dev = 0.587, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.2465586796911397;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.4768426085341173;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.21047562064985548;  // std dev = 0.201, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0046766304938745005;  // std dev = 1.323, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.2738589600780316;  // std dev = 1.521, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.16020816433126406;  // std dev = 2.676, 41.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(G, A) )
%   | | | then return 0.20203071172170514;  // std dev = 2.470, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return 0.029243400862288205;  // std dev = 2.400, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.2483687077556889;  // std dev = 0.246, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.4849712387975629;  // std dev = 0.380, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, A) )
%   | | then return -0.25142878136621444;  // std dev = 0.480, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.3428527504247189;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 38.61931777000427
Refined model CLL: -0.204366


******************************************
Best model found
******************************************
Results 

CLL : -0.21648 

AUC ROC : 0.97776 

AUC PR : 0.379322 

Precision : 0.069653 

Recall : 0.920578 

F1 : 0.129507 

Total Learning Time : 9.657823324203491 

Total Inference Time : 5.165644407272339 

Total revision time: 20.246182441711426
Best scored revision CLL: -0.204366


Results 

CLL : -0.21648 

AUC ROC : 0.97776 

AUC PR : 0.379322 

Precision : 0.069653 

Recall : 0.920578 

F1 : 0.129507 

Total Learning Time : 20.27224612236023 

Total Inference Time : 5.165644407272339 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6608009338378906
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4512523833753721;  // std dev = 0.491, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6.97e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.37116057577869366;  // std dev = 5.479, 123.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=71 */
%   | else return 0.44609871646444693;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.24527282222064542;  // std dev = 0.500, 165.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(D, A), phenotype(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.273452896789356;  // std dev = 5.861, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1015963294878362;  // std dev = 5.27e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.23555103283505155;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=71 */
%   | else return 0.17174205388609953;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926083;  // std dev = 6.59e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.18427420069709885;  // std dev = 5.381, 124.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=78 */
%   | | else return 0.1686547869314134;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10275481078388976;  // std dev = 0.491, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109164;  // std dev = 4.83e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09789883161129287;  // std dev = 5.487, 127.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=78 */
%   | else return -0.04274264167535294;  // std dev = 2.052, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 9.31e-10, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13036688666995103;  // std dev = 5.342, 129.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.016989684850433034;  // std dev = 6.199, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning 26.5397629737854
Parameter learned model CLL:-0.345001 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 59, 86], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(G, A)'}, {'true,true': [5.479, 52, 71], 'true,false': [2.284, 8, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.5, 79, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 128, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'phenotype(D, A), phenotype(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.861, 57, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27e-08, 88, 0], 'false,false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.175, 43, 71], 'true,false': [2.519, 11, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.381, 46, 78], 'true,true,false': [1.752, 5, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-08, 94, 0], 'false,false,false': [0.0, 16, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.491, 59, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.83e-08, 85, 0], 'false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.487, 49, 78], 'true,false': [2.052, 9, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [9.31e-10, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.342, 43, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.199, 70, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 104, 0]}]
{'': [0.2413317479191459, 4.674623261579606e-17], 'false': [nan, 4.674623261579606e-17]}
{'': [0.24207168324263506, -1.0992307174506501e-17], 'true': [0.2440346354683056, 0.2268431001890358], 'false': [nan, -1.0992307174506501e-17], 'false,false': [nan, -1.0992307174506501e-17], 'false,false,false': [nan, -1.0992307174506501e-17]}
{'': [0.24950782753302087, 7.45931094670027e-17], 'false': [nan, 7.45931094670027e-17], 'false,false': [nan, 7.45931094670027e-17]}
{'': [0.2401900147785757, -8.001607384685813e-18], 'true': [nan, 0.2401900147785757], 'false': [nan, -8.001607384685813e-18], 'false,false': [nan, -8.001607384685813e-18], 'false,false,false': [3.154042683594195e-17, -2.413528314402514e-18]}
{'': [0.2372361206311478, 4.332577657073782e-17], 'true': [0.23491843644198235, 0.24408284023668647], 'false': [nan, 4.332577657073782e-17]}
{'': [0.2337626256170511, 3.3306690738754695e-17], 'true': [0.2337626256170511, nan], 'true,true': [0.23348743053037935, 0.23616674734705242], 'false': [nan, 3.3306690738754695e-17], 'false,false': [2.9527208101732886e-17, -2.6020852139652106e-18]}
{'': [0.2413150577521897, 3.3306690738754695e-17], 'true': [0.2413150577521897, nan], 'false': [nan, 3.3306690738754695e-17], 'false,false': [2.7429039431915633e-17, 0.0]}
{'': [0.24040726610667879, 0.0], 'true': [0.23708903213170301, 0.24775154351704298], 'false': [nan, 0.0], 'false,false': [nan, 0.0]}
{'': [0.22120267327313595, 2.5232341468753557e-17], 'true': [0.22120267327313595, nan], 'false': [nan, 2.5232341468753557e-17], 'false,false': [nan, 2.5232341468753557e-17]}
{'': [0.2463106984868751, -1.4945309946877107e-17], 'true': [0.2463106984868751, nan], 'false': [nan, -1.4945309946877107e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.746835470199585
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3660854430360209;  // std dev = 5.612, 126.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=64 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7283981403407856;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7874683221052643;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.42687916761432226;  // std dev = 3.494, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.4992008192362953;  // std dev = 1.830, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.2241771830872743;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5953414287332918;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, E), complex(D, F) )
%   | | | then return 0.07537525837071497;  // std dev = 1.612, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.30883945951998265;  // std dev = 4.180, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.6481245505162989;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7324395695140288;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5834972617830624;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.29644451656510495;  // std dev = 2.467, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.41774245800700577;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, G), interaction(G, A) )
%   | | | then return 0.46060062598115953;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5123191420397577;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return -0.2141178024681708;  // std dev = 0.785, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.015136002727469539;  // std dev = 1.401, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.45923815277140684;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23603267096917577;  // std dev = 5.126, 106.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=60 */
%   else if ( interaction(K, A) )
%   | then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(D, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.34250752019856334;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10924431934632549;  // std dev = 1.024, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.22409659490572964;  // std dev = 0.739, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5031060567984563;  // std dev = 0.963, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( enzyme(A, J), phenotype(I, K) )
%   | | | then return 0.17741902078021857;  // std dev = 1.708, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.03564013013805788;  // std dev = 2.460, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( location(A, L), complex(A, M) )
%   | | | then return 0.31791968330282183;  // std dev = 1.659, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.14821259405314233;  // std dev = 3.901, 62.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   else return -0.09269127618926086;  // std dev = 6.59e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(D, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2899937728965048;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5311079274500053;  // std dev = 0.239, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(E, G), location(A, H) )
%   | | | then return -0.1071967168692941;  // std dev = 2.725, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.21421493919510282;  // std dev = 2.221, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.0601150548235716;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6187594910087173;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.08982029091782592;  // std dev = 3.684, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | | | else return 0.2543294042702147;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.21910020270346017;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26624764233510473;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3421559402672642;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return -0.011133039249245743;  // std dev = 2.460, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return -0.26792496642565755;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04059571288391509;  // std dev = 3.656, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.15917903158773583;  // std dev = 3.062, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   else if ( interaction(L, A) )
%   | then return -0.07877675473109161;  // std dev = 5.51e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.0787767547310918;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.18394745930705464;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2176698259398393;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.27084699294349557;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.18968890188617374;  // std dev = 1.572, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.05335285844654781;  // std dev = 2.396, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.1418150619167131;  // std dev = 2.776, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.04527205447698313;  // std dev = 3.703, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   else if ( interaction(A, A) )
%   | then return -0.0732462257633371;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07324622576333707;  // std dev = 2.95e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2189015577197186;  // std dev = 1.198, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.03481630769249168;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=45 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.032101968551417386;  // std dev = 0.897, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.21656205735460027;  // std dev = 2.325, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.5245708692089444;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.09975918600630189;  // std dev = 1.616, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.33457843477243887;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420279;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06842697784420267;  // std dev = 4.56e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then return 0.09194319980231164;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.13641532684913682;  // std dev = 2.160, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.0021858071910476617;  // std dev = 1.053, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.17305870939882353;  // std dev = 3.835, 94.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=69 */
%   | | | else return -0.48572547338487077;  // std dev = 0.430, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.20724520761373932;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning 15.920265197753906
Refined model CLL: -0.277721


******************************************
Best model found
******************************************
Results 

CLL : -0.276532 

AUC ROC : 0.897431 

AUC PR : 0.084973 

Precision : 0.03126 

Recall : 0.664311 

F1 : 0.059711 

Total Learning Time : 5.746835470199585 

Total Inference Time : 2.8666763305664062 

Total revision time: 13.073537588119507
Best scored revision CLL: -0.277721


Results 

CLL : -0.276532 

AUC ROC : 0.897431 

AUC PR : 0.084973 

Precision : 0.03126 

Recall : 0.664311 

F1 : 0.059711 

Total Learning Time : 13.09960126876831 

Total Inference Time : 2.8666763305664062 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4735121726989746
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4158412427918175;  // std dev = 0.497, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2996580844452193;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0.40430924723591705;  // std dev = 4.534, 86.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29256542934790747;  // std dev = 0.497, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5651240477239144;  // std dev = 2.993, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | else return -0.25168518558470393;  // std dev = 2.175, 68.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 1.05e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.10159632948783617;  // std dev = 5.05e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1672113118221486;  // std dev = 3.580, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | else return 0.18777559653091655;  // std dev = 3.932, 88.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17564772675799917;  // std dev = 3.647, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | else return 0.12600791429665112;  // std dev = 3.716, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839693;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11421382790967154;  // std dev = 0.431, 148.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 5.27e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07877675473109172;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.09851601161080917;  // std dev = 3.715, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | else return 0.08603465035174611;  // std dev = 3.527, 80.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=46 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.059951217323575084;  // std dev = 5.194, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.93e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.047508952001214876;  // std dev = 5.161, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
Inference time using transfer learning 8.78633713722229
Parameter learned model CLL:-0.265458 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 69, 87], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.183, 35, 35], 'true,false': [4.534, 34, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 94, 0], 'false,false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 69, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [2.993, 10, 82], 'true,false': [2.175, 63, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 41, 0], 'false,false,false,false': [5.05e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.58, 31, 35], 'true,false': [3.932, 36, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.647, 28, 41], 'true,true,false': [3.716, 35, 46], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 20, 0], 'false,false,false': [3.65e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.431, 61, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-09, 38, 0], 'false,false,false': [3.07e-08, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.715, 28, 41], 'true,false': [3.527, 34, 46], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 100, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.194, 65, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.93e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.161, 65, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 91, 0]}]
{'': [0.24667159763313826, 6.111319401606367e-17], 'false': [nan, 6.111319401606367e-17]}
{'': [0.2466715976331347, -1.3594567648471304e-17], 'true': [0.2499999999999997, 0.2390481341265527], 'false': [nan, -1.3594567648471304e-17], 'false,false': [nan, -1.3594567648471304e-17], 'false,false,false': [-1.4173059888831785e-17, 0.0]}
{'': [0.2471685426905527, 6.877487763164686e-17], 'false': [nan, 6.877487763164686e-17], 'false,false': [nan, 6.877487763164686e-17]}
{'': [0.24857852461570323, -2.05596856412066e-18], 'true': [0.09734899502539203, 0.06955622121623953], 'false': [nan, -2.05596856412066e-18], 'false,false': [nan, -2.05596856412066e-18], 'false,false,false': [2.7078610356711136e-18, 3.811213368116209e-17]}
{'': [0.18372684672918946, 4.1876833384983976e-17], 'true': [0.1942082627059181, 0.17568454625853558], 'false': [nan, 4.1876833384983976e-17]}
{'': [0.1813512570048143, 2.878355989768924e-17], 'true': [0.1813512570048143, nan], 'true,true': [0.1927774843033604, 0.1704843130695173], 'false': [nan, 2.878355989768924e-17], 'false,false': [-4.163336342344337e-18, 2.1840452943445702e-17]}
{'': [0.18541527600219493, 3.4492365813597093e-17], 'true': [0.18541527600219493, nan], 'false': [nan, 3.4492365813597093e-17], 'false,false': [7.304098846218135e-19, 1.4518301091252048e-17]}
{'': [0.17618047216640512, -4.440892098500626e-18], 'true': [0.20003031049936926, 0.1555378448448767], 'false': [nan, -4.440892098500626e-18], 'false,false': [nan, -4.440892098500626e-18]}
{'': [0.17746158281751642, 2.4445277606425466e-17], 'true': [0.17746158281751642, nan], 'false': [nan, 2.4445277606425466e-17], 'false,false': [nan, 2.4445277606425466e-17]}
{'': [0.17526607229436686, -1.342027831964475e-17], 'true': [0.17526607229436686, nan], 'false': [nan, -1.342027831964475e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.846894264221191
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3318331456258281;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.3709694479200248;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.45189893509951135;  // std dev = 3.929, 64.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.7825502624607764;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30653160394704787;  // std dev = 1.007, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), interaction(D, H) )
%   | | | then return 0.0770468652846492;  // std dev = 1.473, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.40792728347999624;  // std dev = 1.737, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.7622133196717775;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.44455397707908517;  // std dev = 4.306, 82.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=53 */
%   | | | else return 0.796405245640436;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(M, A) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return -0.1254446385283914;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.5422651255646536;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7079950198429896;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.34304803973416;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7278661649525966;  // std dev = 0.131, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.25751190925852674;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.20794461100892656;  // std dev = 3.279, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.2856726504579903;  // std dev = 4.008, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360643;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11231637819360622;  // std dev = 7.79e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), phenotype(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.4078679190828271;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5463069610494977;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, F), interaction(D, A) )
%   | | | then return -0.04985714224548533;  // std dev = 2.378, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.10540278096329835;  // std dev = 3.581, 62.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5492325879576463;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2218463075728129;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.31917221877969654;  // std dev = 3.353, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.06428502047587893;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(D, F), phenotype(E, F) )
%   | | then if ( interaction(A, G), phenotype(A, F) )
%   | | | then return 0.11235658434742118;  // std dev = 1.887, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.31185006951762584;  // std dev = 2.891, 44.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=31 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.030017504980600608;  // std dev = 2.485, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.22995098959782334;  // std dev = 2.710, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then return -0.24305533732396795;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.10618114814772334;  // std dev = 0.958, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.12723807246192556;  // std dev = 1.455, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926096;  // std dev = 5.10e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(A, G) )
%   | | then if ( phenotype(G, F), interaction(E, E) )
%   | | | then return 0.018168735458582996;  // std dev = 1.587, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.27448211240597414;  // std dev = 2.339, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( interaction(H, E), location(E, D) )
%   | | | then return 0.03291430691298249;  // std dev = 3.914, 68.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | | else return 0.09737088951677228;  // std dev = 2.428, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.31675882442253056;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.504696934502943;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, J) )
%   | then return -0.08518475138839685;  // std dev = 4.27e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08518475138839687;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839682;  // std dev = 5.19e-09, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3227851019618877;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.058005364741953135;  // std dev = 1.291, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(D, F), phenotype(A, G) )
%   | | | then return 0.22340598619275134;  // std dev = 1.093, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4757026737909024;  // std dev = 0.376, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.36926371709708655;  // std dev = 1.295, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.3406560243507214;  // std dev = 0.501, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.011450378328488518;  // std dev = 1.602, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.2079416105644082;  // std dev = 2.902, 43.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=30 */
%   else return -0.07877675473109154;  // std dev = 6.38e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.4258616403217049;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.28172531487469143;  // std dev = 0.127, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.3214701322562309;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17570364887123485;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( complex(J, K), interaction(A, L) )
%   | | | then return 0.2138049810556328;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3543253689496481;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.46263569583518366;  // std dev = 0.280, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 4.0853840476998967E-4;  // std dev = 5.148, 117.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=62 */
%   else return -0.07324622576333707;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.17924902201108855;  // std dev = 0.635, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.38028524506355266;  // std dev = 0.457, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, D), enzyme(E, G) )
%   | | | then return -0.4635165220180338;  // std dev = 0.496, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.032360476571673194;  // std dev = 4.390, 102.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=56 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3090895368067003;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23662574734176595;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.41048291549873184;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.17500168480087605;  // std dev = 1.122, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), complex(A, G) )
%   | | then if ( complex(F, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3134127883108312;  // std dev = 0.332, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.004981565687467572;  // std dev = 2.183, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.021502657841097377;  // std dev = 1.370, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.11778088815472633;  // std dev = 2.815, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), location(J, L) )
%   | | | then return 0.06385420634919406;  // std dev = 1.190, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.4614038680295159;  // std dev = 0.275, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.34814461009424413;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.037687535565187405;  // std dev = 2.530, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning 13.037978410720825
Refined model CLL: -0.264123


******************************************
Best model found
******************************************
Results 

CLL : -0.264678 

AUC ROC : 0.937823 

AUC PR : 0.176857 

Precision : 0.03988 

Recall : 0.847518 

F1 : 0.076175 

Total Learning Time : 9.846894264221191 

Total Inference Time : 4.181650400161743 

Total revision time: 17.43603491783142
Best scored revision CLL: -0.264123


Results 

CLL : -0.264678 

AUC ROC : 0.937823 

AUC PR : 0.176857 

Precision : 0.03988 

Recall : 0.847518 

F1 : 0.076175 

Total Learning Time : 17.45291018486023 

Total Inference Time : 4.181650400161743 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6604363918304443
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.473533550484125;  // std dev = 0.487, 169.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048807;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.43088054341577486;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else return 0.3241538485005206;  // std dev = 5.419, 118.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839105;  // std dev = 8.02e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31671937480660595;  // std dev = 0.492, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5557537871666806;  // std dev = 3.147, 110.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=99 */
%   | else return -0.274636909194232;  // std dev = 2.147, 72.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783626;  // std dev = 2.98e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.10159632948783613;  // std dev = 5.96e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.10381951407824057;  // std dev = 3.860, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   | else return 0.2070320099867923;  // std dev = 4.257, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926071;  // std dev = 6.84e-09, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2238841548211794;  // std dev = 3.471, 75.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   | | else return 0.06306070573213957;  // std dev = 4.406, 105.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.47e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.08518475138839683;  // std dev = 4.01e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07844920461167341;  // std dev = 0.418, 190.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07877675473109164;  // std dev = 4.71e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.08760539099281982;  // std dev = 3.811, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else return 0.011925245458453642;  // std dev = 4.472, 110.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 2.08e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0689560726082369;  // std dev = 5.640, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.27e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09172926472320565;  // std dev = 5.333, 166.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 1.32e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
Inference time using transfer learning 8.632582664489746
Parameter learned model CLL:-0.26689 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.487, 65, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 151, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.839, 23, 41], 'true,false': [5.419, 55, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.02e-08, 123, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 71, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.147, 11, 99], 'true,false': [2.147, 67, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.98e-08, 51, 0], 'false,false,false,false': [5.96e-08, 79, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.86, 39, 41], 'true,false': [4.257, 40, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 152, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.471, 24, 51], 'true,true,false': [4.406, 52, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.47e-08, 74, 0], 'false,false,false': [4.01e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.418, 86, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 46, 0], 'false,false,false': [4.71e-08, 83, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.811, 34, 51], 'true,false': [4.472, 57, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.64, 76, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.333, 62, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.32e-09, 133, 0]}]
{'': [0.2366863905325475, -1.1763952578809607e-16], 'false': [nan, -1.1763952578809607e-16]}
{'': [0.24489795918366947, 5.2867763077388404e-17], 'true': [0.23022460937499922, 0.2488509049123805], 'false': [nan, 5.2867763077388404e-17], 'false,false': [nan, 5.2867763077388404e-17], 'false,false,false': [5.235198002297486e-17, 0.0]}
{'': [0.24195327187060653, 7.150588972162025e-17], 'false': [nan, 7.150588972162025e-17], 'false,false': [nan, 7.150588972162025e-17]}
{'': [0.24461803700333148, -3.586874387250506e-17], 'true': [0.09005006967466252, 0.06400333414817821], 'false': [nan, -3.586874387250506e-17], 'false,false': [nan, -3.586874387250506e-17], 'false,false,false': [1.7415263131375004e-17, 4.4971059225322796e-17]}
{'': [0.1830736843582736, 4.674623261579606e-17], 'true': [0.18623593476572792, 0.17596059734605513], 'false': [nan, 4.674623261579606e-17]}
{'': [0.18105784457716484, 3.622004193812568e-17], 'true': [0.18105784457716484, nan], 'true,true': [0.16064541185918751, 0.184861411254395], 'false': [nan, 3.622004193812568e-17], 'false,false': [2.700542492331462e-17, 2.4027214712036968e-17]}
{'': [0.1747875175333151, 4.131062417209885e-17], 'true': [0.1747875175333151, nan], 'false': [nan, 4.131062417209885e-17], 'false,false': [0.0, 2.6752362039160398e-17]}
{'': [0.1784678787171058, 5.0927661680053055e-18], 'true': [0.1708923024975266, 0.18182513729224614], 'false': [nan, 5.0927661680053055e-18], 'false,false': [nan, 5.0927661680053055e-18]}
{'': [0.17670738871548672, 2.892834641628929e-17], 'true': [0.17670738871548672, nan], 'false': [nan, 2.892834641628929e-17], 'false,false': [nan, 2.892834641628929e-17]}
{'': [0.17133115162364002, 1.6695083077070022e-18], 'true': [0.17133115162364002, nan], 'false': [nan, 1.6695083077070022e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.332384586334229
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.43337017403756617;  // std dev = 5.255, 113.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=65 */
%   else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.4697812419993332;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7822042845522386;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, H), phenotype(A, I) )
%   | | | then return 0.36520087439136145;  // std dev = 1.648, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.5997164360186636;  // std dev = 1.232, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(J, K), phenotype(J, L) )
%   | | | then return 0.41191388692105896;  // std dev = 1.324, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.21727306000457725;  // std dev = 2.487, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.7469687014732399;  // std dev = 0.100, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.33163532628662656;  // std dev = 4.997, 101.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=54 */
%   else return -0.12544463852839124;  // std dev = 5.27e-09, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.6075223007999051;  // std dev = 0.199, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(F, E), complex(E, G) )
%   | | | then return 0.1356450834815319;  // std dev = 3.321, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.3206509396554479;  // std dev = 2.449, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.3506552819799847;  // std dev = 4.280, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   | | | else return 0.5429067892228046;  // std dev = 0.864, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360617;  // std dev = 9.88e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.45896224154786947;  // std dev = 0.206, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(E, F), complex(A, G) )
%   | | | then return 0.2317240007829719;  // std dev = 2.103, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.3621543435041781;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.03179462253849133;  // std dev = 3.012, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.17146788654887743;  // std dev = 5.020, 101.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=52 */
%   else if ( complex(A, J) )
%   | then return -0.10159632948783624;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(D, G), complex(G, F) )
%   | | | then return 0.1664543874140043;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4895113048213983;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.3754118587756329;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4731240752682175;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, I), interaction(H, A) )
%   | | | then return -0.186629182780142;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08673467876873821;  // std dev = 2.708, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.6288536634909333;  // std dev = 0.267, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.20392958286091661;  // std dev = 5.068, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   else return -0.09269127618926071;  // std dev = 6.97e-09, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.46343028166766587;  // std dev = 2.271, 68.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=63 */
%   | | | else return -0.3889560479757206;  // std dev = 0.174, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.3384069225946336;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.4277794441565168;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.04463140108244379;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2904908357557325;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.06357630707406098;  // std dev = 2.404, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.057472042452277154;  // std dev = 3.337, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   else return -0.0851847513883968;  // std dev = 6.04e-09, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, A), interaction(A, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.21284517684284765;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.35779426440654966;  // std dev = 0.279, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.3190122254530388;  // std dev = 1.749, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0.10808923907330831;  // std dev = 4.254, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.2449374471263964;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.008182153550395421;  // std dev = 1.862, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.11521221766633949;  // std dev = 1.914, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( complex(A, I) )
%   | then return -0.0787767547310918;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.07877675473109165;  // std dev = 5.02e-09, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2904207539138665;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40195826688564695;  // std dev = 0.146, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), enzyme(H, E) )
%   | | | then return -0.36042064046698835;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.5144366861975684;  // std dev = 0.211, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(I, I), interaction(K, A) )
%   | | | then return 0.1491673025558281;  // std dev = 1.492, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.0032497302457935714;  // std dev = 2.176, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.14963728042826743;  // std dev = 3.722, 76.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=50 */
%   | | | else return 0.3027082654775329;  // std dev = 1.306, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07324622576333727;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18996287130469583;  // std dev = 0.872, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.09470538201434946;  // std dev = 2.220, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else return 0.1875180217869343;  // std dev = 0.656, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return -0.155750469439803;  // std dev = 1.555, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.08925057615542432;  // std dev = 2.577, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.22189672265479715;  // std dev = 1.223, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.0912926926369613;  // std dev = 3.198, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   else if ( complex(A, M) )
%   | then return -0.0684269778442027;  // std dev = 2.46e-09, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420265;  // std dev = 4.56e-09, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(D, A) )
%   | | then return 0.14248913306390434;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, F) )
%   | | | then return 0.2881715089413643;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15642721869292994;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.024155810804746117;  // std dev = 2.572, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.3864332569431078;  // std dev = 0.286, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.01789126781613294;  // std dev = 3.602, 78.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | | | else return -0.10196266901194322;  // std dev = 3.424, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
Inference time using transfer learning 27.19202470779419
Refined model CLL: -0.258408


******************************************
Best model found
******************************************
Results 

CLL : -0.261564 

AUC ROC : 0.955547 

AUC PR : 0.251965 

Precision : 0.057609 

Recall : 0.8 

F1 : 0.107478 

Total Learning Time : 9.332384586334229 

Total Inference Time : 6.226931810379028 

Total revision time: 19.640737533569336
Best scored revision CLL: -0.258408


Results 

CLL : -0.261564 

AUC ROC : 0.955547 

AUC PR : 0.251965 

Precision : 0.057609 

Recall : 0.8 

F1 : 0.107478 

Total Learning Time : 19.657612800598145 

Total Inference Time : 6.226931810379028 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.504582405090332
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42957750652808113;  // std dev = 0.495, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41716671502828967;  // std dev = 4.091, 71.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=44 */
%   | else return 0.39744840516913477;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.15e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.37623693443809036;  // std dev = 0.476, 141.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6425159289488501;  // std dev = 0.019, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.11783048990914544;  // std dev = 4.094, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.14414366531996226;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | else return 0.16297459741206866;  // std dev = 4.066, 85.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926083;  // std dev = 6.84e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11401485259117956;  // std dev = 4.138, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   | | else return 0.14138995278851083;  // std dev = 3.557, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 2.89e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14214121199559254;  // std dev = 0.423, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109177;  // std dev = 1.29e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.07877675473109173;  // std dev = 2.58e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07808435031996869;  // std dev = 3.962, 89.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | else return 0.0780455358365076;  // std dev = 3.551, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.026667132537105193;  // std dev = 5.549, 166.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05620524168542955;  // std dev = 5.300, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 8.214902400970459
Parameter learned model CLL:-0.274195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 69, 92], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.091, 27, 44], 'true,false': [4.382, 32, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.15e-08, 82, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.476, 49, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.019, 0, 70], 'true,false': [4.094, 70, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 40, 0], 'false,false,false,false': [3.8e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.731, 34, 44], 'true,false': [4.066, 37, 48], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.138, 40, 53], 'true,true,false': [3.557, 28, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.89e-08, 51, 0], 'false,false,false': [3.65e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.423, 54, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.29e-08, 55, 0], 'false,false,false': [2.58e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.962, 36, 53], 'true,false': [3.551, 27, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.549, 74, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.3, 62, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 115, 0]}]
{'': [0.2448979591836759, -7.162729191130042e-18], 'false': [nan, -7.162729191130042e-18]}
{'': [0.2380597342221816, 5.601125169280069e-17], 'true': [0.23566752628446788, 0.24000000000000052], 'false': [nan, 5.601125169280069e-17], 'false,false': [nan, 5.601125169280069e-17], 'false,false,false': [6.228080382043562e-17, -5.742532885992189e-18]}
{'': [0.22684664123382808, 6.91614343209114e-17], 'false': [nan, 6.91614343209114e-17], 'false,false': [nan, 6.91614343209114e-17]}
{'': [0.24531583941738452, 2.1973164029039556e-17], 'true': [5.1096583467723025e-06, 0.18215748445975982], 'false': [nan, 2.1973164029039556e-17], 'false,false': [nan, 2.1973164029039556e-17], 'false,false,false': [2.7755575615628915e-18, 2.577303450022685e-17]}
{'': [0.18687967735428132, 4.664802624475448e-17], 'true': [0.17842945570931254, 0.19446431058785854], 'false': [nan, 4.664802624475448e-17]}
{'': [0.18630707503388771, 3.172065784643304e-17], 'true': [0.18630707503388771, nan], 'true,true': [0.18415586515869428, 0.18885749628168627], 'false': [nan, 3.172065784643304e-17], 'false,false': [1.6326809185664067e-17, 2.1840452943445702e-17]}
{'': [0.17874681690986724, 3.890525129028326e-17], 'true': [0.17874681690986724, nan], 'false': [nan, 3.890525129028326e-17], 'false,false': [3.0278809762504268e-18, 1.0744093786695063e-17]}
{'': [0.18259422290237626, -3.861645303044023e-18], 'true': [0.17635116662246364, 0.19101288883901651], 'false': [nan, -3.861645303044023e-18], 'false,false': [nan, -3.861645303044023e-18]}
{'': [0.18548043644116444, 2.819614030794048e-17], 'true': [0.18548043644116444, nan], 'false': [nan, 2.819614030794048e-17], 'false,false': [nan, 2.819614030794048e-17]}
{'': [0.18243629855017057, -1.7860109526578604e-17], 'true': [0.18243629855017057, nan], 'false': [nan, -1.7860109526578604e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.795860528945923
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4483128695257407;  // std dev = 5.432, 122.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=72 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.77775378222333;  // std dev = 0.132, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.18555717224766283;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.2346868773847119;  // std dev = 2.090, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.3477429167929092;  // std dev = 4.911, 99.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=55 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(D, E), enzyme(A, F) )
%   | | | then return 0.5409325095936086;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6494006008595825;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07722988632239251;  // std dev = 3.100, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.42834072437022025;  // std dev = 1.614, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.24318004424697973;  // std dev = 4.695, 94.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=48 */
%   else if ( enzyme(A, J) )
%   | then return -0.11231637819360635;  // std dev = 2.95e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.11231637819360632;  // std dev = 4.37e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.41397253212207236;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4918317025090059;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.6199344765922448;  // std dev = 0.368, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.6786142810509357;  // std dev = 0.397, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(J, H) )
%   | | | then return -0.23515483277471175;  // std dev = 0.279, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.3065818946900754;  // std dev = 0.172, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.19855436473926205;  // std dev = 2.564, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.5208919871852533;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | | then return 0.3151580944732661;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03747626101533513;  // std dev = 1.613, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3453742908768384;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14485266925806534;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.20838776880262724;  // std dev = 1.279, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.4101794839059656;  // std dev = 1.152, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.24761268469849326;  // std dev = 2.141, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return 0.1415848430833791;  // std dev = 3.407, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   else return -0.0926912761892608;  // std dev = 6.72e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.27373695356192873;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.44955387208389413;  // std dev = 0.277, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.22511066334396762;  // std dev = 0.221, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.3495405436823125;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, K) )
%   | | | then return 0.22106896438336637;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.48636616237803704;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.12801309641707467;  // std dev = 2.253, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return 0.22025748877061638;  // std dev = 2.901, 54.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   else return -0.0851847513883968;  // std dev = 5.74e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2195107125618899;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.024811602652412876;  // std dev = 1.655, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.14207985777965149;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06092912567863064;  // std dev = 2.790, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.03407931721168034;  // std dev = 1.975, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.15593601884423455;  // std dev = 1.174, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.1149661101743122;  // std dev = 1.570, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.21136526680685572;  // std dev = 1.660, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   else return -0.07877675473109157;  // std dev = 6.11e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), complex(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.07856848770579562;  // std dev = 2.238, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return 0.32146145034168844;  // std dev = 0.885, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.03986974177681321;  // std dev = 1.658, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return -0.15154709353112902;  // std dev = 1.993, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(A, J), interaction(K, H) )
%   | | | then return -0.009164108776448862;  // std dev = 1.035, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1302219019297083;  // std dev = 1.626, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.3409146455485337;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14372987091476194;  // std dev = 1.660, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   else return -0.07324622576333718;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.16605798864531088;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.24336471951186825;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1917536578315937;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(G, I), complex(G, J) )
%   | | | then return 0.34599917926703333;  // std dev = 0.832, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.013568199364933652;  // std dev = 2.667, 68.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.08726406256428056;  // std dev = 2.154, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.013803521077845708;  // std dev = 2.722, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   else if ( interaction(A, L) )
%   | then return -0.06842697784420267;  // std dev = 3.84e-09, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.0684269778442027;  // std dev = 2.46e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.21318047583236663;  // std dev = 0.313, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11028391214629431;  // std dev = 2.035, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( enzyme(A, F), interaction(G, D) )
%   | | | then return -0.007615781207305451;  // std dev = 1.665, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.1051970673715438;  // std dev = 2.149, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3018891399253615;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.34386070932303914;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2445369256211798;  // std dev = 1.657, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.10615779472834468;  // std dev = 1.372, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 9.920404434204102
Refined model CLL: -0.225314


******************************************
Best model found
******************************************
Results 

CLL : -0.235406 

AUC ROC : 0.983102 

AUC PR : 0.245995 

Precision : 0.099138 

Recall : 0.99639 

F1 : 0.180333 

Total Learning Time : 5.795860528945923 

Total Inference Time : 2.7038769721984863 

Total revision time: 12.203303813934326
Best scored revision CLL: -0.225314


Results 

CLL : -0.235406 

AUC ROC : 0.983102 

AUC PR : 0.245995 

Precision : 0.099138 

Recall : 0.99639 

F1 : 0.180333 

Total Learning Time : 12.220179080963135 

Total Inference Time : 2.7038769721984863 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.576545000076294
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3890131326303742;  // std dev = 0.499, 162.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36392155186479663;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else return 0.44128418922743395;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839113;  // std dev = 6.99e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32691184317351635;  // std dev = 0.491, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360622;  // std dev = 7.57e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6331874645934046;  // std dev = 1.404, 73.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   | else return -0.1415709559105663;  // std dev = 3.476, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.18565281022465452;  // std dev = 3.066, 49.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
%   | else return 0.15672265192548276;  // std dev = 4.353, 103.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.45e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18382887524511865;  // std dev = 3.053, 51.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | | else return 0.17174926438372906;  // std dev = 3.896, 87.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.69e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08383840675889262;  // std dev = 0.423, 154.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.07877675473109166;  // std dev = 3.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.015405062017889446;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | else return 0.0993774310010812;  // std dev = 3.948, 89.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02970511629222104;  // std dev = 5.427, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.030580666435345082;  // std dev = 5.332, 157.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 8.83783483505249
Parameter learned model CLL:-0.260073 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 76, 86], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.51, 22, 28], 'true,false': [4.586, 33, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.99e-08, 74, 0], 'false,false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 58, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.57e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [1.404, 2, 71], 'true,false': [3.476, 61, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 36, 0], 'false,false,false,false': [5.05e-08, 68, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.066, 21, 28], 'true,false': [4.353, 45, 58], 'false,true': [0.0, 0, 0], 'false,false': [6.45e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.053, 19, 32], 'true,true,false': [3.896, 33, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.69e-08, 49, 0], 'false,false,false': [4.94e-08, 84, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.423, 68, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 39, 0], 'false,false,false': [3.87e-08, 74, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.496, 31, 32], 'true,false': [3.948, 35, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 95, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.427, 72, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.332, 71, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 116, 0]}]
{'': [0.24904740131077768, 2.258080728051166e-17], 'false': [nan, 2.258080728051166e-17]}
{'': [0.2379155978069501, 5.905441620346577e-17], 'true': [0.24640000000000056, 0.23113150585678077], 'false': [nan, 5.905441620346577e-17], 'false,false': [nan, 5.905441620346577e-17], 'false,false,false': [6.601326092365796e-17, 0.0]}
{'': [0.2409589486072906, 5.978123978750843e-17], 'false': [nan, 5.978123978750843e-17], 'false,false': [nan, 5.978123978750843e-17]}
{'': [0.24430946295498662, 4.270088556250602e-18], 'true': [0.02699431801564211, 0.15896386479519145], 'false': [nan, 4.270088556250602e-18], 'false,false': [nan, 4.270088556250602e-18], 'false,false,false': [0.0, 3.7551661127027356e-17]}
{'': [0.18667460635969008, 4.2111907830609384e-17], 'true': [0.19179940621631278, 0.1839667872188504], 'false': [nan, 4.2111907830609384e-17]}
{'': [0.17756116892214655, 3.5059674461847047e-17], 'true': [0.17756116892214655, nan], 'true,true': [0.18274954515271932, 0.17446578114658418], 'false': [nan, 3.5059674461847047e-17], 'false,false': [1.4727448285843914e-17, 2.9077269692563625e-17]}
{'': [0.1793505270155293, 3.635243531958477e-17], 'true': [0.1793505270155293, nan], 'false': [nan, 3.635243531958477e-17], 'false,false': [-1.423362852083534e-18, 2.0254068692485963e-17]}
{'': [0.18468117102594225, -8.18059070776431e-18], 'true': [0.19399458883662704, 0.17516592431680394], 'false': [nan, -8.18059070776431e-18], 'false,false': [nan, -8.18059070776431e-18]}
{'': [0.18641472330512648, 2.490219868318108e-17], 'true': [0.18641472330512648, nan], 'false': [nan, 2.490219868318108e-17], 'false,false': [nan, 2.490219868318108e-17]}
{'': [0.1810650924619612, -1.674905425081055e-17], 'true': [0.1810650924619612, nan], 'false': [nan, -1.674905425081055e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.684531927108765
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.2727830814409758;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.3983788201569843;  // std dev = 4.649, 87.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=47 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then if ( enzyme(E, F) )
%   | | | then return 0.20594169611374263;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5837052530611637;  // std dev = 2.162, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.5212951313479764;  // std dev = 1.661, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.30278753422435456;  // std dev = 4.275, 74.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return -0.1254446385283914;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( enzyme(E, F) )
%   | | | then return 0.5534470773005027;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5534470773005027;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5855313991838094;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.24874001195497636;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2142533123218579;  // std dev = 3.780, 58.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.19526561876739892;  // std dev = 2.300, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.36637923263013195;  // std dev = 3.398, 50.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360636;  // std dev = 2.95e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.11231637819360618;  // std dev = 8.33e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), interaction(A, F) )
%   | | then if ( complex(A, G), interaction(F, F) )
%   | | | then return 0.14413238952913554;  // std dev = 1.171, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3738904691444519;  // std dev = 1.125, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.6461199330753667;  // std dev = 0.211, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3921090175023547;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4160915580528981;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.009350375129560199;  // std dev = 1.596, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.45323994221226566;  // std dev = 1.256, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.241080329281866;  // std dev = 4.331, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.33575071443814974;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5018101813620669;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.3331922773052608;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06793192392999427;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.2125836321104216;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2960640735477748;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.011617898207485855;  // std dev = 2.990, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return 0.1769032505972911;  // std dev = 4.814, 94.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   else return -0.09269127618926087;  // std dev = 6.32e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then if ( interaction(E, A), complex(F, G) )
%   | | | then return 0.25758562234733257;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3450469405425209;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07349867643935137;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.2661547612786928;  // std dev = 0.352, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06549072430867418;  // std dev = 1.659, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06473520158309236;  // std dev = 5.087, 106.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | | | else return 0.15046700631531332;  // std dev = 2.311, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else if ( complex(A, K) )
%   | then return -0.08518475138839689;  // std dev = 9.31e-10, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.08518475138839683;  // std dev = 4.56e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.20475534134261925;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2303444505219942;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3585326264816174;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return -0.08124294606326918;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23735371455231583;  // std dev = 1.998, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.07382356319463629;  // std dev = 2.142, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.03178981514824261;  // std dev = 5.108, 110.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=47 */
%   else if ( complex(A, L) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.07877675473109169;  // std dev = 3.84e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.17341991134796134;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19214839113119925;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2811513437176785;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.16523333610471733;  // std dev = 4.925, 109.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return -0.42864487498404313;  // std dev = 0.393, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.28220680996400715;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.1589984906684567;  // std dev = 0.672, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.4480612674900762;  // std dev = 1.415, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.4897466475491908;  // std dev = 0.493, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.3672832321280478;  // std dev = 0.354, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.021368688532167685;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1836897918319811;  // std dev = 0.959, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.24190750133462188;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06579959707854158;  // std dev = 3.227, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   else return -0.06842697784420265;  // std dev = 4.84e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.14305656213829865;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3296262582766515;  // std dev = 0.254, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(E, D), interaction(G, A) )
%   | | | then return -0.18040303653411585;  // std dev = 1.782, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.018427383244807215;  // std dev = 2.057, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2846893885024488;  // std dev = 0.770, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.333067016645074;  // std dev = 0.423, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.1686393281799924;  // std dev = 1.487, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.09743550262010119;  // std dev = 3.090, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 16.549274682998657
Refined model CLL: -0.224903


******************************************
Best model found
******************************************
Results 

CLL : -0.229216 

AUC ROC : 0.956559 

AUC PR : 0.144648 

Precision : 0.071034 

Recall : 0.727915 

F1 : 0.129438 

Total Learning Time : 5.684531927108765 

Total Inference Time : 3.221738815307617 

Total revision time: 12.387934684753418
Best scored revision CLL: -0.224903


Results 

CLL : -0.229216 

AUC ROC : 0.956559 

AUC PR : 0.144648 

Precision : 0.071034 

Recall : 0.727915 

F1 : 0.129438 

Total Learning Time : 12.404809951782227 

Total Inference Time : 3.221738815307617 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.339810848236084
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42677638607990204;  // std dev = 0.495, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6.97e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3447754776411252;  // std dev = 3.982, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | else return 0.41694809668874605;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.28600089072649665;  // std dev = 0.496, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.12e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5888329864066509;  // std dev = 2.544, 89.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=82 */
%   | else return -0.2405207176131364;  // std dev = 2.148, 54.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2201358808617215;  // std dev = 3.227, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   | else return 0.17918127084098193;  // std dev = 3.917, 88.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 5.89e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2810098837052173;  // std dev = 2.911, 55.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | | else return 0.10592373395300413;  // std dev = 3.782, 83.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.0851847513883969;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08518475138839682;  // std dev = 4.34e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1142834913757062;  // std dev = 0.411, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.09495829746429026;  // std dev = 3.424, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else return 0.023898361919335993;  // std dev = 3.904, 89.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=46 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04949144613448406;  // std dev = 5.153, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.028449141022686003;  // std dev = 5.242, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning 8.973895788192749
Parameter learned model CLL:-0.269566 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 66, 87], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.982, 29, 35], 'true,false': [4.451, 32, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 98, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 69, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [2.544, 7, 82], 'true,false': [2.148, 49, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.98e-08, 49, 0], 'false,false,false,false': [4.21e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.227, 23, 35], 'true,false': [3.917, 36, 52], 'false,true': [0.0, 0, 0], 'false,false': [5.89e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [2.911, 14, 41], 'true,true,false': [3.782, 37, 46], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 28, 0], 'false,false,false': [4.34e-08, 72, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.411, 57, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 47, 0], 'false,false,false': [3.25e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.424, 23, 41], 'true,false': [3.904, 43, 46], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 92, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.153, 63, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.242, 65, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 102, 0]}]
{'': [0.245290272971936, 4.674623261579606e-17], 'false': [nan, 4.674623261579606e-17]}
{'': [0.24228451424397315, -8.3790416952842e-18], 'true': [0.24780273437500025, 0.2358276643990917], 'false': [nan, -8.3790416952842e-18], 'false,false': [nan, -8.3790416952842e-18], 'false,false,false': [-1.3594567648471304e-17, 0.0]}
{'': [0.24649268380872008, 6.70323335622736e-17], 'false': [nan, 6.70323335622736e-17], 'false,false': [nan, 6.70323335622736e-17]}
{'': [0.23919671290767822, -2.05596856412066e-18], 'true': [0.072738731882262, 0.0854556407152165], 'false': [nan, -2.05596856412066e-18], 'false,false': [nan, -2.05596856412066e-18], 'false,false,false': [1.8126090197961738e-17, 3.010774304068221e-17]}
{'': [0.17680217592322725, 3.532527805625498e-17], 'true': [0.17954518737683164, 0.17432796526573943], 'false': [nan, 3.532527805625498e-17]}
{'': [0.17239676140345805, 3.1086244689504386e-17], 'true': [0.17239676140345805, nan], 'true,true': [0.15405504932536782, 0.17233327179508337], 'false': [nan, 3.1086244689504386e-17], 'false,false': [-9.912705577010326e-19, 2.6213599192538418e-17]}
{'': [0.16871626222753908, 3.895519384649672e-17], 'true': [0.16871626222753908, nan], 'false': [nan, 3.895519384649672e-17], 'false,false': [0.0, 1.5741968259610428e-17]}
{'': [0.1774409889670482, -8.4473491004088e-18], 'true': [0.1831602100165399, 0.17121607549382423], 'false': [nan, -8.4473491004088e-18], 'false,false': [nan, -8.4473491004088e-18]}
{'': [0.17699710752905418, 2.461343497989734e-17], 'true': [0.17699710752905418, nan], 'false': [nan, 2.461343497989734e-17], 'false,false': [nan, 2.461343497989734e-17]}
{'': [0.18075074687554996, -1.5782582212808597e-17], 'true': [0.18075074687554996, nan], 'false': [nan, -1.5782582212808597e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.13550353050232
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.18072958026080266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.3893989350995122;  // std dev = 4.889, 96.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( complex(A, G), enzyme(E, H) )
%   | | | then return 0.5904114806257673;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2783727494069192;  // std dev = 3.674, 60.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.5226107300386321;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | | else return 0.3498301523153944;  // std dev = 3.031, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.2493196557518069;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2571621598658729;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.4212805707808857;  // std dev = 1.729, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.2826906472825737;  // std dev = 5.295, 120.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=66 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, A) )
%   | | then return -0.11231637819360638;  // std dev = 2.28e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.601830873095998;  // std dev = 0.419, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.22574495799377411;  // std dev = 1.057, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.20069121101970652;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.3296536392178413;  // std dev = 0.188, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), enzyme(H, J) )
%   | | | then return 0.6017289922147205;  // std dev = 0.303, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3641294035054804;  // std dev = 3.519, 62.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | | else return 0.01859955308321733;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( complex(A, K) )
%   | then return -0.1015963294878363;  // std dev = 3.48e-09, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.10159632948783623;  // std dev = 5.10e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( complex(D, G), interaction(A, D) )
%   | | | then return 0.26625218867879624;  // std dev = 1.308, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.11191882638591248;  // std dev = 3.383, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.4342500409334581;  // std dev = 1.199, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.2501027648926314;  // std dev = 2.305, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | else if ( interaction(A, H) )
%   | | then if ( complex(A, I), complex(H, J) )
%   | | | then return -0.014055235399282159;  // std dev = 0.985, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.26089307224480157;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.13097585812838247;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04281166966684662;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.09269127618926087;  // std dev = 6.45e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), location(D, F) )
%   | | then if ( interaction(A, E), enzyme(E, G) )
%   | | | then return -0.07347490846881295;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4554732756669752;  // std dev = 0.511, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, E), location(A, H) )
%   | | | then return -0.30120681372146396;  // std dev = 0.784, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.10348947030904994;  // std dev = 4.227, 101.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=56 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15879090398510126;  // std dev = 0.697, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25152675988361495;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3963159420946656;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( complex(A, L) )
%   | then return -0.08518475138839687;  // std dev = 1.86e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.08518475138839683;  // std dev = 4.93e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.20501528099099472;  // std dev = 1.045, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.4258221612023065;  // std dev = 1.006, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.2088652445921371;  // std dev = 0.169, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.4291283667398318;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.2480030784756943;  // std dev = 0.723, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.02608714456846202;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.0019312704714916328;  // std dev = 3.737, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return -0.2744543378875828;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.07877675473109158;  // std dev = 5.82e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.17869250305637768;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37204737280799083;  // std dev = 0.376, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.24061721358203716;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3421874547007677;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.252495781191676;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1103648978424281;  // std dev = 1.469, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.17904792233071176;  // std dev = 1.314, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.028841464628067665;  // std dev = 3.725, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   else return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.14821287454149598;  // std dev = 0.685, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.008686576453891546;  // std dev = 1.698, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.025944400189072157;  // std dev = 1.490, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.25102819711714824;  // std dev = 1.531, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.042481860755576584;  // std dev = 0.948, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.4347652994748281;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, N), location(N, P) )
%   | | | then return -0.03703051563050583;  // std dev = 1.700, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.044082051277536186;  // std dev = 2.576, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   else return -0.06842697784420264;  // std dev = 4.93e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), location(D, G) )
%   | | then if ( interaction(A, H), phenotype(H, E) )
%   | | | then return 0.11937413634932631;  // std dev = 0.919, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.006789661713646852;  // std dev = 1.762, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else if ( location(A, I), interaction(J, D) )
%   | | | then return -0.08183021476700429;  // std dev = 2.820, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.31498798579966586;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.16574133533025134;  // std dev = 1.119, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.28905808684010015;  // std dev = 0.259, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.06310790382229807;  // std dev = 1.235, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.39804135585074013;  // std dev = 1.031, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning 12.558542251586914
Refined model CLL: -0.239078


******************************************
Best model found
******************************************
Results 

CLL : -0.237744 

AUC ROC : 0.971139 

AUC PR : 0.289703 

Precision : 0.055859 

Recall : 0.978723 

F1 : 0.105686 

Total Learning Time : 8.13550353050232 

Total Inference Time : 4.083529472351074 

Total revision time: 15.521602153778076
Best scored revision CLL: -0.239078


Results 

CLL : -0.237744 

AUC ROC : 0.971139 

AUC PR : 0.289703 

Precision : 0.055859 

Recall : 0.978723 

F1 : 0.105686 

Total Learning Time : 15.538470983505249 

Total Inference Time : 4.083529472351074 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.5312373638153076
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4593050044636714;  // std dev = 0.490, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048802;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.46473535751002226;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else return 0.35510420996904074;  // std dev = 5.250, 112.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839105;  // std dev = 7.88e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.26305778408908403;  // std dev = 0.499, 191.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5031970168304528;  // std dev = 3.983, 118.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=99 */
%   | else return -0.24851494615971034;  // std dev = 2.127, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.17657024940782612;  // std dev = 3.609, 71.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | else return 0.23415514451207128;  // std dev = 4.243, 101.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926085;  // std dev = 6.45e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2085815686674502;  // std dev = 3.670, 76.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=51 */
%   | | else return 0.1280557403119168;  // std dev = 4.154, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839682;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.17697791262382828;  // std dev = 0.405, 155.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.027161485092210558;  // std dev = 4.121, 91.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=51 */
%   | else return 0.005165261716855189;  // std dev = 4.417, 103.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03162231004125989;  // std dev = 5.814, 189.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.35e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.050845536476426666;  // std dev = 5.657, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
Inference time using transfer learning 8.476286888122559
Parameter learned model CLL:-0.272815 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 69, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 144, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.666, 20, 41], 'true,false': [5.25, 49, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.88e-08, 114, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 87, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.983, 19, 99], 'true,false': [2.127, 51, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.47e-08, 46, 0], 'false,false,false,false': [5.58e-08, 84, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.609, 30, 41], 'true,false': [4.243, 38, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.45e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.67, 25, 51], 'true,true,false': [4.154, 40, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.79e-08, 52, 0], 'false,false,false': [5.05e-08, 90, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.405, 51, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 48, 0], 'false,false,false': [3.33e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.121, 40, 51], 'true,false': [4.417, 50, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 138, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.814, 85, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.35e-09, 132, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.657, 73, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 127, 0]}]
{'': [0.239767449630796, -9.251858538542972e-17], 'false': [nan, -9.251858538542972e-17]}
{'': [0.2397674496307923, 5.3217302006825687e-17], 'true': [0.22037086804622488, 0.24609374999999756], 'false': [nan, 5.3217302006825687e-17], 'false,false': [nan, 5.3217302006825687e-17], 'false,false,false': [5.4537271385095406e-17, -1.982541115402065e-18]}
{'': [0.2491172388090209, 6.950961545479241e-17], 'false': [nan, 6.950961545479241e-17], 'false,false': [nan, 6.950961545479241e-17]}
{'': [0.24049751815794884, -3.586874387250506e-17], 'true': [0.13442936241931014, 0.08078929049237511], 'false': [nan, -3.586874387250506e-17], 'false,false': [nan, -3.586874387250506e-17], 'false,false,false': [1.3274405729213829e-17, 3.700743415417188e-17]}
{'': [0.18121895002061625, 4.105026309538394e-17], 'true': [0.18346568675445307, 0.17827073856267006], 'false': [nan, 4.105026309538394e-17]}
{'': [0.18339603551857628, 3.596497122025155e-17], 'true': [0.18339603551857628, nan], 'true,true': [0.17720115089898394, 0.1855424562740266], 'false': [nan, 3.596497122025155e-17], 'false,false': [1.4945309946877107e-17, 2.837236618486511e-17]}
{'': [0.1642590026651526, 3.890525129028326e-17], 'true': [0.1642590026651526, nan], 'false': [nan, 3.890525129028326e-17], 'false,false': [-1.1564823173178713e-18, 1.609018876268343e-17]}
{'': [0.18821200294862828, -7.240584943207542e-18], 'true': [0.18660844863618478, 0.18940178241132044], 'false': [nan, -7.240584943207542e-18], 'false,false': [nan, -7.240584943207542e-18]}
{'': [0.17887106196830677, 2.8596653664587365e-17], 'true': [0.17887106196830677, nan], 'false': [nan, 2.8596653664587365e-17], 'false,false': [nan, 2.8596653664587365e-17]}
{'': [0.18081238786463613, -1.5735444443506155e-17], 'true': [0.18081238786463613, nan], 'false': [nan, -1.5735444443506155e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.657412767410278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.34299741994799593;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.5109267128772905;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=47 */
%   | | | else return 0.3581489350995123;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return -0.14185106490048802;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.7483828540191295;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7724677024155661;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16137447479212286;  // std dev = 4.260, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.17449684551470807;  // std dev = 2.478, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.3836196989383152;  // std dev = 4.212, 74.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=44 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839105;  // std dev = 7.88e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.5848921783354298;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6793976930117349;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.04275164979093286;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5098672001996876;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J), recursion_proteinclass(H, B) )
%   | | | then return 0.5905486302878296;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18217345433498833;  // std dev = 4.172, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.35975381524541816;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   | | | else return 0.26710810280706215;  // std dev = 2.898, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   else return -0.11231637819360615;  // std dev = 8.84e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F), phenotype(D, G) )
%   | | then if ( interaction(H, D), interaction(A, H) )
%   | | | then return 0.467058318311313;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.13180953100187168;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5005041011511194;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09506809592462559;  // std dev = 3.707, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(A, K), enzyme(I, L) )
%   | | | then return 0.16910519812802446;  // std dev = 1.567, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.35731462728631713;  // std dev = 2.548, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.17792384342223294;  // std dev = 3.387, 47.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | | else return 0.2672016386852794;  // std dev = 1.936, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.10159632948783641;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.381048568062899;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22426396839211987;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(F, A), interaction(D, G) )
%   | | | then return 0.33108541175257117;  // std dev = 3.176, 52.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=36 */
%   | | | else return 0.6612625302929793;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.34985780425217694;  // std dev = 3.099, 57.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=44 */
%   | | | else return -0.37897904631122964;  // std dev = 0.298, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.07630056563181731;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27505825763704916;  // std dev = 2.236, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.09269127618926065;  // std dev = 6.97e-09, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), interaction(D, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2961983421172493;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08460113475520743;  // std dev = 1.632, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( enzyme(D, F), phenotype(D, G) )
%   | | | then return 0.5672868796398389;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30459441912500884;  // std dev = 1.707, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5070837569069867;  // std dev = 0.441, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.35925005718978054;  // std dev = 0.404, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1909639477515141;  // std dev = 3.803, 78.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=50 */
%   | | | else return -0.08279728005061708;  // std dev = 0.943, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.23626690761145758;  // std dev = 1.617, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.02137426549789331;  // std dev = 2.785, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( enzyme(E, G) )
%   | | | then return 0.4541666081983718;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1402308218249283;  // std dev = 2.271, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.2473959515610219;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3332215388623034;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.06099395975511237;  // std dev = 2.387, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.04699150221547934;  // std dev = 2.922, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   else return -0.07877675473109154;  // std dev = 6.38e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(A, F), interaction(D, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.13249344082272255;  // std dev = 1.530, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.12368182374637597;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( location(A, G), complex(E, H) )
%   | | | then return 0.3247836495582236;  // std dev = 1.698, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return -0.021285759659920373;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then return 0.19742115706196944;  // std dev = 0.679, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.16131894065607152;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.012974328957888187;  // std dev = 4.165, 103.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=52 */
%   else if ( phenotype(A, L) )
%   | then return -0.07324622576333707;  // std dev = 2.89e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07324622576333707;  // std dev = 1.67e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, F), location(A, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.044973360274208736;  // std dev = 1.302, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.13050526786047703;  // std dev = 2.975, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else return 0.19460630238652973;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.23542099358782737;  // std dev = 1.364, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return -0.435324140027912;  // std dev = 0.421, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08614145339076813;  // std dev = 3.868, 83.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   | | | else return 0.3593718371562349;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420278;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06842697784420265;  // std dev = 5.27e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( enzyme(E, D), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.0050131134162886;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.5300622924625107;  // std dev = 0.296, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(E, G), interaction(A, H) )
%   | | | then return 0.3647422753122444;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0050460770923986984;  // std dev = 2.420, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(A, K), phenotype(I, L) )
%   | | | then return 0.4760815460698961;  // std dev = 0.300, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0699497313795778;  // std dev = 2.360, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.2547888541238884;  // std dev = 0.206, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.014362579081160346;  // std dev = 3.663, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   else return -0.06419184008202626;  // std dev = 3.36e-09, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
Inference time using transfer learning 9.780855178833008
Refined model CLL: -0.269527


******************************************
Best model found
******************************************
Results 

CLL : -0.261701 

AUC ROC : 0.946375 

AUC PR : 0.207374 

Precision : 0.045888 

Recall : 0.871698 

F1 : 0.087186 

Total Learning Time : 8.657412767410278 

Total Inference Time : 4.646666765213013 

Total revision time: 17.38899064064026
Best scored revision CLL: -0.269527


Results 

CLL : -0.261701 

AUC ROC : 0.946375 

AUC PR : 0.207374 

Precision : 0.045888 

Recall : 0.871698 

F1 : 0.087186 

Total Learning Time : 17.40585947036743 

Total Inference Time : 4.646666765213013 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7041940689086914
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4225661130136201;  // std dev = 0.496, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.33e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.40202683089736024;  // std dev = 5.269, 116.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=70 */
%   | else return 0.3223880788448141;  // std dev = 3.237, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.35128404792202605;  // std dev = 0.485, 148.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6233779028913833;  // std dev = 1.394, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.07249033186598165;  // std dev = 4.066, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.16566285339540143;  // std dev = 4.416, 117.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=70 */
%   | else return 0.2214571582524729;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 6.04e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.11185993374398705;  // std dev = 5.211, 147.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=83 */
%   | | else return 0.0611794472568244;  // std dev = 2.278, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.16523835282741894;  // std dev = 0.421, 143.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09260172017880337;  // std dev = 4.860, 134.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=83 */
%   | else return 0.2221450768453612;  // std dev = 1.803, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 3.73e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08761289196132137;  // std dev = 5.128, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.10e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04114254873468593;  // std dev = 5.332, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.08e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 25.610389947891235
Parameter learned model CLL:-0.290712 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 71, 92], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.269, 46, 70], 'true,false': [3.237, 20, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 90, 0], 'false,false,false,false': [0.0, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.485, 56, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.394, 2, 70], 'true,false': [4.066, 60, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.59e-08, 63, 0], 'false,false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.416, 47, 70], 'true,false': [3.193, 19, 22], 'false,true': [0.0, 0, 0], 'false,false': [6.04e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.211, 64, 83], 'true,true,false': [2.278, 12, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 95, 0], 'false,false,false': [0.0, 21, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.421, 51, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-08, 92, 0], 'false,false,false': [5.27e-09, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.86, 51, 83], 'true,false': [1.803, 5, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.73e-09, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.128, 54, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.332, 61, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.08e-09, 107, 0]}]
{'': [0.24585042718958433, 7.190015778524824e-17], 'false': [nan, 7.190015778524824e-17]}
{'': [0.24323025156224806, -3.670158759091427e-18], 'true': [0.2392984542211638, 0.24943310657596363], 'false': [nan, -3.670158759091427e-18], 'false,false': [nan, -3.670158759091427e-18], 'false,false,false': [-1.7270135938613546e-17, -8.953411488912552e-18]}
{'': [0.23556235460796568, 6.817158923136926e-17], 'false': [nan, 6.817158923136926e-17], 'false,false': [nan, 6.817158923136926e-17]}
{'': [0.24054688939142765, 2.8060581941075384e-17], 'true': [0.027006172839505165, 0.20165159273919278], 'false': [nan, 2.8060581941075384e-17], 'false,false': [nan, 2.8060581941075384e-17], 'false,false,false': [3.348291661567932e-17, -1.982541115402065e-18]}
{'': [0.18854327226857187, 3.633457171500512e-17], 'true': [0.16666839220230342, 0.24866151100535366], 'false': [nan, 3.633457171500512e-17]}
{'': [0.19281481753564123, 3.34981085016211e-17], 'true': [0.19281481753564123, nan], 'true,true': [0.1847290285028728, 0.24716789301826797], 'false': [nan, 3.34981085016211e-17], 'false,false': [3.0385051200267444e-17, -5.28677630773884e-18]}
{'': [0.17691340721426593, 3.763467880085276e-17], 'true': [0.17691340721426593, nan], 'false': [nan, 3.763467880085276e-17], 'false,false': [3.0169103930031426e-17, 1.0675221390626506e-18]}
{'': [0.18302355180521301, 1.3488690953389752e-17], 'true': [0.17629102446895814, 0.23226941246907654], 'false': [nan, 1.3488690953389752e-17], 'false,false': [nan, 1.3488690953389752e-17]}
{'': [0.18012488638651433, 2.686023446673766e-17], 'true': [0.18012488638651433, nan], 'false': [nan, 2.686023446673766e-17], 'false,false': [nan, 2.686023446673766e-17]}
{'': [0.1858181086585662, 3.112774835397635e-18], 'true': [0.1858181086585662, nan], 'false': [nan, 3.112774835397635e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.0509889125823975
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), location(E, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.2882564619812321;  // std dev = 4.774, 93.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | | else return 0.3827390990339383;  // std dev = 3.900, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7444349229983953;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1806805446392819;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.22872328031946906;  // std dev = 3.568, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18068054463928188;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.7641072739982948;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5103008099249531;  // std dev = 3.988, 78.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=55 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), location(A, F) )
%   | | then return 0.6085528311918937;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.5533090803662929;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5472443517404633;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7346283281541451;  // std dev = 0.229, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.2364012164252621;  // std dev = 0.115, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.031827719344410345;  // std dev = 1.796, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.21342900886496738;  // std dev = 5.251, 112.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=54 */
%   else if ( interaction(A, N) )
%   | then return -0.11231637819360626;  // std dev = 6.18e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.40063919271572274;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4149660624464734;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.46524152037559247;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.17176760662489882;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05255814749898983;  // std dev = 1.382, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.35083062136358745;  // std dev = 2.585, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.1947897346241368;  // std dev = 4.777, 101.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=53 */
%   else if ( interaction(M, A) )
%   | then return -0.10159632948783628;  // std dev = 3.48e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.3151961527543459;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4241638256334802;  // std dev = 0.190, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.23318285732318977;  // std dev = 1.078, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 8.464009096340726E-4;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return 0.06972161389935132;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3903433133930266;  // std dev = 2.053, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.18467453681183701;  // std dev = 2.887, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.2665016207716119;  // std dev = 2.548, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   else return -0.09269127618926092;  // std dev = 5.74e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F), interaction(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2656003363765541;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02979025747897244;  // std dev = 2.093, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.31560164541931673;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.07128317349018407;  // std dev = 3.425, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return 0.5169673309468809;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.09970958046859553;  // std dev = 2.814, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.295906671104713;  // std dev = 2.043, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else if ( interaction(M, A) )
%   | then return -0.0851847513883968;  // std dev = 4.56e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return -0.08518475138839682;  // std dev = 3.48e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.2989891041270832;  // std dev = 2.005, 45.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | | else return -0.40198210922902583;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.379767019597321;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.21919045055407393;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32538153173266254;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.010375727021855513;  // std dev = 3.399, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return 0.10452882295107313;  // std dev = 3.257, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   else if ( interaction(J, A) )
%   | then return -0.07877675473109164;  // std dev = 5.02e-09, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.16733407636764708;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25931434283354143;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3788614204649685;  // std dev = 0.462, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.3122108085378102;  // std dev = 0.696, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, H) )
%   | | | then return 0.040705611921578004;  // std dev = 0.359, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.40434824048709606;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.21660177995117957;  // std dev = 2.598, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return 0.08013407589026561;  // std dev = 2.561, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   else return -0.07324622576333707;  // std dev = 9.31e-10, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( interaction(G, H), phenotype(G, I) )
%   | | | then return 0.09687668678123203;  // std dev = 2.037, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return -0.022591489048904484;  // std dev = 1.743, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0796298241127526;  // std dev = 1.253, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.4162847511123816;  // std dev = 0.409, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(M, L), enzyme(M, N) )
%   | | | then return -0.18819257303830234;  // std dev = 1.588, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.04925192338036301;  // std dev = 2.795, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.038730002829303056;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.15267004408699383;  // std dev = 2.152, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else return -0.06842697784420265;  // std dev = 4.66e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.12896909830950656;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14860868420126222;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20030379875896184;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J), interaction(K, H) )
%   | | | then return 0.0037671591703684944;  // std dev = 1.954, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return -0.10909947433115039;  // std dev = 2.807, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.017781476166625128;  // std dev = 2.379, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.04938376044895542;  // std dev = 3.153, 55.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
%   else return -0.06419184008202626;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
Inference time using transfer learning 19.15973663330078
Refined model CLL: -0.246358


******************************************
Best model found
******************************************
Results 

CLL : -0.237566 

AUC ROC : 0.951199 

AUC PR : 0.153698 

Precision : 0.057963 

Recall : 0.772563 

F1 : 0.107836 

Total Learning Time : 7.0509889125823975 

Total Inference Time : 3.5276196002960205 

Total revision time: 15.222384452819824
Best scored revision CLL: -0.246358


Results 

CLL : -0.237566 

AUC ROC : 0.951199 

AUC PR : 0.153698 

Precision : 0.057963 

Recall : 0.772563 

F1 : 0.107836 

Total Learning Time : 15.239253282546997 

Total Inference Time : 3.5276196002960205 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.782970666885376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4813373408966116;  // std dev = 0.485, 138.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.423105463262732;  // std dev = 4.362, 82.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
%   | else return 0.35562578846598575;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839113;  // std dev = 6.99e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.23346995952519684;  // std dev = 0.500, 166.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.79e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6393093515572776;  // std dev = 1.406, 73.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   | else return -0.13639751524594035;  // std dev = 3.442, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21484742080639324;  // std dev = 4.037, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   | else return 0.13707704035498855;  // std dev = 3.326, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926104;  // std dev = 3.23e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12940413913261034;  // std dev = 4.695, 121.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=68 */
%   | | else return 0.07401277431293769;  // std dev = 2.532, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 4.01e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.08518475138839686;  // std dev = 2.36e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12566612509613162;  // std dev = 0.425, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 2.79e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09966443182598644;  // std dev = 4.471, 114.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=68 */
%   | else return 0.002713908798568757;  // std dev = 2.551, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08722840695645989;  // std dev = 4.981, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.056844360808593515;  // std dev = 5.069, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 39.65739727020264
Parameter learned model CLL:-0.272998 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.485, 52, 86], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.362, 30, 52], 'true,false': [3.838, 26, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.99e-08, 77, 0], 'false,false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.5, 80, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.406, 2, 71], 'true,false': [3.442, 61, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.71e-08, 64, 0], 'false,false,false,false': [2.24e-08, 45, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.037, 33, 52], 'true,false': [3.326, 29, 34], 'false,true': [0.0, 0, 0], 'false,false': [3.23e-09, 92, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.695, 53, 68], 'true,true,false': [2.532, 17, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.01e-08, 67, 0], 'false,false,false': [2.36e-08, 43, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.425, 58, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.79e-08, 64, 0], 'false,false,false': [0.0, 30, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.471, 46, 68], 'true,false': [2.551, 20, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.981, 56, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.069, 58, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 112, 0]}]
{'': [0.23482461667717067, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.2388414997024404, 5.722799096005961e-17], 'true': [0.2320047590719818, 0.24555555555555486], 'false': [nan, 5.722799096005961e-17], 'false,false': [nan, 5.722799096005961e-17], 'false,false,false': [6.344131569286608e-17, 0.0]}
{'': [0.24977173730019447, 6.132660516977056e-17], 'false': [nan, 6.132660516977056e-17], 'false,false': [nan, 6.132660516977056e-17]}
{'': [0.24315928624534888, -4.0742129344042444e-18], 'true': [0.027084825065637207, 0.15590151617706152], 'false': [nan, -4.0742129344042444e-18], 'false,false': [nan, -4.0742129344042444e-18], 'false,false,false': [3.469446951953614e-17, 1.1102230246251566e-17]}
{'': [0.1863344102100908, 9.654113257610057e-18], 'true': [0.1917073113172191, 0.1756116111225447], 'false': [nan, 9.654113257610057e-18]}
{'': [0.18291916207236378, 3.3306690738754695e-17], 'true': [0.18291916207236378, nan], 'true,true': [0.18213857917558637, 0.18323792430652672], 'false': [nan, 3.3306690738754695e-17], 'false,false': [2.4027214712036968e-17, 1.290957005378089e-17]}
{'': [0.18027823356480022, 3.0708296425802203e-17], 'true': [0.18027823356480022, nan], 'false': [nan, 3.0708296425802203e-17], 'false,false': [1.214306433183765e-17, 0.0]}
{'': [0.17605881600499082, -1.914177628664063e-18], 'true': [0.17532225933320533, 0.17121893308387892], 'false': [nan, -1.914177628664063e-18], 'false,false': [nan, -1.914177628664063e-18]}
{'': [0.17474152454677006, 2.7300566179307128e-17], 'true': [0.17474152454677006, nan], 'false': [nan, 2.7300566179307128e-17], 'false,false': [nan, 2.7300566179307128e-17]}
{'': [0.17840176218510062, -1.734723475976807e-17], 'true': [0.17840176218510062, nan], 'false': [nan, -1.734723475976807e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.35908842086792
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.1706489350995123;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.5803711573217345;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.41370449065506754;  // std dev = 4.216, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7522226928386112;  // std dev = 0.162, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), location(F, H) )
%   | | | then return 0.29325321225007067;  // std dev = 3.431, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.14061882565782108;  // std dev = 2.785, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( location(A, I) )
%   | | | then return 0.3517739214556011;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.795585809040413;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283911;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.5472655430054767;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5472655430054767;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.6678756174073838;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6433828457870485;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6557743309012048;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.1520927297243871;  // std dev = 2.439, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.28904740371388116;  // std dev = 4.937, 99.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=54 */
%   else if ( interaction(A, J) )
%   | then return -0.11231637819360633;  // std dev = 4.56e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360646;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then return 0.21075747107966417;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, A) )
%   | | | then return 0.4115316603219564;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4895113887548956;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.005804552866514451;  // std dev = 1.969, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.27757744007204366;  // std dev = 1.396, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.20994759181414957;  // std dev = 4.406, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.44667716883033104;  // std dev = 1.986, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else if ( interaction(A, N) )
%   | then return -0.10159632948783617;  // std dev = 5.89e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.45725089585367923;  // std dev = 0.634, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.0913171489262259;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, D), interaction(I, H) )
%   | | | then return 0.0783768731108846;  // std dev = 3.931, 68.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=31 */
%   | | | else return 0.32671455239785757;  // std dev = 2.431, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(J, L), phenotype(A, M) )
%   | | | then return 0.44705660854991097;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03968133013816844;  // std dev = 1.930, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( location(A, N) )
%   | | | then return -0.07296700347836393;  // std dev = 1.627, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.15017732661965932;  // std dev = 0.842, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926083;  // std dev = 6.84e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.26784295450117346;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22680867146881792;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.29314860043915464;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34699420447944285;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.33026938130842765;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.02147035045432597;  // std dev = 2.502, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.16232191980780197;  // std dev = 4.852, 101.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=59 */
%   else if ( interaction(A, L) )
%   | then return -0.08518475138839682;  // std dev = 4.17e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839686;  // std dev = 3.23e-09, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.20667702491203566;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18784185696235034;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.28055558724610574;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24307795852558453;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.23070776836413384;  // std dev = 1.175, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.061288492629355935;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.18624434694322406;  // std dev = 2.146, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.05426188559266986;  // std dev = 4.817, 97.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=49 */
%   else return -0.07877675473109158;  // std dev = 5.82e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), phenotype(D, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.14140054058355986;  // std dev = 0.759, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.48960932997740125;  // std dev = 0.408, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.36347309083849777;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.04536476659819038;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.5301439781476421;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0801257442869045;  // std dev = 2.794, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.1992219539601774;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08299779905526042;  // std dev = 3.572, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 2.46e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.07205687933001882;  // std dev = 1.294, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.18366568070460176;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, G), phenotype(A, H) )
%   | | | then return 0.34504346426327465;  // std dev = 0.996, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.02633226767000399;  // std dev = 2.825, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return 0.4570408887406796;  // std dev = 0.369, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1313719081237396;  // std dev = 3.373, 52.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=33 */
%   | | | else return 0.018969111634215927;  // std dev = 1.772, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( interaction(A, M) )
%   | then return -0.0684269778442027;  // std dev = 2.79e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.0684269778442027;  // std dev = 2.08e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.22226937397088437;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.43461678641628915;  // std dev = 0.260, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08446801139198845;  // std dev = 2.544, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(G, G) )
%   | | | then return -0.057435109998015876;  // std dev = 0.750, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.24995740673258335;  // std dev = 1.654, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.08233424620121405;  // std dev = 1.969, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 5.953422621796745E-4;  // std dev = 4.014, 69.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   else return -0.06419184008202626;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
Inference time using transfer learning 11.432725429534912
Refined model CLL: -0.297313


******************************************
Best model found
******************************************
Results 

CLL : -0.281622 

AUC ROC : 0.968146 

AUC PR : 0.121753 

Precision : 0.115243 

Recall : 0.886926 

F1 : 0.203982 

Total Learning Time : 5.35908842086792 

Total Inference Time : 2.6777424812316895 

Total revision time: 12.739983081817627
Best scored revision CLL: -0.272998


Results 

CLL : -0.281622 

AUC ROC : 0.968146 

AUC PR : 0.121753 

Precision : 0.115243 

Recall : 0.886926 

F1 : 0.203982 

Total Learning Time : 12.7568519115448 

Total Inference Time : 2.6777424812316895 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.606391668319702
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4420415525491744;  // std dev = 0.493, 149.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6.97e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.36094493296187086;  // std dev = 5.969, 145.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=82 */
%   | else return 0.24997314612801647;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32723602191233864;  // std dev = 0.491, 146.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5431737643856466;  // std dev = 3.114, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | else return -0.24447040349648544;  // std dev = 2.181, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.18185300782464767;  // std dev = 4.976, 139.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=82 */
%   | else return 0.2359880826433053;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926085;  // std dev = 6.59e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.10653592720448958;  // std dev = 5.395, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | | else return 0.6876663164509182;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return -0.0851847513883969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07545032831603755;  // std dev = 0.435, 160.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.11656551643629083;  // std dev = 4.977, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   | else return 0.5065283678544348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.17e-09, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0990820418676114;  // std dev = 4.940, 140.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.018213052994314798;  // std dev = 5.615, 170.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 1.61e-09, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
Inference time using transfer learning 18.317697286605835
Parameter learned model CLL:-0.265922 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 62, 87], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.969, 63, 82], 'true,false': [1.651, 6, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 101, 0], 'false,false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 59, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.114, 11, 82], 'true,false': [2.181, 51, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.65e-08, 100, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.976, 57, 82], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.395, 72, 86], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.05e-08, 112, 0], 'false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.435, 73, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.14e-08, 105, 0], 'false,false,false': [0.0, 2, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.977, 56, 86], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.17e-09, 95, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.94, 53, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.615, 83, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.61e-09, 88, 0]}]
{'': [0.24296202873744635, 4.674623261579606e-17], 'false': [nan, 4.674623261579606e-17]}
{'': [0.2466715976331364, -8.3790416952842e-18], 'true': [0.24570749108204543, 0.24793388429752053], 'false': [nan, -8.3790416952842e-18], 'false,false': [nan, -8.3790416952842e-18], 'false,false,false': [-1.0992307174506501e-17, 0.0]}
{'': [0.24123822077183138, 6.530723674265627e-17], 'false': [nan, 6.530723674265627e-17], 'false,false': [nan, 6.530723674265627e-17]}
{'': [0.24253692492898227, 0.0], 'true': [0.10428951323852335, 0.08490724780525946], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [1.3322676295501878e-17, -1.982541115402065e-18]}
{'': [0.18311240019464217, 4.291618414517412e-17], 'true': [0.1781036576663916, 0.24999999999999992], 'false': [nan, 4.291618414517412e-17]}
{'': [0.1851378765883011, 3.358657889622322e-17], 'true': [0.1851378765883011, nan], 'true,true': [0.18418565712915128, 0.0], 'false': [nan, 3.358657889622322e-17], 'false,false': [3.271192840413408e-17, 0.0]}
{'': [0.18943237534880375, 3.631570641297241e-17], 'true': [0.18943237534880375, nan], 'false': [nan, 3.631570641297241e-17], 'false,false': [3.595007889262412e-17, 0.0]}
{'': [0.17429793058334253, 1.7529837230923523e-17], 'true': [0.17446194705405968, 0.0], 'false': [nan, 1.7529837230923523e-17], 'false,false': [nan, 1.7529837230923523e-17]}
{'': [0.17431340682444416, 2.4252444712685457e-17], 'true': [0.17431340682444416, nan], 'false': [nan, 2.4252444712685457e-17], 'false,false': [nan, 2.4252444712685457e-17]}
{'': [0.18545670655784233, 1.8924256101565167e-18], 'true': [0.18545670655784233, nan], 'false': [nan, 1.8924256101565167e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.215755224227905
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.35814893509951135;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1413905498434526;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.279285582599647;  // std dev = 4.388, 87.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=41 */
%   | | else if ( interaction(G, A), complex(A, H) )
%   | | | then return 0.7944828894188569;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.43341402205587437;  // std dev = 3.111, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7010528594204997;  // std dev = 0.364, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.1841513404169552;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.27861793021451026;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5849243913935122;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, I) )
%   | | | then return 0.232141598639202;  // std dev = 4.372, 86.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.49528646431556156;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360638;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1123163781936062;  // std dev = 8.12e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4623011051379427;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1790470282170992;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(E, H), enzyme(A, I) )
%   | | | then return 0.12884743460270334;  // std dev = 1.223, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.38312488195484606;  // std dev = 2.300, 38.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( enzyme(A, L), location(J, K) )
%   | | | then return 0.1512009857360252;  // std dev = 1.604, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.4160502100345418;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.14930703459743333;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   | | | else return -0.06511885131673067;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10159632948783628;  // std dev = 2.95e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), complex(F, E) )
%   | | | then return 0.48027616340900753;  // std dev = 0.283, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.028029589305908723;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), complex(D, H) )
%   | | | then return -0.045225495725938494;  // std dev = 1.175, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.16350121953211405;  // std dev = 1.067, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.3530054301553986;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4624179466654776;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.3097852385486243;  // std dev = 1.630, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1747078696555405;  // std dev = 4.065, 86.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   else return -0.09269127618926098;  // std dev = 4.37e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), enzyme(E, H) )
%   | | | then return 0.308748645605997;  // std dev = 0.599, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.06718017216541358;  // std dev = 3.108, 63.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=31 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1344713349996738;  // std dev = 1.519, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.256630981884061;  // std dev = 2.923, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(K, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.08518475138839691;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839683;  // std dev = 4.08e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.027020375071925628;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08068550181529796;  // std dev = 1.430, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(D, D), phenotype(A, E) )
%   | | | then return 0.4304891637465588;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1701246398043419;  // std dev = 2.980, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.28138860018714107;  // std dev = 0.671, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.33352331457071216;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.004456258105715427;  // std dev = 1.711, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.16354992633266086;  // std dev = 2.196, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.07877675473109154;  // std dev = 6.38e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.1464186719975775;  // std dev = 4.065, 121.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=82 */
%   | | | else return -0.3242336559003448;  // std dev = 0.479, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.0043094175866464635;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.26039710709916075;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.056246626273492;  // std dev = 0.438, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else return -0.07324622576333711;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), interaction(H, F) )
%   | | | then return 0.25283186837950206;  // std dev = 0.161, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3289685280082007;  // std dev = 0.291, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.3497140871863721;  // std dev = 0.245, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2534218022289116;  // std dev = 0.168, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.1588107447243383;  // std dev = 1.527, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.02730527557396412;  // std dev = 2.631, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | else if ( interaction(A, P) )
%   | | | then return -0.12093943036211645;  // std dev = 1.857, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.010210657767075724;  // std dev = 2.273, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.15878276395631283;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3270563211405104;  // std dev = 0.176, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(D, G), location(A, H) )
%   | | | then return 0.034712778736726325;  // std dev = 2.597, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.20383798852478652;  // std dev = 1.007, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.013209535596685567;  // std dev = 0.779, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2713864136865222;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return -0.20509058062583715;  // std dev = 1.109, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.016177295604267224;  // std dev = 2.949, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning 17.96891760826111
Refined model CLL: -0.213501


******************************************
Best model found
******************************************
Results 

CLL : -0.22879 

AUC ROC : 0.976523 

AUC PR : 0.425077 

Precision : 0.063643 

Recall : 0.950355 

F1 : 0.119297 

Total Learning Time : 7.215755224227905 

Total Inference Time : 4.043532371520996 

Total revision time: 18.76371717453003
Best scored revision CLL: -0.213501


Results 

CLL : -0.22879 

AUC ROC : 0.976523 

AUC PR : 0.425077 

Precision : 0.063643 

Recall : 0.950355 

F1 : 0.119297 

Total Learning Time : 18.780367612838745 

Total Inference Time : 4.043532371520996 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.550654411315918
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45585008452479686;  // std dev = 0.490, 174.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.141851064900488;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3961127416536819;  // std dev = 4.035, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | else return 0.4360287080402367;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.274892644505544;  // std dev = 0.497, 186.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5100778303554091;  // std dev = 3.810, 116.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=99 */
%   | else return -0.26039239948660603;  // std dev = 2.145, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 4.94e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.10159632948783621;  // std dev = 4.71e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.21870483363597623;  // std dev = 3.471, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | else return 0.18697077893833247;  // std dev = 4.422, 105.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926085;  // std dev = 6.72e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17530431334717073;  // std dev = 3.810, 82.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=51 */
%   | | else return 0.09959413368725735;  // std dev = 4.227, 97.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839679;  // std dev = 2.11e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.08518475138839679;  // std dev = 2.11e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10351877133235968;  // std dev = 0.427, 178.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109166;  // std dev = 3.87e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07476553415253648;  // std dev = 4.005, 87.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | else return 0.11865240514512526;  // std dev = 3.762, 86.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633369;  // std dev = 5.19e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05276147134549595;  // std dev = 5.669, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.019872275352219193;  // std dev = 5.847, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
Inference time using transfer learning 9.277518510818481
Parameter learned model CLL:-0.270069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 70, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.035, 27, 41], 'true,false': [4.743, 35, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 162, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 82, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.81, 17, 99], 'true,false': [2.145, 56, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.94e-08, 70, 0], 'false,false,false,false': [4.71e-08, 90, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.471, 26, 41], 'true,false': [4.422, 42, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.81, 31, 51], 'true,true,false': [4.227, 44, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 62, 0], 'false,false,false': [2.11e-08, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.427, 74, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 49, 0], 'false,false,false': [3.87e-08, 76, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.005, 36, 51], 'true,false': [3.762, 33, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.669, 76, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.847, 83, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 140, 0]}]
{'': [0.24045448540098077, -7.930164461608261e-17], 'false': [nan, -7.930164461608261e-17]}
{'': [0.2339962258673261, -5.2554936076930486e-18], 'true': [0.23940311418685112, 0.22959183673469227], 'false': [nan, -5.2554936076930486e-18], 'false,false': [nan, -5.2554936076930486e-18], 'false,false,false': [0.0, -1.982541115402065e-18]}
{'': [0.24658272794656022, 6.926161988487215e-17], 'false': [nan, 6.926161988487215e-17], 'false,false': [nan, 6.926161988487215e-17]}
{'': [0.24209920339412863, -6.661338147750939e-17], 'true': [0.1251627759639984, 0.07542815124818272], 'false': [nan, -6.661338147750939e-17], 'false,false': [nan, -6.661338147750939e-17], 'false,false,false': [3.489272363107635e-17, 2.4671622769447922e-17]}
{'': [0.18396779146917477, 4.498317427360548e-17], 'true': [0.17978431044647483, 0.18624496959513062], 'false': [nan, 4.498317427360548e-17]}
{'': [0.18232139378880408, 2.5552752154071062e-17], 'true': [0.18232139378880408, nan], 'true,true': [0.17699986270257823, 0.18419416095406999], 'false': [nan, 2.5552752154071062e-17], 'false,false': [7.162729191130042e-18, 6.938893903907228e-18]}
{'': [0.1819375473692099, 3.907985046680551e-17], 'true': [0.1819375473692099, nan], 'false': [nan, 3.907985046680551e-17], 'false,false': [-1.1328806373726086e-18, 1.9721066884788965e-17]}
{'': [0.17499058127076716, 2.5620531337503614e-17], 'true': [0.18433929828603163, 0.16456456288092144], 'false': [nan, 2.5620531337503614e-17], 'false,false': [nan, 2.5620531337503614e-17]}
{'': [0.17855715269359834, 2.9341608507950566e-17], 'true': [0.17855715269359834, nan], 'false': [nan, 2.9341608507950566e-17], 'false,false': [nan, 2.9341608507950566e-17]}
{'': [0.18280830072719956, -1.2688263138573217e-17], 'true': [0.18280830072719956, nan], 'false': [nan, -1.2688263138573217e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.349073886871338
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.24590403714032863;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.3622811665044719;  // std dev = 5.500, 121.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=61 */
%   else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, D) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7427692969708038;  // std dev = 0.129, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H), interaction(I, F) )
%   | | | then return 0.2992850699205368;  // std dev = 2.955, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | | else return 0.4640367811539911;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=50 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.37319916980315393;  // std dev = 1.833, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.19519792534994845;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839116;  // std dev = 6.99e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.6253627596541463;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.549606709272936;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5898264644506378;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07920107117130228;  // std dev = 0.945, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return 0.4026396680986528;  // std dev = 2.757, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | | else return 0.23468742851131566;  // std dev = 3.849, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6225367249889471;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17788977661700744;  // std dev = 4.200, 72.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=31 */
%   else return -0.11231637819360617;  // std dev = 8.64e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.6292120166602736;  // std dev = 0.512, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.027876277797995015;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.3375936623877829;  // std dev = 0.363, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.15996523419090483;  // std dev = 5.274, 119.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=58 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( phenotype(A, I), complex(H, G) )
%   | | | then return -0.01286534331466957;  // std dev = 1.016, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.26386177844825326;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.319283649401179;  // std dev = 1.105, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.620842042263592;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.10159632948783644;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.3110816852676984;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.023525366856831414;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, G), complex(D, H) )
%   | | | then return 0.47845154171890303;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3798572414853525;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5901266720275677;  // std dev = 0.252, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3124728812549213;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.10249036386337096;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.2428711993935528;  // std dev = 4.502, 95.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   else return -0.09269127618926075;  // std dev = 6.84e-09, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, A) )
%   | | then return 0.2501244900300857;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, F) )
%   | | | then return 0.3425465153073536;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.31604878027816313;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.40102754360147513;  // std dev = 2.735, 66.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=55 */
%   | | | else return -0.3855220736355125;  // std dev = 0.399, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.2387367999792284;  // std dev = 1.622, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.018875257614516406;  // std dev = 3.411, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   else if ( complex(A, K) )
%   | then return -0.08518475138839685;  // std dev = 3.61e-09, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.08518475138839682;  // std dev = 5.19e-09, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return -0.017516497507199007;  // std dev = 1.583, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.15927573538100467;  // std dev = 1.175, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.16891920968098068;  // std dev = 0.699, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11858276742501088;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.25624387695317996;  // std dev = 0.900, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.01823821228556034;  // std dev = 2.775, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return 0.041105952255686654;  // std dev = 2.618, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return 0.19262803097229467;  // std dev = 3.048, 53.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   else return -0.07877675473109153;  // std dev = 6.52e-09, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, A), complex(D, E) )
%   | | | then return 0.03374613093876694;  // std dev = 1.597, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.19230560533694116;  // std dev = 1.270, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( interaction(D, H), complex(H, E) )
%   | | | then return 0.07861172598238451;  // std dev = 0.462, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2463206246605976;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.2730718876682262;  // std dev = 0.948, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2428647624021151;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.3531564824001393;  // std dev = 1.051, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.17876550271639735;  // std dev = 3.802, 85.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else return -0.07324622576333718;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.20444547842798752;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1853238928395181;  // std dev = 0.973, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(D, F), interaction(D, G) )
%   | | | then return 0.35025115073351126;  // std dev = 0.326, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1285852281869779;  // std dev = 1.454, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), enzyme(A, J) )
%   | | | then return 0.2696280683478109;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21414026298639274;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.02552282601627243;  // std dev = 3.046, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.09566677470328885;  // std dev = 3.576, 69.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=43 */
%   else return -0.06842697784420264;  // std dev = 5.35e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.3125169708782029;  // std dev = 1.942, 96.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=92 */
%   | | | else return -0.33026906432263115;  // std dev = 1.812, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.3342631373441243;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.4665048451661005;  // std dev = 0.440, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.09227743470794976;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4869832330166723;  // std dev = 0.264, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
Inference time using transfer learning 31.70601797103882
Refined model CLL: -0.221245


******************************************
Best model found
******************************************
Results 

CLL : -0.217892 

AUC ROC : 0.984172 

AUC PR : 0.34771 

Precision : 0.14171 

Recall : 0.932075 

F1 : 0.246016 

Total Learning Time : 10.349073886871338 

Total Inference Time : 6.02822470664978 

Total revision time: 20.360514402389526
Best scored revision CLL: -0.221245


Results 

CLL : -0.217892 

AUC ROC : 0.984172 

AUC PR : 0.34771 

Precision : 0.14171 

Recall : 0.932075 

F1 : 0.246016 

Total Learning Time : 20.377164840698242 

Total Inference Time : 6.02822470664978 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.556107997894287
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4555515325021072;  // std dev = 0.490, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3364304150281596;  // std dev = 4.483, 81.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   | else return 0.3579264208378917;  // std dev = 4.571, 85.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.15e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30193168664276254;  // std dev = 0.495, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6672855122426342;  // std dev = 0.020, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.12163369243178371;  // std dev = 4.162, 104.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.16927522010167723;  // std dev = 3.750, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | else return 0.1991426028969638;  // std dev = 3.962, 82.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926092;  // std dev = 5.74e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.0924184510254441;  // std dev = 4.335, 102.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=53 */
%   | | else return 0.12274248567225221;  // std dev = 3.686, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 2.89e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839683;  // std dev = 4.08e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.16999169648235415;  // std dev = 0.415, 145.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07877675473109173;  // std dev = 2.36e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07625488058090743;  // std dev = 4.083, 92.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   | else return 0.03690531868508002;  // std dev = 3.733, 74.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07679037799965394;  // std dev = 5.286, 156.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.032751017232947696;  // std dev = 5.484, 164.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
Inference time using transfer learning 8.278523445129395
Parameter learned model CLL:-0.263383 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 62, 92], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.483, 37, 44], 'true,false': [4.571, 37, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.15e-08, 79, 0], 'false,false,false,false': [0.0, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 69, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.02, 0, 70], 'true,false': [4.162, 82, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.8e-08, 56, 0], 'false,false,false,false': [3.8e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.75, 34, 44], 'true,false': [3.962, 34, 48], 'false,true': [0.0, 0, 0], 'false,false': [5.74e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.335, 49, 53], 'true,true,false': [3.686, 32, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.89e-08, 50, 0], 'false,false,false': [4.08e-08, 68, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.415, 53, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-08, 54, 0], 'false,false,false': [2.36e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.083, 39, 53], 'true,false': [3.733, 35, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.286, 64, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.484, 72, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 117, 0]}]
{'': [0.24051273401922998, -3.6104813808948184e-18], 'false': [nan, -3.6104813808948184e-18]}
{'': [0.247060531281755, 5.82058673104451e-17], 'true': [0.24813290656912004, 0.24581314878892635], 'false': [nan, 5.82058673104451e-17], 'false,false': [nan, 5.82058673104451e-17], 'false,false,false': [6.464589763640152e-17, -4.625929269271485e-18]}
{'': [0.2448123200505554, 6.45947941600091e-17], 'false': [nan, 6.45947941600091e-17], 'false,false': [nan, 6.45947941600091e-17]}
{'': [0.24921525711572012, -7.93016446160826e-18], 'true': [5.67765763704082e-06, 0.16656427977539429], 'false': [nan, -7.93016446160826e-18], 'false,false': [nan, -7.93016446160826e-18], 'false,false,false': [2.577303450022685e-17, 2.577303450022685e-17]}
{'': [0.18622289139758708, 3.39234813079909e-17], 'true': [0.18025222858065115, 0.19146742284921214], 'false': [nan, 3.39234813079909e-17]}
{'': [0.18739690803253195, 3.293034395074617e-17], 'true': [0.18739690803253195, nan], 'true,true': [0.18424020679641018, 0.19138972656864425], 'false': [nan, 3.293034395074617e-17], 'false,false': [1.6653345369377347e-17, 2.44902137784961e-17]}
{'': [0.17230620250054704, 3.765104170467922e-17], 'true': [0.17230620250054704, nan], 'false': [nan, 3.765104170467922e-17], 'false,false': [2.05596856412066e-18, 9.100188726435709e-18]}
{'': [0.1847545189485929, -1.0002009230857266e-18], 'true': [0.1811788731328231, 0.1883417736904351], 'false': [nan, -1.0002009230857266e-18], 'false,false': [nan, -1.0002009230857266e-18]}
{'': [0.1791306628174536, 2.461343497989734e-17], 'true': [0.1791306628174536, nan], 'false': [nan, 2.461343497989734e-17], 'false,false': [nan, 2.461343497989734e-17]}
{'': [0.18338940994741218, -1.8029262793058098e-17], 'true': [0.18338940994741218, nan], 'false': [nan, -1.8029262793058098e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.8154284954071045
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.38542166237223846;  // std dev = 5.236, 110.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=58 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18448834756348292;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2362885912569633;  // std dev = 2.962, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7874843332535563;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1955129364857932;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.2560370857187604;  // std dev = 1.647, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.49644633961662576;  // std dev = 3.845, 74.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=52 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6076865948619987;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.19364038841171363;  // std dev = 0.133, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.24798054904584144;  // std dev = 1.734, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.23971531610402633;  // std dev = 3.740, 62.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   | | | else return 0.33485609999027316;  // std dev = 3.680, 64.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   else if ( interaction(A, J) )
%   | then return -0.11231637819360626;  // std dev = 6.18e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( complex(A, K) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.45851575425935875;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.6439108767870093;  // std dev = 0.315, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.5688602185350078;  // std dev = 1.073, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(A, J) )
%   | | | then return -0.24901389831581336;  // std dev = 0.250, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.3348242929753689;  // std dev = 0.248, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.45816979967775895;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.254770247987457;  // std dev = 2.627, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   else return -0.1015963294878363;  // std dev = 2.28e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.24410532065542215;  // std dev = 0.729, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.47940672677857127;  // std dev = 0.499, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.20935346718900066;  // std dev = 0.294, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.37331837111954413;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4435573487088962;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22673408571879777;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.5861422769418053;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2390436213511168;  // std dev = 3.009, 61.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   else return -0.09269127618926082;  // std dev = 6.84e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( location(E, F) )
%   | | | then return 0.2987346163939972;  // std dev = 0.210, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1372352429009511;  // std dev = 0.245, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), enzyme(D, G) )
%   | | | then return -0.06715689976589817;  // std dev = 0.406, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1114658118546744;  // std dev = 3.226, 96.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=55 */
%   | else if ( complex(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.41668584370866346;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4668671560778987;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.07119217481002046;  // std dev = 1.068, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2871750047628537;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.0851847513883968;  // std dev = 5.02e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(F, D) )
%   | | then if ( interaction(D, F), complex(A, G) )
%   | | | then return 0.21528762826424674;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03980589801044917;  // std dev = 0.565, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H), interaction(I, D) )
%   | | | then return 0.2095493667634361;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2774625122067752;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L) )
%   | | | then return 0.010973335990848869;  // std dev = 2.614, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.2885315022168134;  // std dev = 1.237, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.0603377002496221;  // std dev = 2.269, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | | | else return -0.029815451680545016;  // std dev = 2.127, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   else return -0.07877675473109157;  // std dev = 6.04e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F) )
%   | | then if ( complex(E, G), complex(D, H) )
%   | | | then return 0.06495124772455195;  // std dev = 1.249, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.2303631351565657;  // std dev = 0.886, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( enzyme(A, I), complex(E, J) )
%   | | | then return -0.04073095806214605;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08622284448329026;  // std dev = 2.013, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.29394929090325517;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.09243304020926038;  // std dev = 2.591, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.03846478057593633;  // std dev = 2.193, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   else return -0.07324622576333717;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), interaction(H, A) )
%   | | | then return 0.2303628827495332;  // std dev = 0.241, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.37120913803091055;  // std dev = 0.220, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(I, A), enzyme(I, D) )
%   | | | then return -0.08866839479045376;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.25528658636905427;  // std dev = 0.323, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return -0.0010650781960444351;  // std dev = 1.368, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.14826067175731775;  // std dev = 1.301, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.09523523382368997;  // std dev = 1.584, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return -0.05043934418251634;  // std dev = 2.845, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( location(D, F), location(A, F) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.03257080584212862;  // std dev = 0.592, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.1269078499411835;  // std dev = 1.206, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.005310285960240579;  // std dev = 0.693, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.15617224840117866;  // std dev = 0.742, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.0012725876014301845;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15383121728745786;  // std dev = 1.142, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.20017094150746617;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02753773399918021;  // std dev = 3.796, 96.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=46 */
%   else return -0.06419184008202626;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
Inference time using transfer learning 11.404067516326904
Refined model CLL: -0.190351


******************************************
Best model found
******************************************
Results 

CLL : -0.200216 

AUC ROC : 0.98899 

AUC PR : 0.350477 

Precision : 0.140225 

Recall : 0.98917 

F1 : 0.24563 

Total Learning Time : 5.8154284954071045 

Total Inference Time : 2.659040927886963 

Total revision time: 12.146673679351807
Best scored revision CLL: -0.190351


Results 

CLL : -0.200216 

AUC ROC : 0.98899 

AUC PR : 0.350477 

Precision : 0.140225 

Recall : 0.98917 

F1 : 0.24563 

Total Learning Time : 12.163324117660522 

Total Inference Time : 2.659040927886963 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.5046391487121582
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43533014315320123;  // std dev = 0.494, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3349791620800699;  // std dev = 3.595, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | else return 0.39445576794843007;  // std dev = 4.829, 97.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.24356333071183456;  // std dev = 0.500, 167.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6507462362691527;  // std dev = 1.392, 73.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   | else return -0.08711067102982015;  // std dev = 3.392, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783637;  // std dev = 7.45e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.21352523046543834;  // std dev = 3.004, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | else return 0.1762715223803922;  // std dev = 4.317, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.97e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12304873385101005;  // std dev = 3.330, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | else return 0.10364053605647584;  // std dev = 4.329, 102.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839687;  // std dev = 1.29e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.08518475138839682;  // std dev = 3.73e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14894825212540636;  // std dev = 0.418, 141.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07877675473109166;  // std dev = 3.94e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.044757327904029566;  // std dev = 3.359, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | else return 0.050186852947492734;  // std dev = 4.294, 100.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.059397015520971715;  // std dev = 5.307, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.75e-09, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03796566323276018;  // std dev = 5.336, 155.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 9.476387023925781
Parameter learned model CLL:-0.2622 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 63, 86], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.595, 24, 28], 'true,false': [4.829, 39, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 89, 0], 'false,false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.5, 81, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [1.392, 2, 71], 'true,false': [3.392, 49, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-09, 33, 0], 'false,false,false,false': [0.0, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.004, 19, 28], 'true,false': [4.317, 44, 58], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.33, 26, 32], 'true,true,false': [4.329, 48, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.29e-08, 36, 0], 'false,false,false': [3.73e-08, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.418, 55, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 44, 0], 'false,false,false': [3.94e-08, 76, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.359, 28, 32], 'true,false': [4.294, 46, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.307, 66, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 99, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.336, 69, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 109, 0]}]
{'': [0.24404306112337487, 2.258080728051166e-17], 'false': [nan, 2.258080728051166e-17]}
{'': [0.2440430611233721, 5.551115123125783e-17], 'true': [0.24852071005917223, 0.24040811988521543], 'false': [nan, 5.551115123125783e-17], 'false,false': [nan, 5.551115123125783e-17], 'false,false,false': [5.98771968337163e-17, -2.413528314402514e-18]}
{'': [0.2501916772217478, 6.642359976389825e-17], 'false': [nan, 6.642359976389825e-17], 'false,false': [nan, 6.642359976389825e-17]}
{'': [0.23367323133841492, -3.700743415417188e-17], 'true': [0.02655170934383852, 0.17982197982798553], 'false': [nan, -3.700743415417188e-17], 'false,false': [nan, -3.700743415417188e-17], 'false,false,false': [1.6821560979169039e-18, -3.700743415417188e-17]}
{'': [0.18591460317293113, 4.550094363217855e-17], 'true': [0.1919432133709443, 0.18269893951578545], 'false': [nan, 4.550094363217855e-17]}
{'': [0.18650030504167897, 3.0778460088618204e-17], 'true': [0.18650030504167897, nan], 'true,true': [0.19113131669200706, 0.1837304388651513], 'false': [nan, 3.0778460088618204e-17], 'false,false': [4.625929269271485e-18, 2.1350442781253012e-17]}
{'': [0.1750760246666232, 3.8857805861880476e-17], 'true': [0.1750760246666232, nan], 'false': [nan, 3.8857805861880476e-17], 'false,false': [-1.261617073437678e-18, 2.0451476769410777e-17]}
{'': [0.18573634182719173, -2.896233977283017e-18], 'true': [0.18803818505270423, 0.18434418098856034], 'false': [nan, -2.896233977283017e-18], 'false,false': [nan, -2.896233977283017e-18]}
{'': [0.18527726154024418, 2.2428747972225384e-17], 'true': [0.18527726154024418, nan], 'false': [nan, 2.2428747972225384e-17], 'false,false': [nan, 2.2428747972225384e-17]}
{'': [0.1836819247205197, -1.6806128354417508e-17], 'true': [0.1836819247205197, nan], 'false': [nan, -1.6806128354417508e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.57762336730957
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, E), interaction(E, F) )
%   | | | then return 0.30100607795665396;  // std dev = 4.156, 70.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=31 */
%   | | | else return 0.48718119316402747;  // std dev = 3.804, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8014227775933751;  // std dev = 0.104, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.1934219085603266;  // std dev = 0.062, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), phenotype(A, I) )
%   | | | then return 0.43375912649666876;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.7194734122109543;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.802704418635763;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35718426025072736;  // std dev = 4.577, 87.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=48 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839113;  // std dev = 6.99e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.6243590738810858;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7088833398377283;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.17013556373439437;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.20311810297137717;  // std dev = 2.389, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.19881554972961984;  // std dev = 2.429, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.35433796386804556;  // std dev = 3.867, 72.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=46 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360642;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360622;  // std dev = 7.57e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.4709659157732349;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5473096427879427;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14744250225154243;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07426352738792913;  // std dev = 1.616, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( location(A, H), complex(A, I) )
%   | | | then return 0.28481735066224895;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.15001490559774022;  // std dev = 4.660, 95.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=47 */
%   else if ( complex(A, J) )
%   | then return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.10159632948783617;  // std dev = 6.18e-09, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( enzyme(D, G), phenotype(D, H) )
%   | | | then return 0.5281108546505698;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12807112848445742;  // std dev = 2.741, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | else if ( enzyme(E, I), enzyme(D, I) )
%   | | | then return 0.05387307082569035;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5743007511662135;  // std dev = 0.433, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5412063600156966;  // std dev = 0.225, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.4034556974921759;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.2566659528738933;  // std dev = 1.532, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.10393263714050127;  // std dev = 3.130, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else return -0.09269127618926107;  // std dev = 1.86e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, F) )
%   | | then if ( interaction(A, G), phenotype(G, E) )
%   | | | then return 0.30722644129740717;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.43265007642370373;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.29347347262699375;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2599458036960083;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14502405086781853;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0051338083370220345;  // std dev = 1.540, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.3163377204938553;  // std dev = 1.592, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.11254775823774558;  // std dev = 4.418, 97.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=54 */
%   else return -0.08518475138839682;  // std dev = 5.02e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.23501917510414977;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.045585633964748296;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.3080074968568788;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3660116487494687;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3869388714738461;  // std dev = 1.034, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.0571349808503931;  // std dev = 3.203, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.27244642766376376;  // std dev = 0.982, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.0828211336590263;  // std dev = 3.441, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   else return -0.07877675473109157;  // std dev = 6.04e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.18022385376793482;  // std dev = 1.083, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.41096119257169933;  // std dev = 1.030, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.3464124160732358;  // std dev = 0.164, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.4437426073826802;  // std dev = 0.507, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), complex(I, J) )
%   | | | then return 0.18490529613782852;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2522422855946195;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.17299450685912657;  // std dev = 1.930, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.026334041007104226;  // std dev = 3.061, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   else return -0.07324622576333707;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return -0.743918865401669;  // std dev = 0.254, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.04946507944631384;  // std dev = 1.118, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(H, E), enzyme(H, I) )
%   | | | then return 0.2463783804287319;  // std dev = 0.852, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.013344687740024319;  // std dev = 1.163, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.297335067695911;  // std dev = 0.777, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.37096439555749927;  // std dev = 0.405, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.044882955525959695;  // std dev = 2.725, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return 0.2137887468070757;  // std dev = 2.153, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   else return -0.06842697784420265;  // std dev = 4.75e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.19726820039001783;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1529583049142289;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21559863102655016;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.28120507118528404;  // std dev = 1.018, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.3404096234117303;  // std dev = 0.590, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.06751220930201206;  // std dev = 1.168, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.07841088834818838;  // std dev = 3.565, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 12.301644802093506
Refined model CLL: -0.212219


******************************************
Best model found
******************************************
Results 

CLL : -0.224189 

AUC ROC : 0.975746 

AUC PR : 0.334366 

Precision : 0.073421 

Recall : 0.911661 

F1 : 0.135897 

Total Learning Time : 5.57762336730957 

Total Inference Time : 2.749161720275879 

Total revision time: 11.851606369018555
Best scored revision CLL: -0.212219


Results 

CLL : -0.224189 

AUC ROC : 0.975746 

AUC PR : 0.334366 

Precision : 0.073421 

Recall : 0.911661 

F1 : 0.135897 

Total Learning Time : 11.86825680732727 

Total Inference Time : 2.749161720275879 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.779515266418457
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40189893509950975;  // std dev = 0.498, 160.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.90e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.34854904998220454;  // std dev = 6.097, 150.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=82 */
%   | else return 0.4268823833155387;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3659265684610492;  // std dev = 0.484, 139.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.90e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5462678086579594;  // std dev = 3.114, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | else return -0.26070569906548124;  // std dev = 2.112, 65.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.14408616755368;  // std dev = 5.290, 150.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=82 */
%   | else return 0.32891224411836584;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 6.45e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1175750477842366;  // std dev = 5.402, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | | else return 0.6311341865225688;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13059831755986195;  // std dev = 0.418, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109155;  // std dev = 6.83e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.0706285095564332;  // std dev = 5.237, 154.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=86 */
%   | else return -0.3034838032332147;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04221377407032904;  // std dev = 5.399, 158.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05561442328366788;  // std dev = 5.216, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning 19.111011505126953
Parameter learned model CLL:-0.261226 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 73, 87], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.097, 68, 82], 'true,false': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 120, 0], 'false,false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.484, 52, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.9e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.114, 11, 82], 'true,false': [2.112, 60, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 112, 0], 'false,false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.29, 68, 82], 'true,false': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.45e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.402, 70, 86], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.77e-08, 107, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.418, 60, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.83e-08, 117, 0], 'false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.237, 68, 86], 'true,false': [0.836, 4, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.399, 71, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.216, 64, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 102, 0]}]
{'': [0.24808593750000218, 6.055761952500853e-17], 'false': [nan, 6.055761952500853e-17]}
{'': [0.2474363082839284, 0.0], 'true': [0.24782222222222244, 0.2343749999999999], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [-1.8503717077085942e-18, 0.0]}
{'': [0.23388460611163017, 6.287988812036285e-17], 'false': [nan, 6.287988812036285e-17], 'false,false': [nan, 6.287988812036285e-17]}
{'': [0.24731818122506358, -1.8978171361113787e-17], 'true': [0.10428951323852591, 0.0686542584881375], 'false': [nan, -1.8978171361113787e-17], 'false,false': [nan, -1.8978171361113787e-17], 'false,false,false': [-7.93016446160826e-18, 0.0]}
{'': [0.1905975246947485, 4.126492657898812e-17], 'true': [0.18653307140024264, 0.23437499999999994], 'false': [nan, 4.126492657898812e-17]}
{'': [0.18752128684169522, 3.300663046182898e-17], 'true': [0.18752128684169522, nan], 'true,true': [0.18704345472316702, 0.0], 'false': [nan, 3.300663046182898e-17], 'false,false': [3.112774835397635e-17, 0.0]}
{'': [0.17483221319790268, 3.853666697045998e-17], 'true': [0.17483221319790268, nan], 'false': [nan, 3.853666697045998e-17], 'false,false': [3.985415985833895e-17, 0.0]}
{'': [0.1811233845688215, -3.233659295024728e-18], 'true': [0.17806670360590796, 0.13971039421746176], 'false': [nan, -3.233659295024728e-18], 'false,false': [nan, -3.233659295024728e-18]}
{'': [0.18451194547946506, 2.4019248128909638e-17], 'true': [0.18451194547946506, nan], 'false': [nan, 2.4019248128909638e-17], 'false,false': [nan, 2.4019248128909638e-17]}
{'': [0.1801848263544097, -1.5782582212808597e-17], 'true': [0.1801848263544097, nan], 'false': [nan, -1.5782582212808597e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.033263921737671
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.49276431971489587;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=33 */
%   | | | else return 0.3914822684328447;  // std dev = 3.347, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109542;  // std dev = 5.96e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.46757914055610084;  // std dev = 4.335, 87.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=59 */
%   | | | else return -0.20635705119893819;  // std dev = 0.036, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.5834239533775809;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.1254446385283914;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(E, G), complex(F, H) )
%   | | | then return 0.1895415681968947;  // std dev = 1.987, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.4812822761490271;  // std dev = 1.138, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( phenotype(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.48201277065347736;  // std dev = 1.544, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.1919672736639545;  // std dev = 0.372, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.3522364881715958;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.7013628739444426;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.18109852772519072;  // std dev = 1.930, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.3134623265335155;  // std dev = 3.030, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   else return -0.11231637819360618;  // std dev = 8.12e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( complex(A, H), phenotype(E, I) )
%   | | | then return 0.19371129175034058;  // std dev = 2.450, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.35614221917732425;  // std dev = 3.162, 62.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | | else if ( location(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.16653543655516415;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.21392739885935694;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.0029875038251749196;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13577334357625237;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.03626748586356985;  // std dev = 0.816, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.20253263274331607;  // std dev = 1.117, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.467296682868428;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4878703460826658;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3845148905855944;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( enzyme(F, H), enzyme(A, I) )
%   | | | then return 0.5135287257687828;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.024259083422128243;  // std dev = 3.395, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.11285283419340846;  // std dev = 1.657, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2553186710299819;  // std dev = 2.964, 57.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   else if ( complex(A, L) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), interaction(E, G) )
%   | | | then return 0.13757523840326255;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3925210347991461;  // std dev = 0.226, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.05095374774326431;  // std dev = 3.281, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | | else return 0.12095914725811903;  // std dev = 3.697, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(J, A) )
%   | then if ( interaction(A, K) )
%   | | then return -0.08518475138839686;  // std dev = 3.23e-09, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.08518475138839693;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839689;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.19002312804765004;  // std dev = 1.777, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.016983056602705698;  // std dev = 4.338, 99.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=45 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0.3989649006180643;  // std dev = 0.886, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.025783620405703627;  // std dev = 1.436, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.08887654157569116;  // std dev = 0.534, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4300872492100115;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(A, K) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(A, F), interaction(G, D) )
%   | | then if ( enzyme(G, H), location(G, F) )
%   | | | then return 0.21294103574828177;  // std dev = 1.872, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return 0.08308294741969338;  // std dev = 2.579, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else return 0.5126185984397765;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.31704763739988323;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19976348067928232;  // std dev = 0.213, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.30540131230718065;  // std dev = 0.569, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.08472381057904342;  // std dev = 2.688, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, F) )
%   | | then if ( complex(A, F), interaction(G, E) )
%   | | | then return -0.003789614243077097;  // std dev = 0.706, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1691865754436078;  // std dev = 1.594, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else return 0.40121174283929373;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.37276111816664464;  // std dev = 0.466, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.42933003097073635;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.27425786087377735;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06992692042572883;  // std dev = 3.636, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   else if ( complex(A, L) )
%   | then return -0.0684269778442027;  // std dev = 2.08e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06842697784420268;  // std dev = 2.08e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(E, D), recursion_proteinclass(D, B) )
%   | | | then return 0.20288734290238555;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.016635458442474736;  // std dev = 1.906, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( enzyme(E, G), interaction(H, E) )
%   | | | then return 0.009648361511901862;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.15736254527874174;  // std dev = 2.405, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.28012996526682155;  // std dev = 0.411, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.34399317039073435;  // std dev = 0.736, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.09179446087682451;  // std dev = 2.557, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return 0.3330146653593857;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 15.57649564743042
Refined model CLL: -0.234074


******************************************
Best model found
******************************************
Results 

CLL : -0.247212 

AUC ROC : 0.973955 

AUC PR : 0.28167 

Precision : 0.052762 

Recall : 0.98227 

F1 : 0.100145 

Total Learning Time : 10.033263921737671 

Total Inference Time : 4.5443456172943115 

Total revision time: 22.16980290412903
Best scored revision CLL: -0.234074


Results 

CLL : -0.247212 

AUC ROC : 0.973955 

AUC PR : 0.28167 

Precision : 0.052762 

Recall : 0.98227 

F1 : 0.100145 

Total Learning Time : 22.187262535095215 

Total Inference Time : 4.5443456172943115 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.719586133956909
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4524346493852238;  // std dev = 0.491, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 3.73e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.46905598310343133;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=52 */
%   | else return 0.37800097070010436;  // std dev = 4.650, 89.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283913;  // std dev = 5.16e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2808896878080141;  // std dev = 0.496, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360628;  // std dev = 7.21e-09, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5557656165372126;  // std dev = 3.153, 110.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=99 */
%   | else return -0.2634836412264898;  // std dev = 2.122, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20052511973969833;  // std dev = 3.882, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   | else return 0.21142688470612223;  // std dev = 3.737, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926078;  // std dev = 6.84e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12929941083506694;  // std dev = 4.599, 117.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=69 */
%   | | else return 0.0876034993841185;  // std dev = 3.447, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.08518475138839682;  // std dev = 4.71e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05716288655099773;  // std dev = 0.426, 195.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 2.89e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.07877675473109172;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1499106127960731;  // std dev = 4.117, 104.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=69 */
%   | else return 0.07624117414748914;  // std dev = 3.368, 61.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333732;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05228630542275346;  // std dev = 5.632, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07761460015449391;  // std dev = 5.385, 165.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
Inference time using transfer learning 29.05155038833618
Parameter learned model CLL:-0.275297 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 71, 104], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 120, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.109, 25, 52], 'true,false': [4.65, 37, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.16e-08, 151, 0], 'false,false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 80, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.21e-09, 154, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.153, 11, 99], 'true,false': [2.122, 56, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.59e-08, 63, 0], 'false,false,false,false': [4.59e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.882, 32, 52], 'true,false': [3.737, 33, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.599, 48, 69], 'true,true,false': [3.447, 30, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.73e-08, 62, 0], 'false,false,false': [4.71e-08, 78, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.426, 91, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.89e-08, 64, 0], 'false,false,false': [2.79e-08, 63, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.117, 35, 69], 'true,false': [3.368, 26, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 154, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.632, 76, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 128, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.385, 61, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 144, 0]}]
{'': [0.24111020408163572, 1.4802973661668754e-17], 'false': [nan, 1.4802973661668754e-17]}
{'': [0.2339962258673266, 1.4325458382260084e-17], 'true': [0.21926125822229642, 0.24289862391112155], 'false': [nan, 1.4325458382260084e-17], 'false,false': [nan, 1.4325458382260084e-17], 'false,false,false': [1.764592886821441e-17, 0.0]}
{'': [0.24594620129089498, 5.0464682937507114e-17], 'false': [nan, 5.0464682937507114e-17], 'false,false': [nan, 5.0464682937507114e-17]}
{'': [0.2384743503924896, -2.842170943040401e-17], 'true': [0.0903672229475301, 0.07380641378578902], 'false': [nan, -2.842170943040401e-17], 'false,false': [nan, -2.842170943040401e-17], 'false,false,false': [3.348291661567932e-17, 3.40229636578677e-17]}
{'': [0.17183559562642126, 4.7824991830006746e-17], 'true': [0.17943417696724534, 0.16426733674322327], 'false': [nan, 4.7824991830006746e-17]}
{'': [0.1819058732983215, 3.489272363107635e-17], 'true': [0.1819058732983215, nan], 'true,true': [0.18077796071005958, 0.18281847729394093], 'false': [nan, 3.489272363107635e-17], 'false,false': [2.238352872228138e-17, 2.846725704167068e-17]}
{'': [0.18139817488914972, 4.108699382471052e-17], 'true': [0.18139817488914972, nan], 'false': [nan, 4.108699382471052e-17], 'false,false': [1.3010426069826053e-17, 1.2335811384723961e-17]}
{'': [0.1727228438222853, -2.955788572053988e-17], 'true': [0.16297497591334334, 0.18592138769938676], 'false': [nan, -2.955788572053988e-17], 'false,false': [nan, -2.955788572053988e-17]}
{'': [0.1762060663334027, 2.7755575615628914e-17], 'true': [0.1762060663334027, nan], 'false': [nan, 2.7755575615628914e-17], 'false,false': [nan, 2.7755575615628914e-17]}
{'': [0.1757222769279236, -1.1564823173178714e-17], 'true': [0.1757222769279236, nan], 'false': [nan, -1.1564823173178714e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.932578325271606
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.41758949454007105;  // std dev = 5.937, 143.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=80 */
%   else return -0.14185106490048813;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(G, E) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2350122940520396;  // std dev = 0.970, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7307744171862892;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.2797706667917727;  // std dev = 4.002, 65.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
%   | | | else return 0.39693883459444007;  // std dev = 4.441, 82.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839105;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D), interaction(F, E) )
%   | | | then return 0.6552488526351843;  // std dev = 1.041, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.10623220098753834;  // std dev = 1.257, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, A), complex(E, G) )
%   | | | then return 0.12963095754582737;  // std dev = 3.069, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.3481429946707413;  // std dev = 4.025, 72.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.1051407680762529;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 7.544050042632769E-4;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22726173711454817;  // std dev = 1.959, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(A, L) )
%   | then return -0.11231637819360625;  // std dev = 6.59e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.11231637819360625;  // std dev = 6.59e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), complex(D, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4079340161680845;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5712685581661782;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.43139804763944656;  // std dev = 1.996, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.12986498394060583;  // std dev = 5.541, 129.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=59 */
%   | else if ( complex(A, H) )
%   | | then return 0.6517519097152794;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2058635354688816;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(J, A) )
%   | | then return -0.10159632948783619;  // std dev = 6.04e-09, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10159632948783626;  // std dev = 4.37e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.32706350414741375;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5428905055943819;  // std dev = 0.485, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1974063174766909;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3598144502527931;  // std dev = 0.361, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(F, H) )
%   | | | then return 0.46192141805619574;  // std dev = 0.266, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.20947109442634843;  // std dev = 4.283, 80.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=46 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15675427192257751;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05211408993719555;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.09269127618926067;  // std dev = 6.97e-09, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(G, E) )
%   | | | then return 0.343479452553293;  // std dev = 0.867, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.548160149920777;  // std dev = 0.320, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.28727691122002635;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.4277190851746199;  // std dev = 0.168, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2398952013438457;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04334151111511424;  // std dev = 2.063, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.17143813145527634;  // std dev = 2.517, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.07089297295777632;  // std dev = 3.656, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(A, E) )
%   | | then return 0.24674026400822013;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(E, G), interaction(E, E) )
%   | | | then return 0.17536769898629107;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.021472076332526884;  // std dev = 2.463, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.1826393749722505;  // std dev = 1.790, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return -0.01794798668553393;  // std dev = 2.323, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.194082520416415;  // std dev = 2.935, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.10429658116027625;  // std dev = 2.014, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   else if ( interaction(A, M) )
%   | then return -0.07877675473109169;  // std dev = 4.06e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07877675473109169;  // std dev = 4.17e-09, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return -0.01960250270962474;  // std dev = 1.276, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.1125655275902961;  // std dev = 1.524, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else if ( phenotype(E, I) )
%   | | | then return -0.0830360738515474;  // std dev = 1.324, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.0178041787684226;  // std dev = 0.966, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( complex(A, J), interaction(A, A) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.16893126011970022;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3277203657646718;  // std dev = 0.314, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.15429654982480434;  // std dev = 3.511, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return 0.04341068943261035;  // std dev = 2.587, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   else return -0.07324622576333707;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.1306035213887586;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1510860675811344;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.28254658312221065;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21317949787808876;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.25936810976875335;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.013389968022178572;  // std dev = 3.118, 74.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.14623968268868945;  // std dev = 3.341, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return -0.05157720401417491;  // std dev = 1.996, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   else return -0.06842697784420264;  // std dev = 5.51e-09, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.2746114783140622;  // std dev = 2.642, 102.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=92 */
%   | | | else return -0.3042771477776917;  // std dev = 1.777, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.26618974992956707;  // std dev = 0.178, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.42660411157691724;  // std dev = 0.475, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.4357263597043992;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10409912801830683;  // std dev = 0.568, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02768310488830683;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
Inference time using transfer learning 33.58357763290405
Refined model CLL: -0.209105


******************************************
Best model found
******************************************
Results 

CLL : -0.177338 

AUC ROC : 0.984148 

AUC PR : 0.439264 

Precision : 0.289509 

Recall : 0.822642 

F1 : 0.428291 

Total Learning Time : 10.932578325271606 

Total Inference Time : 7.369995832443237 

Total revision time: 27.07709050178528
Best scored revision CLL: -0.209105


Results 

CLL : -0.177338 

AUC ROC : 0.984148 

AUC PR : 0.439264 

Precision : 0.289509 

Recall : 0.822642 

F1 : 0.428291 

Total Learning Time : 27.094550132751465 

Total Inference Time : 7.369995832443237 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8726930618286133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.409047138692324;  // std dev = 0.497, 167.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3937675742756143;  // std dev = 4.556, 86.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=51 */
%   | else return 0.37820910719405526;  // std dev = 4.162, 71.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.30e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2893753370272522;  // std dev = 0.497, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6441885144999225;  // std dev = 1.393, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.050516082341414144;  // std dev = 3.978, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.13405277977947763;  // std dev = 4.613, 102.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | else return 0.12138379616910591;  // std dev = 3.707, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926103;  // std dev = 3.23e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24574158499066703;  // std dev = 4.358, 107.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=72 */
%   | | else return 0.06165457141998392;  // std dev = 2.673, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.71e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.08518475138839686;  // std dev = 2.58e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10920257426270122;  // std dev = 0.430, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109176;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10224332887363616;  // std dev = 4.737, 119.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=72 */
%   | else return -0.04589782258432967;  // std dev = 2.865, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04699111151951747;  // std dev = 5.585, 166.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.10e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08434359961493983;  // std dev = 5.218, 151.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
Inference time using transfer learning 34.99530339241028
Parameter learned model CLL:-0.269856 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 75, 92], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.556, 35, 51], 'true,false': [4.162, 30, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 92, 0], 'false,false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 73, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.393, 2, 70], 'true,false': [3.978, 57, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.59e-08, 62, 0], 'false,false,false,false': [2.79e-08, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.613, 51, 51], 'true,false': [3.707, 37, 41], 'false,true': [0.0, 0, 0], 'false,false': [3.23e-09, 93, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.358, 35, 72], 'true,true,false': [2.673, 21, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.71e-08, 79, 0], 'false,false,false': [2.58e-08, 47, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.43, 68, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.83e-08, 57, 0], 'false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.737, 47, 72], 'true,false': [2.865, 29, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.585, 74, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.218, 59, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 103, 0]}]
{'': [0.24740937287102688, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.24260619092052277, 5.599385689413833e-17], 'true': [0.2413466738777725, 0.24399920650664622], 'false': [nan, 5.599385689413833e-17], 'false,false': [nan, 5.599385689413833e-17], 'false,false,false': [5.792467954566034e-17, -2.413528314402514e-18]}
{'': [0.24676017294432334, 6.315030048326579e-17], 'false': [nan, 6.315030048326579e-17], 'false,false': [nan, 6.315030048326579e-17]}
{'': [0.23804308515777342, -6.0557619525008536e-18], 'true': [0.02693222488327744, 0.2003271096739632], 'false': [nan, -6.0557619525008536e-18], 'false,false': [nan, -6.0557619525008536e-18], 'false,false,false': [3.40229636578677e-17, 1.61907524424502e-17]}
{'': [0.19461298378269495, 9.55030558817339e-18], 'true': [0.20860837809206828, 0.17622036251863213], 'false': [nan, 9.55030558817339e-18]}
{'': [0.1834220484843459, 3.52451753849256e-17], 'true': [0.1834220484843459, nan], 'true,true': [0.1775295485570186, 0.1742999073394658], 'false': [nan, 3.52451753849256e-17], 'false,false': [2.810691201582675e-17, 1.4173059888831785e-17]}
{'': [0.18464888890050563, 3.050063254464716e-17], 'true': [0.18464888890050563, nan], 'false': [nan, 3.050063254464716e-17], 'false,false': [5.843279076974508e-18, 0.0]}
{'': [0.1869677502163957, -2.846725704167068e-18], 'true': [0.18857768080340548, 0.16751297658913544], 'false': [nan, -2.846725704167068e-18], 'false,false': [nan, -2.846725704167068e-18]}
{'': [0.18790462412440695, 2.6294755846385285e-17], 'true': [0.18790462412440695, nan], 'false': [nan, 2.6294755846385285e-17], 'false,false': [nan, 2.6294755846385285e-17]}
{'': [0.18032538940624182, -1.6168296475123638e-17], 'true': [0.18032538940624182, nan], 'false': [nan, -1.6168296475123638e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.5275349617004395
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.36179857013600925;  // std dev = 5.852, 137.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=69 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.503193226819372;  // std dev = 1.417, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.14150931135751557;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return 0.20816537702173132;  // std dev = 1.140, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6724242837239847;  // std dev = 1.602, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11925717312430391;  // std dev = 2.040, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.34959858866903565;  // std dev = 2.320, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.4628538240753885;  // std dev = 3.326, 50.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   else return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), complex(A, F) )
%   | | then if ( enzyme(E, G), interaction(H, A) )
%   | | | then return 0.657717523679363;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7466323872676253;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(E, I), location(A, J) )
%   | | | then return 0.3243391034574468;  // std dev = 1.682, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.5719405851231162;  // std dev = 0.932, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( complex(K, M), complex(A, M) )
%   | | | then return 0.7229350273692271;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.32517853125634383;  // std dev = 3.129, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.14493408349576625;  // std dev = 3.541, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.2406776958151799;  // std dev = 2.578, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else return -0.11231637819360617;  // std dev = 9.54e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(E, F), phenotype(D, F) )
%   | | | then return 0.4596069981632482;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5098118324056846;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2190622072947632;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( phenotype(A, I), complex(H, G) )
%   | | | then return -0.19594586490241142;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.16551708458182424;  // std dev = 2.477, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5394707699094825;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2173972203665371;  // std dev = 5.108, 105.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=57 */
%   else if ( interaction(A, K) )
%   | then return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( phenotype(A, E), location(A, F) )
%   | | | then return 0.34063298067675946;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.372523622549624;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.46452112034380505;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3809627945976085;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.40964553041015533;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.013088087937951428;  // std dev = 3.725, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.14357224127202325;  // std dev = 4.782, 93.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=47 */
%   else if ( interaction(K, A) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E), location(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.27949116012076114;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22643034643590765;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4855074408581998;  // std dev = 0.404, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5091668656271406;  // std dev = 0.666, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.4220880920720642;  // std dev = 0.331, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.037691430527364074;  // std dev = 2.174, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.1921974864666431;  // std dev = 3.772, 60.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=37 */
%   else if ( interaction(A, K) )
%   | then return -0.08518475138839683;  // std dev = 4.93e-09, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.08518475138839686;  // std dev = 3.84e-09, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( phenotype(A, G), interaction(H, D) )
%   | | | then return 0.008396169184991262;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.17224617943198559;  // std dev = 2.119, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2172702473657828;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.043028570245366;  // std dev = 2.496, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.33907753354025444;  // std dev = 0.417, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.025485506878202672;  // std dev = 1.775, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.11135829295745177;  // std dev = 2.530, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.26373730742784257;  // std dev = 2.256, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109155;  // std dev = 6.32e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), phenotype(F, G) )
%   | | | then return 0.3076625244142482;  // std dev = 0.967, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.48131229364902856;  // std dev = 0.312, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return -0.38085089307602005;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.45639659973047;  // std dev = 0.534, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.23335509221442;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3402209607269607;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L), location(A, M) )
%   | | | then return 0.03263414664806342;  // std dev = 2.402, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.1288751345321819;  // std dev = 3.014, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   else return -0.0732462257633372;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.14079922544109083;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1507242511299568;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, D), phenotype(D, F) )
%   | | | then return 0.15922247547332677;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22416792349061151;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3457050753389437;  // std dev = 0.279, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.26924622224340883;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.21811657601815532;  // std dev = 0.940, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06037906445482847;  // std dev = 4.486, 108.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=61 */
%   else return -0.06842697784420265;  // std dev = 5.02e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.1484012313923004;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.16236337720822516;  // std dev = 0.564, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.0829303665429585;  // std dev = 2.693, 53.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   | | | else return 0.17526700807329204;  // std dev = 2.150, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3512915307199272;  // std dev = 0.415, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.4435861781213207;  // std dev = 0.361, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.30335602319933774;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04764951200038689;  // std dev = 1.651, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.06419184008202626;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
Inference time using transfer learning 9.882515668869019
Refined model CLL: -0.23752


******************************************
Best model found
******************************************
Results 

CLL : -0.242331 

AUC ROC : 0.945589 

AUC PR : 0.161826 

Precision : 0.04912 

Recall : 0.815884 

F1 : 0.092661 

Total Learning Time : 5.5275349617004395 

Total Inference Time : 2.7650253772735596 

Total revision time: 13.607866525650024
Best scored revision CLL: -0.23752


Results 

CLL : -0.242331 

AUC ROC : 0.945589 

AUC PR : 0.161826 

Precision : 0.04912 

Recall : 0.815884 

F1 : 0.092661 

Total Learning Time : 13.625326156616211 

Total Inference Time : 2.7650253772735596 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.834033489227295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4813373408966116;  // std dev = 0.485, 138.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.34215061116101925;  // std dev = 4.820, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else return 0.4185887514289487;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2602994552498288;  // std dev = 0.499, 159.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.663598100042116;  // std dev = 0.072, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.1456351614231016;  // std dev = 3.513, 80.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783621;  // std dev = 4.08e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.22379020015258624;  // std dev = 4.000, 86.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   | else return 0.1666016710961114;  // std dev = 3.062, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926092;  // std dev = 5.74e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1874018430297656;  // std dev = 4.327, 107.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=68 */
%   | | else return 0.07008103360306585;  // std dev = 2.373, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.80e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839686;  // std dev = 2.47e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.060715056632884554;  // std dev = 0.424, 160.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109165;  // std dev = 4.28e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.0804370884061588;  // std dev = 4.640, 117.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=68 */
%   | else return -0.014617847789717512;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05239732425468228;  // std dev = 5.228, 153.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.01828346669704121;  // std dev = 5.379, 160.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 43.790719509124756
Parameter learned model CLL:-0.256719 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.485, 52, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.82, 42, 52], 'true,false': [3.549, 20, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 114, 0], 'false,false,false,false': [0.0, 19, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 73, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.072, 0, 71], 'true,false': [3.513, 65, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.08e-08, 58, 0], 'false,false,false,false': [2.47e-08, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.0, 34, 52], 'true,false': [3.062, 22, 34], 'false,true': [0.0, 0, 0], 'false,false': [5.74e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.327, 39, 68], 'true,true,false': [2.373, 16, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.8e-08, 63, 0], 'false,false,false': [2.47e-08, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.424, 74, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.28e-08, 79, 0], 'false,false,false': [7.45e-09, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.64, 49, 68], 'true,false': [2.522, 21, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.228, 67, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.379, 74, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 108, 0]}]
{'': [0.23482461667717067, 7.91446116564468e-17], 'false': [nan, 7.91446116564468e-17]}
{'': [0.24342585829072358, -6.678033230828009e-18], 'true': [0.24717066545948457, 0.23319615912208438], 'false': [nan, -6.678033230828009e-18], 'false,false': [nan, -6.678033230828009e-18], 'false,false,false': [-5.843279076974508e-18, -2.921639538487254e-18]}
{'': [0.24934868902987373, 6.315030048326579e-17], 'false': [nan, 6.315030048326579e-17], 'false,false': [nan, 6.315030048326579e-17]}
{'': [0.2448857841412474, 4.270088556250602e-18], 'true': [7.271604973163983e-05, 0.15424379615342104], 'false': [nan, 4.270088556250602e-18], 'false,false': [nan, 4.270088556250602e-18], 'false,false,false': [2.871266442996095e-17, 1.3274405729213829e-17]}
{'': [0.17946170044153573, 3.39234813079909e-17], 'true': [0.1860120655311097, 0.16742146897440172], 'false': [nan, 3.39234813079909e-17]}
{'': [0.1752356501753356, 3.112774835397635e-17], 'true': [0.1752356501753356, nan], 'true,true': [0.17497724028641823, 0.16560372924864322], 'false': [nan, 3.112774835397635e-17], 'false,false': [2.2909364000201642e-17, 1.3877787807814457e-17]}
{'': [0.1799528699594835, 4.289498049688105e-17], 'true': [0.1799528699594835, nan], 'false': [nan, 4.289498049688105e-17], 'false,false': [2.3188202413057067e-17, 1.047380211910525e-18]}
{'': [0.18050922128026636, -4.956352788505163e-18], 'true': [0.18404059854530166, 0.16313850881375883], 'false': [nan, -4.956352788505163e-18], 'false,false': [nan, -4.956352788505163e-18]}
{'': [0.1786547555757248, 2.5620531337503614e-17], 'true': [0.1786547555757248, nan], 'false': [nan, 2.5620531337503614e-17], 'false,false': [nan, 2.5620531337503614e-17]}
{'': [0.1808627911331545, -1.644774851296528e-17], 'true': [0.1808627911331545, nan], 'false': [nan, -1.644774851296528e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 6.160215854644775
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F), interaction(E, G) )
%   | | then if ( complex(G, F), location(A, H) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.35814893509951334;  // std dev = 5.385, 116.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(E, D) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7864242048919647;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.274909655280991;  // std dev = 5.122, 105.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=50 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.8087411357856349;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23731256435706344;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.24326694427733697;  // std dev = 1.459, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0944554214999205;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839108;  // std dev = 7.45e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.2955763877169017;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.731311209841517;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return -0.036548597818558015;  // std dev = 1.698, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.24836435582271946;  // std dev = 3.421, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.2625917162447661;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.4265215797088439;  // std dev = 3.138, 46.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360643;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.11231637819360622;  // std dev = 7.57e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.42464635066959794;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.602664037039737;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4988292828113196;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6351493712769537;  // std dev = 1.430, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.22303805754158143;  // std dev = 0.249, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.3234561689710004;  // std dev = 0.347, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return -0.0699100849761349;  // std dev = 1.758, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.45665442165001424;  // std dev = 1.494, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.10159632948783656;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, G) )
%   | | | then return 0.352771378438749;  // std dev = 1.406, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.5412772156122077;  // std dev = 0.506, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.3250932907112844;  // std dev = 0.238, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.23091845581586476;  // std dev = 0.248, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, A) )
%   | | | then return 0.3289744726176151;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4542834122889636;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.10953632294125147;  // std dev = 1.415, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07786612015250423;  // std dev = 2.809, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   else return -0.09269127618926092;  // std dev = 5.43e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.26961082510826095;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2495799653887721;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14835357060308255;  // std dev = 0.174, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.013295936139353743;  // std dev = 1.052, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.4227113364457014;  // std dev = 0.730, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.12387024555941505;  // std dev = 1.170, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10203691347638108;  // std dev = 2.819, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.22266836824663014;  // std dev = 2.312, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   else return -0.08518475138839679;  // std dev = 5.67e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21468826365458824;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4127429242957096;  // std dev = 0.243, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.23211720013796588;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.03933707651717696;  // std dev = 1.927, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.30749352241893574;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.020291101587924677;  // std dev = 1.882, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.07456565576120025;  // std dev = 2.730, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.19087330623269286;  // std dev = 1.217, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.0787767547310916;  // std dev = 5.59e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(D, B), interaction(F, A) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.182469052107682;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.28759135285888304;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(D, E), complex(D, G) )
%   | | | then return -0.07297237647155384;  // std dev = 2.237, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.04680181892453308;  // std dev = 2.396, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33926439790778085;  // std dev = 0.268, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.24164986768969735;  // std dev = 0.237, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2114885177884028;  // std dev = 1.308, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.45816273869208357;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333711;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), enzyme(E, G) )
%   | | then if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.037427150592121324;  // std dev = 0.763, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.30244898869138437;  // std dev = 0.630, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( enzyme(E, J), complex(A, K) )
%   | | | then return -0.09398433671113325;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07748565316102969;  // std dev = 1.672, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.15083105825123957;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1689224255508295;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.04971561225308853;  // std dev = 2.132, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.05809834825685603;  // std dev = 2.476, 60.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=34 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.30424251001063163;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11190395363565672;  // std dev = 0.888, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.14326079715078768;  // std dev = 0.832, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.0021236913536970686;  // std dev = 3.023, 89.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=42 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.32878841836656947;  // std dev = 0.246, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12374272177172642;  // std dev = 1.402, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.40566748641846395;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 12.92893385887146
Refined model CLL: -0.205517


******************************************
Best model found
******************************************
Results 

CLL : -0.227013 

AUC ROC : 0.979526 

AUC PR : 0.211305 

Precision : 0.091503 

Recall : 0.939929 

F1 : 0.166771 

Total Learning Time : 6.160215854644775 

Total Inference Time : 2.8055553436279297 

Total revision time: 14.072011947631836
Best scored revision CLL: -0.205517


Results 

CLL : -0.227013 

AUC ROC : 0.979526 

AUC PR : 0.211305 

Precision : 0.091503 

Recall : 0.939929 

F1 : 0.166771 

Total Learning Time : 14.089471578598022 

Total Inference Time : 2.8055553436279297 

