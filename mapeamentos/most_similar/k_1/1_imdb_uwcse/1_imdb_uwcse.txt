Starting experiment 1_imdb_uwcse 

Run: 1
Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Starting experiment 1_imdb_uwcse 

Run: 1
Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Starting experiment 1_imdb_uwcse 

Run: 1
Loading pre-trained trees.
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.613491535186768
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5185262935900773;  // std dev = 3,448, 53,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.560478307215009;  // std dev = 2,789, 45,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   else return -0.12544463852839155;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.46828071853939535;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   else return -0.11231637819360633;  // std dev = 2,79e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.30752541421063495;  // std dev = 2,989, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   else return -0.10159632948783634;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20058646035229855;  // std dev = 3,162, 49,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   else return -0.09269127618926101;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13649551460931417;  // std dev = 3,240, 50,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=35 */
%   else return -0.0851847513883968;  // std dev = 2,79e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1987162982672662;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   else return -0.07877675473109179;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.15194967752817998;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.05161155019859082;  // std dev = 3,079, 48,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( sameperson(C, A), sameperson(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04044060800609914;  // std dev = 3,079, 48,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   else return -0.06419184008202622;  // std dev = 7,45e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
Inference time using transfer learning 2.0323286056518555
Parameter learned model CLL:-0.285475 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.448, 18, 35], 'false': [5.37e-08, 52, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.789, 10, 35], 'false': [0.0, 61, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.676, 9, 35], 'false': [2.79e-08, 60, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.989, 12, 35], 'false': [0.0, 54, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.162, 14, 35], 'false': [0.0, 56, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.24, 15, 35], 'false': [2.79e-08, 59, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.676, 9, 35], 'false': [0.0, 54, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.676, 9, 35], 'false': [1.29e-08, 73, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.079, 13, 35], 'false': [1.29e-08, 53, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'sameperson(C, A), sameperson(C, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.079, 13, 35], 'false': [7.45e-09, 45, 0]}]
{'': [0.2242791028835902, 5.551115123125783e-17], 'true': [nan, 0.2242791028835902]}
{'': [0.17283950617283853, -2.7300566179307128e-17], 'true': [nan, 0.17283950617283853]}
{'': [0.16270661157024788, 1.295260195396016e-17], 'true': [nan, 0.16270661157024788]}
{'': [0.19013128112268018, -8.22387425648264e-18], 'true': [nan, 0.19013128112268018]}
{'': [0.20408163265306123, -1.784287003861859e-17], 'true': [nan, 0.20408163265306123]}
{'': [0.20999999999999983, 1.3172137580298468e-17], 'true': [nan, 0.20999999999999983]}
{'': [0.16270661157024768, 0.0], 'true': [nan, 0.16270661157024768]}
{'': [0.16270661157024782, 2.281280187585938e-18], 'true': [nan, 0.16270661157024782]}
{'': [0.19748263888888895, 3.142140635731575e-18], 'true': [nan, 0.19748263888888895]}
{'': [0.19748263888888892, 1.2335811384723962e-18], 'true': [nan, 0.19748263888888892]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
Model training time 10.199580669403076
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( projectmember(F, B), publication(G, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4443558316512365;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else return -0.14185106490048768;  // std dev = 5,77e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | | then return 0.38614007887762103;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.09951767938360456;  // std dev = 1,866, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.4314144852335333;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( publication(F, A) )
%   | | then return 0.5497043868745315;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7950508488698971;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839152;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then return 0.573146751214089;  // std dev = 0,114, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.28379580601836124;  // std dev = 1,045, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.47501643952591105;  // std dev = 1,655, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3865898118429064;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15480774860903843;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.4258798122037974;  // std dev = 0,107, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.5981177838648125;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.0909576961117526;  // std dev = 1,107, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.4512187771625045;  // std dev = 1,179, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.2515544970451933;  // std dev = 1,592, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.10159632948783635;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.24538284586284584;  // std dev = 1,013, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.35014263646529714;  // std dev = 0,902, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.4539995848269594;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5571271619004481;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(I, J) )
%   | | | then return 0.0035321970665125766;  // std dev = 1,021, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.34410278635998054;  // std dev = 1,063, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.18889415023525644;  // std dev = 0,481, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.2738457560554596;  // std dev = 0,064, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11076698797979725;  // std dev = 0,936, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.20149147977142082;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return -0.14555212466593673;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.45044380885165547;  // std dev = 0,272, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21575558940546652;  // std dev = 1,791, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.22797736125991558;  // std dev = 0,064, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.27691954781423117;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.48088285886796944;  // std dev = 0,236, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.01667678176887664;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07526361204349813;  // std dev = 2,314, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.07877675473109177;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(D, F), sameperson(A, F) )
%   | | | then return -0.11837310106013262;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17641551351136395;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18207860765995318;  // std dev = 0,803, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then return 0.33702206535607854;  // std dev = 0,188, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.2487799961209254;  // std dev = 0,097, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07745339024159162;  // std dev = 2,268, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17540996992612265;  // std dev = 0,112, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return -0.2776569295965284;  // std dev = 1,122, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.027253799532200255;  // std dev = 1,859, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return -0.09096215958621692;  // std dev = 0,970, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2620194985187608;  // std dev = 0,939, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.15159599508691793;  // std dev = 0,100, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(D, A) )
%   | | | then return -0.2787643769973052;  // std dev = 1,186, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.06196851692858168;  // std dev = 1,809, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.07055286024601444;  // std dev = 0,556, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.35585319457006687;  // std dev = 0,165, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0641918400820262;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
Inference time using transfer learning 2.1515605449676514
Refined model CLL: -0.216298


******************************************
Best model found
******************************************
Results 

CLL : -0.205753 

AUC ROC : 0.946992 

AUC PR : 0.347855 

Precision : 0.212598 

Recall : 0.692308 

F1 : 0.325301 

Total Learning Time : 10.199580669403076 

Total Inference Time : 2.1046578884124756 

Total revision time: 19.493844985961914
Best scored revision CLL: -0.216298


Results 

CLL : -0.205753 

AUC ROC : 0.946992 

AUC PR : 0.347855 

Precision : 0.212598 

Recall : 0.692308 

F1 : 0.325301 

Total Learning Time : 22.322794914245605 

Total Inference Time : 2.1046578884124756 

Starting experiment 1_imdb_uwcse 

Run: 1
Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.773 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360621;  // std dev = 7,88e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0927902212259119;  // std dev = 0,009, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08517704108542275;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08132892207892273;  // std dev = 0,647, 759,000 (wgt'ed) examples reached here.  /* #neg=759 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,46e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07556332720636241;  // std dev = 0,556, 702,000 (wgt'ed) examples reached here.  /* #neg=702 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06911958440403032;  // std dev = 0,367, 727,000 (wgt'ed) examples reached here.  /* #neg=727 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06580528153714366;  // std dev = 0,502, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */
Starting experiment 1_imdb_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiments for fasttext using softcosine 

Starting experiments for fasttext using wmd 

Starting experiment 1_imdb_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiment 1_imdb_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiments for fasttext using softcosine 

Starting experiments for fasttext using wmd 

Starting experiments for fasttext using relax-wmd 

Starting experiment 1_imdb_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiments for fasttext using softcosine 

Starting experiment 1_imdb_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- actor(B).;false;true
1;false;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;false;true
3;false;actor(B).;false;true
3;false,false;movie(D, A), movie(D, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(B).;false;true
5;false;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.115
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.39661047356105084;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3860545376817873;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3521002214402197;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.1123163781936063;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.35084691749164315;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.21306690304691495;  // std dev = 3,065, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   else return -0.10159632948783633;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3354057521316466;  // std dev = 3,65e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.22880159812858583;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.09269127618926101;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2651751824943477;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.13894387952362589;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   else return -0.08518475138839682;  // std dev = 2,47e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15013268563647378;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.04609307037131116;  // std dev = 3,158, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   else return -0.07877675473109177;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12572417004890338;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.048042694549721286;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1736074062205162;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.014056232459926333;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   else return -0.06842697784420268;  // std dev = 2,47e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15009184320232188;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.11873277065629546;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.06419184008202622;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1,703', 'seconds']
Parameter learned model CLL:-0.210838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [3.113, 18, 21], 'false': [5.16e-08, 55, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.16e-08, 0, 14], 'true,false': [2.958, 15, 21], 'false': [0.0, 68, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [2.834, 13, 21], 'false': [3.94e-08, 58, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.966, 1, 14], 'true,false': [3.065, 17, 21], 'false': [0.0, 46, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 14], 'true,false': [2.834, 13, 21], 'false': [0.0, 50, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [2.958, 15, 21], 'false': [2.47e-08, 52, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.966, 1, 14], 'true,false': [3.158, 19, 21], 'false': [0.0, 55, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.966, 1, 14], 'true,false': [3.113, 18, 21], 'false': [7.45e-09, 47, 0]}]
['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [3.278, 22, 21], 'false': [2.47e-08, 73, 0]}]
['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [2.834, 13, 21], 'false': [0.0, 57, 0]}]
{'': [0.2242791028835902, 4.844609562000683e-17], 'true': [-2.5376526277146434e-16, 0.2485207100591714]}
{'': [0.19741149821188642, -3.591898020846095e-17], 'true': [1.9032394707859825e-16, 0.24305555555555547]}
{'': [0.17581542107008274, 2.6798486801296883e-17], 'true': [-2.5376526277146434e-16, 0.23615916955017285]}
{'': [0.19872133099148018, -7.240584943207542e-18], 'true': [0.06222222222222236, 0.2472299168975067]}
{'': [0.1696272746682377, -1.4432899320127036e-17], 'true': [9.516197353929913e-17, 0.23615916955017302]}
{'': [0.1782123633168968, 1.1742743529689156e-17], 'true': [-3.9650822308041306e-17, 0.2430555555555555]}
{'': [0.20048029033389977, -3.0278809762504268e-18], 'true': [0.06222222222222225, 0.2493749999999999]}
{'': [0.19798173737706357, 1.1810883240693154e-18], 'true': [0.06222222222222221, 0.2485207100591716]}
{'': [0.195019890644321, 8.364694021148439e-18], 'true': [-3.96508223080413e-18, 0.24986479177934012]}
{'': [0.16748257770269667, -1.947759692324836e-18], 'true': [-1.586032892321652e-17, 0.23615916955017305]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
Starting experiment 1_imdb_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiments for fasttext using softcosine 

Starting experiments for fasttext using wmd 

Starting experiments for fasttext using relax-wmd 

