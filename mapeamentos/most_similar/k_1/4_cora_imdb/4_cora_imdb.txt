Starting experiment 4_cora_imdb 

Run: 1
Loading pre-trained trees.
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.8622581958770752
Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.83
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17099809711068661;  // std dev = 6,203, 179,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.22223976015034402;  // std dev = 5,863, 145,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.11786148777659763;  // std dev = 6,195, 178,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13839143524621583;  // std dev = 6,013, 158,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09293724905162765;  // std dev = 6,110, 168,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.08368968702701841;  // std dev = 6,073, 164,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.06735605722039677;  // std dev = 6,073, 164,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I) )
%   | then return 0.6011776844845624;  // std dev = 2,494, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | else return -0.2877112044043272;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03418641743208245;  // std dev = 4,960, 169,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.054446056279054064;  // std dev = 4,812, 154,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2,386', 'seconds']
Parameter learned model CLL:-0.304013 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.863, 89, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [2.494, 7, 56], 'false,false': [0.0, 98, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.96, 113, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.812, 98, 56]}]
{'': [nan, 0.2149745638400803], 'false': [nan, 0.2149745638400803]}
{'': [nan, 0.23705112960761107], 'false': [nan, 0.23705112960761063]}
{'': [nan, 0.21562933972983378], 'false': [nan, 0.21562933972983378]}
{'': [0.0, 0.22880948565935136], 'false': [nan, 0.22880948565934964], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.22222222222222335], 'false': [nan, 0.22222222222222215]}
{'': [nan, 0.22486615110053676], 'false': [nan, 0.22486615110053676]}
{'': [0.0, 0.22486615110053465], 'false': [nan, 0.22486615110053465], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.22684310018903503], 'false': [0.09876543209876469, -1.6313481178165566e-16], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.14556316829034846], 'false': [nan, 0.14556316829034863]}
{'': [nan, 0.1503424949553634], 'false': [nan, 0.1503424949553634]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;false;genre(B, I).;true;true


Refining candidate
***************************
Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiments for fasttext using softcosine 

Starting experiments for fasttext using wmd 

Starting experiments for fasttext using relax-wmd 

