Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.6157920360565186
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4122890624880448;  // std dev = 0.497, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.12e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.4076339633121285;  // std dev = 5.674, 135.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=82 */
%   | else return 0.6335598892380543;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.35517213582807977;  // std dev = 0.482, 138.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 7.90e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.50549992060507;  // std dev = 3.458, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | else return -0.26352757651094416;  // std dev = 2.022, 55.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1613264931608297;  // std dev = 5.116, 144.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=82 */
%   | else return 0.044438596077743364;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926079;  // std dev = 6.59e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1476659518301699;  // std dev = 5.117, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   | | else return -6.270914775210837E-4;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09981109294040057;  // std dev = 0.430, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.0787767547310916;  // std dev = 5.67e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07807323589874254;  // std dev = 5.166, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   | else return 0.13945243025509235;  // std dev = 0.689, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.84e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.063070474345589;  // std dev = 5.160, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.010322832517673684;  // std dev = 5.507, 159.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.63e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning 19.05381488800049
Parameter learned model CLL:-0.26666 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 70, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.674, 53, 82], 'true,false': [0.913, 1, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 104, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.482, 51, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.9e-09, 96, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.458, 14, 82], 'true,false': [2.022, 50, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.05e-08, 90, 0], 'false,false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.116, 62, 82], 'true,false': [1.754, 8, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.117, 59, 86], 'true,true,false': [0.797, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.87e-08, 106, 0], 'false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.43, 63, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.67e-08, 98, 0], 'false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.166, 62, 86], 'true,false': [0.689, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.84e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.16, 63, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.507, 72, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 105, 0]}]
{'': [0.24706884660635534, 6.579099405186112e-17], 'false': [nan, 6.579099405186112e-17]}
{'': [0.236306020823904, -5.9476233462061954e-18], 'true': [0.23846364883402002, 0.13888888888888892], 'false': [nan, -5.9476233462061954e-18], 'false,false': [nan, -5.9476233462061954e-18], 'false,false,false': [-8.540177112501205e-18, 0.0]}
{'': [0.2326931605147607, 6.245004513516506e-17], 'false': [nan, 6.245004513516506e-17], 'false,false': [nan, 6.245004513516506e-17]}
{'': [0.24322558671246886, 1.570012358055777e-17], 'true': [0.12456597222222147, 0.07434905371767697], 'false': [nan, 1.570012358055777e-17], 'false,false': [nan, 1.570012358055777e-17], 'false,false,false': [2.837236618486511e-17, -6.1679056923619804e-18]}
{'': [0.18732100246126207, 4.4408920985006264e-17], 'true': [0.18173309189330017, 0.23668639053254428], 'false': [nan, 4.4408920985006264e-17]}
{'': [0.181674892762241, 3.271192840413408e-17], 'true': [0.181674892762241, nan], 'true,true': [0.18061177114207713, 0.2115140377105831], 'false': [nan, 3.271192840413408e-17], 'false,false': [3.2468786569226275e-17, -1.1564823173178713e-18]}
{'': [0.18515166726698115, 3.416070845000482e-17], 'true': [0.18515166726698115, nan], 'false': [nan, 3.416070845000482e-17], 'false,false': [3.285353848380565e-17, 0.0]}
{'': [0.1811178668323711, 1.4356332214980473e-17], 'true': [0.18030446793307062, 0.23759221195410363], 'false': [nan, 1.4356332214980473e-17], 'false,false': [nan, 1.4356332214980473e-17]}
{'': [0.17748587042241712, 2.4252444712685457e-17], 'true': [0.17748587042241712, nan], 'false': [nan, 2.4252444712685457e-17], 'false,false': [nan, 2.4252444712685457e-17]}
{'': [0.19076940639586631, 7.401486830834377e-18], 'true': [0.19076940639586631, nan], 'false': [nan, 7.401486830834377e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.207172155380249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A), enzyme(E, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15226658215833588;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.5081489350995114;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.3459538131482928;  // std dev = 3.201, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7454462339841887;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.42411297837626344;  // std dev = 2.367, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7591771014801441;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.245418173293883;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.5361469816082991;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.3477316990418641;  // std dev = 3.632, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   else if ( interaction(L, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F), interaction(D, D) )
%   | | | then return 0.48031104975445577;  // std dev = 0.838, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.631117032903761;  // std dev = 0.201, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(D, D), interaction(A, G) )
%   | | | then return -0.04971504755410264;  // std dev = 1.686, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.31668733024841955;  // std dev = 4.846, 97.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=56 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29463546317167666;  // std dev = 1.188, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.26600020624668075;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.25144137976489933;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1123163781936062;  // std dev = 8.01e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), enzyme(E, G) )
%   | | | then return 0.20164987722988673;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4787096940424272;  // std dev = 0.261, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16839842113970344;  // std dev = 0.237, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.12791251341008858;  // std dev = 2.029, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.24616675206202113;  // std dev = 1.146, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6697818948648109;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.7139086428138062;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19933411122604974;  // std dev = 4.620, 86.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=45 */
%   else return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.31708831926297126;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36459815095259973;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5906176834614794;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( phenotype(F, G), interaction(F, F) )
%   | | | then return 0.013162529056083661;  // std dev = 1.462, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1754703654799659;  // std dev = 2.371, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.4592622368145974;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.21005347000858174;  // std dev = 4.193, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( enzyme(A, J) )
%   | then return -0.09269127618926105;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3368439368358246;  // std dev = 0.182, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.030310606964306427;  // std dev = 1.467, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.2519005804703246;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5864111873882114;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.26280260905877906;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4446564572328451;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.11597918814620356;  // std dev = 1.902, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.08912178294901704;  // std dev = 4.775, 105.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   else return -0.08518475138839678;  // std dev = 4.84e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return 0.20454077416026176;  // std dev = 0.866, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.02217066261936369;  // std dev = 2.625, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.47297360504782515;  // std dev = 0.455, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.4643533450294776;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( phenotype(K, M), location(A, L) )
%   | | | then return 0.2524231688193954;  // std dev = 2.163, 35.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=27 */
%   | | | else return 0.11925721260329022;  // std dev = 2.921, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.17562870200425637;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.504483802544998;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109157;  // std dev = 5.96e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16469051366560827;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23762231690385557;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.07400491567296522;  // std dev = 1.313, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.15536712525364307;  // std dev = 2.387, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( location(A, J), interaction(K, I) )
%   | | | then return 0.07448983584615383;  // std dev = 3.775, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.24518771841109563;  // std dev = 1.925, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.04978002485675916;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1587188521256077;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.07324622576333695;  // std dev = 4.37e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.22990609994733013;  // std dev = 0.405, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.014776019676924573;  // std dev = 4.572, 103.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=54 */
%   | | else if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3202551896097721;  // std dev = 1.260, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.511083504767798;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, I), location(A, J) )
%   | | | then return -0.43692385903138753;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.19557257738376319;  // std dev = 1.164, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.04340032149031627;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1194867709850489;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.18111620001131912;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3926701122287786;  // std dev = 0.514, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( enzyme(G, D), complex(G, H) )
%   | | | then return -0.4824748405488544;  // std dev = 0.678, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.3541577290440637;  // std dev = 0.359, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.36354527295068606;  // std dev = 0.628, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.42375288363197994;  // std dev = 0.340, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.043759541230785744;  // std dev = 2.090, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.07485271605899788;  // std dev = 2.587, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   else return -0.06419184008202626;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning 12.021787166595459
Refined model CLL: -0.23143


******************************************
Best model found
******************************************
Results 

CLL : -0.239735 

AUC ROC : 0.968144 

AUC PR : 0.282982 

Precision : 0.054232 

Recall : 0.904255 

F1 : 0.102327 

Total Learning Time : 10.207172155380249 

Total Inference Time : 4.116013765335083 

Total revision time: 21.72507071495056
Best scored revision CLL: -0.23143


Results 

CLL : -0.239735 

AUC ROC : 0.968144 

AUC PR : 0.282982 

Precision : 0.054232 

Recall : 0.904255 

F1 : 0.102327 

Total Learning Time : 21.734874963760376 

Total Inference Time : 4.116013765335083 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.6812820434570312
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.38876117999746845;  // std dev = 0.499, 196.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3571527539047419;  // std dev = 4.820, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else return 0.42300888359065864;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839108;  // std dev = 7.88e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2880671723884901;  // std dev = 0.498, 188.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360622;  // std dev = 7.68e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5513560418242538;  // std dev = 3.498, 113.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=99 */
%   | else return -0.24643353498216303;  // std dev = 2.164, 64.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.19413501337328726;  // std dev = 4.193, 91.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=52 */
%   | else return 0.18318834183764166;  // std dev = 3.983, 89.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926079;  // std dev = 6.72e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2157053916105567;  // std dev = 4.301, 105.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=69 */
%   | | else return 0.05075167381460118;  // std dev = 3.592, 75.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.83e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.08518475138839683;  // std dev = 3.80e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1405550567792209;  // std dev = 0.415, 170.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.07877675473109169;  // std dev = 3.49e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1316434196520232;  // std dev = 4.252, 105.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=69 */
%   | else return 0.04828257958426957;  // std dev = 3.374, 68.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.033936905355670254;  // std dev = 5.782, 188.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.19e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.026315895327022422;  // std dev = 5.862, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
Inference time using transfer learning 28.739150762557983
Parameter learned model CLL:-0.264197 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 92, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.82, 42, 52], 'true,false': [4.451, 32, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.88e-08, 113, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.498, 84, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.68e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.498, 14, 99], 'true,false': [2.164, 59, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.37e-08, 71, 0], 'false,false,false,false': [3.65e-08, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.193, 39, 52], 'true,false': [3.983, 37, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 132, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.301, 36, 69], 'true,true,false': [3.592, 40, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.83e-08, 80, 0], 'false,false,false': [3.8e-08, 63, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.415, 66, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.79e-08, 63, 0], 'false,false,false': [3.49e-08, 70, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.252, 36, 69], 'true,false': [3.374, 33, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 131, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.782, 84, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.862, 80, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 126, 0]}]
{'': [0.24906289046231037, -7.162729191130042e-18], 'false': [nan, -7.162729191130042e-18]}
{'': [0.24289862391112493, 5.411171044391519e-17], 'true': [0.24717066545948427, 0.23582766439909306], 'false': [nan, 5.411171044391519e-17], 'false,false': [nan, 5.411171044391519e-17], 'false,false,false': [5.501990210531749e-17, -2.3129646346357427e-18]}
{'': [0.24751348084890187, 5.921189464667501e-17], 'false': [nan, 5.921189464667501e-17], 'false,false': [nan, 5.921189464667501e-17]}
{'': [0.24252722289668918, -2.842170943040401e-17], 'true': [0.1082932163990101, 0.07320132931243986], 'false': [nan, -2.842170943040401e-17], 'false,false': [nan, -2.842170943040401e-17], 'false,false,false': [4.065605442289306e-17, 2.4671622769447922e-17]}
{'': [0.185825254895336, 4.37360585458395e-17], 'true': [0.19321634703167367, 0.17820749027192598], 'false': [nan, 4.37360585458395e-17]}
{'': [0.18104545785813286, 3.5713467925005034e-17], 'true': [0.18104545785813286, nan], 'true,true': [0.17616160551841167, 0.17201050920849562], 'false': [nan, 3.5713467925005034e-17], 'false,false': [2.914335439641036e-17, 2.2909364000201642e-17]}
{'': [0.17239947351813506, 4.2572461846528557e-17], 'true': [0.17239947351813506, nan], 'false': [nan, 4.2572461846528557e-17], 'false,false': [1.2335811384723961e-17, 1.7446361815538174e-17]}
{'': [0.17199479015232394, -1.3559975873284354e-17], 'true': [0.17220738418328965, 0.16744890080158842], 'false': [nan, -1.3559975873284354e-17], 'false,false': [nan, -1.3559975873284354e-17]}
{'': [0.17783939711764776, 2.617599001148743e-17], 'true': [0.17783939711764776, nan], 'false': [nan, 2.617599001148743e-17], 'false,false': [nan, 2.617599001148743e-17]}
{'': [0.18676883197607996, -7.93016446160826e-18], 'true': [0.18676883197607996, nan], 'false': [nan, -7.93016446160826e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.532288789749146
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.37427796735757685;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.2503057978446104;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.42441399534047686;  // std dev = 4.515, 83.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=47 */
%   else return -0.141851064900488;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.7458224493428692;  // std dev = 0.158, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.5703727702988978;  // std dev = 0.817, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.131997795381421;  // std dev = 1.446, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.49879973981680387;  // std dev = 3.186, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.23508881383434038;  // std dev = 3.070, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.345412604672946;  // std dev = 3.891, 62.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839105;  // std dev = 8.02e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then return 0.0978014615796781;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.5488508205581177;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6129188562489855;  // std dev = 0.169, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7325883535952072;  // std dev = 0.172, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.2619916659445302;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.05892951841577196;  // std dev = 2.844, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.24565482383860232;  // std dev = 4.707, 91.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=46 */
%   else if ( complex(A, J) )
%   | then return -0.1123163781936063;  // std dev = 4.93e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.11231637819360628;  // std dev = 5.59e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.269538618108169;  // std dev = 2.274, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.08790234238233494;  // std dev = 1.092, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.305112750774603;  // std dev = 0.634, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43933136395773476;  // std dev = 1.212, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.16489441980131092;  // std dev = 0.607, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5225100183736744;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.39728093636937933;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.15956195846448495;  // std dev = 5.190, 128.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=61 */
%   else return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(A, G) )
%   | | | then return 0.16402100709489476;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5060228775252698;  // std dev = 0.296, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( location(H, E), recursion_proteinclass(H, B) )
%   | | | then return -0.28744987940457944;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.23753744618378325;  // std dev = 0.042, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.44873900865108757;  // std dev = 1.618, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.1385099761516743;  // std dev = 4.387, 82.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2676612589354397;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6636539817230286;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0926912761892609;  // std dev = 5.89e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(E, G) )
%   | | then if ( complex(D, F), phenotype(D, H) )
%   | | | then return 0.00761949681493454;  // std dev = 0.969, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.28054515748594383;  // std dev = 0.922, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( recursion_proteinclass(D, B), interaction(E, D) )
%   | | | then return 0.3202479438698445;  // std dev = 0.264, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.041496132472695825;  // std dev = 3.666, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, J), complex(J, K) )
%   | | | then return 0.04388652227875505;  // std dev = 2.600, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.2099180591760836;  // std dev = 2.980, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.46322605444700615;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16409459612642224;  // std dev = 1.355, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.08518475138839678;  // std dev = 5.43e-09, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return 0.3645786804182043;  // std dev = 0.189, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.08030683445576857;  // std dev = 1.647, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( enzyme(H, D), interaction(H, I) )
%   | | | then return -0.2133401274711527;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.23907563085656813;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L), phenotype(A, L) )
%   | | | then return -0.007438677622288925;  // std dev = 2.056, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.1761227873032018;  // std dev = 2.498, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.048213752007101984;  // std dev = 0.606, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.21512112592651536;  // std dev = 3.455, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   else return -0.07877675473109154;  // std dev = 6.25e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2551609311510332;  // std dev = 0.302, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.05528936371223695;  // std dev = 3.189, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( enzyme(E, G), phenotype(A, H) )
%   | | | then return 0.04459307697333705;  // std dev = 2.743, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.18994470405758695;  // std dev = 2.904, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | else if ( interaction(A, I) )
%   | | then return 0.2506489280988491;  // std dev = 0.509, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J) )
%   | | | then return -0.2482839001653171;  // std dev = 1.292, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.16674695422465294;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07324622576333718;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3647719988349963;  // std dev = 0.891, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.11357689097471545;  // std dev = 0.960, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, D) )
%   | | | then return -0.2447098977654557;  // std dev = 1.429, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.07705835824826755;  // std dev = 4.078, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.30974574321183795;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.4627670867521621;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.11538597761154011;  // std dev = 0.393, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03276810462626594;  // std dev = 1.550, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return -0.06842697784420264;  // std dev = 5.27e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.016102619419869176;  // std dev = 0.859, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.21962347666098106;  // std dev = 2.230, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2290495598410682;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06069718928594638;  // std dev = 1.068, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, H) )
%   | | | then return 0.0887510733450865;  // std dev = 1.496, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return -0.020977391698820947;  // std dev = 3.422, 65.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.0060397767178602445;  // std dev = 1.354, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.266876000130849;  // std dev = 0.770, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
Inference time using transfer learning 16.9135582447052
Refined model CLL: -0.243696


******************************************
Best model found
******************************************
Results 

CLL : -0.247136 

AUC ROC : 0.956615 

AUC PR : 0.279434 

Precision : 0.044146 

Recall : 0.943396 

F1 : 0.084345 

Total Learning Time : 11.532288789749146 

Total Inference Time : 6.767401456832886 

Total revision time: 26.75737714767456
Best scored revision CLL: -0.243696


Results 

CLL : -0.247136 

AUC ROC : 0.956615 

AUC PR : 0.279434 

Precision : 0.044146 

Recall : 0.943396 

F1 : 0.084345 

Total Learning Time : 26.767181396484375 

Total Inference Time : 6.767401456832886 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8405041694641113
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.440427416112168;  // std dev = 0.493, 158.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6.97e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.32599325292043263;  // std dev = 5.734, 132.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | else return 0.42426165118883097;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32983153048743696;  // std dev = 0.491, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6412404055947394;  // std dev = 1.394, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.06369537567454325;  // std dev = 3.925, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1554752628763781;  // std dev = 4.593, 123.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=70 */
%   | else return 0.2559129481409704;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.84e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.16271711432876282;  // std dev = 4.922, 135.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=83 */
%   | | else return 0.052593475919078314;  // std dev = 2.181, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07043612466650485;  // std dev = 0.439, 169.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.1152418286579001;  // std dev = 4.829, 133.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=83 */
%   | else return 0.04117430894315619;  // std dev = 2.149, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05203006722255599;  // std dev = 5.493, 162.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 6.941922948831268E-4;  // std dev = 5.765, 176.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
Inference time using transfer learning 25.0350558757782
Parameter learned model CLL:-0.262963 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 66, 92], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.734, 62, 70], 'true,false': [2.859, 13, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 90, 0], 'false,false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 62, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.394, 2, 70], 'true,false': [3.925, 57, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 108, 0], 'false,false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.593, 53, 70], 'true,false': [2.986, 15, 22], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.922, 52, 83], 'true,true,false': [2.181, 12, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 84, 0], 'false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.439, 77, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 90, 0], 'false,false,false': [0.0, 22, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.829, 50, 83], 'true,false': [2.149, 11, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 97, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.493, 70, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 120, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.765, 84, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 98, 0]}]
{'': [0.24323025156225206, 4.674623261579606e-17], 'false': [nan, 4.674623261579606e-17]}
{'': [0.24740937287102477, -8.074349270001138e-18], 'true': [0.24908172635445539, 0.23346938775510204], 'false': [nan, -8.074349270001138e-18], 'false,false': [nan, -8.074349270001138e-18], 'false,false,false': [-1.7270135938613546e-17, -5.551115123125783e-18]}
{'': [0.2412167986106659, 7.150588972162025e-17], 'false': [nan, 7.150588972162025e-17], 'false,false': [nan, 7.150588972162025e-17]}
{'': [0.2388491998438267, -3.7289933651531976e-17], 'true': [0.027006172839507483, 0.19497244617555906], 'false': [nan, -3.7289933651531976e-17], 'false,false': [nan, -3.7289933651531976e-17], 'false,false,false': [-2.05596856412066e-18, -2.413528314402514e-18]}
{'': [0.18940221091764073, 4.5876984488642834e-17], 'true': [0.1715325365604168, 0.24105186267348422], 'false': [nan, 4.5876984488642834e-17]}
{'': [0.18721221120627973, 3.3306690738754695e-17], 'true': [0.18721221120627973, nan], 'true,true': [0.17947603460276979, 0.22645006916009291], 'false': [nan, 3.3306690738754695e-17], 'false,false': [2.9077269692563625e-17, -3.2025664171879517e-18]}
{'': [0.1924054147715681, 3.6677010634938206e-17], 'true': [0.1924054147715681, nan], 'false': [nan, 3.6677010634938206e-17], 'false,false': [2.960594732333751e-17, 0.0]}
{'': [0.1832387495387647, -5.722799096005961e-18], 'true': [0.17536365622727082, 0.23083924643666803], 'false': [nan, -5.722799096005961e-18], 'false,false': [nan, -5.722799096005961e-18]}
{'': [0.1862489698125683, 2.6830389761774617e-17], 'true': [0.1862489698125683, nan], 'false': [nan, 2.6830389761774617e-17], 'false,false': [nan, 2.6830389761774617e-17]}
{'': [0.18882256158309516, -1.4727448285843914e-17], 'true': [0.18882256158309516, nan], 'false': [nan, -1.4727448285843914e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.9645678997039795
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.2129876447769317;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.4103877410696611;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7214670208726417;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then if ( interaction(E, A), location(E, G) )
%   | | | then return -0.04064131421102466;  // std dev = 0.896, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.3185079458796175;  // std dev = 2.417, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.2914998920227591;  // std dev = 1.848, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.4962037040662638;  // std dev = 3.903, 76.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(D, F), complex(F, E) )
%   | | | then return 0.5548740916917287;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5636117705066801;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35918835051391296;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6483692073976608;  // std dev = 0.173, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.17666492143217755;  // std dev = 0.138, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.03142435230935691;  // std dev = 2.008, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.22743182821977453;  // std dev = 4.459, 80.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1123163781936062;  // std dev = 8.01e-09, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(D, E), enzyme(A, F) )
%   | | | then return 0.45874895440971447;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4164408978937524;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6354854315629204;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.2667397615337914;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.040449398508371114;  // std dev = 1.711, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.17066178845215163;  // std dev = 3.213, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | | else return 0.2645099361129683;  // std dev = 3.517, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   else if ( interaction(M, A) )
%   | then return -0.1015963294878362;  // std dev = 5.89e-09, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(D, E), enzyme(A, F) )
%   | | | then return 0.3492461285700165;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3199850627854162;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.48612241070167317;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( enzyme(G, H), enzyme(A, H) )
%   | | | then return -0.16187006444314359;  // std dev = 0.093, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.16016277078604133;  // std dev = 4.328, 99.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=56 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.4351469192816384;  // std dev = 1.256, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.18896852144757445;  // std dev = 2.005, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926082;  // std dev = 6.84e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(D, E), interaction(F, A) )
%   | | | then return 0.029222994946390572;  // std dev = 0.661, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.33019523963938274;  // std dev = 0.569, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.27814591342842976;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12398643452251919;  // std dev = 1.976, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.25542697856852115;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4119106837233093;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.19573526428555144;  // std dev = 2.823, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.10377813873838988;  // std dev = 3.480, 63.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(E, F), complex(D, G) )
%   | | then if ( complex(A, G), phenotype(E, H) )
%   | | | then return -0.03985395028327827;  // std dev = 1.086, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.13635990289184086;  // std dev = 2.813, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2816554262009124;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.044285769756783215;  // std dev = 2.735, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.09701449766276972;  // std dev = 1.046, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.02993086407791535;  // std dev = 1.823, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.04561717027432173;  // std dev = 1.126, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.28188739011800396;  // std dev = 1.732, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   else return -0.07877675473109154;  // std dev = 6.38e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( phenotype(A, E), location(A, F) )
%   | | | then return 0.22593746476472407;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.187816796699148;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, G), complex(A, H) )
%   | | | then return 0.31121082091710905;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25285552304620734;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.41710431760060146;  // std dev = 0.893, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.3196659781612595;  // std dev = 0.647, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.2112145125720034;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.014902514214715413;  // std dev = 4.194, 96.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=43 */
%   else return -0.07324622576333711;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, E), complex(D, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.09025540694389611;  // std dev = 1.349, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return -0.11432424921031878;  // std dev = 0.558, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.31688023119437947;  // std dev = 0.716, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.09260941410768597;  // std dev = 2.078, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K), interaction(L, I) )
%   | | | then return 0.3472107148349942;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.043210588845965334;  // std dev = 2.068, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.11258506169663399;  // std dev = 0.923, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.05398955912145954;  // std dev = 2.549, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16364163619371974;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18976144297221945;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.0606461189166139;  // std dev = 1.430, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.07970945231692603;  // std dev = 2.829, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2578635496780694;  // std dev = 0.430, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04007957258715429;  // std dev = 2.554, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.03758181651028035;  // std dev = 1.230, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2533077711896187;  // std dev = 1.735, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 12.616065740585327
Refined model CLL: -0.224865


******************************************
Best model found
******************************************
Results 

CLL : -0.233557 

AUC ROC : 0.960429 

AUC PR : 0.214041 

Precision : 0.061703 

Recall : 0.855596 

F1 : 0.115104 

Total Learning Time : 5.9645678997039795 

Total Inference Time : 2.7944767475128174 

Total revision time: 13.474951028823853
Best scored revision CLL: -0.224865


Results 

CLL : -0.233557 

AUC ROC : 0.960429 

AUC PR : 0.214041 

Precision : 0.061703 

Recall : 0.855596 

F1 : 0.115104 

Total Learning Time : 13.484755277633667 

Total Inference Time : 2.7944767475128174 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6230716705322266
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4637827379164115;  // std dev = 0.489, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 8.54e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.4257957547174799;  // std dev = 5.098, 112.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=71 */
%   | else return 0.6742201244653799;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.1254446385283914;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2915251175447612;  // std dev = 0.494, 146.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.54e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.584178034391719;  // std dev = 2.161, 76.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=71 */
%   | else return -0.1821493742582932;  // std dev = 3.324, 81.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1485241868637436;  // std dev = 4.600, 126.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=71 */
%   | else return 0.19029911596349106;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 6.18e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.16836292213705564;  // std dev = 4.607, 123.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=78 */
%   | | else return 0.050009629803149845;  // std dev = 2.006, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 4.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12938553856253523;  // std dev = 0.420, 138.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109168;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.036356026145068186;  // std dev = 5.027, 138.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=78 */
%   | else return -0.022661866240841055;  // std dev = 2.078, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.031980010677005746;  // std dev = 5.335, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.026214681053856326;  // std dev = 5.308, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
Inference time using transfer learning 26.637684106826782
Parameter learned model CLL:-0.263624 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.489, 56, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 82, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.098, 41, 71], 'true,false': [1.328, 2, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 85, 0], 'false,false,false,false': [7.45e-09, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 60, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.54e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.161, 5, 71], 'true,false': [3.324, 66, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.37e-08, 72, 0], 'false,false,false,false': [0.0, 17, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.6, 55, 71], 'true,false': [2.582, 12, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.607, 45, 78], 'true,true,false': [2.006, 11, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 83, 0], 'false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.42, 52, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.8e-08, 72, 0], 'false,false,false': [5.27e-09, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.027, 60, 78], 'true,false': [2.078, 12, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.335, 70, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.308, 70, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 100, 0]}]
{'': [0.238841499702442, 7.311224796312007e-17], 'false': [nan, 7.311224796312007e-17]}
{'': [0.22222222222222138, -1.3322676295501878e-17], 'true': [0.23206313775510257, 0.10380622837370253], 'false': [nan, -1.3322676295501878e-17], 'false,false': [nan, -1.3322676295501878e-17], 'false,false,false': [-2.0898315757650005e-17, 3.7007434154171884e-18]}
{'': [0.2440476986280236, 7.098147206619854e-17], 'false': [nan, 7.098147206619854e-17], 'false,false': [nan, 7.098147206619854e-17]}
{'': [0.2467807563269871, 3.118604001756058e-17], 'true': [0.061461218836564364, 0.1363832047877508], 'false': [nan, 3.118604001756058e-17], 'false,false': [nan, 3.118604001756058e-17], 'false,false,false': [4.0091387000352874e-17, -4.89804275569922e-18]}
{'': [0.18213792790082461, 3.700743415417188e-17], 'true': [0.16794946425752771, 0.24691358024691368], 'false': [nan, 3.700743415417188e-17]}
{'': [0.17941789126833044, 3.172065784643304e-17], 'true': [0.17941789126833044, nan], 'true,true': [0.17254878664654336, 0.21175304679200221], 'false': [nan, 3.172065784643304e-17], 'false,false': [2.942759824307644e-17, -1.8503717077085942e-18]}
{'': [0.17617135077116347, 3.172065784643304e-17], 'true': [0.17617135077116347, nan], 'false': [nan, 3.172065784643304e-17], 'false,false': [2.0045693500176437e-17, 1.0675221390626506e-18]}
{'': [0.18762928595895603, -9.912705577010326e-19], 'true': [0.18309929263997068, 0.2158440284435547], 'false': [nan, -9.912705577010326e-19], 'false,false': [nan, -9.912705577010326e-19]}
{'': [0.18246117714376484, 2.5544954548897407e-17], 'true': [0.18246117714376484, nan], 'false': [nan, 2.5544954548897407e-17], 'false,false': [nan, 2.5544954548897407e-17]}
{'': [0.1805761456070072, -1.4988010832439614e-17], 'true': [0.1805761456070072, nan], 'false': [nan, -1.4988010832439614e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.791964530944824
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), interaction(D, F) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5456489350995123;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.28037115732173457;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4771965541471313;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.738944250750228;  // std dev = 0.138, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), location(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.18071456441701889;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.2933790570382749;  // std dev = 4.074, 67.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=34 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2845797644497003;  // std dev = 2.686, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.44527587563414217;  // std dev = 2.761, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   else if ( interaction(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then if ( enzyme(E, G), interaction(E, D) )
%   | | | then return 0.5956447983205962;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5505533772738596;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6191045364228822;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return 0.03987055802996934;  // std dev = 2.007, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.3410389885103788;  // std dev = 2.079, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.595533393716131;  // std dev = 0.929, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3365460310331385;  // std dev = 4.287, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360638;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.1123163781936062;  // std dev = 8.01e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.4837570736617683;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.4093830462814652;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.43446435317816345;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6761017741605825;  // std dev = 0.200, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.3286615800806833;  // std dev = 0.183, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.18348993975220657;  // std dev = 3.992, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.049060499929863756;  // std dev = 2.313, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else if ( interaction(J, A) )
%   | then return -0.10159632948783615;  // std dev = 6.59e-09, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.5734694194744389;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3930373236326246;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.35120043733965584;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1503827963885599;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.17280569612275026;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2349486349963533;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13119503244635713;  // std dev = 4.205, 81.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   | | | else return 0.22593664896983237;  // std dev = 2.923, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   else return -0.09269127618926094;  // std dev = 5.10e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.1410717457572842;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.38510400208044887;  // std dev = 0.703, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.01483243571223851;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16401842570342914;  // std dev = 0.580, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.25584261980052236;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.41466022462404795;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.047800841094454836;  // std dev = 2.046, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.12994435212931554;  // std dev = 4.264, 85.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=47 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.16387850570573773;  // std dev = 0.710, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.12110728537039632;  // std dev = 0.616, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.03545714586789119;  // std dev = 1.696, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.13965434469048024;  // std dev = 1.413, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.24282903046582774;  // std dev = 0.618, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3913337115976469;  // std dev = 0.223, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.3854040296369973;  // std dev = 0.928, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1391693468960719;  // std dev = 3.792, 64.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   else return -0.0787767547310916;  // std dev = 5.74e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.27672055928850986;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -4.035234161231749E-4;  // std dev = 1.175, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.12854295998218096;  // std dev = 0.334, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4093491164414156;  // std dev = 0.862, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, I), enzyme(H, J) )
%   | | | then return 0.2513584406954687;  // std dev = 1.113, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.004664827941317244;  // std dev = 3.508, 62.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.23511675379458016;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05255141205272007;  // std dev = 2.990, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   else return -0.07324622576333711;  // std dev = 2.46e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(D, H), enzyme(H, E) )
%   | | | then return 0.07449425258330958;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.167869701509057;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.12919818377560452;  // std dev = 1.483, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.30096879312295266;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.36994061365766767;  // std dev = 0.997, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.4877687316706588;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.049769154180908985;  // std dev = 2.131, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.06096606993200594;  // std dev = 3.867, 72.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=33 */
%   else return -0.06842697784420265;  // std dev = 5.19e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, F) )
%   | | then if ( interaction(F, F), phenotype(E, G) )
%   | | | then return 0.18958057759320743;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15679093186623336;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.240838843821773;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( phenotype(H, J), interaction(I, K) )
%   | | | then return -0.12242489260448225;  // std dev = 2.695, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.14046370301102845;  // std dev = 1.293, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return -0.050610422092288256;  // std dev = 2.029, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.08316802227799815;  // std dev = 3.432, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   else if ( interaction(A, A) )
%   | then return -0.06419184008202622;  // std dev = 9.31e-10, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202626;  // std dev = 2.08e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 10.746229648590088
Refined model CLL: -0.26225


******************************************
Best model found
******************************************
Results 

CLL : -0.255527 

AUC ROC : 0.94473 

AUC PR : 0.133188 

Precision : 0.048485 

Recall : 0.791519 

F1 : 0.091373 

Total Learning Time : 5.791964530944824 

Total Inference Time : 2.6927902698516846 

Total revision time: 12.921526908874512
Best scored revision CLL: -0.26225


Results 

CLL : -0.255527 

AUC ROC : 0.94473 

AUC PR : 0.133188 

Precision : 0.048485 

Recall : 0.791519 

F1 : 0.091373 

Total Learning Time : 12.931331157684326 

Total Inference Time : 2.6927902698516846 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.144117832183838
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4499856697933875;  // std dev = 0.491, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 2.63e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3510939963190394;  // std dev = 4.415, 79.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
%   | else return 0.27727803841831367;  // std dev = 4.714, 89.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839108;  // std dev = 7.45e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2986734670081181;  // std dev = 0.497, 155.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.68e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5392235963339417;  // std dev = 3.367, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | else return -0.24098723710487951;  // std dev = 2.126, 59.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21598399353187128;  // std dev = 3.707, 72.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=44 */
%   | else return 0.19029674293084808;  // std dev = 3.719, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926103;  // std dev = 3.73e-09, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21429275554926874;  // std dev = 4.026, 96.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=63 */
%   | | else return 0.044586023470911215;  // std dev = 3.141, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 3.65e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.08518475138839682;  // std dev = 4.47e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12694706676851014;  // std dev = 0.418, 146.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109169;  // std dev = 3.41e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.07877675473109177;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.047409701332416794;  // std dev = 4.614, 111.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | else return 0.038505471324355486;  // std dev = 2.963, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09375879248714275;  // std dev = 4.966, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.037071781525220185;  // std dev = 5.256, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning 26.68748378753662
Parameter learned model CLL:-0.268139 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 60, 87], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.415, 35, 44], 'true,false': [4.714, 46, 43], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-08, 96, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 68, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.68e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.367, 13, 82], 'true,false': [2.126, 54, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.71e-08, 64, 0], 'false,false,false,false': [3.94e-08, 57, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.707, 28, 44], 'true,false': [3.719, 32, 43], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 94, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.026, 33, 63], 'true,true,false': [3.141, 28, 24], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.65e-08, 65, 0], 'false,false,false': [4.47e-08, 75, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.418, 59, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.41e-08, 69, 0], 'false,false,false': [1.49e-08, 55, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.614, 48, 63], 'true,false': [2.963, 25, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.966, 57, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.256, 66, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 106, 0]}]
{'': [0.24156601416076845, 7.340317518182853e-18], 'false': [nan, 7.340317518182853e-18]}
{'': [0.2496811224489774, 5.764619550938313e-17], 'true': [0.2467553276718476, 0.24971594495644533], 'false': [nan, 5.764619550938313e-17], 'false,false': [nan, 5.764619550938313e-17], 'false,false,false': [5.782411586589357e-17, 0.0]}
{'': [0.24687378858241266, 5.890979314337566e-17], 'false': [nan, 5.890979314337566e-17], 'false,false': [nan, 5.890979314337566e-17]}
{'': [0.2468097345197932, -2.3856031934094273e-17], 'true': [0.11930220603969129, 0.07660385812700643], 'false': [nan, -2.3856031934094273e-17], 'false,false': [nan, -2.3856031934094273e-17], 'false,false,false': [3.469446951953614e-17, 2.7268635692547703e-17]}
{'': [0.18771442636018562, 1.299197156476247e-17], 'true': [0.19086499218697345, 0.18436669875335582], 'false': [nan, 1.299197156476247e-17]}
{'': [0.18278190436235234, 3.3306690738754695e-17], 'true': [0.18278190436235234, nan], 'true,true': [0.1688786789818755, 0.1897680731047558], 'false': [nan, 3.3306690738754695e-17], 'false,false': [2.049642507000289e-17, 2.6645352591003756e-17]}
{'': [0.17452998710612241, 4.118569284899774e-17], 'true': [0.17452998710612241, nan], 'false': [nan, 4.118569284899774e-17], 'false,false': [1.68946982008176e-17, 4.037174635000569e-18]}
{'': [0.18793648255305162, -7.463684199160716e-18], 'true': [0.19180588035930018, 0.17911610782714102], 'false': [nan, -7.463684199160716e-18], 'false,false': [nan, -7.463684199160716e-18]}
{'': [0.17125839857882064, 2.6122894697062506e-17], 'true': [0.17125839857882064, nan], 'false': [nan, 2.6122894697062506e-17], 'false,false': [nan, 2.6122894697062506e-17]}
{'': [0.18055865495810186, -1.6234393284613138e-17], 'true': [0.18055865495810186, nan], 'false': [nan, -1.6234393284613138e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 10.887102365493774
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, D), phenotype(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( phenotype(A, G), interaction(D, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5089425858931625;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B), phenotype(A, F) )
%   | | then return 0.7507552874353662;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6321034044233108;  // std dev = 1.286, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3223843032819291;  // std dev = 2.727, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.28432611370905536;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5428384442431954;  // std dev = 1.737, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.7811727518849692;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28566557885908267;  // std dev = 4.146, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   else if ( interaction(M, A) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then return 0.5476290908462303;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.6839943778891128;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6319602237328799;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47185815292075367;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.02377768448648085;  // std dev = 2.606, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.156685661266247;  // std dev = 2.856, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.33628340597561757;  // std dev = 4.190, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   else if ( phenotype(A, K) )
%   | then return -0.11231637819360643;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.11231637819360633;  // std dev = 4.56e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( enzyme(E, F), location(A, G) )
%   | | | then return 0.4049274778295117;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4833170155913861;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6021489955575953;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5183644754334402;  // std dev = 1.278, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.18033699267346462;  // std dev = 4.996, 108.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.14869098976822134;  // std dev = 1.495, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.01879796829682223;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( interaction(A, L) )
%   | then return -0.10159632948783623;  // std dev = 5.10e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.10159632948783628;  // std dev = 3.95e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), location(D, G) )
%   | | then if ( complex(A, H), location(A, G) )
%   | | | then return 0.025242635094658107;  // std dev = 3.355, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.18673331456289477;  // std dev = 4.098, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5319010241007955;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6682506690259322;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then return 0.3316556455217604;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6305356292098442;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, L) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.05283146776154788;  // std dev = 0.668, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.29484000590509163;  // std dev = 1.923, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.37694773008898125;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05724305393425523;  // std dev = 5.016, 110.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.19697473368254503;  // std dev = 1.036, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.43201341605595617;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, I) )
%   | then return -0.08518475138839679;  // std dev = 2.46e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.08518475138839683;  // std dev = 3.09e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.0851847513883968;  // std dev = 3.84e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.3872847305066783;  // std dev = 0.429, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.03950293389692061;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.4029087760652784;  // std dev = 0.233, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.1449408540089668;  // std dev = 4.576, 98.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=59 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then return 0.1827763363058926;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.45552946154972274;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, I) )
%   | then return -0.07877675473109175;  // std dev = 2.79e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.35255194134648105;  // std dev = 0.229, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19538847925302333;  // std dev = 0.967, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3222171284539183;  // std dev = 0.296, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06317456210384978;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( location(A, H), phenotype(G, I) )
%   | | | then return 0.27344300534217447;  // std dev = 0.877, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.5204612547123171;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.19476229892463334;  // std dev = 1.941, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.008619133246142266;  // std dev = 3.758, 56.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   else return -0.07324622576333704;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), phenotype(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.0050484055980785794;  // std dev = 1.635, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return -0.2399943647338601;  // std dev = 1.992, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( complex(E, H), complex(A, H) )
%   | | | then return -0.02830142544970013;  // std dev = 1.205, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11981935888637753;  // std dev = 4.178, 85.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=55 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.2360433888442453;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.18433502921821568;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.34995592236231715;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, M) )
%   | then return -0.06842697784420268;  // std dev = 2.46e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06842697784420268;  // std dev = 2.46e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.16272785231239223;  // std dev = 1.409, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.0013933597257640557;  // std dev = 3.043, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | else if ( interaction(H, D), interaction(H, H) )
%   | | | then return -0.18850384990557675;  // std dev = 1.320, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.013969042526089352;  // std dev = 1.855, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.28263699628051286;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.06198567833856972;  // std dev = 2.082, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.1494844891068235;  // std dev = 2.449, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06419184008202626;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
Inference time using transfer learning 13.642157316207886
Refined model CLL: -0.297789


******************************************
Best model found
******************************************
Results 

CLL : -0.259953 

AUC ROC : 0.970178 

AUC PR : 0.148458 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 10.887102365493774 

Total Inference Time : 4.320448875427246 

Total revision time: 25.11281657218933
Best scored revision CLL: -0.268139


Results 

CLL : -0.259953 

AUC ROC : 0.970178 

AUC PR : 0.148458 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 25.12232756614685 

Total Inference Time : 4.320448875427246 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.6147661209106445
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42957750652808085;  // std dev = 0.495, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004881;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.40209956795983254;  // std dev = 4.534, 86.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   | else return 0.31744840516913486;  // std dev = 4.996, 100.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.88e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3106591180935509;  // std dev = 0.494, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5849590647815389;  // std dev = 2.884, 108.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=99 */
%   | else return -0.24465592168236994;  // std dev = 2.116, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.14639823552230435;  // std dev = 4.201, 96.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=52 */
%   | else return 0.22363544167495567;  // std dev = 3.701, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926085;  // std dev = 6.72e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16251482370287867;  // std dev = 4.462, 114.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=69 */
%   | | else return 0.07088958664948705;  // std dev = 3.472, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.65e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08575263827962598;  // std dev = 0.423, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109175;  // std dev = 2.11e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.07877675473109165;  // std dev = 4.41e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.06533765761649833;  // std dev = 4.753, 121.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=69 */
%   | else return 0.024681852104632987;  // std dev = 3.576, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.073246225763337;  // std dev = 3.61e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03563013278598625;  // std dev = 5.951, 192.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07603081929323346;  // std dev = 5.583, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
Inference time using transfer learning 28.757108688354492
Parameter learned model CLL:-0.258349 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 78, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 153, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.534, 34, 52], 'true,false': [4.996, 48, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.88e-08, 132, 0], 'false,false,false,false': [0.0, 2, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 76, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [2.884, 9, 99], 'true,false': [2.116, 52, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.47e-08, 61, 0], 'false,false,false,false': [5.05e-08, 68, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.201, 44, 52], 'true,false': [3.701, 32, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.462, 45, 69], 'true,true,false': [3.472, 35, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.65e-08, 65, 0], 'false,false,false': [3.73e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.423, 83, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 59, 0], 'false,false,false': [4.41e-08, 80, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.753, 52, 69], 'true,false': [3.576, 34, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 134, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.951, 88, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 135, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.583, 69, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 129, 0]}]
{'': [0.24489795918367654, -1.248093857748542e-16], 'false': [nan, -1.248093857748542e-16]}
{'': [0.24650248583651443, 4.3083281552618016e-17], 'true': [0.23904813412655423, 0.24959999999999904], 'false': [nan, 4.3083281552618016e-17], 'false,false': [nan, 4.3083281552618016e-17], 'false,false,false': [4.710037074167331e-17, 0.0]}
{'': [0.24423177464134585, 7.162729191130042e-17], 'false': [nan, 7.162729191130042e-17], 'false,false': [nan, 7.162729191130042e-17]}
{'': [0.23318085040342304, -3.4425520143415706e-17], 'true': [0.07702715518372248, 0.07855288381145954], 'false': [nan, -3.4425520143415706e-17], 'false,false': [nan, -3.4425520143415706e-17], 'false,false,false': [3.276067941516855e-17, 3.7551661127027356e-17]}
{'': [0.17562429939155905, 4.554761126667309e-17], 'true': [0.1838537367293427, 0.16303758227410353], 'false': [nan, 4.554761126667309e-17]}
{'': [0.17569402750346175, 3.496765431890257e-17], 'true': [0.17569402750346175, nan], 'true,true': [0.1746455635832933, 0.1722001618474073], 'false': [nan, 3.496765431890257e-17], 'false,false': [2.049642507000289e-17, 2.238352872228138e-17]}
{'': [0.17893600003490848, 4.2332244823836906e-17], 'true': [0.17893600003490848, nan], 'false': [nan, 4.2332244823836906e-17], 'false,false': [7.526935760170553e-18, 2.42861286636753e-17]}
{'': [0.18659484139572585, 1.2427869678639812e-17], 'true': [0.18669260221751507, 0.18537077292466525], 'false': [nan, 1.2427869678639812e-17], 'false,false': [nan, 1.2427869678639812e-17]}
{'': [0.18444410192048774, 2.878355989768924e-17], 'true': [0.18444410192048774, nan], 'false': [nan, 2.878355989768924e-17], 'false,false': [nan, 2.878355989768924e-17]}
{'': [0.18016466355696983, -1.5491484064537068e-17], 'true': [0.18016466355696983, nan], 'false': [nan, -1.5491484064537068e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.380122900009155
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.3414822684328467;  // std dev = 5.474, 120.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=58 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( interaction(I, G), location(I, H) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.42957750652808363;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05280674554428779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7948020760844645;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I), interaction(J, H) )
%   | | | then return 0.48730128935956935;  // std dev = 1.834, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.17616909134018993;  // std dev = 3.147, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.6901678800753648;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4160120070110008;  // std dev = 4.250, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   else if ( interaction(M, A) )
%   | then return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.658142987053;  // std dev = 0.425, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.23619188021244142;  // std dev = 0.346, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.16769123926814553;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3421407390974177;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return 0.3817562149226706;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6691572146214334;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.3393199240910695;  // std dev = 4.071, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   | | | else return 0.2223483223867128;  // std dev = 2.096, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return -0.11231637819360622;  // std dev = 8.01e-09, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E), enzyme(D, F) )
%   | | | then return 0.049611277349105684;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.49670505871395254;  // std dev = 0.929, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2026809650830069;  // std dev = 0.274, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.2148672100896868;  // std dev = 5.434, 144.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=82 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.04248957216687012;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18345085476669895;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.08715795942880906;  // std dev = 0.566, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, J) )
%   | then return -0.1015963294878362;  // std dev = 5.59e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.10159632948783626;  // std dev = 4.37e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then return 0.03655230990298587;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A), phenotype(A, G) )
%   | | | then return 0.28242379418760943;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46107844446221674;  // std dev = 0.240, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B), interaction(I, J) )
%   | | | then return 0.4173928574708185;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10785515176782862;  // std dev = 3.273, 65.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.2798686856728191;  // std dev = 3.487, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | | | else return 0.08951555965303826;  // std dev = 1.976, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926103;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926075;  // std dev = 6.84e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.3587723328924093;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12736774718717636;  // std dev = 0.529, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.003316422311500193;  // std dev = 2.872, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | | | else return 0.146968671528605;  // std dev = 2.175, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, H) )
%   | | | then return 0.13860924616981624;  // std dev = 1.607, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.31306154028537375;  // std dev = 2.136, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.3063137476001886;  // std dev = 0.862, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.07834249012191936;  // std dev = 2.694, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3422367734393909;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07784793643299294;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.19718255144512256;  // std dev = 1.476, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.018239503538695228;  // std dev = 0.814, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L), phenotype(J, M) )
%   | | | then return 0.08921095589204774;  // std dev = 2.476, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.28427000039338046;  // std dev = 1.613, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else if ( location(A, N) )
%   | | | then return 0.049820004782573646;  // std dev = 4.136, 91.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=51 */
%   | | | else return 0.2341388161777697;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109154;  // std dev = 6.38e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, G) )
%   | | | then return 0.34752396993359386;  // std dev = 0.517, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.02016439479859307;  // std dev = 4.651, 125.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=62 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return 0.47361343923862287;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17012248433136665;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return 0.10796551411846915;  // std dev = 1.116, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.47730522301381373;  // std dev = 0.146, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1819647531401403;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.07324622576333711;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333716;  // std dev = 2.28e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), complex(A, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.24527857026278063;  // std dev = 0.263, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.006305766015813559;  // std dev = 2.058, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.28554840596790865;  // std dev = 1.453, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.13433024954727732;  // std dev = 3.463, 59.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return -0.053647151213986846;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.6359941887460471;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.1365042981138896;  // std dev = 1.368, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.12831498020920803;  // std dev = 1.555, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.06842697784420265;  // std dev = 5.19e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(D, A) )
%   | | then return -0.038901900560973736;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.15721190299773713;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23124933608248477;  // std dev = 0.173, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), location(A, J) )
%   | | | then return -0.03952924398808739;  // std dev = 1.855, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return -0.21076272249775768;  // std dev = 1.531, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.13859633876786775;  // std dev = 1.165, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.011614741518345224;  // std dev = 4.905, 123.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=64 */
%   else if ( interaction(A, L) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06419184008202626;  // std dev = 1.61e-09, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
Inference time using transfer learning 23.840921640396118
Refined model CLL: -0.270199


******************************************
Best model found
******************************************
Results 

CLL : -0.248657 

AUC ROC : 0.971849 

AUC PR : 0.181694 

Precision : 0.182488 

Recall : 0.841509 

F1 : 0.299933 

Total Learning Time : 11.380122900009155 

Total Inference Time : 7.442401170730591 

Total revision time: 27.180211067199707
Best scored revision CLL: -0.258349


Results 

CLL : -0.248657 

AUC ROC : 0.971849 

AUC PR : 0.181694 

Precision : 0.182488 

Recall : 0.841509 

F1 : 0.299933 

Total Learning Time : 27.189722061157227 

Total Inference Time : 7.442401170730591 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7881736755371094
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46742045827831785;  // std dev = 0.488, 151.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 2.63e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.342448103483836;  // std dev = 5.605, 127.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=70 */
%   | else return 0.37021436954268255;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30627244405537785;  // std dev = 0.494, 159.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.43e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6505149329377559;  // std dev = 0.993, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | else return -0.10863014877223813;  // std dev = 4.098, 96.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1992391938938447;  // std dev = 4.227, 112.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=70 */
%   | else return 0.1823782420726159;  // std dev = 3.317, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892608;  // std dev = 6.72e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.12656325124856438;  // std dev = 5.062, 145.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=83 */
%   | | else return 0.285358070590983;  // std dev = 1.788, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09862351456338733;  // std dev = 0.430, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109164;  // std dev = 4.83e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09053666780789978;  // std dev = 4.952, 139.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=83 */
%   | else return -0.02071492062322883;  // std dev = 2.263, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 3.36e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.038868093939104655;  // std dev = 5.602, 166.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.049648359120689975;  // std dev = 5.437, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 9.31e-10, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 25.912805795669556
Parameter learned model CLL:-0.264748 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.488, 59, 92], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.605, 57, 70], 'true,false': [3.044, 16, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 89, 0], 'false,false,false,false': [0.0, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 67, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.43e-09, 132, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.993, 1, 70], 'true,false': [4.098, 74, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.77e-08, 76, 0], 'false,false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.227, 42, 70], 'true,false': [3.317, 22, 22], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.062, 62, 83], 'true,true,false': [1.788, 5, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-08, 89, 0], 'false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.43, 69, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.83e-08, 85, 0], 'false,false,false': [0.0, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.952, 56, 83], 'true,false': [2.263, 12, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.602, 74, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.437, 68, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-10, 115, 0]}]
{'': [0.23805973422218565, 7.340317518182853e-18], 'false': [nan, 7.340317518182853e-18]}
{'': [0.24668503213957785, 5.501990210531749e-17], 'true': [0.24738049476098808, 0.24376731301939086], 'false': [nan, 5.501990210531749e-17], 'false,false': [nan, 5.501990210531749e-17], 'false,false,false': [5.98771968337163e-17, -4.625929269271485e-18]}
{'': [0.24398518306909214, 7.233271221042686e-17], 'false': [nan, 7.233271221042686e-17], 'false,false': [nan, 7.233271221042686e-17]}
{'': [0.24729565714895368, -6.0557619525008536e-18], 'true': [0.013886133703632002, 0.17490714447651315], 'false': [nan, -6.0557619525008536e-18], 'false,false': [nan, -6.0557619525008536e-18], 'false,false,false': [4.382459307730881e-17, 0.0]}
{'': [0.18509501202850787, 4.370956789862821e-17], 'true': [0.1595164390594272, 0.24999999999999964], 'false': [nan, 4.370956789862821e-17]}
{'': [0.18330080522018408, 3.541228613028517e-17], 'true': [0.18330080522018408, nan], 'true,true': [0.17672193278966172, 0.2284435908204574], 'false': [nan, 3.541228613028517e-17], 'false,false': [3.118604001756058e-17, -2.05596856412066e-18]}
{'': [0.18484327934740663, 3.564936317603714e-17], 'true': [0.18484327934740663, nan], 'false': [nan, 3.564936317603714e-17], 'false,false': [2.7429039431915633e-17, 0.0]}
{'': [0.18667275267967876, 1.2222638803212733e-17], 'true': [0.1764177787718026, 0.24379846759516322], 'false': [nan, 1.2222638803212733e-17], 'false,false': [nan, 1.2222638803212733e-17]}
{'': [0.1890468684944103, 2.5403408190575616e-17], 'true': [0.1890468684944103, nan], 'false': [nan, 2.5403408190575616e-17], 'false,false': [nan, 2.5403408190575616e-17]}
{'': [0.18474341812673908, 9.654113257610057e-19], 'true': [0.18474341812673908, nan], 'false': [nan, 9.654113257610057e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.149274826049805
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, D), phenotype(A, I) )
%   | | | then return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.3798880655342946;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.46853854548912327;  // std dev = 4.279, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return -0.14185106490048793;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7874333994326597;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(E, F), complex(A, F) )
%   | | | then return -0.006526286130939485;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.31624987477133104;  // std dev = 2.392, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.22920824035660753;  // std dev = 1.990, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.4748904336588111;  // std dev = 4.293, 84.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=57 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283911;  // std dev = 7.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.6510740077619779;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6368184707044298;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5907253223805325;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(F, H), phenotype(F, I) )
%   | | | then return 0.2743452887342256;  // std dev = 2.376, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.04827207599304781;  // std dev = 1.864, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.5092066044479007;  // std dev = 1.735, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.36383066668001085;  // std dev = 3.996, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   else if ( interaction(A, L) )
%   | then return -0.11231637819360625;  // std dev = 6.59e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.11231637819360632;  // std dev = 4.37e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then return 0.4415394305168011;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, F), complex(A, G) )
%   | | | then return 0.4768190261741651;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49440034249734793;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.06180200255659776;  // std dev = 1.208, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3078276701134625;  // std dev = 3.248, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.04558961198532652;  // std dev = 1.916, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.14812139297252008;  // std dev = 4.436, 80.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=42 */
%   else if ( interaction(M, A) )
%   | then return -0.10159632948783624;  // std dev = 5.10e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.33817101309505615;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3753747051930901;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5656416092294642;  // std dev = 0.250, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.2389787775526082;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2009256272826976;  // std dev = 3.349, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.13108866391128865;  // std dev = 2.268, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.03245771333553321;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=37 */
%   else if ( enzyme(A, L) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2900353689041919;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5558677777559091;  // std dev = 0.970, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else if ( enzyme(F, D), interaction(F, A) )
%   | | | then return -0.24130921633794702;  // std dev = 0.142, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.42093674991844865;  // std dev = 0.298, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.28449468955722357;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3431646188983891;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3602510449875329;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.025770092815184015;  // std dev = 4.757, 93.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=42 */
%   else return -0.08518475138839678;  // std dev = 4.56e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3236462405847875;  // std dev = 0.402, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.49573898615650214;  // std dev = 0.361, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.29441208509485356;  // std dev = 0.351, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.4703487186794844;  // std dev = 0.243, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K), enzyme(A, L) )
%   | | | then return 0.05798184171795742;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.44938511180358803;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.2416364567637502;  // std dev = 1.835, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.09546313014379793;  // std dev = 2.719, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   else return -0.07877675473109155;  // std dev = 6.04e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.18705144159088008;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1712244857750964;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.27626589294303855;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, H), location(H, I) )
%   | | | then return -0.2529278620853164;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.01561043285244247;  // std dev = 1.628, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09691382948069778;  // std dev = 2.437, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return 0.03503238451640912;  // std dev = 3.917, 89.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=47 */
%   else if ( interaction(L, A) )
%   | then return -0.07324622576333706;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.07324622576333704;  // std dev = 1.32e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.00845696207969226;  // std dev = 0.619, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3592215185451766;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.026673856724799216;  // std dev = 1.512, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return -0.08832092637195475;  // std dev = 2.775, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( complex(A, K), interaction(I, L) )
%   | | | then return 0.09690451872873676;  // std dev = 1.136, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.36453849199712873;  // std dev = 0.251, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.11540340594614067;  // std dev = 0.784, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04771051458729076;  // std dev = 3.499, 65.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=36 */
%   else return -0.06842697784420265;  // std dev = 4.84e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), interaction(A, F) )
%   | | | then return 0.17114072467458166;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1408572039217872;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.0967255076914674;  // std dev = 1.746, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.0640398767783996;  // std dev = 2.204, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return 0.1432074153738395;  // std dev = 1.425, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.04043900507705666;  // std dev = 3.261, 60.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=35 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.5389436511134658;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21473358402070195;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
Inference time using transfer learning 9.772896528244019
Refined model CLL: -0.238532


******************************************
Best model found
******************************************
Results 

CLL : -0.250375 

AUC ROC : 0.948635 

AUC PR : 0.216276 

Precision : 0.054345 

Recall : 0.819495 

F1 : 0.101931 

Total Learning Time : 5.149274826049805 

Total Inference Time : 2.655986785888672 

Total revision time: 12.41419768333435
Best scored revision CLL: -0.238532


Results 

CLL : -0.250375 

AUC ROC : 0.948635 

AUC PR : 0.216276 

Precision : 0.054345 

Recall : 0.819495 

F1 : 0.101931 

Total Learning Time : 12.42370867729187 

Total Inference Time : 2.655986785888672 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.680948257446289
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4431829487049522;  // std dev = 0.493, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.33722663096556316;  // std dev = 5.703, 131.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=71 */
%   | else return 0.3952418981411359;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3098443771466042;  // std dev = 0.494, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6298045016670406;  // std dev = 1.697, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | else return -0.13396984418391925;  // std dev = 3.427, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.18185647738720315;  // std dev = 4.465, 120.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=71 */
%   | else return 0.22262171139799447;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 6.32e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.13519908462823657;  // std dev = 4.899, 133.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=78 */
%   | | else return 0.1484212979845477;  // std dev = 1.955, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.08518475138839694;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08834810557364964;  // std dev = 0.429, 155.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109165;  // std dev = 4.47e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.0831446002412312;  // std dev = 4.789, 135.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=78 */
%   | else return 0.09129091077963891;  // std dev = 1.958, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13687949075182929;  // std dev = 4.636, 131.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.042400312284154536;  // std dev = 5.142, 146.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 27.149599313735962
Parameter learned model CLL:-0.276216 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 61, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.703, 60, 71], 'true,false': [2.449, 10, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 104, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 63, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.697, 3, 71], 'true,false': [3.427, 60, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.48e-08, 86, 0], 'false,false,false,false': [0.0, 18, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.465, 49, 71], 'true,false': [2.639, 13, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.32e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.899, 55, 78], 'true,true,false': [1.955, 8, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 84, 0], 'false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.429, 69, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.47e-08, 81, 0], 'false,false,false': [0.0, 12, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.789, 57, 78], 'true,false': [1.958, 8, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.636, 45, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.142, 60, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 107, 0]}]
{'': [0.24276921653015154, 6.00120553851436e-17], 'false': [nan, 6.00120553851436e-17]}
{'': [0.24737015121630435, -6.678033230828009e-18], 'true': [0.24823728220966126, 0.24000000000000005], 'false': [nan, -6.678033230828009e-18], 'false,false': [nan, -6.678033230828009e-18], 'false,false,false': [-8.540177112501205e-18, -7.656710514656252e-18]}
{'': [0.24433092068999895, 6.817158923136926e-17], 'false': [nan, 6.817158923136926e-17], 'false,false': [nan, 6.817158923136926e-17]}
{'': [0.24396733737056328, 4.270088556250602e-18], 'true': [0.03889700511322297, 0.15658532737594183], 'false': [nan, 4.270088556250602e-18], 'false,false': [nan, 4.270088556250602e-18], 'false,false,false': [3.4855839145208403e-17, -4.625929269271485e-18]}
{'': [0.18204079733614736, 4.1512687007723245e-17], 'true': [0.16616687368667732, 0.24872448979591835], 'false': [nan, 4.1512687007723245e-17]}
{'': [0.1867559564865996, 3.112774835397635e-17], 'true': [0.1867559564865996, nan], 'true,true': [0.18046781789276362, 0.23887005498300723], 'false': [nan, 3.112774835397635e-17], 'false,false': [2.9077269692563625e-17, -6.033820786006285e-18]}
{'': [0.18391338523012865, 2.984470496304184e-17], 'true': [0.18391338523012865, nan], 'false': [nan, 2.984470496304184e-17], 'false,false': [2.4671622769447922e-17, -1.1564823173178713e-18]}
{'': [0.17729991594626088, -4.311545726699637e-18], 'true': [0.16989612142172683, 0.23971010164650586], 'false': [nan, -4.311545726699637e-18], 'false,false': [nan, -4.311545726699637e-18]}
{'': [0.16409727069335595, 2.7300566179307128e-17], 'true': [0.16409727069335595, nan], 'false': [nan, 2.7300566179307128e-17], 'false,false': [nan, 2.7300566179307128e-17]}
{'': [0.1810969915943317, -1.6601465788787386e-17], 'true': [0.1810969915943317, nan], 'false': [nan, -1.6601465788787386e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.9037885665893555
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.37988806553429494;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.5399671169176934;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.7574007145732327;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.47202263026819863;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, D), complex(A, E) )
%   | | | then return 0.05930260881676042;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.41443841824810174;  // std dev = 2.562, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.1099156524150808;  // std dev = 1.835, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.28664695421326514;  // std dev = 4.670, 87.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.1254446385283914;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.5874308726069158;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5497359512413649;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.6735132453613416;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7277174556073431;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), complex(J, I) )
%   | | | then return 0.05808130368558289;  // std dev = 2.680, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.49912555060977554;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.6026077255291717;  // std dev = 0.947, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2915515293522699;  // std dev = 4.371, 79.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   else return -0.1123163781936062;  // std dev = 7.90e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.12483890100531873;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, D), interaction(G, A) )
%   | | | then return 0.41915977126795073;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5418507005795771;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(H, I), interaction(J, H) )
%   | | | then return 0.32192007482596385;  // std dev = 3.388, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   | | | else return 0.12954362989816234;  // std dev = 3.378, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2353081078661818;  // std dev = 1.842, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.6649039245756342;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(M, A) )
%   | then return -0.10159632948783623;  // std dev = 5.43e-09, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.3093360611310456;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3619363572833955;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.42297038573794904;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2545968118133529;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.001773560302297203;  // std dev = 1.648, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.08356394861540048;  // std dev = 4.495, 80.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | | | else return 0.28171164580096597;  // std dev = 2.838, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   else if ( complex(A, I) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.46210370643067133;  // std dev = 1.032, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.617653616555474;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.3599381289859815;  // std dev = 0.259, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.45458464545886557;  // std dev = 0.193, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4379367933993613;  // std dev = 1.573, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.39826144737094565;  // std dev = 0.310, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2958624933965752;  // std dev = 0.145, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.04619135730189119;  // std dev = 2.889, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else return -0.08518475138839679;  // std dev = 5.51e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.006424230864370921;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.23330000534005452;  // std dev = 1.418, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0.47507678028809136;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.22402131750116913;  // std dev = 1.320, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.0921556452751105;  // std dev = 3.103, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.04710908453266883;  // std dev = 3.094, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | | else return 0.46253758679908213;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(L, A) )
%   | then return -0.07877675473109158;  // std dev = 5.89e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1977288436778407;  // std dev = 0.146, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3500526109711796;  // std dev = 0.748, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06764642560982469;  // std dev = 1.434, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.0661851231637188;  // std dev = 3.819, 88.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=47 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return 0.25736811587483316;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03307429302004964;  // std dev = 1.776, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.16785295221597063;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.36492207522797926;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.07324622576333707;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.14665624046019682;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1727975993973445;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.30493819061585775;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25046839682460764;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return 0.0616172311194667;  // std dev = 2.020, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.25078205958034455;  // std dev = 0.978, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.061842569742525486;  // std dev = 1.610, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.03214026277990199;  // std dev = 3.870, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(A, G) )
%   | | then if ( complex(A, H), phenotype(D, I) )
%   | | | then return -0.06898379227202965;  // std dev = 1.330, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.2074844486426773;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.39510748648480404;  // std dev = 0.372, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.36095216437074845;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(K, A), interaction(A, K) )
%   | | then if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.1387854578659013;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.110546124725885;  // std dev = 0.936, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.30676195366929104;  // std dev = 0.861, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.06560367785704933;  // std dev = 3.811, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 12.154877424240112
Refined model CLL: -0.232635


******************************************
Best model found
******************************************
Results 

CLL : -0.241411 

AUC ROC : 0.968959 

AUC PR : 0.254337 

Precision : 0.065478 

Recall : 0.869258 

F1 : 0.121782 

Total Learning Time : 5.9037885665893555 

Total Inference Time : 2.7011260986328125 

Total revision time: 13.282453298568726
Best scored revision CLL: -0.232635


Results 

CLL : -0.241411 

AUC ROC : 0.968959 

AUC PR : 0.254337 

Precision : 0.065478 

Recall : 0.869258 

F1 : 0.121782 

Total Learning Time : 13.291964292526245 

Total Inference Time : 2.7011260986328125 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.832080602645874
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4343078754968609;  // std dev = 0.494, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 8.54e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.39088615832761475;  // std dev = 5.768, 138.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=82 */
%   | else return 0.5109689740626031;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2966703824497966;  // std dev = 0.495, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.554626799885697;  // std dev = 2.985, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | else return -0.24762651244157435;  // std dev = 2.075, 54.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19811463495693604;  // std dev = 4.869, 134.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=82 */
%   | else return 0.24674357726387688;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926096;  // std dev = 4.93e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15113456321024138;  // std dev = 5.027, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   | | else return -0.00507204307852734;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0926435798839868;  // std dev = 0.428, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08790770206329865;  // std dev = 5.046, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   | else return 0.1352386043150333;  // std dev = 0.679, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.041100799462180794;  // std dev = 5.224, 155.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04338699120430773;  // std dev = 5.138, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
Inference time using transfer learning 18.732964754104614
Parameter learned model CLL:-0.271071 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 64, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 82, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.768, 56, 82], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 108, 0], 'false,false,false,false': [0.0, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 65, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.985, 10, 82], 'true,false': [2.075, 49, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.33e-08, 101, 0], 'false,false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.869, 52, 82], 'true,false': [1.491, 4, 5], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.027, 56, 86], 'true,true,false': [0.785, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 101, 0], 'false,false,false': [3.73e-09, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 63, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 90, 0], 'false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.046, 57, 86], 'true,false': [0.679, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.224, 68, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.138, 64, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 96, 0]}]
{'': [0.24419981579755487, 7.311224796312007e-17], 'false': [nan, 7.311224796312007e-17]}
{'': [0.23999999999999969, -3.828355257328126e-18], 'true': [0.2411258139046407, 0.20408163265306126], 'false': [nan, -3.828355257328126e-18], 'false,false': [nan, -3.828355257328126e-18], 'false,false,false': [-6.1679056923619804e-18, 0.0]}
{'': [0.24522130827467167, 6.467318590049455e-17], 'false': [nan, 6.467318590049455e-17], 'false,false': [nan, 6.467318590049455e-17]}
{'': [0.24052893037759893, 0.0], 'true': [0.09688090737240027, 0.07969989579793155], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [1.0992307174506501e-17, 0.0]}
{'': [0.1814836441988672, 2.41830757839143e-17], 'true': [0.1769402643233905, 0.24691358024691368], 'false': [nan, 2.41830757839143e-17]}
{'': [0.17903170591335152, 3.3306690738754695e-17], 'true': [0.17903170591335152, nan], 'true,true': [0.17796516614327795, 0.2056189225258989], 'false': [nan, 3.3306690738754695e-17], 'false,false': [3.0778460088618204e-17, 1.5419764230904951e-18]}
{'': [0.18297054242643807, 2.984470496304184e-17], 'true': [0.18297054242643807, nan], 'false': [nan, 2.984470496304184e-17], 'false,false': [2.960594732333751e-17, 0.0]}
{'': [0.17884541802034035, -2.9474947556420085e-18], 'true': [0.17808718896247547, 0.23084948085741014], 'false': [nan, -2.9474947556420085e-18], 'false,false': [nan, -2.9474947556420085e-18]}
{'': [0.17606814100261214, 2.6608651003412843e-17], 'true': [0.17606814100261214, nan], 'false': [nan, 2.6608651003412843e-17], 'false,false': [nan, 2.6608651003412843e-17]}
{'': [0.17480666848342302, -1.4456028966473393e-17], 'true': [0.17480666848342302, nan], 'false': [nan, -1.4456028966473393e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.825414657592773
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(D, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2885286819349544;  // std dev = 4.401, 79.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=34 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.4162884699832329;  // std dev = 3.256, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.7507764543611559;  // std dev = 0.151, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2693762829822973;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.21278773049702684;  // std dev = 0.141, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.2593990255284664;  // std dev = 3.282, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I), phenotype(A, I) )
%   | | | then return 0.3068034360608045;  // std dev = 1.452, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.585967404693342;  // std dev = 2.135, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.1329197601298264;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4313924812841127;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.610124969407522;  // std dev = 0.154, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2116834704470544;  // std dev = 0.166, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.20772032796429696;  // std dev = 2.004, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.48984364878772396;  // std dev = 1.743, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.28408203494273443;  // std dev = 4.750, 96.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   else return -0.11231637819360617;  // std dev = 9.31e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.23714484404378847;  // std dev = 1.069, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.41699928574343814;  // std dev = 1.914, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.0680914729410336;  // std dev = 1.375, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.24100285611963926;  // std dev = 2.866, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5272998289273071;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.33742947155084707;  // std dev = 0.139, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.0952114369252685;  // std dev = 1.276, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.22363961819282666;  // std dev = 3.098, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   else return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( location(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.37817160099078806;  // std dev = 0.999, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.009319337079277753;  // std dev = 3.091, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( location(D, G) )
%   | | | then return 0.32735697963780963;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24807965352841047;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5292918660064779;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.41290401172014196;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.4946905049240346;  // std dev = 0.958, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.26673142733249244;  // std dev = 3.071, 46.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   else return -0.09269127618926089;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.21133767572201986;  // std dev = 2.342, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | | | else return 0.08143025734644035;  // std dev = 4.424, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | | else return 0.5094098885822405;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.1516729406976248;  // std dev = 0.358, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.10220856990247146;  // std dev = 1.318, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(I, A) )
%   | then return -0.0851847513883968;  // std dev = 6.50e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(H, D), complex(H, E) )
%   | | | then return 0.6007496144715682;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3509370982980531;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2995772396713893;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13318504612729545;  // std dev = 2.087, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.36876317119771085;  // std dev = 0.302, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3640896162788799;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.07420412877883431;  // std dev = 2.222, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.03541634833395672;  // std dev = 3.990, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   else return -0.07877675473109158;  // std dev = 5.89e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1968560349194208;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3434885016907444;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.18708897892908952;  // std dev = 0.911, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.04859697331733055;  // std dev = 3.143, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20660049558361296;  // std dev = 3.293, 61.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=44 */
%   | | | else return -0.4957629146811542;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.13248767582004214;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.23362592881594946;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.07899979768481578;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.32816870199157944;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.23342160894556563;  // std dev = 0.156, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.04415976120174784;  // std dev = 4.633, 115.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=64 */
%   | else return 0.3280133339824832;  // std dev = 0.723, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.06842697784420276;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06842697784420271;  // std dev = 1.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E) )
%   | | then if ( enzyme(E, F), phenotype(A, G) )
%   | | | then return -0.06285428662277015;  // std dev = 1.764, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.22564570911146267;  // std dev = 2.462, 45.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   | | else if ( complex(E, H), recursion_proteinclass(D, B) )
%   | | | then return 0.2457995829348052;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.060501202166626994;  // std dev = 3.259, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return 0.19553873081695122;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, K) )
%   | | | then return -0.16901547946983464;  // std dev = 1.380, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.3380446559339052;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning 13.247713088989258
Refined model CLL: -0.274869


******************************************
Best model found
******************************************
Results 

CLL : -0.259715 

AUC ROC : 0.975371 

AUC PR : 0.138078 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 8.825414657592773 

Total Inference Time : 4.094516277313232 

Total revision time: 20.771759748458862
Best scored revision CLL: -0.271071


Results 

CLL : -0.259715 

AUC ROC : 0.975371 

AUC PR : 0.138078 

Precision : 0.145278 

Recall : 0.851064 

F1 : 0.24819 

Total Learning Time : 20.781267881393433 

Total Inference Time : 4.094516277313232 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.8051981925964355
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4142986677198302;  // std dev = 0.497, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4116698043869827;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   | else return 0.3976062479299171;  // std dev = 4.574, 87.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839116;  // std dev = 7.30e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29869951557666713;  // std dev = 0.495, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360622;  // std dev = 7.57e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6072558151516236;  // std dev = 2.376, 105.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=99 */
%   | else return -0.2654678207794728;  // std dev = 2.153, 71.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.14505620038834902;  // std dev = 4.223, 96.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=52 */
%   | else return 0.19956173143178507;  // std dev = 3.779, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.72e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14751716828805417;  // std dev = 4.574, 116.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=69 */
%   | | else return 0.037425208270445806;  // std dev = 3.620, 72.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 4.01e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.08518475138839686;  // std dev = 2.58e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10465465265782804;  // std dev = 0.413, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109176;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13427306921837076;  // std dev = 4.240, 106.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=69 */
%   | else return -0.008735028727276259;  // std dev = 3.619, 76.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04289005634798522;  // std dev = 5.732, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.35e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04917708845992931;  // std dev = 5.698, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
Inference time using transfer learning 28.14069890975952
Parameter learned model CLL:-0.258311 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 83, 104], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.493, 33, 52], 'true,false': [4.574, 35, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 138, 0], 'false,false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 78, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.57e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [2.376, 6, 99], 'true,false': [2.153, 66, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.58e-08, 73, 0], 'false,false,false,false': [5.27e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.223, 44, 52], 'true,false': [3.779, 32, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.574, 47, 69], 'true,true,false': [3.62, 37, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.01e-08, 66, 0], 'false,false,false': [2.58e-08, 47, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.413, 78, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.83e-08, 57, 0], 'false,false,false': [3.25e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.24, 37, 69], 'true,false': [3.619, 41, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 120, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.732, 83, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.35e-09, 134, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.698, 73, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 131, 0]}]
{'': [0.24684720752666953, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.23904813412655707, 2.7949670550003944e-17], 'true': [0.2375086505190298, 0.2404544854009763], 'false': [nan, 2.7949670550003944e-17], 'false,false': [nan, 2.7949670550003944e-17], 'false,false,false': [3.8616453030440226e-17, 0.0]}
{'': [0.244952445061878, 5.86532918669894e-17], 'false': [nan, 5.86532918669894e-17], 'false,false': [nan, 5.86532918669894e-17]}
{'': [0.24171693559355925, -5.003822082817607e-17], 'true': [0.05377587230110352, 0.0652665401718805], 'false': [nan, -5.003822082817607e-17], 'false,false': [nan, -5.003822082817607e-17], 'false,false,false': [4.258389683493751e-17, 4.022547190670857e-17]}
{'': [0.17916924730178152, 4.4056469231157003e-17], 'true': [0.18576497358551455, 0.17004681951844608], 'false': [nan, 4.4056469231157003e-17]}
{'': [0.1838558227333284, 3.3404940563942766e-17], 'true': [0.1838558227333284, nan], 'true,true': [0.18035315988891779, 0.1820205560124551], 'false': [nan, 3.3404940563942766e-17], 'false,false': [2.4391263419795106e-17, 1.4173059888831785e-17]}
{'': [0.17064019273811876, 4.118569284899774e-17], 'true': [0.17064019273811876, nan], 'false': [nan, 4.118569284899774e-17], 'false,false': [5.843279076974508e-18, 1.5741968259610428e-17]}
{'': [0.17574627604800797, -3.7007434154171884e-18], 'true': [0.1696252553836841, 0.1723722830124037], 'false': [nan, -3.7007434154171884e-18], 'false,false': [nan, -3.7007434154171884e-18]}
{'': [0.1757201297652088, 2.816983793825024e-17], 'true': [0.1757201297652088, nan], 'false': [nan, 2.816983793825024e-17], 'false,false': [nan, 2.816983793825024e-17]}
{'': [0.18339891085516127, -1.52549728574449e-17], 'true': [0.18339891085516127, nan], 'false': [nan, -1.52549728574449e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 13.003077745437622
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return 0.5067975837481601;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.33272520628595387;  // std dev = 5.424, 118.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=56 */
%   else return -0.141851064900488;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2805265877890456;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(A, I) )
%   | | | then return 0.6467818316378184;  // std dev = 1.879, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.24126389117787658;  // std dev = 5.478, 123.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=54 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.312642814670137;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7975023797919012;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839105;  // std dev = 8.16e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(A, D) )
%   | | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2465750371452361;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18701115771552002;  // std dev = 2.654, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.18588395731259721;  // std dev = 3.038, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.35651418848192806;  // std dev = 4.549, 89.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=55 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, A) )
%   | | then return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360625;  // std dev = 6.59e-09, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.24194475673063573;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.45298183018550997;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.011563863704645816;  // std dev = 1.693, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.18315491488685337;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.4637645229888732;  // std dev = 0.184, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16524321026054475;  // std dev = 2.593, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.284010585940792;  // std dev = 2.582, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.48036617790362884;  // std dev = 2.418, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   else return -0.10159632948783645;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.3614904617725901;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.46737232028433356;  // std dev = 0.246, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return 0.3884004272535464;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4962857600231612;  // std dev = 0.180, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5904178022733785;  // std dev = 0.391, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.339461073348312;  // std dev = 0.349, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.015259734875000243;  // std dev = 2.563, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.1088585088717237;  // std dev = 5.121, 110.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=57 */
%   else return -0.09269127618926078;  // std dev = 6.45e-09, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D), phenotype(E, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.1062082830841155;  // std dev = 2.720, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.2926790105335409;  // std dev = 1.587, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.2768251171303032;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08722644564607569;  // std dev = 1.961, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.2980549084976446;  // std dev = 0.941, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.6140060326727982;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12982952677269374;  // std dev = 3.590, 55.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
%   | | | else return 0.38576130935032854;  // std dev = 1.330, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.08518475138839679;  // std dev = 5.96e-09, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.36987124890899414;  // std dev = 2.941, 101.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=92 */
%   | | | else return -0.31094986826358545;  // std dev = 1.853, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.5024728236627357;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.412863691650565;  // std dev = 0.282, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.1354236113259581;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5484809672888342;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, J) )
%   | then return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(D, H), phenotype(D, I) )
%   | | | then return -0.01888525334310865;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.189256530468899;  // std dev = 0.935, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.1335292943713717;  // std dev = 0.929, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4561625318693267;  // std dev = 0.250, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( complex(A, L), complex(K, L) )
%   | | | then return -3.0150181429746125E-4;  // std dev = 0.509, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23764734852821184;  // std dev = 1.240, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( location(A, M) )
%   | | | then return 0.020260264436586135;  // std dev = 4.105, 111.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=57 */
%   | | | else return 0.19198943288385784;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0732462257633369;  // std dev = 5.19e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.23487558160358069;  // std dev = 3.304, 105.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=92 */
%   | | | else return -0.21359907156484262;  // std dev = 1.709, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.20644908218783578;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.32600914654584257;  // std dev = 0.263, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.3050227496505324;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.043302425397801075;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.021762392199498676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, L) )
%   | then return -0.06842697784420268;  // std dev = 3.48e-09, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06842697784420267;  // std dev = 3.95e-09, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.21941583289529837;  // std dev = 2.785, 101.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=92 */
%   | | | else return -0.20559794175001328;  // std dev = 1.822, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.21786760211150336;  // std dev = 0.296, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.32893992262961275;  // std dev = 0.254, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( complex(A, H) )
%   | | then return -0.428025700186742;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.2833306958154576;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04382377391146522;  // std dev = 1.336, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 66.21366310119629
Refined model CLL: -0.198047


******************************************
Best model found
******************************************
Results 

CLL : -0.18609 

AUC ROC : 0.975794 

AUC PR : 0.290424 

Precision : 0.188216 

Recall : 0.867925 

F1 : 0.309348 

Total Learning Time : 13.003077745437622 

Total Inference Time : 8.069119453430176 

Total revision time: 29.631356477737427
Best scored revision CLL: -0.198047


Results 

CLL : -0.18609 

AUC ROC : 0.975794 

AUC PR : 0.290424 

Precision : 0.188216 

Recall : 0.867925 

F1 : 0.309348 

Total Learning Time : 29.640864610671997 

Total Inference Time : 8.069119453430176 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8383233547210693
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40252763332436164;  // std dev = 0.498, 169.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.12e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.35613031102814213;  // std dev = 4.767, 92.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=51 */
%   | else return 0.44240748494118576;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32112609380073576;  // std dev = 0.492, 156.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6471694079930197;  // std dev = 1.004, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | else return -0.10530976783717852;  // std dev = 4.151, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783624;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20499158348602334;  // std dev = 4.274, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | else return 0.1191248831643927;  // std dev = 3.563, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926078;  // std dev = 6.84e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17679953012540475;  // std dev = 4.733, 119.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=72 */
%   | | else return 0.06439794477306322;  // std dev = 2.585, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.80e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839683;  // std dev = 3.94e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09627163368117539;  // std dev = 0.431, 164.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109176;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.07877675473109177;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.12492740437594615;  // std dev = 4.634, 116.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=72 */
%   | else return 0.053115726988344096;  // std dev = 2.469, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10123669092305101;  // std dev = 5.091, 148.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.0015740886242574237;  // std dev = 5.684, 173.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 35.48407864570618
Parameter learned model CLL:-0.264674 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 77, 92], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.767, 41, 51], 'true,false': [3.839, 23, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 82, 0], 'false,false,false,false': [0.0, 36, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 64, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.004, 1, 70], 'true,false': [4.151, 75, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.33e-08, 52, 0], 'false,false,false,false': [2.47e-08, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.274, 39, 51], 'true,false': [3.563, 35, 41], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.733, 47, 72], 'true,true,false': [2.585, 19, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.8e-08, 63, 0], 'false,false,false': [3.94e-08, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.431, 72, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 58, 0], 'false,false,false': [1.83e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.634, 44, 72], 'true,false': [2.469, 17, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.091, 56, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.684, 81, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 108, 0]}]
{'': [0.24803053114386997, 6.640586315514955e-17], 'false': [nan, 6.640586315514955e-17]}
{'': [0.24194608809993667, -3.7634678800852764e-18], 'true': [0.24704631379962425, 0.23022460937500083], 'false': [nan, -3.7634678800852764e-18], 'false,false': [nan, -3.7634678800852764e-18], 'false,false,false': [-2.166288828536891e-17, -1.850371707708594e-17]}
{'': [0.24220729719220033, 6.950961545479241e-17], 'false': [nan, 6.950961545479241e-17], 'false,false': [nan, 6.950961545479241e-17]}
{'': [0.24670662163477408, 1.8126090197961738e-17], 'true': [0.014197621477147253, 0.17759618952321915], 'false': [nan, 1.8126090197961738e-17], 'false,false': [nan, 1.8126090197961738e-17], 'false,false,false': [2.1350442781253012e-17, 1.3274405729213829e-17]}
{'': [0.18831237296049286, 4.7824991830006746e-17], 'true': [0.20293756669877042, 0.16699560603096872], 'false': [nan, 4.7824991830006746e-17]}
{'': [0.18642780699611283, 3.5561831257524545e-17], 'true': [0.18642780699611283, nan], 'true,true': [0.1882338657057356, 0.17140144379860933], 'false': [nan, 3.5561831257524545e-17], 'false,false': [2.2909364000201642e-17, 2.3912495915003373e-17]}
{'': [0.1857005508739357, 3.895519384649672e-17], 'true': [0.1857005508739357, nan], 'false': [nan, 3.895519384649672e-17], 'false,false': [7.656710514656252e-18, 5.9476233462061954e-18]}
{'': [0.18115484759046083, -3.0839528461809902e-18], 'true': [0.1851594644528125, 0.16469001313072007], 'false': [nan, -3.0839528461809902e-18], 'false,false': [nan, -3.0839528461809902e-18]}
{'': [0.17511543737330487, 2.6066105795547154e-17], 'true': [0.17511543737330487, nan], 'false': [nan, 2.6066105795547154e-17], 'false,false': [nan, 2.6066105795547154e-17]}
{'': [0.1867337835120923, -1.644774851296528e-17], 'true': [0.1867337835120923, nan], 'false': [nan, -1.644774851296528e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.9779486656188965
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.3966104735610507;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.46574387180837223;  // std dev = 4.340, 79.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=48 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7971834785586744;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.19200536417405065;  // std dev = 2.051, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.35333296624750554;  // std dev = 5.406, 118.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=65 */
%   else if ( interaction(G, A) )
%   | then return -0.1254446385283911;  // std dev = 7.30e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return -0.1254446385283913;  // std dev = 2.79e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( enzyme(A, F), enzyme(D, F) )
%   | | | then return -0.0032652768186184388;  // std dev = 1.515, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.23529527333799033;  // std dev = 4.039, 66.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I), complex(A, J) )
%   | | | then return 0.7364518809939127;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34207672727867267;  // std dev = 2.460, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.6513722167098609;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4973965337914167;  // std dev = 1.730, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( interaction(A, L) )
%   | then return -0.11231637819360632;  // std dev = 4.93e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.11231637819360636;  // std dev = 3.95e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), enzyme(D, E) )
%   | | then return 0.13663470731361832;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4198738841956029;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.542301013614381;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, A), phenotype(H, I) )
%   | | | then return -0.22796239013185549;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.358115117073503;  // std dev = 2.417, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.07249909463823884;  // std dev = 2.333, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.19408194504397522;  // std dev = 4.682, 88.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=48 */
%   else if ( interaction(A, L) )
%   | then return -0.10159632948783616;  // std dev = 6.32e-09, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.10159632948783621;  // std dev = 5.27e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.38980175303888265;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.3240806285224738;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3429302477866223;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.33169940735053893;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.0346938089924508;  // std dev = 2.689, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.0747245291561229;  // std dev = 3.298, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | | else return 0.25930302999190635;  // std dev = 3.644, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   else if ( interaction(A, P) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.30198429933877324;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, A), location(A, G) )
%   | | | then return 0.2540849050877477;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26677823948737284;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.21311071557065586;  // std dev = 5.132, 119.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=76 */
%   | | | else return -0.40592301662813135;  // std dev = 0.435, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.1482214599188407;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, J) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839685;  // std dev = 4.17e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839686;  // std dev = 3.73e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.4470994006325628;  // std dev = 1.043, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return -0.09809299890673905;  // std dev = 3.629, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.28172787916015957;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.4080479676723842;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06646943036620948;  // std dev = 0.431, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), complex(E, F) )
%   | | then if ( interaction(D, E) )
%   | | | then return -0.06294488476078586;  // std dev = 2.148, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.07275640760825186;  // std dev = 2.490, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( interaction(G, D), location(A, H) )
%   | | | then return 0.23488732902734907;  // std dev = 1.054, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.03406077698589992;  // std dev = 1.906, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.6488266886704707;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11696203085924331;  // std dev = 1.314, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.05705586435883442;  // std dev = 1.521, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.18718801361755363;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.07324622576333692;  // std dev = 4.84e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, D), interaction(H, G) )
%   | | | then return 0.17866361187055071;  // std dev = 1.417, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.016488855263474062;  // std dev = 2.227, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | else if ( interaction(I, D), location(I, E) )
%   | | | then return -0.008367061417170743;  // std dev = 2.410, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return -0.1461167182137147;  // std dev = 1.853, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(A, L), phenotype(J, L) )
%   | | | then return 0.0064228364691487905;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0799126296410282;  // std dev = 1.460, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.2321903146577555;  // std dev = 1.672, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.09569769805735756;  // std dev = 1.649, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else return -0.06842697784420264;  // std dev = 5.27e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.16953531470685096;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3828541712197849;  // std dev = 0.615, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(A, G), complex(G, D) )
%   | | | then return -0.29534987661650686;  // std dev = 0.362, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.4608293879446346;  // std dev = 0.411, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.38104998759694275;  // std dev = 0.284, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.17196432896980665;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.41904010360733984;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.028769346922310594;  // std dev = 3.023, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 31.090253829956055
Refined model CLL: -0.224879


******************************************
Best model found
******************************************
Results 

CLL : -0.249755 

AUC ROC : 0.960733 

AUC PR : 0.208039 

Precision : 0.050266 

Recall : 0.851986 

F1 : 0.094932 

Total Learning Time : 7.9779486656188965 

Total Inference Time : 4.685095548629761 

Total revision time: 17.787611961364746
Best scored revision CLL: -0.224879


Results 

CLL : -0.249755 

AUC ROC : 0.960733 

AUC PR : 0.208039 

Precision : 0.050266 

Recall : 0.851986 

F1 : 0.094932 

Total Learning Time : 17.797120094299316 

Total Inference Time : 4.685095548629761 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6129734516143799
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4637827379164115;  // std dev = 0.489, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.33e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.33385191611333576;  // std dev = 5.703, 131.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=71 */
%   | else return 0.39186718328890935;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3108101709344025;  // std dev = 0.493, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.43e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.60052332015726;  // std dev = 2.161, 76.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=71 */
%   | else return -0.19109640788317356;  // std dev = 3.541, 102.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1616398474879631;  // std dev = 4.649, 125.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=71 */
%   | else return 0.250775169571389;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926089;  // std dev = 6.32e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15676268249362077;  // std dev = 4.709, 132.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=78 */
%   | | else return 0.07642127818177524;  // std dev = 2.094, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1444929820628145;  // std dev = 0.419, 140.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109162;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.050929462278742746;  // std dev = 4.933, 141.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=78 */
%   | else return 0.13238208478739832;  // std dev = 1.884, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 3.09e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07963807078859565;  // std dev = 5.071, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.10e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.01914282434436927;  // std dev = 5.332, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 1.86e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 26.29139733314514
Parameter learned model CLL:-0.261952 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.489, 56, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.703, 60, 71], 'true,false': [2.449, 10, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 105, 0], 'false,false,false,false': [0.0, 21, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 62, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.43e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.161, 5, 71], 'true,false': [3.541, 87, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.96e-08, 80, 0], 'false,false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.649, 54, 71], 'true,false': [2.582, 12, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.32e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.709, 54, 78], 'true,true,false': [2.094, 11, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 89, 0], 'false,false,false': [0.0, 22, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.419, 54, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 89, 0], 'false,false,false': [5.27e-09, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.933, 63, 78], 'true,false': [1.884, 7, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.09e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.071, 58, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.332, 72, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.86e-09, 108, 0]}]
{'': [0.238841499702442, 6.70323335622736e-17], 'false': [nan, 6.70323335622736e-17]}
{'': [0.2473701512163047, -1.76225876924628e-18], 'true': [0.24823728220966199, 0.2400000000000003], 'false': [nan, -1.76225876924628e-18], 'false,false': [nan, -1.76225876924628e-18], 'false,false,false': [-8.458842092382146e-18, -5.28677630773884e-18]}
{'': [0.24318823315890029, 7.082457226057034e-17], 'false': [nan, 7.082457226057034e-17], 'false,false': [nan, 7.082457226057034e-17]}
{'': [0.2500221860474974, 0.0], 'true': [0.06146121883656549, 0.12295513045788735], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [4.4408920985006264e-17, -2.135044278125301e-18]}
{'': [0.18720745777027745, 3.929993007522678e-17], 'true': [0.17289963365506925, 0.24691358024691337], 'false': [nan, 3.929993007522678e-17]}
{'': [0.17657769921952646, 3.300663046182898e-17], 'true': [0.17657769921952646, nan], 'true,true': [0.16795963346455453, 0.23080802183407043], 'false': [nan, 3.300663046182898e-17], 'false,false': [2.993859841685815e-17, -5.046468293750712e-18]}
{'': [0.1754443138481761, 3.763467880085276e-17], 'true': [0.1754443138481761, nan], 'false': [nan, 3.763467880085276e-17], 'false,false': [2.993859841685815e-17, 9.570888143320315e-19]}
{'': [0.1793228344898326, 9.89307645705585e-18], 'true': [0.1725846054218786, 0.2366655935644416], 'false': [nan, 9.89307645705585e-18], 'false,false': [nan, 9.89307645705585e-18]}
{'': [0.1786100961465713, 2.600522400022889e-17], 'true': [0.1786100961465713, nan], 'false': [nan, 2.600522400022889e-17], 'false,false': [nan, 2.600522400022889e-17]}
{'': [0.1799473561452545, 4.11193712824132e-18], 'true': [0.1799473561452545, nan], 'false': [nan, 4.11193712824132e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.7692155838012695
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.38446472457319614;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37463245158302777;  // std dev = 4.767, 91.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=47 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), interaction(E, E) )
%   | | then return 0.1888374822954231;  // std dev = 1.050, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(E, D) )
%   | | | then return 0.40463753413602055;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7071069526377561;  // std dev = 0.948, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.12516123840877547;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.3505767599253274;  // std dev = 4.814, 95.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=52 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.6335512113866638;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.47304913656388264;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06942947618145336;  // std dev = 2.452, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( phenotype(I, J), location(A, K) )
%   | | | then return 0.4045197259533041;  // std dev = 3.717, 65.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=44 */
%   | | | else return 0.18158707975696325;  // std dev = 2.514, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.46696678133464653;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7304763252680854;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1123163781936062;  // std dev = 8.01e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.4205458414654646;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.44865815549418614;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.6536147279443137;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5831871097761614;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.24759816649346328;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, H) )
%   | | | then return 0.23498672854222594;  // std dev = 5.176, 118.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=67 */
%   | | | else return 0.6419424307941285;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(I, A) )
%   | then return -0.10159632948783621;  // std dev = 5.43e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4436070433927013;  // std dev = 0.547, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.05619354616893644;  // std dev = 3.480, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.22646338884828823;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.10151204759822871;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, H), complex(I, J) )
%   | | | then return 0.4522094669756982;  // std dev = 1.465, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.17064553005302344;  // std dev = 1.835, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.16172733177334167;  // std dev = 1.901, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.3342239478412031;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926092;  // std dev = 5.74e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( phenotype(D, F), complex(A, G) )
%   | | | then return 0.2683196988210324;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23979802005061432;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.4214553633268335;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3662080902108508;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.24436009043625995;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.01542102192361426;  // std dev = 1.250, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10801138130212846;  // std dev = 5.155, 115.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=62 */
%   | | | else return -0.1013918384069646;  // std dev = 1.325, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1876542461835611;  // std dev = 5.10e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21504154704489845;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.32715306314718734;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.28353174727943536;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.18876836889524426;  // std dev = 0.866, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.0033587484386931907;  // std dev = 1.278, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.03284036046695148;  // std dev = 3.443, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | | else return 0.12060606988007617;  // std dev = 3.999, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   else return -0.07877675473109157;  // std dev = 6.18e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), complex(E, G) )
%   | | | then return 0.2540460318453663;  // std dev = 1.295, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.4876478258283142;  // std dev = 0.712, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.5241873347859543;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.4397254482150339;  // std dev = 0.499, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.23802665450153832;  // std dev = 0.356, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.001123184192003812;  // std dev = 2.020, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.0625975342043046;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5006877682483546;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333707;  // std dev = 3.48e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.1320124581821678;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1481461572193922;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, A), phenotype(E, F) )
%   | | | then return 0.38019952004363783;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19582475234134455;  // std dev = 1.275, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.0641754020208766;  // std dev = 1.604, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.18240081016290602;  // std dev = 1.465, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.039206686089872676;  // std dev = 3.694, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.15693620818641119;  // std dev = 1.301, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06842697784420265;  // std dev = 5.10e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, E), phenotype(E, F) )
%   | | | then return 0.10994528018483182;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13053032620045243;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, D), phenotype(G, H) )
%   | | | then return 0.2655143539535755;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18789168400897938;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), phenotype(I, L) )
%   | | | then return 0.009351293730155752;  // std dev = 2.815, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return -0.11712454417791951;  // std dev = 1.567, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.09251420825130516;  // std dev = 2.720, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return -0.013967475888703004;  // std dev = 2.231, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else return -0.06419184008202626;  // std dev = 2.08e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
Inference time using transfer learning 13.078116655349731
Refined model CLL: -0.260691


******************************************
Best model found
******************************************
Results 

CLL : -0.294746 

AUC ROC : 0.920083 

AUC PR : 0.094966 

Precision : 0.038659 

Recall : 0.879859 

F1 : 0.074063 

Total Learning Time : 5.7692155838012695 

Total Inference Time : 2.680189609527588 

Total revision time: 12.805564403533936
Best scored revision CLL: -0.260691


Results 

CLL : -0.294746 

AUC ROC : 0.920083 

AUC PR : 0.094966 

Precision : 0.038659 

Recall : 0.879859 

F1 : 0.074063 

Total Learning Time : 12.815072536468506 

Total Inference Time : 2.680189609527588 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.5679070949554443
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4343078754968609;  // std dev = 0.494, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.33e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3545063890285909;  // std dev = 6.022, 147.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=82 */
%   | else return 0.21334992644355544;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31047145996372205;  // std dev = 0.495, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.48022730533370134;  // std dev = 3.928, 101.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   | else return -0.23855404956069565;  // std dev = 2.197, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.180167318411064;  // std dev = 5.198, 144.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=82 */
%   | else return 0.2465743620405431;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 5.43e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1451570873151057;  // std dev = 5.293, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   | | else return 0.1891634933926329;  // std dev = 0.718, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14581500014260232;  // std dev = 0.422, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109155;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08094697504421039;  // std dev = 5.233, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   | else return 0.6221941944547005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.48e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03967764001691854;  // std dev = 5.416, 159.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06103048419218793;  // std dev = 5.227, 148.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.46e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning 18.787277936935425
Parameter learned model CLL:-0.272483 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 64, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.022, 65, 82], 'true,false': [1.708, 7, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 114, 0], 'false,false,false,false': [5.27e-09, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 64, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.928, 19, 82], 'true,false': [2.197, 51, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.33e-08, 101, 0], 'false,false,false,false': [0.0, 12, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.198, 62, 82], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false': [5.43e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.293, 66, 86], 'true,true,false': [0.718, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 84, 0], 'false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.422, 57, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.66e-08, 115, 0], 'false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.233, 64, 86], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.48e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.416, 72, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.227, 61, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.46e-09, 106, 0]}]
{'': [0.24419981579755487, 6.70323335622736e-17], 'false': [nan, 6.70323335622736e-17]}
{'': [0.2477750088999641, -3.670158759091427e-18], 'true': [0.24665648572354004, 0.24305555555555555], 'false': [nan, -3.670158759091427e-18], 'false,false': [nan, -3.670158759091427e-18], 'false,false,false': [-5.843279076974508e-18, 3.96508223080413e-18]}
{'': [0.24477239642716936, 6.315030048326579e-17], 'false': [nan, 6.315030048326579e-17], 'false,false': [nan, 6.315030048326579e-17]}
{'': [0.2475442472778492, -1.1789979022568034e-17], 'true': [0.15273012449759954, 0.08618325670652847], 'false': [nan, -1.1789979022568034e-17], 'false,false': [nan, -1.1789979022568034e-17], 'false,false,false': [1.0992307174506501e-17, -8.0953762212251e-18]}
{'': [0.1919595144455986, 3.142140635731575e-17], 'true': [0.18764256832399928, 0.24999999999999983], 'false': [nan, 3.142140635731575e-17]}
{'': [0.1852668409664811, 2.993859841685815e-17], 'true': [0.1852668409664811, nan], 'true,true': [0.18428376695571763, 0.2580690521875489], 'false': [nan, 2.993859841685815e-17], 'false,false': [2.9077269692563625e-17, -1.3877787807814458e-18]}
{'': [0.1778297623352798, 3.9454206660232834e-17], 'true': [0.1778297623352798, nan], 'false': [nan, 3.9454206660232834e-17], 'false,false': [3.8616453030440226e-17, -1.1564823173178713e-18]}
{'': [0.18330144094878165, 1.2550347234893074e-17], 'true': [0.18258339391590428, 0.0], 'false': [nan, 1.2550347234893074e-17], 'false,false': [nan, 1.2550347234893074e-17]}
{'': [0.18447604933346207, 2.5463830840026528e-17], 'true': [0.18447604933346207, nan], 'false': [nan, 2.5463830840026528e-17], 'false,false': [nan, 2.5463830840026528e-17]}
{'': [0.18458231291597132, 6.28428127146315e-18], 'true': [0.18458231291597132, nan], 'false': [nan, 6.28428127146315e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 13.64232087135315
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.30259337954395676;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.5399671169176944;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(D, E), location(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7683303882208612;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1828126357692322;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.4671898074299806;  // std dev = 1.820, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.6843620415596982;  // std dev = 0.928, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), recursion_proteinclass(J, B) )
%   | | | then return -0.20897981931668788;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24610334328242195;  // std dev = 2.429, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return 0.4754928004860829;  // std dev = 1.937, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.3400571984168364;  // std dev = 3.869, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   else return -0.12544463852839108;  // std dev = 7.45e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6376678806736559;  // std dev = 0.255, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.18285762097758845;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.2182100814354656;  // std dev = 0.250, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.1340515670992729;  // std dev = 3.085, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.5172942259037857;  // std dev = 1.325, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.17786971351784242;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.21094570659887912;  // std dev = 3.462, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.38732245853890546;  // std dev = 1.362, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.4310390858898758;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6371872618086359;  // std dev = 0.315, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.24510413433524453;  // std dev = 0.143, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.33344156944417924;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.42131943909884045;  // std dev = 0.872, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.1152957726361865;  // std dev = 1.361, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5415150748903174;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18940671597449393;  // std dev = 3.840, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   else return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3623483768746895;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5696747363397833;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14534804919956726;  // std dev = 0.547, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.19872721527164722;  // std dev = 1.176, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.030061795701744623;  // std dev = 2.018, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.12588025703218908;  // std dev = 2.473, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.22396622998858673;  // std dev = 3.389, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   else return -0.09269127618926078;  // std dev = 7.88e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(D, A), interaction(A, F) )
%   | | | then return 0.3141949631854062;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04941449774797846;  // std dev = 1.400, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(D, H), interaction(H, D) )
%   | | | then return 0.1820523609076732;  // std dev = 1.192, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.4978477940754244;  // std dev = 0.249, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(I, K), interaction(A, L) )
%   | | | then return -0.011826570045859764;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28004898169790376;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.044661455540606826;  // std dev = 2.479, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.13326325774608247;  // std dev = 2.914, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.3662061840764022;  // std dev = 0.965, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return 0.0974066373287094;  // std dev = 3.566, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.2280944561297558;  // std dev = 0.260, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.39992583725577086;  // std dev = 0.423, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.4162844142765027;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(I, A) )
%   | then return -0.07877675473109161;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.15926625437728964;  // std dev = 3.821, 113.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=82 */
%   | | | else return -0.26633284614195046;  // std dev = 0.417, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.3228599272338545;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.05393069612694654;  // std dev = 0.456, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( phenotype(A, G) )
%   | then return -0.07324622576333707;  // std dev = 1.83e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333707;  // std dev = 1.67e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.280338967670225;  // std dev = 0.609, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.019479396581610953;  // std dev = 3.700, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.1916237324780572;  // std dev = 0.183, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.28598343717269514;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return -0.010970599687482208;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.4036884435146654;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, J) )
%   | then if ( interaction(A, K) )
%   | | then return -0.06842697784420278;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.06842697784420279;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06842697784420271;  // std dev = 2.63e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, D) )
%   | | | then return 0.17102695237983745;  // std dev = 0.175, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.005521085342594874;  // std dev = 1.234, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.24579268471030039;  // std dev = 0.198, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.5162233594013255;  // std dev = 0.433, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.14868143740096595;  // std dev = 1.607, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.27071432132790507;  // std dev = 0.871, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.01229396558262674;  // std dev = 2.745, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return 0.12230762362734582;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning 60.49970102310181
Refined model CLL: -0.206721


******************************************
Best model found
******************************************
Results 

CLL : -0.234982 

AUC ROC : 0.981021 

AUC PR : 0.390122 

Precision : 0.056886 

Recall : 0.985816 

F1 : 0.107564 

Total Learning Time : 13.64232087135315 

Total Inference Time : 8.549604177474976 

Total revision time: 29.564469575881958
Best scored revision CLL: -0.206721


Results 

CLL : -0.234982 

AUC ROC : 0.981021 

AUC PR : 0.390122 

Precision : 0.056886 

Recall : 0.985816 

F1 : 0.107564 

Total Learning Time : 29.57402753829956 

Total Inference Time : 8.549604177474976 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.5693089962005615
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4172887200457459;  // std dev = 0.496, 186.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048788;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.37085466214701934;  // std dev = 4.721, 91.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=52 */
%   | else return 0.3903351816275388;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839113;  // std dev = 7.60e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.34330239251253175;  // std dev = 0.487, 170.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360615;  // std dev = 8.84e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5755355873758305;  // std dev = 2.873, 108.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=99 */
%   | else return -0.2618876014940771;  // std dev = 2.151, 63.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.24111235908961634;  // std dev = 3.710, 80.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | else return 0.18744112744483507;  // std dev = 3.860, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926079;  // std dev = 6.72e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.22541383948551963;  // std dev = 3.937, 98.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=69 */
%   | | else return 0.061969029458005385;  // std dev = 3.477, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08518475138839685;  // std dev = 3.25e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.042099661744941806;  // std dev = 0.426, 195.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109169;  // std dev = 3.49e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1630322375590504;  // std dev = 3.892, 98.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=69 */
%   | else return 0.03947916665857637;  // std dev = 3.480, 68.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633373;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.056544374202778795;  // std dev = 5.486, 176.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.018326371825267706;  // std dev = 5.714, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning 28.668226957321167
Parameter learned model CLL:-0.270069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 82, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 131, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.721, 39, 52], 'true,false': [4.612, 36, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.6e-08, 135, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.487, 66, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.84e-09, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [2.873, 9, 99], 'true,false': [2.151, 58, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.59e-08, 62, 0], 'false,false,false,false': [5.37e-08, 71, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.71, 28, 52], 'true,false': [3.86, 33, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 132, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [3.937, 29, 69], 'true,true,false': [3.477, 34, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.34e-08, 73, 0], 'false,false,false': [3.25e-08, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.426, 91, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.49e-08, 70, 0], 'false,false,false': [3.25e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.892, 29, 69], 'true,false': [3.48, 33, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 146, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.486, 72, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.714, 80, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 114, 0]}]
{'': [0.24650248583651593, -4.0679927619853064e-17], 'false': [nan, -4.0679927619853064e-17]}
{'': [0.2434380949408592, 3.8616453030440226e-17], 'true': [0.2448979591836735, 0.24173553719008256], 'false': [nan, 3.8616453030440226e-17], 'false,false': [nan, 3.8616453030440226e-17], 'false,false,false': [4.2764146133709734e-17, 0.0]}
{'': [0.2374296889243453, 7.66210256431446e-17], 'false': [nan, 7.66210256431446e-17], 'false,false': [nan, 7.66210256431446e-17]}
{'': [0.23850271449624064, -4.0068199384968053e-17], 'true': [0.07641393199901983, 0.07345703208853213], 'false': [nan, -4.0068199384968053e-17], 'false,false': [nan, -4.0068199384968053e-17], 'false,false,false': [3.40229636578677e-17, 4.065605442289306e-17]}
{'': [0.1744382732118368, 4.37360585458395e-17], 'true': [0.17205983568633784, 0.17528014756577492], 'false': [nan, 4.37360585458395e-17]}
{'': [0.1716767893625795, 3.496765431890257e-17], 'true': [0.1716767893625795, nan], 'true,true': [0.15817904017756257, 0.17517090571228075], 'false': [nan, 3.496765431890257e-17], 'false,false': [2.585450879264063e-17, 1.9531701359146273e-17]}
{'': [0.18144378200694442, 4.3760615569166756e-17], 'true': [0.18144378200694442, nan], 'false': [nan, 4.3760615569166756e-17], 'false,false': [1.7446361815538174e-17, 1.5741968259610428e-17]}
{'': [0.16786874060268053, -1.748981477149219e-17], 'true': [0.15454798512512163, 0.17805421918284417], 'false': [nan, -1.748981477149219e-17], 'false,false': [nan, -1.748981477149219e-17]}
{'': [0.17100267039580175, 2.7300566179307128e-17], 'true': [0.17100267039580175, nan], 'false': [nan, 2.7300566179307128e-17], 'false,false': [nan, 2.7300566179307128e-17]}
{'': [0.17744389044819223, -1.7529837230923523e-17], 'true': [0.17744389044819223, nan], 'false': [nan, -1.7529837230923523e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.900658369064331
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3989652616301254;  // std dev = 4.933, 98.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=53 */
%   | | | else return 0.2672398441904202;  // std dev = 3.994, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   else return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(F, D), phenotype(F, G) )
%   | | | then return 0.2780986313344985;  // std dev = 6.181, 156.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=74 */
%   | | | else return 0.4837266618766452;  // std dev = 1.833, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else return 0.6218689308440856;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(H, A) )
%   | then return -0.12544463852839105;  // std dev = 8.43e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6601028161656213;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6809364551699281;  // std dev = 0.988, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.13161827268369689;  // std dev = 4.565, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.2224200608996357;  // std dev = 2.181, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.45915627256873925;  // std dev = 2.649, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( complex(A, L) )
%   | then return -0.11231637819360632;  // std dev = 4.93e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.11231637819360626;  // std dev = 6.59e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(A, F), enzyme(E, G) )
%   | | then if ( location(A, H), location(E, H) )
%   | | | then return 0.5576201093497759;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3159081613498381;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(E, I), interaction(E, J) )
%   | | | then return 0.035686557841314824;  // std dev = 2.254, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.19054239446237276;  // std dev = 2.461, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( complex(A, L), complex(K, L) )
%   | | | then return 0.09851913300566639;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6005805829601721;  // std dev = 0.964, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.4870126001408406;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21879171976768308;  // std dev = 4.874, 97.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=51 */
%   else return -0.10159632948783638;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | then return 0.40975129602716925;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, E), complex(D, F) )
%   | | | then return 0.03490049439504994;  // std dev = 2.985, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.17706183267108525;  // std dev = 2.112, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(G, I), complex(H, J) )
%   | | | then return 0.145145007925331;  // std dev = 2.722, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.3422248673482599;  // std dev = 3.475, 62.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.22865656367474704;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05154652465423098;  // std dev = 1.753, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926075;  // std dev = 6.84e-09, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(A, A), phenotype(A, E) )
%   | | | then return 0.31552383116565547;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3923623661597769;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2492862284546359;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34817754678322455;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.0034603521170425157;  // std dev = 2.950, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.2286659458121739;  // std dev = 3.433, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.074463701471486;  // std dev = 2.468, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.08482299299848585;  // std dev = 3.344, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   else return -0.0851847513883968;  // std dev = 5.74e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G), interaction(A, H) )
%   | | | then return 0.517563653606033;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42452965196027437;  // std dev = 0.321, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.40636284222498037;  // std dev = 0.194, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12749837378381715;  // std dev = 3.340, 52.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.24823245781616143;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3798705359060821;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return -0.05142618747217843;  // std dev = 5.339, 125.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=50 */
%   | | | else return 0.35645003309638923;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109155;  // std dev = 6.25e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.10620031683255293;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5450588247177384;  // std dev = 0.399, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, H), enzyme(H, E) )
%   | | | then return -0.3481903570878165;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.4888402750704174;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.014317587639801422;  // std dev = 2.808, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return 0.20683943097002688;  // std dev = 1.996, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.046649636501969814;  // std dev = 3.933, 64.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | | | else return -0.08572527619871337;  // std dev = 2.317, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else return -0.07324622576333731;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.21829128638957188;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2025953977172242;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2715247069790693;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2007639430116194;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.08708559328716337;  // std dev = 1.781, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.1025460258777488;  // std dev = 3.094, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.06146622176301172;  // std dev = 4.223, 78.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=43 */
%   | | | else return 0.16188409025577047;  // std dev = 2.241, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.30881893010795397;  // std dev = 0.282, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10687974558924905;  // std dev = 1.439, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.10783450861465159;  // std dev = 0.860, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.14324416301711457;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.11212725340062088;  // std dev = 1.632, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.1915285591545836;  // std dev = 1.768, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0662970067979778;  // std dev = 4.563, 99.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=57 */
%   | | | else return -0.06156490933229679;  // std dev = 2.070, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else return -0.06419184008202626;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
Inference time using transfer learning 9.20762014389038
Refined model CLL: -0.27576


******************************************
Best model found
******************************************
Results 

CLL : -0.266559 

AUC ROC : 0.971849 

AUC PR : 0.181694 

Precision : 0.182488 

Recall : 0.841509 

F1 : 0.299933 

Total Learning Time : 7.900658369064331 

Total Inference Time : 4.3011980056762695 

Total revision time: 20.412466764450073
Best scored revision CLL: -0.270069


Results 

CLL : -0.266559 

AUC ROC : 0.971849 

AUC PR : 0.181694 

Precision : 0.182488 

Recall : 0.841509 

F1 : 0.299933 

Total Learning Time : 20.422024726867676 

Total Inference Time : 4.3011980056762695 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7309801578521729
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41572469267526724;  // std dev = 0.497, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.36419288474056155;  // std dev = 5.521, 124.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=70 */
%   | else return 0.42824818427972977;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839108;  // std dev = 7.45e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2669274936603287;  // std dev = 0.499, 172.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 8.01e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6798657534346192;  // std dev = 2.06e-07, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.06973043146651765;  // std dev = 3.999, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1658817483339331;  // std dev = 4.520, 122.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=70 */
%   | else return 0.24520223756412948;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 5.89e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1234115022324072;  // std dev = 5.182, 149.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=83 */
%   | | else return 0.32809666911327456;  // std dev = 1.609, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.08518475138839689;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10887820497119599;  // std dev = 0.428, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109165;  // std dev = 4.28e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08272746857688207;  // std dev = 5.072, 144.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=83 */
%   | else return 0.06533384731822896;  // std dev = 1.985, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05595291631094102;  // std dev = 5.478, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08783692746148145;  // std dev = 5.172, 148.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
Inference time using transfer learning 25.827828884124756
Parameter learned model CLL:-0.272399 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 73, 92], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.521, 54, 70], 'true,false': [2.859, 13, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-08, 95, 0], 'false,false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 80, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.06e-07, 0, 70], 'true,false': [3.999, 64, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.58e-08, 103, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.52, 52, 70], 'true,false': [3.097, 17, 22], 'false,true': [0.0, 0, 0], 'false,false': [5.89e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.182, 66, 83], 'true,true,false': [1.609, 4, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.05e-08, 86, 0], 'false,false,false': [5.27e-09, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 69, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.28e-08, 79, 0], 'false,false,false': [0.0, 43, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.072, 61, 83], 'true,false': [1.985, 8, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.478, 71, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.172, 56, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 117, 0]}]
{'': [0.24668503213958004, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.24381946916656755, 5.50523813863714e-17], 'true': [0.24583766909469282, 0.23346938775510206], 'false': [nan, 5.50523813863714e-17], 'false,false': [nan, 5.50523813863714e-17], 'false,false,false': [5.843279076974508e-17, -4.270088556250602e-18]}
{'': [0.24872271339382726, 6.586068790149233e-17], 'false': [nan, 6.586068790149233e-17], 'false,false': [nan, 6.586068790149233e-17]}
{'': [0.24152039557423377, -3.868959025208879e-17], 'true': [6.0903663065151445e-16, 0.1859746433643506], 'false': [nan, -3.868959025208879e-17], 'false,false': [nan, -3.868959025208879e-17], 'false,false,false': [6.467318590049456e-18, 0.0]}
{'': [0.1876094073880038, 3.532527805625498e-17], 'true': [0.16745436472762276, 0.24589086127547724], 'false': [nan, 3.532527805625498e-17]}
{'': [0.18485132653805317, 3.416070845000482e-17], 'true': [0.18485132653805317, nan], 'true,true': [0.18023572617552985, 0.19921921617412966], 'false': [nan, 3.416070845000482e-17], 'false,false': [2.9692011123696044e-17, 8.953411488912552e-19]}
{'': [0.18294481570717494, 4.004083039631712e-17], 'true': [0.18294481570717494, nan], 'false': [nan, 4.004083039631712e-17], 'false,false': [2.3188202413057067e-17, 0.0]}
{'': [0.1843065233694593, -4.440892098500626e-18], 'true': [0.17867990719124402, 0.23169667912527342], 'false': [nan, -4.440892098500626e-18], 'false,false': [nan, -4.440892098500626e-18]}
{'': [0.18407415078727604, 2.5232341468753557e-17], 'true': [0.18407415078727604, nan], 'false': [nan, 2.5232341468753557e-17], 'false,false': [nan, 2.5232341468753557e-17]}
{'': [0.18077218742782597, -1.8029262793058098e-17], 'true': [0.18077218742782597, nan], 'false': [nan, -1.8029262793058098e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.238914728164673
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.494512571463148;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2899671169176941;  // std dev = 3.286, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.439967116917693;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   else return -0.14185106490048785;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7393407388002844;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(E, G), phenotype(G, H) )
%   | | | then return 0.13126773623377738;  // std dev = 2.152, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.29584625562601846;  // std dev = 2.242, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.42863162016658435;  // std dev = 2.849, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | | else return 0.3242008391681806;  // std dev = 4.270, 74.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   else if ( interaction(K, A) )
%   | then return -0.1254446385283911;  // std dev = 7.15e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then return 0.5504552665784063;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6108178651345466;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4008928518363706;  // std dev = 5.033, 115.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=76 */
%   | | | else return -0.2603009546992123;  // std dev = 0.060, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20488500619646102;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07137832924373408;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then return -0.11231637819360629;  // std dev = 5.10e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.11231637819360629;  // std dev = 5.10e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.42897844655363765;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.573364587691415;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.6742924415918881;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6338978042334933;  // std dev = 0.445, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else if ( interaction(I, A) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.31413966697232415;  // std dev = 0.181, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.26504862836099946;  // std dev = 0.302, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.09695251715540953;  // std dev = 2.212, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.4639214899937689;  // std dev = 1.479, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then return 0.0139159337914464;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3336142770633825;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4338541678248948;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.32309864262024185;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.04194879488945953;  // std dev = 2.567, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.14135066884947156;  // std dev = 4.208, 110.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=57 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, J) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.28116707989840367;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.008229279553423828;  // std dev = 1.034, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(A, H), complex(D, H) )
%   | | | then return 0.033661567786417004;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05698924728714151;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(I, K), enzyme(A, L) )
%   | | | then return 0.49618161455405146;  // std dev = 0.311, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18330722438727468;  // std dev = 1.807, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.30256312965505233;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13641152581078583;  // std dev = 3.812, 95.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=53 */
%   else return -0.08518475138839678;  // std dev = 4.75e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.3914420219926317;  // std dev = 0.786, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return -0.0653112427263778;  // std dev = 3.183, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.20470087395019418;  // std dev = 0.112, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.30916657995468527;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.027101474152337292;  // std dev = 0.428, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return 0.2529332698055871;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17390195069765235;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.007610427213923573;  // std dev = 1.711, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.09384332747501448;  // std dev = 2.496, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.41406141156389925;  // std dev = 0.306, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.00761939326941459;  // std dev = 1.130, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.4842555648339874;  // std dev = 0.378, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21577752454261634;  // std dev = 1.772, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07324622576333692;  // std dev = 4.75e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(D, G) )
%   | | | then return -0.00228161263349238;  // std dev = 0.618, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.34771984878132367;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.05011222204974208;  // std dev = 1.969, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.0345311119805514;  // std dev = 1.427, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2011240792726204;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03636826738829469;  // std dev = 2.228, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.31014205472299494;  // std dev = 0.951, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.09566295947042384;  // std dev = 1.928, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   else return -0.06842697784420264;  // std dev = 5.02e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.17899236220657108;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11876319321804692;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, F), enzyme(F, G) )
%   | | | then return -0.1484372093586121;  // std dev = 2.099, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.02087721225912988;  // std dev = 2.467, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.46167599839066426;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.11818619275087577;  // std dev = 1.612, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return 0.0332946580008651;  // std dev = 2.225, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   else return -0.06419184008202626;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning 32.68866968154907
Refined model CLL: -0.206649


******************************************
Best model found
******************************************
Results 

CLL : -0.214003 

AUC ROC : 0.978974 

AUC PR : 0.226922 

Precision : 0.102907 

Recall : 0.945848 

F1 : 0.185618 

Total Learning Time : 8.238914728164673 

Total Inference Time : 4.494984865188599 

Total revision time: 17.342857360839844
Best scored revision CLL: -0.206649


Results 

CLL : -0.214003 

AUC ROC : 0.978974 

AUC PR : 0.226922 

Precision : 0.102907 

Recall : 0.945848 

F1 : 0.185618 

Total Learning Time : 17.352415323257446 

Total Inference Time : 4.494984865188599 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6714749336242676
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4595475364981115;  // std dev = 0.490, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.37453155216534695;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=71 */
%   | else return 0.6258976723839275;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29962359499354435;  // std dev = 0.494, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.12e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6606735712461076;  // std dev = 3.32e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.15714400666193287;  // std dev = 3.299, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.16111462432782786;  // std dev = 4.443, 122.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=71 */
%   | else return 0.32106006115967234;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 6.45e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.10833490675453716;  // std dev = 4.898, 137.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=78 */
%   | | else return 0.11110460062315466;  // std dev = 1.805, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06476844473166628;  // std dev = 0.420, 160.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.1297394108691622;  // std dev = 4.398, 122.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=78 */
%   | else return 0.06902366925953714;  // std dev = 1.799, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 4.06e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07194223338641302;  // std dev = 4.940, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.93e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.030642774570313128;  // std dev = 5.120, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.08e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
Inference time using transfer learning 26.801005840301514
Parameter learned model CLL:-0.271235 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 57, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.448, 51, 71], 'true,false': [1.581, 3, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 97, 0], 'false,false,false,false': [0.0, 21, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 61, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.12e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.32e-07, 0, 71], 'true,false': [3.299, 59, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.77e-08, 82, 0], 'false,false,false,false': [0.0, 17, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.443, 51, 71], 'true,false': [2.185, 7, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.45e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.898, 59, 78], 'true,true,false': [1.805, 8, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.05e-08, 86, 0], 'false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.42, 74, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 93, 0], 'false,false,false': [5.27e-09, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.398, 44, 78], 'true,false': [1.799, 8, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.06e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.94, 57, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.93e-09, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.12, 64, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.08e-09, 110, 0]}]
{'': [0.23971832363440954, 5.551115123125783e-17], 'false': [nan, 5.551115123125783e-17]}
{'': [0.23693877551020534, -3.7634678800852764e-18], 'true': [0.2432813759742028, 0.1388888888888887], 'false': [nan, -3.7634678800852764e-18], 'false,false': [nan, -3.7634678800852764e-18], 'false,false,false': [-1.1445598192011922e-17, -5.28677630773884e-18]}
{'': [0.24376161803164142, 6.767073673905717e-17], 'false': [nan, 6.767073673905717e-17], 'false,false': [nan, 6.767073673905717e-17]}
{'': [0.2421726014774513, 1.570012358055777e-17], 'true': [1.551184845673458e-15, 0.14703348484060694], 'false': [nan, 1.570012358055777e-17], 'false,false': [nan, 1.570012358055777e-17], 'false,false,false': [4.06179155350667e-17, -4.89804275569922e-18]}
{'': [0.17353524633683634, 4.0902953538821554e-17], 'true': [0.16179932809603426, 0.2169421487603307], 'false': [nan, 4.0902953538821554e-17]}
{'': [0.17812113516290604, 3.2468786569226275e-17], 'true': [0.17812113516290604, nan], 'true,true': [0.17513403423246443, 0.2036913178931103], 'false': [nan, 3.2468786569226275e-17], 'false,false': [2.9692011123696044e-17, -4.163336342344337e-18]}
{'': [0.17605120831677343, 3.8857805861880476e-17], 'true': [0.17605120831677343, nan], 'false': [nan, 3.8857805861880476e-17], 'false,false': [3.1038493161563513e-17, 1.02798428206033e-18]}
{'': [0.1640032982905525, 1.6168296475123638e-17], 'true': [0.15855628533860117, 0.20227777961394056], 'false': [nan, 1.6168296475123638e-17], 'false,false': [nan, 1.6168296475123638e-17]}
{'': [0.17068030264904047, 2.3401759832785162e-17], 'true': [0.17068030264904047, nan], 'false': [nan, 2.3401759832785162e-17], 'false,false': [nan, 2.3401759832785162e-17]}
{'': [0.1747583459720529, 4.54182146437564e-18], 'true': [0.1747583459720529, nan], 'false': [nan, 4.54182146437564e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.31944727897644
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.3966104735610501;  // std dev = 3.113, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.5022167317096807;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18058030225662544;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.22091612029264562;  // std dev = 2.971, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.41642021271511653;  // std dev = 4.538, 88.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=55 */
%   else if ( interaction(G, A) )
%   | then return -0.1254446385283911;  // std dev = 7.30e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7813279753360702;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2071046000482516;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14250398076045542;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.21976535467419417;  // std dev = 5.690, 130.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=64 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, H) )
%   | | then return -0.11231637819360644;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11231637819360646;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.11231637819360635;  // std dev = 3.95e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6719670769606633;  // std dev = 0.202, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.6003283695372236;  // std dev = 0.976, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.201291123217265;  // std dev = 0.219, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.3327812614006254;  // std dev = 0.132, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.5123804846107698;  // std dev = 1.291, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.031765094640472266;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.478589863061226;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(F, H), enzyme(A, I) )
%   | | | then return 0.22435170392796547;  // std dev = 1.598, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.03314687758123019;  // std dev = 2.162, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.42722763907516514;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1689051418139712;  // std dev = 3.554, 79.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( enzyme(A, L) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3630065447826472;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(A, I) )
%   | | | then return 0.363165400613773;  // std dev = 0.697, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.007572863481033886;  // std dev = 3.435, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.3312372186375574;  // std dev = 1.142, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1218293411780685;  // std dev = 2.720, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   else if ( interaction(L, A) )
%   | then return -0.0851847513883968;  // std dev = 4.56e-09, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.08518475138839682;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( complex(F, G), enzyme(E, H) )
%   | | | then return 0.004162370592748858;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2782098699504641;  // std dev = 0.337, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( enzyme(E, I), phenotype(D, J) )
%   | | | then return 0.2697663960835854;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.04382604641476465;  // std dev = 2.762, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3021373783979101;  // std dev = 1.581, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.4026324133551008;  // std dev = 0.490, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.037039035234397395;  // std dev = 1.135, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3422469664071716;  // std dev = 0.999, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07877675473109155;  // std dev = 6.18e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then return -0.02008234500694242;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, A) )
%   | | | then return 0.1673401946289205;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23368074754329804;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.18555409263598033;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.005400083721493182;  // std dev = 0.837, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.10078822978339326;  // std dev = 2.275, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.016481873211144502;  // std dev = 3.815, 86.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else return -0.07324622576333706;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.18049463931118556;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1453016687297981;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.19455543538513487;  // std dev = 0.759, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.018270823896531597;  // std dev = 1.898, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), phenotype(I, K) )
%   | | | then return 0.2868015640800929;  // std dev = 0.249, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.011045676259473353;  // std dev = 3.255, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.30106126104319336;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.04013251355658217;  // std dev = 1.878, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.1529266469415969;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12719952204558369;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, F), interaction(G, A) )
%   | | | then return 0.06234953647482253;  // std dev = 0.764, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09282293821865904;  // std dev = 2.059, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return -0.0608514451667318;  // std dev = 1.474, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.08741884118073893;  // std dev = 3.011, 78.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=48 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.18134299145292182;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4601055253648056;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning 10.84480595588684
Refined model CLL: -0.220404


******************************************
Best model found
******************************************
Results 

CLL : -0.232705 

AUC ROC : 0.970366 

AUC PR : 0.140354 

Precision : 0.089082 

Recall : 0.939929 

F1 : 0.162741 

Total Learning Time : 5.31944727897644 

Total Inference Time : 2.649427890777588 

Total revision time: 12.224340677261353
Best scored revision CLL: -0.220404


Results 

CLL : -0.232705 

AUC ROC : 0.970366 

AUC PR : 0.140354 

Precision : 0.089082 

Recall : 0.939929 

F1 : 0.162741 

Total Learning Time : 12.233898639678955 

Total Inference Time : 2.649427890777588 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2832517623901367
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4158412427918175;  // std dev = 0.497, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 6.18e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4859325942491407;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | else return 0.34702650549785097;  // std dev = 4.851, 95.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29972598361404323;  // std dev = 0.495, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25493001486031436;  // std dev = 5.974, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.14957362609456787;  // std dev = 3.904, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | else return 0.19611021294841394;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 6.45e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21844772216042474;  // std dev = 3.667, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | | else return 0.1347929179405693;  // std dev = 4.502, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839682;  // std dev = 4.34e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09499622031260654;  // std dev = 0.494, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.0787767547310917;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.10874685509000334;  // std dev = 3.845, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return 0.003302515429426962;  // std dev = 4.874, 93.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=46 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07063186723183872;  // std dev = 5.986, 148.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07892184574524046;  // std dev = 5.787, 142.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning 8.859663248062134
Parameter learned model CLL:-0.337355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 69, 87], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.314, 16, 35], 'true,false': [4.851, 43, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 99, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 65, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 97, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.974, 60, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 32, 0], 'false,false,false,false': [4.71e-08, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.904, 27, 35], 'true,false': [4.686, 38, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.45e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.667, 21, 41], 'true,true,false': [4.502, 35, 46], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.24e-08, 42, 0], 'false,false,false': [4.34e-08, 72, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.494, 64, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 38, 0], 'false,false,false': [3.16e-08, 66, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.845, 24, 41], 'true,false': [4.874, 47, 46], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.986, 61, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.787, 55, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 89, 0]}]
{'': [0.24667159763313826, 3.8616453030440226e-17], 'false': [nan, 3.8616453030440226e-17]}
{'': [0.24080502908613138, -1.1214373986112692e-17], 'true': [0.21530180699730825, 0.24775623268697833], 'false': [nan, -1.1214373986112692e-17], 'false,false': [nan, -1.1214373986112692e-17], 'false,false,false': [nan, -1.1214373986112692e-17]}
{'': [0.2447063994603804, 6.180623023686439e-17], 'false': [nan, 6.180623023686439e-17], 'false,false': [nan, 6.180623023686439e-17]}
{'': [0.24277074444412033, 2.1973164029039556e-17], 'true': [nan, 0.24277074444412033], 'false': [nan, 2.1973164029039556e-17], 'false,false': [nan, 2.1973164029039556e-17], 'false,false,false': [-1.734723475976807e-18, 3.469446951953614e-17]}
{'': [0.24524337720066344, 4.126492657898812e-17], 'true': [0.24583766909469323, 0.24395061728395118], 'false': [nan, 4.126492657898812e-17]}
{'': [0.23749507733840092, 3.311191476952221e-17], 'true': [0.23749507733840092, nan], 'true,true': [0.21686154845417346, 0.2502544900090687], 'false': [nan, 3.311191476952221e-17], 'false,false': [1.1895246692412391e-17, 2.6213599192538418e-17]}
{'': [0.24438829240198656, 3.3093186310942166e-17], 'true': [0.24438829240198656, nan], 'false': [nan, 3.3093186310942166e-17], 'false,false': [0.0, 1.5139404881252134e-17]}
{'': [0.2466270698826742, -9.912705577010326e-19], 'true': [0.22743011156298945, 0.25547022875363845], 'false': [nan, -9.912705577010326e-19], 'false,false': [nan, -9.912705577010326e-19]}
{'': [0.2421351371564513, 2.4671622769447922e-17], 'true': [0.2421351371564513, nan], 'false': [nan, 2.4671622769447922e-17], 'false,false': [nan, 2.4671622769447922e-17]}
{'': [0.23586054799152872, -1.3098136807375442e-17], 'true': [0.23586054799152872, nan], 'false': [nan, -1.3098136807375442e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.474787712097168
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3920472401842575;  // std dev = 5.419, 118.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=63 */
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7858071707418428;  // std dev = 0.153, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.20461812504518453;  // std dev = 0.106, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.2424478262981655;  // std dev = 2.415, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.500731647317084;  // std dev = 3.229, 50.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=35 */
%   else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6258093965070063;  // std dev = 0.151, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.16623198591054428;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6612696212974265;  // std dev = 0.955, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.26342414521093527;  // std dev = 0.309, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.37484544925070623;  // std dev = 1.764, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.20269026066193066;  // std dev = 4.187, 84.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=41 */
%   else return -0.1123163781936062;  // std dev = 8.16e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then return 0.1535162689674619;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.477504800230482;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I), location(A, J) )
%   | | | then return 0.1917741804327673;  // std dev = 3.421, 70.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=37 */
%   | | | else return 0.008281533924646284;  // std dev = 1.571, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.07907483985780007;  // std dev = 1.009, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.28955848708104975;  // std dev = 3.066, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   else if ( complex(A, M) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3342021581551247;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46737753095651124;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, D), complex(G, H) )
%   | | | then return -0.05509117318382233;  // std dev = 2.326, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.2701354362405565;  // std dev = 1.033, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( phenotype(A, K), interaction(J, A) )
%   | | | then return 0.1953967609846887;  // std dev = 0.914, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4799776067702952;  // std dev = 0.230, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.14044370427409097;  // std dev = 1.874, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.24749485325106407;  // std dev = 3.191, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   else return -0.09269127618926086;  // std dev = 6.59e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.2657882848566225;  // std dev = 0.665, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3940302177325905;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.1972770879457561;  // std dev = 1.049, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.006281538577346711;  // std dev = 2.371, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.5421736445491122;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24282158140750623;  // std dev = 1.313, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.2819038415545478;  // std dev = 1.553, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.13431081895562877;  // std dev = 2.918, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   else return -0.08518475138839682;  // std dev = 5.51e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.3148424275666185;  // std dev = 2.608, 89.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=78 */
%   | | | else return -0.246307205627415;  // std dev = 1.678, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.24603683003657478;  // std dev = 0.221, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.4227795455399065;  // std dev = 0.313, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.5025210629856087;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, H) )
%   | then return -0.0787767547310918;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, I) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( complex(E, F), interaction(A, A) )
%   | | | then return 0.20690124966844284;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16308756716801462;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3069818466923048;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.20826200179995907;  // std dev = 0.978, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.05244873176590608;  // std dev = 2.310, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.03805547142075796;  // std dev = 1.445, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.12560827606554914;  // std dev = 2.783, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   else return -0.07324622576333709;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( phenotype(F, E), interaction(D, F) )
%   | | | then return -0.014746048452048556;  // std dev = 2.009, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.12659466740375824;  // std dev = 1.306, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else return -0.1960462330203662;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.395917734200363;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.15757682486835933;  // std dev = 2.507, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | | else return -0.004979271029311515;  // std dev = 1.275, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J) )
%   | | then return -0.06842697784420271;  // std dev = 9.13e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06842697784420272;  // std dev = 7.45e-09, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0.18281865163410924;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2977259116160678;  // std dev = 0.316, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.17526764074364806;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.29738649580131477;  // std dev = 0.234, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.15549968284452295;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17794747447909945;  // std dev = 1.591, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.23344016474958315;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.014083976560384149;  // std dev = 3.339, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   else return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
Inference time using transfer learning 33.25483727455139
Refined model CLL: -0.19815


******************************************
Best model found
******************************************
Results 

CLL : -0.208673 

AUC ROC : 0.986677 

AUC PR : 0.418734 

Precision : 0.098637 

Recall : 0.975177 

F1 : 0.179153 

Total Learning Time : 9.474787712097168 

Total Inference Time : 5.201563119888306 

Total revision time: 17.90688133239746
Best scored revision CLL: -0.19815


Results 

CLL : -0.208673 

AUC ROC : 0.986677 

AUC PR : 0.418734 

Precision : 0.098637 

Recall : 0.975177 

F1 : 0.179153 

Total Learning Time : 17.950079202651978 

Total Inference Time : 5.201563119888306 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6127874851226807
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4524346493852238;  // std dev = 0.491, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.12e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3332049919892823;  // std dev = 4.345, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | else return 0.36645858050602886;  // std dev = 5.188, 110.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3492192774283583;  // std dev = 0.485, 168.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.23e-09, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.271096674026385;  // std dev = 6.327, 169.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1747207164107477;  // std dev = 4.162, 71.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | else return 0.1672135068418492;  // std dev = 5.156, 109.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926072;  // std dev = 6.72e-09, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.23240446592942807;  // std dev = 4.052, 75.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   | | else return 0.14453649674199412;  // std dev = 4.621, 89.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.49e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839685;  // std dev = 4.15e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08659787108417247;  // std dev = 0.492, 179.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109182;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07877675473109165;  // std dev = 4.28e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07964678891411954;  // std dev = 4.491, 84.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=51 */
%   | else return 0.04911625770691147;  // std dev = 4.834, 95.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.0069659762279337505;  // std dev = 7.009, 198.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.59e-09, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08907576845456915;  // std dev = 6.266, 168.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 9.31e-10, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
Inference time using transfer learning 8.951241493225098
Parameter learned model CLL:-0.332542 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 71, 104], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [4.345, 35, 41], 'true,false': [5.188, 47, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 120, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.485, 64, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.23e-09, 131, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.327, 65, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.47e-08, 46, 0], 'false,false,false,false': [5.96e-08, 78, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.162, 30, 41], 'true,false': [5.156, 46, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 149, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.052, 24, 51], 'true,true,false': [4.621, 36, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.49e-08, 58, 0], 'false,false,false': [4.15e-08, 68, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.492, 75, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 51, 0], 'false,false,false': [4.28e-08, 78, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.491, 33, 51], 'true,false': [4.834, 42, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.009, 94, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.59e-09, 153, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.266, 64, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-10, 134, 0]}]
{'': [0.24111020408163572, 6.579099405186112e-17], 'false': [nan, 6.579099405186112e-17]}
{'': [0.24650248583651527, -1.8503717077085942e-18], 'true': [0.24844182825484676, 0.24471074380165211], 'false': [nan, -1.8503717077085942e-18], 'false,false': [nan, -1.8503717077085942e-18], 'false,false,false': [nan, -1.8503717077085942e-18]}
{'': [0.23551168942459869, 6.949487635058232e-17], 'false': [nan, 6.949487635058232e-17], 'false,false': [nan, 6.949487635058232e-17]}
{'': [0.23689744994290993, -2.865091676452017e-17], 'true': [nan, 0.23689744994290993], 'false': [nan, -2.865091676452017e-17], 'false,false': [nan, -2.865091676452017e-17], 'false,false,false': [1.3274405729213829e-17, 4.554761126667309e-17]}
{'': [0.2439640150810012, 4.6197199682389065e-17], 'true': [0.24399920650664547, 0.2439188620486487], 'false': [nan, 4.6197199682389065e-17]}
{'': [0.23224337051358382, 3.6126304769548746e-17], 'true': [0.23224337051358382, nan], 'true,true': [0.2189134357959866, 0.23994561705137227], 'false': [nan, 3.6126304769548746e-17], 'false,false': [2.1055953915304692e-17, 2.5306554237779303e-17]}
{'': [0.2417162108235666, 4.131062417209885e-17], 'true': [0.2417162108235666, nan], 'false': [nan, 4.131062417209885e-17], 'false,false': [-1.0884539457109378e-18, 2.348548705937831e-17]}
{'': [0.24347466367221107, -4.4056469231157e-18], 'true': [0.2401561915940445, 0.245971475301007], 'false': [nan, -4.4056469231157e-18], 'false,false': [nan, -4.4056469231157e-18]}
{'': [0.24812288740848978, 3.120234644371355e-17], 'true': [0.24812288740848978, nan], 'false': [nan, 3.120234644371355e-17], 'false,false': [nan, 3.120234644371355e-17]}
{'': [0.23368950213138023, 8.285246452426541e-19], 'true': [0.23368950213138023, nan], 'false': [nan, 8.285246452426541e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.22195553779602
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), location(F, H) )
%   | | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.3856214625720405;  // std dev = 4.762, 91.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=48 */
%   else return -0.1418510649004879;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.7407727382536722;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.26889356254747687;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7365128730451287;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(A, J) )
%   | | | then return 0.7012570097792935;  // std dev = 1.339, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.22626248011358296;  // std dev = 5.355, 127.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=54 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.7761282277388565;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3901263381810862;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, D) )
%   | | | then return 0.46095715155661393;  // std dev = 0.861, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6504357447186376;  // std dev = 0.242, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.16768829844671188;  // std dev = 0.168, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.3400651470445324;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5883302501503739;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.21943071136435843;  // std dev = 2.745, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.39635877927464414;  // std dev = 3.869, 67.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=43 */
%   else return -0.11231637819360615;  // std dev = 1.04e-07, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B), complex(E, F) )
%   | | then return 0.44381942932024904;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(E, G), interaction(A, E) )
%   | | | then return 0.12821811406981917;  // std dev = 2.797, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.2665352077096572;  // std dev = 4.326, 98.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=59 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.0779522330473222;  // std dev = 0.563, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.6320982908250015;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3595358994202202;  // std dev = 1.140, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( complex(A, J) )
%   | then return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H), phenotype(F, I) )
%   | | | then return 0.21379443686634153;  // std dev = 0.959, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.48318059205637126;  // std dev = 0.798, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.4491611047519335;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2932528913662267;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.08055437649079196;  // std dev = 2.216, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.21130682992334984;  // std dev = 3.584, 73.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.31307974649728404;  // std dev = 0.556, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.055082540909937784;  // std dev = 2.643, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   else return -0.09269127618926083;  // std dev = 6.59e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2869783576276134;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4464314722457946;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.20985457731712315;  // std dev = 1.133, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return -0.046907571186305015;  // std dev = 3.347, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4019541607219348;  // std dev = 0.412, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.2774440826876847;  // std dev = 0.344, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.27188142267645987;  // std dev = 3.215, 59.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | | | else return 0.00430234069150974;  // std dev = 1.344, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(D, F) )
%   | | then return 0.36128276845985696;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.1833182790789638;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2642285612147464;  // std dev = 0.146, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( phenotype(I, K), complex(I, L) )
%   | | | then return 0.06507441408398203;  // std dev = 3.792, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3160680950243371;  // std dev = 1.216, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.019592267467716612;  // std dev = 3.235, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | | else return 0.08154512593355552;  // std dev = 1.594, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   else if ( complex(A, P) )
%   | then return -0.07877675473109179;  // std dev = 1.32e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07877675473109166;  // std dev = 4.66e-09, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( interaction(D, A), complex(E, F) )
%   | | | then return 0.21067601385525467;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.25054611197076937;  // std dev = 0.556, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4317259868977809;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2835982864163516;  // std dev = 0.183, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.26395052429295884;  // std dev = 3.175, 83.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=68 */
%   | | | else return -0.38048236561676574;  // std dev = 0.822, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.21953128349854997;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0557888297369262;  // std dev = 2.627, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   else return -0.07324622576333728;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.18637223701795122;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26316794487308376;  // std dev = 0.235, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( location(H, E), interaction(H, A) )
%   | | | then return -0.12419413083753032;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.22732535951092425;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), complex(K, I) )
%   | | | then return 0.02047130244047812;  // std dev = 1.801, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.19551881764229928;  // std dev = 1.159, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.031129521670082778;  // std dev = 3.805, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.09061648737457961;  // std dev = 1.656, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return -0.06842697784420264;  // std dev = 5.43e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( interaction(A, D), recursion_proteinclass(F, B) )
%   | | | then return 0.3062360246546082;  // std dev = 0.574, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.026022942464134557;  // std dev = 3.980, 121.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=59 */
%   | | else return -0.2386094233177354;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.23575504865829364;  // std dev = 0.157, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2038704549606082;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 3.495907256277214E-4;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2113326708488491;  // std dev = 1.603, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06419184008202626;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
Inference time using transfer learning 11.712435483932495
Refined model CLL: -0.212484


******************************************
Best model found
******************************************
Results 

CLL : -0.209449 

AUC ROC : 0.976818 

AUC PR : 0.435404 

Precision : 0.086073 

Recall : 0.879245 

F1 : 0.156797 

Total Learning Time : 8.22195553779602 

Total Inference Time : 4.121012449264526 

Total revision time: 16.39733362197876
Best scored revision CLL: -0.212484


Results 

CLL : -0.209449 

AUC ROC : 0.976818 

AUC PR : 0.435404 

Precision : 0.086073 

Recall : 0.879245 

F1 : 0.156797 

Total Learning Time : 16.440531492233276 

Total Inference Time : 4.121012449264526 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.5280482769012451
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3899408426139604;  // std dev = 0.499, 173.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 5.89e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3904419408059641;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | else return 0.34922981959384297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40077262026820487;  // std dev = 0.473, 139.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.79e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1631848451731617;  // std dev = 6.725, 181.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1986507114623322;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | else return 0.22172392848217223;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2719338868312736;  // std dev = 3.935, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   | | else return 0.14123048843766675;  // std dev = 4.085, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.07e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.08518475138839685;  // std dev = 2.98e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11707918061260682;  // std dev = 0.490, 152.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109166;  // std dev = 4.01e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.0572408049452868;  // std dev = 4.662, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | else return 0.08541916857392533;  // std dev = 4.046, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333717;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03063819244130498;  // std dev = 6.330, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07121416263517638;  // std dev = 5.975, 150.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 8.406701564788818
Parameter learned model CLL:-0.339537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.499, 81, 92], 'false,true': [0.0, 0, 0], 'false,false': [5.89e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [4.265, 31, 44], 'true,false': [4.671, 40, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.473, 47, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 90, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.725, 89, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.98e-08, 49, 0], 'false,false,false,false': [5.27e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.265, 31, 44], 'true,false': [4.382, 32, 48], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.935, 22, 53], 'true,true,false': [4.085, 29, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.07e-08, 53, 0], 'false,false,false': [2.98e-08, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.49, 60, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 50, 0], 'false,false,false': [4.01e-08, 76, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.662, 37, 53], 'true,false': [4.046, 28, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.33, 71, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.975, 58, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 107, 0]}]
{'': [0.24898927461659506, 3.4455197315953135e-17], 'false': [nan, 3.4455197315953135e-17]}
{'': [0.2458504271895799, -3.640075490574284e-18], 'true': [0.24248888888888862, 0.24793388429751984], 'false': [nan, -3.640075490574284e-18], 'false,false': [nan, -3.640075490574284e-18], 'false,false,false': [nan, -3.640075490574284e-18]}
{'': [0.22400468881072053, 5.921189464667501e-17], 'false': [nan, 5.921189464667501e-17], 'false,false': [nan, 5.921189464667501e-17]}
{'': [0.24987103537547944, -1.881733940042638e-17], 'true': [nan, 0.24987103537547944], 'false': [nan, -1.881733940042638e-17], 'false,false': [nan, -1.881733940042638e-17], 'false,false,false': [1.8126090197961738e-17, 4.022547190670857e-17]}
{'': [0.2413372559165542, 4.306899664494142e-17], 'true': [0.24248888888888903, 0.23999999999999932], 'false': [nan, 4.306899664494142e-17]}
{'': [0.2291975240942167, 3.0958142032816866e-17], 'true': [0.2291975240942167, nan], 'true,true': [0.2064313414353673, 0.24534747055892314], 'false': [nan, 3.0958142032816866e-17], 'false,false': [1.7805463602478925e-17, 1.7415263131375004e-17]}
{'': [0.2399998714298511, 4.1413081077287586e-17], 'true': [0.2399998714298511, nan], 'false': [nan, 4.1413081077287586e-17], 'false,false': [0.0, 2.1181886654032593e-17]}
{'': [0.2428668273215406, -1.343011723336883e-17], 'true': [0.24146937785025316, 0.24428882745114067], 'false': [nan, -1.343011723336883e-17], 'false,false': [nan, -1.343011723336883e-17]}
{'': [0.24579326460072248, 2.5544954548897407e-17], 'true': [0.24579326460072248, nan], 'false': [nan, 2.5544954548897407e-17], 'false,false': [nan, 2.5544954548897407e-17]}
{'': [0.23796787554138155, -1.504507837108857e-17], 'true': [0.23796787554138155, nan], 'false': [nan, -1.504507837108857e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.002396106719971
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), enzyme(E, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.37005369700427365;  // std dev = 4.581, 84.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=43 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.6857351419960641;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.753347983846471;  // std dev = 0.155, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7855512695819117;  // std dev = 0.188, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.1984716231839698;  // std dev = 0.134, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.46998706030877985;  // std dev = 2.545, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.3279380346914194;  // std dev = 3.274, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5545375587825723;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1521716854766048;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.22819709600618512;  // std dev = 1.200, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.2097403307120066;  // std dev = 2.781, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.286256462804154;  // std dev = 4.568, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   else return -0.1123163781936062;  // std dev = 9.54e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(D, D) )
%   | | then return 0.11255186445039629;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.4094995779491346;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5665861219515076;  // std dev = 0.189, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.1792981794001774;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10747995924765397;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.2853312936930069;  // std dev = 2.899, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return 0.1648947929078031;  // std dev = 4.347, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   else if ( complex(A, K) )
%   | then return -0.10159632948783617;  // std dev = 4.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.19145306705168386;  // std dev = 0.468, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04810014917398607;  // std dev = 1.065, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(F, E), phenotype(F, G) )
%   | | | then return 0.4312369377164698;  // std dev = 1.070, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.19786668712561975;  // std dev = 1.793, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3152831965239371;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4530224975439554;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.014610525844194398;  // std dev = 2.170, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.12377882157472649;  // std dev = 4.257, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   else return -0.09269127618926098;  // std dev = 4.37e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2804722826329304;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.019305507232298614;  // std dev = 2.689, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.03593646497429506;  // std dev = 0.849, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2101427184252893;  // std dev = 1.954, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.4230773700707717;  // std dev = 0.752, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.30658654851204487;  // std dev = 0.147, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12278372333845927;  // std dev = 3.921, 77.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   else if ( complex(A, K) )
%   | then return -0.08518475138839685;  // std dev = 4.17e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839683;  // std dev = 4.93e-09, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2546971756298223;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21210344638387477;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3201558269000044;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), enzyme(I, J) )
%   | | | then return 0.1655787379115815;  // std dev = 2.207, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return 0.042789580261112035;  // std dev = 3.789, 74.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.39662360364520716;  // std dev = 0.846, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.11993321681024743;  // std dev = 2.358, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   else if ( complex(A, L) )
%   | then return -0.07877675473109173;  // std dev = 3.23e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109169;  // std dev = 4.17e-09, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), interaction(A, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2397673859527122;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23366050000469532;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), phenotype(G, E) )
%   | | | then return -0.022012112564691197;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3652089098100051;  // std dev = 0.730, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2415399628777961;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06838106150940193;  // std dev = 2.101, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.2266837565667843;  // std dev = 1.499, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.06451646749996914;  // std dev = 4.099, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   else return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.28567838042080324;  // std dev = 0.354, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.4369122577688893;  // std dev = 0.281, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.2795868319654121;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.5192780935167448;  // std dev = 0.439, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), phenotype(J, K) )
%   | | | then return 0.06629733109585714;  // std dev = 1.948, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.4043442211385246;  // std dev = 1.025, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.2498645884541499;  // std dev = 0.884, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.038565455888148505;  // std dev = 2.813, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), complex(A, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1907045143184382;  // std dev = 0.307, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1482669836145251;  // std dev = 1.405, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( complex(E, G), phenotype(E, H) )
%   | | | then return 0.19142687657314802;  // std dev = 1.755, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.0608671600923695;  // std dev = 2.212, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3862268962350573;  // std dev = 0.497, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.40499221313096834;  // std dev = 0.337, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.3542098072886558;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05855934132667371;  // std dev = 2.675, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 12.666980981826782
Refined model CLL: -0.233213


******************************************
Best model found
******************************************
Results 

CLL : -0.245203 

AUC ROC : 0.95164 

AUC PR : 0.194711 

Precision : 0.048961 

Recall : 0.833935 

F1 : 0.092492 

Total Learning Time : 5.002396106719971 

Total Inference Time : 2.648275136947632 

Total revision time: 11.416592836380005
Best scored revision CLL: -0.233213


Results 

CLL : -0.245203 

AUC ROC : 0.95164 

AUC PR : 0.194711 

Precision : 0.048961 

Recall : 0.833935 

F1 : 0.092492 

Total Learning Time : 11.459790706634521 

Total Inference Time : 2.648275136947632 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4760336875915527
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43148226843284326;  // std dev = 0.495, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.35714056523790616;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else return 0.3657680162182965;  // std dev = 5.002, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3054957667168432;  // std dev = 0.495, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23403474637853608;  // std dev = 6.110, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 1.05e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.13433925973005814;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else return 0.16615853437757455;  // std dev = 5.095, 105.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926092;  // std dev = 5.74e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17234263403402192;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | else return 0.16218093925667812;  // std dev = 4.706, 92.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 1.97e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839683;  // std dev = 3.94e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09442326883555893;  // std dev = 0.497, 154.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109162;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1811868898860962;  // std dev = 3.285, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else return 0.0080279188652915;  // std dev = 5.194, 109.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.046321845942872544;  // std dev = 6.208, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.75e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06692810955096336;  // std dev = 5.992, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
Inference time using transfer learning 8.741672039031982
Parameter learned model CLL:-0.32226 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 64, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.51, 22, 28], 'true,false': [5.002, 44, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 99, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 64, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.11, 66, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 41, 0], 'false,false,false,false': [4.71e-08, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.672, 26, 28], 'true,false': [5.095, 47, 58], 'false,true': [0.0, 0, 0], 'false,false': [5.74e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.634, 22, 32], 'true,true,false': [4.706, 38, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.97e-08, 40, 0], 'false,false,false': [3.94e-08, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.497, 68, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 34, 0], 'false,false,false': [4.94e-08, 86, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.285, 16, 32], 'true,false': [5.194, 55, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.208, 70, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 96, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.992, 61, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 88, 0]}]
{'': [0.24462222222222432, 6.00120553851436e-17], 'false': [nan, 6.00120553851436e-17]}
{'': [0.2456717451523544, -1.1214373986112692e-17], 'true': [0.24639999999999895, 0.24529027297193398], 'false': [nan, -1.1214373986112692e-17], 'false,false': [nan, -1.1214373986112692e-17], 'false,false,false': [nan, -1.1214373986112692e-17]}
{'': [0.24460782887432175, 7.021923403612101e-17], 'false': [nan, 7.021923403612101e-17], 'false,false': [nan, 7.021923403612101e-17]}
{'': [0.24562259553512336, 2.1147105230955365e-18], 'true': [nan, 0.24562259553512336], 'false': [nan, 2.1147105230955365e-18], 'false,false': [nan, 2.1147105230955365e-18], 'false,false,false': [2.7078610356711136e-18, 3.469446951953614e-17]}
{'': [0.24829868661342705, 3.289549702593056e-17], 'true': [0.24965706447187952, 0.24725623582766365], 'false': [nan, 3.289549702593056e-17]}
{'': [0.24213547026949822, 3.172065784643304e-17], 'true': [0.24213547026949822, nan], 'true,true': [0.24453385048960852, 0.24068953328782772], 'false': [nan, 3.172065784643304e-17], 'false,false': [9.714451465470119e-18, 2.3912495915003373e-17]}
{'': [0.2466242518593659, 3.9782991715734776e-17], 'true': [0.2466242518593659, nan], 'false': [nan, 3.9782991715734776e-17], 'false,false': [0.0, 2.840105411831796e-17]}
{'': [0.24692813999297392, -1.7763568394002505e-18], 'true': [0.22477038189512466, 0.2475185930997133], 'false': [nan, -1.7763568394002505e-18], 'false,false': [nan, -1.7763568394002505e-18]}
{'': [0.24700897238002475, 2.1973164029039556e-17], 'true': [0.24700897238002475, nan], 'false': [nan, 2.1973164029039556e-17], 'false,false': [nan, 2.1973164029039556e-17]}
{'': [0.24423574629712902, -1.2616170734376778e-17], 'true': [0.24423574629712902, nan], 'false': [nan, -1.2616170734376778e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.502899408340454
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( enzyme(A, G), complex(E, H) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.25437535019385193;  // std dev = 3.561, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.43879409638983374;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7538429985532287;  // std dev = 0.166, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1757191032964901;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3300631571189951;  // std dev = 5.485, 120.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=64 */
%   else return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.6107264488309107;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, D), complex(A, G) )
%   | | | then return 0.05433871368763745;  // std dev = 1.007, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2007303965171503;  // std dev = 2.760, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.3249326129397572;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5984040614670157;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.7385087820377902;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34955476818326914;  // std dev = 4.057, 71.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=44 */
%   else return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(D, D), recursion_proteinclass(F, B) )
%   | | | then return 0.39586644841741253;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0302318191721461;  // std dev = 1.345, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.2792706653878315;  // std dev = 1.010, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5209115985631516;  // std dev = 1.243, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.4424670012468231;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5640974071671414;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.04435752979851476;  // std dev = 2.275, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.1929079731746012;  // std dev = 4.550, 84.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
%   else return -0.10159632948783626;  // std dev = 4.56e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4459063254504523;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6005792177338228;  // std dev = 0.236, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.3708330978416448;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B), interaction(I, A) )
%   | | | then return 0.3484015052913169;  // std dev = 0.156, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.0033800157466275346;  // std dev = 4.036, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.5806404894868624;  // std dev = 0.175, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21616979773954384;  // std dev = 2.939, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   else return -0.0926912761892609;  // std dev = 6.32e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(A, G) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.08828390035659256;  // std dev = 0.720, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5463457131861335;  // std dev = 0.386, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3068616918671954;  // std dev = 1.174, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.049277891241913646;  // std dev = 4.393, 94.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=45 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J), complex(J, I) )
%   | | | then return 0.5160534069936428;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5982516391032328;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.46306195136702116;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15950707200740388;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( phenotype(D, H), complex(A, I) )
%   | | | then return 0.22840451359323824;  // std dev = 0.998, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.0312198430166961;  // std dev = 1.661, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(D, J), location(A, K) )
%   | | | then return 0.17623488270765436;  // std dev = 2.884, 47.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | | else return 0.3925737206421114;  // std dev = 0.572, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then if ( phenotype(L, N) )
%   | | | then return 0.1167094510875219;  // std dev = 1.381, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.1728519047280644;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.05811460172059365;  // std dev = 1.563, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1930455367069746;  // std dev = 1.944, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.07877675473109157;  // std dev = 6.04e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.348266143130777;  // std dev = 0.289, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.09576580073079502;  // std dev = 0.984, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.09666710155886975;  // std dev = 2.431, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.33754331561280515;  // std dev = 0.551, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 5.537570445306389E-4;  // std dev = 4.041, 73.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.4821295959491622;  // std dev = 0.171, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21753303567155916;  // std dev = 0.922, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333707;  // std dev = 4.34e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.1349689982690389;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.25787811986867926;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(E, F), phenotype(D, G) )
%   | | | then return 0.13932186430106036;  // std dev = 1.756, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.3379012300033094;  // std dev = 0.787, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3791823466702683;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.5759493271623581;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06374680253941081;  // std dev = 3.624, 63.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=37 */
%   | | | else return -0.1892561188970397;  // std dev = 1.114, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.06842697784420265;  // std dev = 5.87e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), phenotype(F, D) )
%   | | | then return 0.14618543196511866;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25058740028773746;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.0924776933686361;  // std dev = 1.349, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.1568718695109286;  // std dev = 2.484, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B), complex(A, I) )
%   | | | then return 0.15720788300255792;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1260511847652417;  // std dev = 1.747, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.04837189784402042;  // std dev = 3.611, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | | else return 0.24587635011945372;  // std dev = 0.862, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06419184008202626;  // std dev = 2.98e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 13.06771445274353
Refined model CLL: -0.283917


******************************************
Best model found
******************************************
Results 

CLL : -0.308865 

AUC ROC : 0.912748 

AUC PR : 0.122983 

Precision : 0.030431 

Recall : 0.865724 

F1 : 0.058795 

Total Learning Time : 5.502899408340454 

Total Inference Time : 2.6825339794158936 

Total revision time: 11.713395357131958
Best scored revision CLL: -0.283917


Results 

CLL : -0.308865 

AUC ROC : 0.912748 

AUC PR : 0.122983 

Precision : 0.030431 

Recall : 0.865724 

F1 : 0.058795 

Total Learning Time : 11.756593227386475 

Total Inference Time : 2.6825339794158936 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2908196449279785
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4623156017661767;  // std dev = 0.489, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 6.18e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3853292226436758;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | else return 0.3512486686068613;  // std dev = 4.788, 93.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2832444946978304;  // std dev = 0.497, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2827398587539926;  // std dev = 5.774, 141.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.15992487321800292;  // std dev = 3.904, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | else return 0.18136903295002885;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926079;  // std dev = 6.84e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.10420104028354668;  // std dev = 4.305, 75.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=41 */
%   | | else return 0.18924023254761144;  // std dev = 4.129, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839687;  // std dev = 1.67e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07394068553756825;  // std dev = 0.499, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.0787767547310917;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.2198955092559821;  // std dev = 3.461, 58.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else return 0.016128673739391277;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=46 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0975208144738294;  // std dev = 5.721, 140.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.020566916424292064;  // std dev = 6.109, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
Inference time using transfer learning 8.660522699356079
Parameter learned model CLL:-0.337418 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.489, 57, 87], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.773, 24, 35], 'true,false': [4.788, 41, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 69, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.774, 54, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 29, 0], 'false,false,false,false': [4.21e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.904, 27, 35], 'true,false': [4.686, 38, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.305, 34, 41], 'true,true,false': [4.129, 27, 46], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.67e-08, 38, 0], 'false,false,false': [3.73e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.499, 70, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 44, 0], 'false,false,false': [3.16e-08, 66, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.461, 17, 41], 'true,false': [4.691, 42, 46], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.721, 53, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.109, 66, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 101, 0]}]
{'': [0.23914930555555763, 3.8616453030440226e-17], 'false': [nan, 3.8616453030440226e-17]}
{'': [0.24476281163434788, -5.792467954566034e-18], 'true': [0.24130996839988525, 0.24650248583651332], 'false': [nan, -5.792467954566034e-18], 'false,false': [nan, -5.792467954566034e-18], 'false,false,false': [nan, -5.792467954566034e-18]}
{'': [0.24679170962183383, 6.344131569286608e-17], 'false': [nan, 6.344131569286608e-17], 'false,false': [nan, 6.344131569286608e-17]}
{'': [0.2364712431889089, 3.154042683594195e-17], 'true': [nan, 0.2364712431889089], 'false': [nan, 3.154042683594195e-17], 'false,false': [nan, 3.154042683594195e-17], 'false,false,false': [0.0, 3.010774304068221e-17]}
{'': [0.24483139768343753, 4.545795061457334e-17], 'true': [0.24583766909469337, 0.24395061728395112], 'false': [nan, 4.545795061457334e-17]}
{'': [0.24219914940055493, 3.1086244689504386e-17], 'true': [0.24219914940055493, nan], 'true,true': [0.24705100340121333, 0.23354967318647976], 'false': [nan, 3.1086244689504386e-17], 'false,false': [7.304098846218135e-18, 2.238352872228138e-17]}
{'': [0.2487032058757691, 3.633457171500512e-17], 'true': [0.2487032058757691, nan], 'false': [nan, 3.633457171500512e-17], 'false,false': [0.0, 1.5139404881252134e-17]}
{'': [0.24272879592070662, -1.5735444443506155e-17], 'true': [0.20654088763998857, 0.2500853039390917], 'false': [nan, -1.5735444443506155e-17], 'false,false': [nan, -1.5735444443506155e-17]}
{'': [0.23381001828701048, 2.490219868318108e-17], 'true': [0.23381001828701048, nan], 'false': [nan, 2.490219868318108e-17], 'false,false': [nan, 2.490219868318108e-17]}
{'': [0.24390943358135206, -1.5389230044309102e-17], 'true': [0.24390943358135206, nan], 'false': [nan, -1.5389230044309102e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.836491823196411
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D), location(A, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, E), location(A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.3414822684328467;  // std dev = 5.474, 120.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=58 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( complex(D, F), interaction(D, D) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7745728814837288;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2437936082738627;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.7859837725169001;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5186285617504509;  // std dev = 1.963, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5929393712413203;  // std dev = 1.241, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14711402347512423;  // std dev = 2.330, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7500842284736069;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36644827777732536;  // std dev = 4.006, 66.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=37 */
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(E, G), phenotype(A, F) )
%   | | | then return 0.3987950850926728;  // std dev = 1.565, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.6609732589090771;  // std dev = 0.251, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.6542981921490765;  // std dev = 0.963, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.2863238367112118;  // std dev = 0.281, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4879587494597141;  // std dev = 1.212, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.28013220790792076;  // std dev = 0.183, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.24015915202629112;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.38765419857341205;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.4663942222754024;  // std dev = 0.130, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.033508015642247126;  // std dev = 2.104, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.1901515175837568;  // std dev = 3.929, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.5629171236159112;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2528557879647187;  // std dev = 2.979, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   else if ( complex(A, K) )
%   | then return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3370545289191205;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10702036976581239;  // std dev = 1.459, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2101035277667594;  // std dev = 1.235, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.11565093231626408;  // std dev = 2.116, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4849041384785142;  // std dev = 0.258, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.4083759312522999;  // std dev = 0.230, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.35682980378843593;  // std dev = 1.480, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.16362087020664012;  // std dev = 4.017, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   else return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.29663876755272955;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2882219956761868;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41147235507250135;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.43955182174797963;  // std dev = 0.705, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.0736926172384907;  // std dev = 3.113, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.23009807299128876;  // std dev = 1.397, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.10439711070046485;  // std dev = 3.753, 75.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   else if ( complex(A, K) )
%   | then return -0.08518475138839685;  // std dev = 4.06e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.08518475138839683;  // std dev = 4.84e-09, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.1821542428575748;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3479724964338458;  // std dev = 0.282, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.34207508206948956;  // std dev = 0.313, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.010176347127720482;  // std dev = 2.000, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( enzyme(A, H), phenotype(G, I) )
%   | | | then return 0.02030242613063985;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3717920902955526;  // std dev = 1.349, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.02934021583508886;  // std dev = 1.287, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.13134535894591054;  // std dev = 3.572, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   else return -0.07877675473109157;  // std dev = 5.89e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, D), interaction(A, D) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.19850466470632713;  // std dev = 0.706, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.02059554950742916;  // std dev = 0.809, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.1765920071262561;  // std dev = 1.512, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return -0.0044751972319776;  // std dev = 3.281, 68.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=33 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(J, H), location(J, I) )
%   | | | then return 0.22238346724790542;  // std dev = 2.083, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | | else return 0.06715197860636889;  // std dev = 1.718, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.12309036294086681;  // std dev = 1.262, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0756062980744491;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333709;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.2985147956014973;  // std dev = 2.850, 87.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=78 */
%   | | | else return -0.28289645184470397;  // std dev = 1.701, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.36555683003610573;  // std dev = 0.426, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.4807421992070048;  // std dev = 0.494, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.35002569902230063;  // std dev = 0.701, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.19045119315727704;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, A) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.0684269778442027;  // std dev = 2.46e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then if ( phenotype(A, F), complex(A, H) )
%   | | | then return -0.08596304171867492;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1617473157803728;  // std dev = 0.557, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.23024861080121714;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13330984503691415;  // std dev = 1.649, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.045791992954337724;  // std dev = 1.131, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.21352703528983347;  // std dev = 0.613, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.18656966340345157;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.015662780840299588;  // std dev = 3.852, 98.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=51 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 32.081244707107544
Refined model CLL: -0.217142


******************************************
Best model found
******************************************
Results 

CLL : -0.218254 

AUC ROC : 0.976593 

AUC PR : 0.290081 

Precision : 0.101808 

Recall : 0.91844 

F1 : 0.183298 

Total Learning Time : 9.836491823196411 

Total Inference Time : 5.444891929626465 

Total revision time: 18.476568460464478
Best scored revision CLL: -0.217142


Results 

CLL : -0.218254 

AUC ROC : 0.976593 

AUC PR : 0.290081 

Precision : 0.101808 

Recall : 0.91844 

F1 : 0.183298 

Total Learning Time : 18.502456188201904 

Total Inference Time : 5.444891929626465 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.5826969146728516
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43592671287728724;  // std dev = 0.494, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048793;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3906238146557244;  // std dev = 4.079, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | else return 0.38520596283397157;  // std dev = 5.090, 107.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839105;  // std dev = 8.30e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.28562370282517047;  // std dev = 0.496, 186.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360624;  // std dev = 7.79e-09, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3081873514985286;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.27e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.26591703836865177;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else return 0.12899033769382717;  // std dev = 5.419, 118.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.72e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17648051116819125;  // std dev = 4.258, 80.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=51 */
%   | | else return 0.08732050625232078;  // std dev = 5.060, 100.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 2.69e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.08518475138839683;  // std dev = 3.80e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.15510464343336763;  // std dev = 0.481, 163.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109169;  // std dev = 3.49e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.031503327167937814;  // std dev = 4.606, 89.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=51 */
%   | else return 0.07331592652576194;  // std dev = 4.810, 92.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06594274287102665;  // std dev = 6.456, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.036480423372191845;  // std dev = 6.557, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
Inference time using transfer learning 8.493939876556396
Parameter learned model CLL:-0.338605 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 76, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 135, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [4.079, 28, 41], 'true,false': [5.09, 44, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.3e-08, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 82, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 150, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.102, 58, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27e-08, 70, 0], 'false,false,false,false': [5.58e-08, 84, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.666, 20, 41], 'true,false': [5.419, 55, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.258, 29, 51], 'true,true,false': [5.06, 47, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.69e-08, 49, 0], 'false,false,false': [3.8e-08, 63, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.481, 59, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 49, 0], 'false,false,false': [3.49e-08, 70, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.606, 38, 51], 'true,false': [4.81, 39, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.456, 69, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.557, 73, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 136, 0]}]
{'': [0.2439506172839537, -5.921189464667501e-17], 'false': [nan, -5.921189464667501e-17]}
{'': [0.24173553719007976, 5.5067062021407764e-17], 'true': [0.2411258139046426, 0.2421172154773348], 'false': [nan, 5.5067062021407764e-17], 'false,false': [nan, 5.5067062021407764e-17], 'false,false,false': [nan, 5.5067062021407764e-17]}
{'': [0.24647474151403562, 6.069219201284189e-17], 'false': [nan, 6.069219201284189e-17], 'false,false': [nan, 6.069219201284189e-17]}
{'': [0.2298446444021332, -6.199946760893731e-17], 'true': [nan, 0.2298446444021332], 'false': [nan, -6.199946760893731e-17], 'false,false': [nan, -6.199946760893731e-17], 'false,false,false': [3.9650822308041306e-17, 3.700743415417188e-17]}
{'': [0.24335735643983514, 4.297637514678025e-17], 'true': [0.2203708680462242, 0.24885090491238132], 'false': [nan, 4.297637514678025e-17]}
{'': [0.24493973581621947, 3.271192840413408e-17], 'true': [0.24493973581621947, nan], 'true,true': [0.22668180094984275, 0.256012969719721], 'false': [nan, 3.271192840413408e-17], 'false,false': [1.4727448285843914e-17, 2.2909364000201642e-17]}
{'': [0.23170058185599207, 4.011730257048885e-17], 'true': [0.23170058185599207, nan], 'false': [nan, 4.011730257048885e-17], 'false,false': [0.0, 1.7446361815538174e-17]}
{'': [0.24546614927350693, -9.40866970021319e-18], 'true': [0.23832575776186982, 0.25151404381885084], 'false': [nan, -9.40866970021319e-18], 'false,false': [nan, -9.40866970021319e-18]}
{'': [0.24093214138074043, 2.921639538487254e-17], 'true': [0.24093214138074043, nan], 'false': [nan, 2.921639538487254e-17], 'false,false': [nan, 2.921639538487254e-17]}
{'': [0.24292612268717728, -1.3877787807814457e-17], 'true': [0.24292612268717728, nan], 'false': [nan, -1.3877787807814457e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.05763578414917
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), phenotype(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(D, G), interaction(H, A) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5889181658687433;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=76 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7653832569199563;  // std dev = 0.126, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(E, F), enzyme(A, G) )
%   | | | then return 0.7704903111548821;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.43113277276635725;  // std dev = 2.284, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7907989249994113;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3057743947139783;  // std dev = 5.379, 123.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=63 */
%   else return -0.1254446385283912;  // std dev = 7.30e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.5932127402442494;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2503185115474831;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6186842279494346;  // std dev = 0.123, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.37514431297439826;  // std dev = 5.176, 121.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=81 */
%   | | | else return -0.19205915543042737;  // std dev = 0.189, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.7652230087087448;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4529629867663867;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360615;  // std dev = 1.03e-07, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49483326866180133;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6295211578166615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.35910085032545347;  // std dev = 0.258, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.13846049918484143;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( recursion_proteinclass(I, B), complex(A, J) )
%   | | | then return 0.4943315338771826;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24264877428204615;  // std dev = 3.384, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.060332565588728904;  // std dev = 1.808, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.2109631299124663;  // std dev = 4.116, 79.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   else return -0.10159632948783645;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, A) )
%   | | then return 0.32292262899658397;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, F), interaction(G, A) )
%   | | | then return 0.4488143151940578;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3926471682062657;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I), interaction(H, J) )
%   | | | then return -0.08668352756837315;  // std dev = 2.174, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.16492668604707236;  // std dev = 1.829, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.15860498885037444;  // std dev = 4.712, 116.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=63 */
%   | | | else return 0.2607250652531227;  // std dev = 1.498, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.09269127618926076;  // std dev = 8.02e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(G, H) )
%   | | | then return 0.41697995179891256;  // std dev = 1.266, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.057752066649767515;  // std dev = 4.670, 107.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=54 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3114031510990202;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17918377843831507;  // std dev = 1.777, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), interaction(K, K) )
%   | | | then return 0.1756880982627979;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4901142955528659;  // std dev = 0.236, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.291474447736889;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08645107570466526;  // std dev = 1.770, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( enzyme(D, H), interaction(I, D) )
%   | | | then return 0.14536782426923406;  // std dev = 2.535, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.05120733647800684;  // std dev = 3.251, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | else if ( enzyme(D, J) )
%   | | | then return 0.10785447006800213;  // std dev = 1.858, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.29342372534022937;  // std dev = 1.996, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4737289094048268;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.4230704846586148;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.24539851170631508;  // std dev = 1.042, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.03220908627909226;  // std dev = 1.532, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return -0.07877675473109154;  // std dev = 6.45e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.10354900921209857;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.39021844417367474;  // std dev = 0.485, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return -0.29046517781188347;  // std dev = 0.274, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.4435808885584884;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), interaction(A, A) )
%   | | | then return 0.06714742179353796;  // std dev = 0.493, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.28991089330226943;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.0484558825885895;  // std dev = 2.930, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.07714158825072594;  // std dev = 3.803, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   else return -0.07324622576333728;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(A, E) )
%   | | then return -0.035142092276231184;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1757957449620907;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2857780525503214;  // std dev = 0.200, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.010234492478982195;  // std dev = 2.687, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.10982717584838363;  // std dev = 3.620, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.2664749270080296;  // std dev = 0.555, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.10966062092021654;  // std dev = 2.397, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   else return -0.06842697784420264;  // std dev = 6.05e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), complex(A, G) )
%   | | then if ( interaction(D, H), enzyme(H, I) )
%   | | | then return -0.2120225955566924;  // std dev = 1.354, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.03707098578074714;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3662394562196535;  // std dev = 0.293, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.050817176895347455;  // std dev = 2.096, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(L, A) )
%   | | | then return 0.044456648281710275;  // std dev = 3.070, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | | | else return 0.17577667727008306;  // std dev = 2.718, 56.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else return -0.08425045867724028;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning 14.810238599777222
Refined model CLL: -0.257916


******************************************
Best model found
******************************************
Results 

CLL : -0.255537 

AUC ROC : 0.956729 

AUC PR : 0.250209 

Precision : 0.047381 

Recall : 0.89434 

F1 : 0.089994 

Total Learning Time : 8.05763578414917 

Total Inference Time : 4.63734245300293 

Total revision time: 16.661238431930542
Best scored revision CLL: -0.257916


Results 

CLL : -0.255537 

AUC ROC : 0.956729 

AUC PR : 0.250209 

Precision : 0.047381 

Recall : 0.89434 

F1 : 0.089994 

Total Learning Time : 16.68712615966797 

Total Inference Time : 4.63734245300293 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.5932252407073975
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41912454485560724;  // std dev = 0.496, 164.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 5.89e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4368127247996422;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | else return 0.42250818875597645;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839127;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.27881967417942566;  // std dev = 0.497, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22642517522140249;  // std dev = 6.332, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.15118719596279204;  // std dev = 4.483, 81.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   | else return 0.1631054975166133;  // std dev = 4.639, 87.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.10160295898286201;  // std dev = 4.990, 100.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=53 */
%   | | else return 0.1718834174136186;  // std dev = 3.951, 65.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839683;  // std dev = 3.49e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08013964164595179;  // std dev = 0.499, 170.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.07877675473109169;  // std dev = 3.41e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.11556753458037493;  // std dev = 4.666, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | else return 0.01582044154337944;  // std dev = 4.389, 77.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333722;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.17757106862437835;  // std dev = 5.454, 136.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03198315582432434;  // std dev = 6.249, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 8.63271450996399
Parameter learned model CLL:-0.333377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 72, 92], 'false,true': [0.0, 0, 0], 'false,false': [5.89e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.993, 25, 44], 'true,false': [4.252, 29, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 73, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.332, 71, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.71e-08, 64, 0], 'false,false,false,false': [3.94e-08, 57, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.483, 37, 44], 'true,false': [4.639, 39, 48], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.99, 47, 53], 'true,true,false': [3.951, 26, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.98e-08, 52, 0], 'false,false,false': [3.49e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.499, 78, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 48, 0], 'false,false,false': [3.41e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.666, 37, 53], 'true,false': [4.389, 38, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.454, 44, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.249, 68, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 119, 0]}]
{'': [0.24628197501487453, 3.4455197315953135e-17], 'false': [nan, 3.4455197315953135e-17]}
{'': [0.23306436479639414, 0.0], 'true': [0.23104389834068345, 0.23477820880418096], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.24688309642192852, 6.950961545479241e-17], 'false': [nan, 6.950961545479241e-17], 'false,false': [nan, 6.950961545479241e-17]}
{'': [0.24596477519197762, -2.3856031934094273e-17], 'true': [nan, 0.24596477519197762], 'false': [nan, -2.3856031934094273e-17], 'false,false': [nan, -2.3856031934094273e-17], 'false,false,false': [3.469446951953614e-17, 2.7268635692547703e-17]}
{'': [0.2477497924411159, 4.327988062098068e-17], 'true': [0.24813290656912035, 0.24732461355529137], 'false': [nan, 4.327988062098068e-17]}
{'': [0.2466933586623355, 3.300663046182898e-17], 'true': [0.2466933586623355, nan], 'true,true': [0.24900705557423428, 0.24014028383824715], 'false': [nan, 3.300663046182898e-17], 'false,false': [1.708035422500241e-17, 2.069907334046902e-17]}
{'': [0.2487184778095543, 3.985415985833895e-17], 'true': [0.2487184778095543, nan], 'false': [nan, 3.985415985833895e-17], 'false,false': [0.0, 1.68946982008176e-17]}
{'': [0.24819164960950743, -1.9199345538630526e-17], 'true': [0.241945363093568, 0.2501305073845367], 'false': [nan, -1.9199345538630526e-17], 'false,false': [nan, -1.9199345538630526e-17]}
{'': [0.21875580187601337, 2.5620531337503614e-17], 'true': [0.21875580187601337, nan], 'false': [nan, 2.5620531337503614e-17], 'false,false': [nan, 2.5620531337503614e-17]}
{'': [0.24410092803938005, -1.7259769710559157e-17], 'true': [0.24410092803938005, nan], 'false': [nan, -1.7259769710559157e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 6.453373908996582
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.32064893509951103;  // std dev = 4.460, 80.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=37 */
%   | | | else return 0.4793610563116337;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=41 */
%   else return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7511929852050747;  // std dev = 0.139, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17493633269504139;  // std dev = 1.547, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.26038353100532863;  // std dev = 2.294, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.4193730833913346;  // std dev = 4.898, 103.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   else return -0.12544463852839113;  // std dev = 7.88e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.5475206570756502;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6345267338989681;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(A, G), complex(E, G) )
%   | | | then return -0.12901169739430596;  // std dev = 0.947, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.24402792117593405;  // std dev = 1.914, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3841088626573357;  // std dev = 3.020, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | | | else return 0.23862250168101898;  // std dev = 4.513, 84.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=43 */
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | | then return 0.40910679338500583;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.639202550769162;  // std dev = 0.214, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), interaction(D, E) )
%   | | | then return -0.09681402981711379;  // std dev = 1.423, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.19678145291498184;  // std dev = 4.223, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.29314940399465167;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6239086369199586;  // std dev = 0.169, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.28240064913890456;  // std dev = 3.025, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return 0.027621948168336068;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3349368649124281;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04457699777908465;  // std dev = 1.452, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.4818512092215315;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12870413471852782;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.40486681139473374;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5157578862086033;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.42513523606468523;  // std dev = 0.265, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24221585891652203;  // std dev = 4.315, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   else return -0.09269127618926083;  // std dev = 7.30e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(A, F), phenotype(E, G) )
%   | | then if ( enzyme(D, H), complex(E, I) )
%   | | | then return -0.015329595217573853;  // std dev = 1.265, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.13512731788741975;  // std dev = 1.871, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( interaction(E, D), phenotype(E, J) )
%   | | | then return 0.6142887947065189;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2523181947395651;  // std dev = 2.278, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3527034760354024;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08270664356615418;  // std dev = 3.751, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return -0.012158140491238721;  // std dev = 2.366, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( complex(A, N) )
%   | then return -0.08518475138839686;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.08518475138839683;  // std dev = 4.01e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.2170781536992398;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.45621494844610655;  // std dev = 1.061, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( interaction(A, H), enzyme(H, E) )
%   | | | then return -0.1906517748196092;  // std dev = 0.374, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.48771157181836805;  // std dev = 0.360, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2843850330560568;  // std dev = 3.201, 67.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=53 */
%   | | | else return -0.457047324808919;  // std dev = 0.272, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.4053354406382936;  // std dev = 0.240, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, K) )
%   | then return -0.07877675473109177;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07877675473109169;  // std dev = 4.17e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(G, A) )
%   | | | then return 0.24518458019132197;  // std dev = 0.289, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.03903170956072859;  // std dev = 3.173, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.46994192485092184;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14384096214717698;  // std dev = 0.751, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.12190323148247524;  // std dev = 1.796, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return -0.08644333853012452;  // std dev = 1.589, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.22987429078863195;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09185562585530903;  // std dev = 3.068, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   else return -0.07324622576333711;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.14252241395436221;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20527790954347463;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F), complex(D, G) )
%   | | | then return 0.03243771057710751;  // std dev = 1.395, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.15998072503603292;  // std dev = 1.946, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.39851351221026543;  // std dev = 0.173, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.11363410112964262;  // std dev = 0.627, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.04059668496373686;  // std dev = 2.647, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.10131212548960064;  // std dev = 3.108, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   else return -0.06842697784420264;  // std dev = 5.27e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), interaction(I, G) )
%   | | | then return 0.02491068624730684;  // std dev = 0.626, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3028162199574055;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, J), phenotype(J, K) )
%   | | | then return -0.019268036202351485;  // std dev = 2.109, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return -0.19177634571095653;  // std dev = 2.246, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( complex(A, M), enzyme(A, N) )
%   | | | then return -0.06092956443026814;  // std dev = 0.773, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.18141530780417595;  // std dev = 1.853, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.40605259139482736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.021041147313230913;  // std dev = 3.305, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 15.532203674316406
Refined model CLL: -0.264407


******************************************
Best model found
******************************************
Results 

CLL : -0.271152 

AUC ROC : 0.937981 

AUC PR : 0.133011 

Precision : 0.041768 

Recall : 0.866426 

F1 : 0.079695 

Total Learning Time : 6.453373908996582 

Total Inference Time : 2.9227983951568604 

Total revision time: 13.380601167678833
Best scored revision CLL: -0.264407


Results 

CLL : -0.271152 

AUC ROC : 0.937981 

AUC PR : 0.133011 

Precision : 0.041768 

Recall : 0.866426 

F1 : 0.079695 

Total Learning Time : 13.40648889541626 

Total Inference Time : 2.9227983951568604 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4686899185180664
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43533014315320123;  // std dev = 0.494, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.40521327579244454;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else return 0.35420993131084094;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.26350872265944836;  // std dev = 0.499, 161.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.43e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24795592528196078;  // std dev = 6.061, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2188573442931669;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else return 0.19085063965267923;  // std dev = 5.002, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 4.37e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11578187786854707;  // std dev = 3.749, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | else return 0.1946693587619744;  // std dev = 4.555, 87.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 1.97e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839685;  // std dev = 2.89e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.060276029429577806;  // std dev = 0.499, 162.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 5.27e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.18609137896127018;  // std dev = 3.230, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else return 0.08503351451082906;  // std dev = 4.825, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11089157931724877;  // std dev = 5.666, 137.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.040870210808900256;  // std dev = 5.977, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
Inference time using transfer learning 9.373977184295654
Parameter learned model CLL:-0.337726 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 63, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 100, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.31, 18, 28], 'true,false': [5.065, 46, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 75, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.43e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.061, 64, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 30, 0], 'false,false,false,false': [5.58e-08, 73, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.31, 18, 28], 'true,false': [5.002, 44, 58], 'false,true': [0.0, 0, 0], 'false,false': [4.37e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.749, 26, 32], 'true,true,false': [4.555, 33, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.97e-08, 40, 0], 'false,false,false': [2.89e-08, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.499, 76, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-09, 37, 0], 'false,false,false': [7.45e-09, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.23, 16, 32], 'true,false': [4.825, 40, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.666, 51, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.977, 61, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 98, 0]}]
{'': [0.24404306112337487, 7.993605777301127e-17], 'false': [nan, 7.993605777301127e-17]}
{'': [0.24462222222222152, -8.3790416952842e-18], 'true': [0.23818525519848843, 0.24667159763313526], 'false': [nan, -8.3790416952842e-18], 'false,false': [nan, -8.3790416952842e-18], 'false,false,false': [nan, -8.3790416952842e-18]}
{'': [0.2493647824490879, 7.082457226057034e-17], 'false': [nan, 7.082457226057034e-17], 'false,false': [nan, 7.082457226057034e-17]}
{'': [0.24492216342670445, 6.467318590049456e-18], 'true': [nan, 0.24492216342670445], 'false': [nan, 6.467318590049456e-18], 'false,false': [nan, 6.467318590049456e-18], 'false,false,false': [0.0, 4.258389683493751e-17]}
{'': [0.2432499757142192, 2.0391851472706958e-17], 'true': [0.23818525519848738, 0.24529027297193384], 'false': [nan, 2.0391851472706958e-17]}
{'': [0.24154055161561935, 2.960594732333751e-17], 'true': [0.24154055161561935, nan], 'true,true': [0.24233713868220957, 0.2385201997145413], 'false': [nan, 2.960594732333751e-17], 'false,false': [9.714451465470119e-18, 1.6653345369377347e-17]}
{'': [0.24894755097205806, 2.837236618486511e-17], 'true': [0.24894755097205806, nan], 'false': [nan, 2.837236618486511e-17], 'false,false': [7.50150692314295e-19, 1.047380211910525e-18]}
{'': [0.23969543287163586, -3.2025664171879517e-18], 'true': [0.21737874122340572, 0.24763901274262395], 'false': [nan, -3.2025664171879517e-18], 'false,false': [nan, -3.2025664171879517e-18]}
{'': [0.23432207295042387, 2.308384506646365e-17], 'true': [0.23432207295042387, nan], 'false': [nan, 2.308384506646365e-17], 'false,false': [nan, 2.308384506646365e-17]}
{'': [0.24303862493364922, -1.416100796715761e-17], 'true': [0.24303862493364922, nan], 'false': [nan, -1.416100796715761e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.6553850173950195
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.38242077975970595;  // std dev = 5.068, 103.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=54 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7609943235583198;  // std dev = 0.168, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7932327648890422;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16457386501215204;  // std dev = 3.305, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40199791719673383;  // std dev = 4.131, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   else return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.5540576625073648;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6592695404521102;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, H), location(A, I) )
%   | | | then return 0.022857721742653433;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.2554864969080857;  // std dev = 2.263, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.5777405998781785;  // std dev = 0.969, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2841802988980248;  // std dev = 4.416, 81.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=45 */
%   else return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.4077677931895005;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5013514231914747;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.08985318033991445;  // std dev = 0.695, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17336076331824807;  // std dev = 3.004, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), phenotype(A, K) )
%   | | | then return 0.6907606174027568;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46245777272953104;  // std dev = 1.536, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.41703983401199474;  // std dev = 1.655, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.25975367370242936;  // std dev = 3.133, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   else return -0.1015963294878363;  // std dev = 2.28e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), enzyme(D, G) )
%   | | then if ( complex(D, H), enzyme(A, I) )
%   | | | then return 0.6352273227273396;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2552106262974169;  // std dev = 1.013, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.20421718851235562;  // std dev = 1.210, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.021788599415423993;  // std dev = 3.956, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | else if ( interaction(A, L), complex(A, M) )
%   | | then if ( interaction(N, A), location(A, P) )
%   | | | then return 0.19522504149118525;  // std dev = 1.074, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.6122126576835755;  // std dev = 0.295, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, Q), recursion_proteinclass(Q, B) )
%   | | | then return 0.38946460808020594;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14503954220314044;  // std dev = 3.236, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   else return -0.09269127618926104;  // std dev = 2.79e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3216528557802603;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.009729045554954832;  // std dev = 1.647, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.13041460839376504;  // std dev = 1.546, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.39719966837569143;  // std dev = 1.593, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3982824783870059;  // std dev = 1.934, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return -0.43708746734371473;  // std dev = 0.272, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.5341464244145944;  // std dev = 0.307, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10273760827680906;  // std dev = 2.090, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else return -0.0851847513883968;  // std dev = 5.59e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), complex(A, E) )
%   | | | then return 0.3003484649406591;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21359003502635163;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3531857278116932;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0733853061227043;  // std dev = 2.760, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3582870799091272;  // std dev = 1.644, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.42655908613457394;  // std dev = 0.551, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.18779746974558592;  // std dev = 2.234, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.4334776775128256;  // std dev = 0.312, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109158;  // std dev = 5.89e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.31431298435920413;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20972334603856413;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.16862244435298304;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(H, J), enzyme(I, K) )
%   | | | then return 0.06475032298357425;  // std dev = 2.147, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return -0.1165990282091569;  // std dev = 3.334, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.14061214784577933;  // std dev = 0.983, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11753189318969667;  // std dev = 2.688, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   else return -0.07324622576333709;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.21396281467090447;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4221976094413832;  // std dev = 0.293, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.43268289731821835;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.05396931520256598;  // std dev = 0.540, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16917256386343826;  // std dev = 1.317, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.10794674398410126;  // std dev = 1.653, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.030888053819508456;  // std dev = 3.757, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   else return -0.06842697784420264;  // std dev = 5.37e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.12964269373379003;  // std dev = 1.314, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.11003260334690136;  // std dev = 1.116, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.009315544362673178;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.32774637204362955;  // std dev = 1.948, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), complex(A, K) )
%   | | | then return 0.028311467423571837;  // std dev = 1.078, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.14660769498317006;  // std dev = 1.873, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.17878696788733003;  // std dev = 0.205, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.027064340916168453;  // std dev = 3.043, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning 16.75387144088745
Refined model CLL: -0.243611


******************************************
Best model found
******************************************
Results 

CLL : -0.273633 

AUC ROC : 0.92923 

AUC PR : 0.100215 

Precision : 0.034464 

Recall : 0.879859 

F1 : 0.066329 

Total Learning Time : 5.6553850173950195 

Total Inference Time : 2.676496982574463 

Total revision time: 11.790081262588501
Best scored revision CLL: -0.243611


Results 

CLL : -0.273633 

AUC ROC : 0.92923 

AUC PR : 0.100215 

Precision : 0.034464 

Recall : 0.879859 

F1 : 0.066329 

Total Learning Time : 11.815968990325928 

Total Inference Time : 2.676496982574463 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.437864065170288
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40531874642026444;  // std dev = 0.498, 159.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 4.56e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42633852712267795;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else return 0.42038614617029874;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32549230577578486;  // std dev = 0.490, 145.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360622;  // std dev = 7.57e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22478869690709757;  // std dev = 6.127, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.22801934448327524;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else return 0.18222116752344267;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926092;  // std dev = 5.74e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.09897921695266883;  // std dev = 4.282, 75.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=41 */
%   | | else return 0.17987624605789929;  // std dev = 4.193, 74.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839689;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07308856217077815;  // std dev = 0.498, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07877675473109177;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1390425034606541;  // std dev = 3.871, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return 0.06351169333119605;  // std dev = 4.475, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.014482094766718571;  // std dev = 6.538, 171.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.10e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09747951421460696;  // std dev = 5.772, 141.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning 8.729578018188477
Parameter learned model CLL:-0.330554 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 72, 87], 'false,true': [0.0, 0, 0], 'false,false': [4.56e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.623, 21, 35], 'true,false': [4.451, 32, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.74e-08, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 58, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.57e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.127, 66, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.8e-08, 56, 0], 'false,false,false,false': [4.47e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.623, 21, 35], 'true,false': [4.686, 38, 52], 'false,true': [0.0, 0, 0], 'false,false': [5.74e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.282, 34, 41], 'true,true,false': [4.193, 28, 46], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-09, 31, 0], 'false,false,false': [3.73e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.498, 70, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 36, 0], 'false,false,false': [1.83e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.871, 24, 41], 'true,false': [4.475, 35, 46], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.538, 84, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.772, 54, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 120, 0]}]
{'': [0.2477750088999666, 1.8659210497901792e-17], 'false': [nan, 1.8659210497901792e-17]}
{'': [0.23525510204081454, 5.82058673104451e-17], 'true': [0.2343750000000009, 0.23582766439909092], 'false': [nan, 5.82058673104451e-17], 'false,false': [nan, 5.82058673104451e-17], 'false,false,false': [nan, 5.82058673104451e-17]}
{'': [0.24000688126462563, 5.71599973074338e-17], 'false': [nan, 5.71599973074338e-17], 'false,false': [nan, 5.71599973074338e-17]}
{'': [0.2453351242775204, -1.8978171361113787e-17], 'true': [nan, 0.2453351242775204], 'false': [nan, -1.8978171361113787e-17], 'false,false': [nan, -1.8978171361113787e-17], 'false,false,false': [2.577303450022685e-17, 3.276067941516855e-17]}
{'': [0.2407737087209538, 3.39234813079909e-17], 'true': [0.23437500000000014, 0.24395061728395045], 'false': [nan, 3.39234813079909e-17]}
{'': [0.24270575045163556, 3.1038493161563513e-17], 'true': [0.24270575045163556, nan], 'true,true': [0.24450106015413103, 0.23759205431154906], 'false': [nan, 3.1038493161563513e-17], 'false,false': [8.953411488912552e-19, 2.238352872228138e-17]}
{'': [0.2480969041686074, 3.0169103930031426e-17], 'true': [0.2480969041686074, nan], 'false': [nan, 3.0169103930031426e-17], 'false,false': [-7.709882115452476e-19, 5.9476233462061954e-18]}
{'': [0.24120934290626095, -1.5735444443506155e-17], 'true': [0.2305529110981395, 0.24722094633059027], 'false': [nan, -1.5735444443506155e-17], 'false,false': [nan, -1.5735444443506155e-17]}
{'': [0.24999064370904708, 2.577303450022685e-17], 'true': [0.24999064370904708, nan], 'false': [nan, 2.577303450022685e-17], 'false,false': [nan, 2.577303450022685e-17]}
{'': [0.2362571218401969, -1.850371707708594e-17], 'true': [0.2362571218401969, nan], 'false': [nan, -1.850371707708594e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 7.166500806808472
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.39148226843284567;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.4048156017661789;  // std dev = 4.311, 75.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=41 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), interaction(A, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3352111119997128;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( location(A, F), enzyme(A, G) )
%   | | | then return 0.13789894675932585;  // std dev = 2.080, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.3015788455392109;  // std dev = 2.116, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29568902346129394;  // std dev = 2.817, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.36684144253028966;  // std dev = 2.701, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.5015983026783412;  // std dev = 2.655, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   else return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.600517371888296;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7311587227488602;  // std dev = 0.219, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.20213096402776598;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2799520081114984;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), complex(I, K) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.688963541585587;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16551309813406087;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.24533263472375946;  // std dev = 4.576, 86.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   else return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.43787900028413007;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14572873185710108;  // std dev = 2.001, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( phenotype(D, H), interaction(I, D) )
%   | | | then return 0.43088604388745955;  // std dev = 2.068, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return 0.206377037073397;  // std dev = 1.813, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), phenotype(L, M) )
%   | | | then return 0.2356367171334683;  // std dev = 2.810, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return 0.023368872327888295;  // std dev = 1.938, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.22790000573131206;  // std dev = 0.976, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6814850570143168;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.3143550192225325;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4668522708541465;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4957582526857308;  // std dev = 0.314, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.24008585673000232;  // std dev = 0.158, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.17118834218339934;  // std dev = 2.594, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.08191886479265482;  // std dev = 3.783, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   else return -0.09269127618926097;  // std dev = 4.47e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.2508335651444423;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.35464828729687586;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.21349900418270676;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.14195876799080087;  // std dev = 3.057, 53.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | | | else return 0.03466231504659235;  // std dev = 4.255, 98.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=45 */
%   else if ( complex(A, I) )
%   | then return -0.08518475138839686;  // std dev = 1.97e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.08518475138839683;  // std dev = 4.21e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then return 0.20632329438635696;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2555829098033606;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28554475215065656;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I), complex(A, J) )
%   | | | then return 0.20007636385215027;  // std dev = 1.042, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.02344210851554927;  // std dev = 2.226, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.13897259585125632;  // std dev = 4.001, 87.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=52 */
%   | | | else return 7.555178667854558E-4;  // std dev = 1.551, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( complex(A, M) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07877675473109169;  // std dev = 3.84e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.19265042868734833;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.04050843095464913;  // std dev = 1.283, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.19337957423761484;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.4221222639831751;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.12222358227869133;  // std dev = 4.013, 95.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=60 */
%   | | | else return -0.3315799237127191;  // std dev = 0.573, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.15871987550480926;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, F) )
%   | | then if ( complex(D, G), complex(A, H) )
%   | | | then return -0.026603130736475248;  // std dev = 2.768, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | | else return 0.0708384146221302;  // std dev = 3.723, 88.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=50 */
%   | | else if ( location(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.09888848897943596;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.4548702491197583;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then return 0.13600469363524;  // std dev = 0.321, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.3240726883696926;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5379775992140546;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, L) )
%   | then return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21091052510218825;  // std dev = 0.144, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4154646454843261;  // std dev = 0.380, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.23708833988842565;  // std dev = 0.158, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.4341745134233893;  // std dev = 0.624, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), location(A, K) )
%   | | | then return 0.11531061987182635;  // std dev = 0.797, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.13942906418049184;  // std dev = 1.982, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.025101057356454952;  // std dev = 1.576, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.12422174379819108;  // std dev = 3.027, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   else return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning 12.001650333404541
Refined model CLL: -0.216065


******************************************
Best model found
******************************************
Results 

CLL : -0.242712 

AUC ROC : 0.966089 

AUC PR : 0.230983 

Precision : 0.057932 

Recall : 0.921986 

F1 : 0.109015 

Total Learning Time : 7.166500806808472 

Total Inference Time : 3.205192804336548 

Total revision time: 13.663440227508545
Best scored revision CLL: -0.216065


Results 

CLL : -0.242712 

AUC ROC : 0.966089 

AUC PR : 0.230983 

Precision : 0.057932 

Recall : 0.921986 

F1 : 0.109015 

Total Learning Time : 13.689384460449219 

Total Inference Time : 3.205192804336548 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4719970226287842
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44571955656843604;  // std dev = 0.492, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42559777807453075;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return 0.3523506711991055;  // std dev = 5.280, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839116;  // std dev = 7.60e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32692798959328107;  // std dev = 0.490, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360615;  // std dev = 8.84e-09, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2210877560766183;  // std dev = 6.729, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3133321913916746;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else return 0.21156942483187025;  // std dev = 5.020, 105.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926079;  // std dev = 6.59e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17615138597000146;  // std dev = 4.192, 79.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=51 */
%   | | else return 0.14700649761549672;  // std dev = 4.733, 89.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07134247805762227;  // std dev = 0.496, 183.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.07877675473109164;  // std dev = 4.59e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.0578382469257005;  // std dev = 4.509, 87.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | else return 0.06884583449547546;  // std dev = 4.855, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 9.31e-10, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06997506546158586;  // std dev = 6.457, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04953826844807292;  // std dev = 6.479, 174.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
Inference time using transfer learning 8.37839388847351
Parameter learned model CLL:-0.339317 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 73, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.891, 24, 41], 'true,false': [5.28, 50, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.6e-08, 136, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 69, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.84e-09, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.729, 80, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.49e-08, 53, 0], 'false,false,false,false': [5.37e-08, 87, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.392, 16, 41], 'true,false': [5.02, 42, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.192, 28, 51], 'true,true,false': [4.733, 36, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.33e-08, 56, 0], 'false,false,false': [4.34e-08, 73, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.496, 79, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.07e-08, 65, 0], 'false,false,false': [4.59e-08, 82, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.509, 36, 51], 'true,false': [4.855, 40, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [9.31e-10, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.457, 69, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.479, 70, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 137, 0]}]
{'': [0.2423313862555491, -3.75767792950053e-17], 'false': [nan, -3.75767792950053e-17]}
{'': [0.2428986239111232, 4.244970388272657e-17], 'true': [0.23289940828402309, 0.24669120526274357], 'false': [nan, 4.244970388272657e-17], 'false,false': [nan, 4.244970388272657e-17], 'false,false,false': [nan, 4.244970388272657e-17]}
{'': [0.23969603379094753, 7.612957883143931e-17], 'false': [nan, 7.612957883143931e-17], 'false,false': [nan, 7.612957883143931e-17]}
{'': [0.24606345028010848, -4.7580986769649563e-17], 'true': [nan, 0.24606345028010848], 'false': [nan, -4.7580986769649563e-17], 'false,false': [nan, -4.7580986769649563e-17], 'false,false,false': [2.3042364662031552e-17, 3.317907889684376e-17]}
{'': [0.22895898802275272, 4.4408920985006264e-17], 'true': [0.20190827947060655, 0.24000000000000007], 'false': [nan, 4.4408920985006264e-17]}
{'': [0.23813826719210138, 3.52861581470011e-17], 'true': [0.23813826719210138, nan], 'true,true': [0.22246277877436998, 0.2516530330093629], 'false': [nan, 3.52861581470011e-17], 'false,false': [1.9825411154020653e-17, 2.585450879264063e-17]}
{'': [0.24584591114097615, 4.531522549490435e-17], 'true': [0.24584591114097615, nan], 'false': [nan, 4.531522549490435e-17], 'false,false': [1.4518301091252048e-17, 2.572467983887558e-17]}
{'': [0.2438829886543415, 9.329605248950895e-19], 'true': [0.23364358047708406, 0.2534032258101037], 'false': [nan, 9.329605248950895e-19], 'false,false': [nan, 9.329605248950895e-19]}
{'': [0.24101062684855354, 2.5232341468753557e-17], 'true': [0.24101062684855354, nan], 'false': [nan, 2.5232341468753557e-17], 'false,false': [nan, 2.5232341468753557e-17]}
{'': [0.2412513929997332, -1.2966108316790149e-17], 'true': [0.2412513929997332, nan], 'false': [nan, -1.2966108316790149e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.51611590385437
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4909614350995109;  // std dev = 5.454, 128.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=81 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.7564982211087652;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.610685382261286;  // std dev = 0.809, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( complex(G, F), location(A, H) )
%   | | | then return 0.07074210730927502;  // std dev = 2.195, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.36017152768203076;  // std dev = 2.093, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.2770338834883965;  // std dev = 3.403, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | | | else return 0.42855576809693896;  // std dev = 3.988, 72.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=46 */
%   else return -0.1254446385283911;  // std dev = 7.88e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G), complex(D, H) )
%   | | | then return 0.15945382806524422;  // std dev = 1.518, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.6009425583858627;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( recursion_proteinclass(E, B), complex(D, I) )
%   | | | then return 0.6108696423137198;  // std dev = 1.535, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.21117197308079944;  // std dev = 5.151, 118.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=56 */
%   | else if ( phenotype(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.505656484150127;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41113119107139723;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6957340547520439;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360615;  // std dev = 1.04e-07, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), complex(F, G) )
%   | | | then return 0.5976584521549798;  // std dev = 0.190, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6693712479995026;  // std dev = 0.217, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.22469784091155606;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2884169034513178;  // std dev = 0.183, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L), phenotype(K, M) )
%   | | | then return 0.38523798590282843;  // std dev = 1.787, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1759483843620316;  // std dev = 3.271, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.49300327744705497;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12495908770089481;  // std dev = 3.302, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   else return -0.10159632948783642;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, A) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.3901059445049446;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3229052878137753;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3673727986841335;  // std dev = 0.956, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.027902468248421543;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.33190213823993525;  // std dev = 1.056, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.18224805549076267;  // std dev = 4.743, 117.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=68 */
%   else return -0.0926912761892608;  // std dev = 7.60e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.29766033660748825;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.45894876904373244;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.08883635785136909;  // std dev = 4.565, 111.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=58 */
%   | | | else return 0.2042044786809831;  // std dev = 1.835, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.19837726938837497;  // std dev = 0.629, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0880401031328915;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.3464347141800976;  // std dev = 1.139, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.239251953649704;  // std dev = 1.224, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.0851847513883968;  // std dev = 5.96e-09, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.25469870141440426;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.009055132341001337;  // std dev = 2.412, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.446878045306271;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0933635115499094;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.21848975256692207;  // std dev = 1.930, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.47017848225393716;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2704399761869781;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12079748136775581;  // std dev = 3.693, 79.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=46 */
%   else return -0.0787767547310915;  // std dev = 6.91e-09, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return -0.17939325288061753;  // std dev = 1.738, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.053279494695035866;  // std dev = 1.114, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3827990054720469;  // std dev = 0.504, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.0981244507223977;  // std dev = 2.212, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.39928448166335345;  // std dev = 0.156, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.33074580896880174;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03642200059939943;  // std dev = 4.107, 81.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=45 */
%   | | | else return 0.20845937895134567;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333732;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.01302681416016443;  // std dev = 3.055, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.11183077595096275;  // std dev = 3.274, 73.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31676651230182856;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.6764069025978742;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33530610081190887;  // std dev = 0.310, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.4423703080581349;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.48830929953930663;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31173542942379473;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420264;  // std dev = 6.14e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.28220373169621676;  // std dev = 0.885, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.019256905177576916;  // std dev = 0.905, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.35135203728841335;  // std dev = 0.505, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.027321357904134265;  // std dev = 2.526, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.2192547810415792;  // std dev = 0.424, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.38284789222698024;  // std dev = 0.236, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.17939966962293674;  // std dev = 1.030, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.03456009799550814;  // std dev = 3.320, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   else return -0.06419184008202626;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
Inference time using transfer learning 17.0096333026886
Refined model CLL: -0.242872


******************************************
Best model found
******************************************
Results 

CLL : -0.271839 

AUC ROC : 0.959961 

AUC PR : 0.24405 

Precision : 0.047273 

Recall : 0.958491 

F1 : 0.090103 

Total Learning Time : 9.51611590385437 

Total Inference Time : 6.225617170333862 

Total revision time: 19.580386877059937
Best scored revision CLL: -0.242872


Results 

CLL : -0.271839 

AUC ROC : 0.959961 

AUC PR : 0.24405 

Precision : 0.047273 

Recall : 0.958491 

F1 : 0.090103 

Total Learning Time : 19.60633111000061 

Total Inference Time : 6.225617170333862 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4701032638549805
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43314893509950975;  // std dev = 0.494, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.90e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41658922914741225;  // std dev = 4.091, 71.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=44 */
%   | else return 0.3021340771829946;  // std dev = 4.873, 95.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.35475854270687984;  // std dev = 0.485, 148.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2286979415425625;  // std dev = 6.293, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1621153852026452;  // std dev = 4.342, 77.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=44 */
%   | else return 0.16976961802833188;  // std dev = 4.639, 87.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892609;  // std dev = 5.89e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15009356358878093;  // std dev = 4.604, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | else return 0.11271680108834718;  // std dev = 4.286, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839685;  // std dev = 3.49e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.14586839277919084;  // std dev = 0.486, 150.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109179;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.023063371809377484;  // std dev = 4.900, 99.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=53 */
%   | else return 0.06464607759197519;  // std dev = 4.210, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1016554596055801;  // std dev = 5.946, 149.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.020671591309819968;  // std dev = 6.356, 164.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
Inference time using transfer learning 7.952412128448486
Parameter learned model CLL:-0.329243 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 68, 92], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [4.091, 27, 44], 'true,false': [4.873, 47, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.485, 56, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.293, 69, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.8e-08, 55, 0], 'false,false,false,false': [4.47e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.342, 33, 44], 'true,false': [4.639, 39, 48], 'false,true': [0.0, 0, 0], 'false,false': [5.89e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.604, 37, 53], 'true,true,false': [4.286, 33, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.98e-08, 52, 0], 'false,false,false': [3.49e-08, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.486, 58, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 49, 0], 'false,false,false': [1.29e-08, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.9, 46, 53], 'true,false': [4.21, 31, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.946, 57, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.356, 72, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 153, 0]}]
{'': [0.24437500000000245, 6.055761952500853e-17], 'false': [nan, 6.055761952500853e-17]}
{'': [0.24706053128175273, -6.22554967079527e-18], 'true': [0.23566752628446677, 0.24997229916897412], 'false': [nan, -6.22554967079527e-18], 'false,false': [nan, -6.22554967079527e-18], 'false,false,false': [nan, -6.22554967079527e-18]}
{'': [0.2349975329044544, 6.863196879500968e-17], 'false': [nan, 6.863196879500968e-17], 'false,false': [nan, 6.863196879500968e-17]}
{'': [0.24597832932907057, -1.5313421029312504e-17], 'true': [nan, 0.24597832932907057], 'false': [nan, -1.5313421029312504e-17], 'false,false': [nan, -1.5313421029312504e-17], 'false,false,false': [2.62416351275037e-17, 3.276067941516855e-17]}
{'': [0.24619986209726633, 3.463080994243608e-17], 'true': [0.2448979591836733, 0.2473246135552907], 'false': [nan, 3.463080994243608e-17]}
{'': [0.24455121477145805, 3.3306690738754695e-17], 'true': [0.24455121477145805, nan], 'true,true': [0.23548825645346988, 0.25510378912726894], 'false': [nan, 3.3306690738754695e-17], 'false,false': [1.708035422500241e-17, 2.1055953915304692e-17]}
{'': [0.23610041154698186, 3.4492365813597093e-17], 'true': [0.23610041154698186, nan], 'false': [nan, 3.4492365813597093e-17], 'false,false': [0.0, 3.0839528461809902e-18]}
{'': [0.24737300703621215, -1.5735444443506155e-17], 'true': [0.24251654662788616, 0.2532285123320457], 'false': [nan, -1.5735444443506155e-17], 'false,false': [nan, -1.5735444443506155e-17]}
{'': [0.23725345625606362, 2.686023446673766e-17], 'true': [0.23725345625606362, nan], 'false': [nan, 2.686023446673766e-17], 'false,false': [nan, 2.686023446673766e-17]}
{'': [0.24634587615875697, -9.433267529494795e-18], 'true': [0.24634587615875697, nan], 'false': [nan, -9.433267529494795e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.14197850227356
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.4735335504841277;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.3493770052749509;  // std dev = 5.338, 114.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=56 */
%   else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.49212863289853426;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7670994617524468;  // std dev = 0.145, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.24417170672929872;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.1496175384697669;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.3329826018518885;  // std dev = 4.989, 102.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=54 */
%   | | | else return 0.5319564536306834;  // std dev = 2.093, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.5569762958386478;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6359614324944918;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.13234869733139035;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.027582663879400813;  // std dev = 1.447, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.23614071842193457;  // std dev = 5.185, 111.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=54 */
%   | | | else return 0.39891356973817377;  // std dev = 2.585, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( phenotype(A, E), location(A, F) )
%   | | | then return 0.4441256701633581;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4128635251609225;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.46611315651455776;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5118882841104895;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6792299701438024;  // std dev = 0.176, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.2873248876429692;  // std dev = 0.294, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.348916497082391;  // std dev = 2.107, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.20816227595084613;  // std dev = 4.617, 87.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=46 */
%   else return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, E), complex(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3714830342842556;  // std dev = 0.192, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08056146747341261;  // std dev = 2.982, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.4951378489047783;  // std dev = 1.588, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.2564054931862492;  // std dev = 2.703, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5069975615364304;  // std dev = 0.206, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.4140553137189409;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.0269567713378163;  // std dev = 2.226, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1772734842746785;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.09269127618926096;  // std dev = 5.05e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.2862418541101465;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23430619486218773;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4381173457454871;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), interaction(F, H) )
%   | | | then return -0.03443138134312862;  // std dev = 2.232, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.10153286694046564;  // std dev = 2.893, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.0680555877628124;  // std dev = 2.816, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.24274038178934867;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   else if ( complex(A, K) )
%   | then return -0.08518475138839683;  // std dev = 4.08e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.08518475138839683;  // std dev = 4.21e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(E, G) )
%   | | | then return 0.22985924853876238;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2018046774068516;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32594039111664663;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(H, K) )
%   | | | then return -0.06476483343550915;  // std dev = 1.642, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.12760107212751984;  // std dev = 2.010, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.21465912988048202;  // std dev = 1.999, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.0859906450678989;  // std dev = 4.238, 84.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
%   else if ( complex(A, N) )
%   | then return -0.07877675473109172;  // std dev = 3.48e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07877675473109169;  // std dev = 4.17e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), complex(A, G) )
%   | | then if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.0310651671783598;  // std dev = 1.178, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.4822471896591347;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.244902297406549;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05553917364989816;  // std dev = 3.382, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.39390016695619784;  // std dev = 0.721, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.32602826849387184;  // std dev = 0.549, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05947804006627413;  // std dev = 1.853, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.250376368680203;  // std dev = 2.141, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else return -0.07324622576333721;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F), interaction(D, D) )
%   | | then return 0.3205741332003719;  // std dev = 0.253, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G), complex(G, E) )
%   | | | then return 0.060950709281920874;  // std dev = 2.070, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | | else return 0.23897910038029196;  // std dev = 1.273, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.13011973591241685;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.16891290529325667;  // std dev = 2.096, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.43338935545395596;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.038612673978879464;  // std dev = 3.841, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   else if ( complex(A, L) )
%   | then return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.16678622088416317;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1679019263138324;  // std dev = 1.166, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( location(D, E), phenotype(A, G) )
%   | | | then return 0.1726321321140147;  // std dev = 1.665, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.05721072941383272;  // std dev = 3.821, 80.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=46 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.15795324924253712;  // std dev = 0.849, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.03692796539221151;  // std dev = 1.752, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.17871186517343532;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.09364656480453448;  // std dev = 0.952, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
Inference time using transfer learning 9.42771029472351
Refined model CLL: -0.26325


******************************************
Best model found
******************************************
Results 

CLL : -0.276469 

AUC ROC : 0.902289 

AUC PR : 0.099489 

Precision : 0.032306 

Recall : 0.700361 

F1 : 0.061764 

Total Learning Time : 5.14197850227356 

Total Inference Time : 2.526066541671753 

Total revision time: 11.269045352935791
Best scored revision CLL: -0.26325


Results 

CLL : -0.276469 

AUC ROC : 0.902289 

AUC PR : 0.099489 

Precision : 0.032306 

Recall : 0.700361 

F1 : 0.061764 

Total Learning Time : 11.294989585876465 

Total Inference Time : 2.526066541671753 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.445030927658081
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40245273256786435;  // std dev = 0.498, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3975390693005607;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | else return 0.399732532779392;  // std dev = 4.829, 97.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3198175748254134;  // std dev = 0.492, 146.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.79e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2606701930167303;  // std dev = 5.886, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1633684873518795;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else return 0.17147089088061462;  // std dev = 5.002, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926089;  // std dev = 6.18e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13416850086211707;  // std dev = 3.709, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | else return 0.28129141674112496;  // std dev = 3.887, 75.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 2.58e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.08518475138839682;  // std dev = 4.83e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05114478995919061;  // std dev = 0.497, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07877675473109175;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.12065112577217983;  // std dev = 3.565, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else return 0.09938303792947631;  // std dev = 4.522, 87.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02868983852019435;  // std dev = 6.133, 153.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05569435423882669;  // std dev = 5.896, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 9.376608610153198
Parameter learned model CLL:-0.338213 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 72, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.364, 19, 28], 'true,false': [4.829, 39, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 60, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 90, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.886, 58, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 37, 0], 'false,false,false,false': [5.58e-08, 73, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.51, 22, 28], 'true,false': [5.002, 44, 58], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.709, 24, 32], 'true,true,false': [3.887, 21, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.58e-08, 46, 0], 'false,false,false': [4.83e-08, 81, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.497, 72, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 32, 0], 'false,false,false': [2.24e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.565, 21, 32], 'true,false': [4.522, 33, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 100, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.133, 67, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.896, 58, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 116, 0]}]
{'': [0.24803717352988508, 6.00120553851436e-17], 'false': [nan, 6.00120553851436e-17]}
{'': [0.24054783950617326, -1.0992307174506501e-17], 'true': [0.24083295608872757, 0.24040811988521704], 'false': [nan, -1.0992307174506501e-17], 'false,false': [nan, -1.0992307174506501e-17], 'false,false,false': [nan, -1.0992307174506501e-17]}
{'': [0.2420631425676469, 5.921189464667501e-17], 'false': [nan, 5.921189464667501e-17], 'false,false': [nan, 5.921189464667501e-17]}
{'': [0.24055148128816167, -6.0557619525008536e-18], 'true': [nan, 0.24055148128816167], 'false': [nan, -6.0557619525008536e-18], 'false,false': [nan, -6.0557619525008536e-18], 'false,false,false': [0.0, 4.258389683493751e-17]}
{'': [0.24566980617061493, 3.831743182334611e-17], 'true': [0.24640000000000037, 0.24529027297193468], 'false': [nan, 3.831743182334611e-17]}
{'': [0.22560540112183355, 3.496765431890257e-17], 'true': [0.22560540112183355, nan], 'true,true': [0.24562341865220175, 0.20140572513352822], 'false': [nan, 3.496765431890257e-17], 'false,false': [1.4481169886415085e-17, 2.878355989768924e-17]}
{'': [0.2470884979452589, 3.050063254464716e-17], 'true': [0.2470884979452589, nan], 'false': [nan, 3.050063254464716e-17], 'false,false': [0.0, 8.467802730191872e-18]}
{'': [0.23695831769125206, -5.551115123125783e-18], 'true': [0.2398402682802909, 0.23503140683771642], 'false': [nan, -5.551115123125783e-18], 'false,false': [nan, -5.551115123125783e-18]}
{'': [0.2458808902950858, 2.461343497989734e-17], 'true': [0.2458808902950858, nan], 'false': [nan, 2.461343497989734e-17], 'false,false': [nan, 2.461343497989734e-17]}
{'': [0.2414415081617195, -1.674905425081055e-17], 'true': [0.2414415081617195, nan], 'false': [nan, -1.674905425081055e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.4119391441345215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.5067975837481601;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.35197609559333903;  // std dev = 4.500, 81.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=40 */
%   else return -0.1418510649004879;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7283981403407856;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.19447343978489126;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, E), interaction(A, F) )
%   | | | then return 0.4654668788459347;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.31704444896068706;  // std dev = 5.220, 110.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=57 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(D, F) )
%   | | then return 0.2198282047474667;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5661625625246267;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16528914778856763;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.22100179585136726;  // std dev = 4.395, 80.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | | | else return 0.30605198684331064;  // std dev = 3.666, 55.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
%   else return -0.11231637819360618;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.44278545362081334;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5935846946923885;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( phenotype(F, H), interaction(A, I) )
%   | | | then return 0.4539178183435196;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1130030168936052;  // std dev = 2.303, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.23795560404867921;  // std dev = 2.292, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.3359977731110064;  // std dev = 3.840, 64.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=42 */
%   else if ( complex(A, L) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.4343209348440897;  // std dev = 0.348, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.12914800269000087;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, H), complex(H, I) )
%   | | | then return -0.028463294567909515;  // std dev = 2.617, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.3605969094856097;  // std dev = 1.060, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then return 0.5927905472399768;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.14567742970491415;  // std dev = 1.926, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.27682298902565355;  // std dev = 3.713, 65.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   else if ( interaction(A, A) )
%   | then return -0.092691276189261;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.092691276189261;  // std dev = 3.95e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(E, F), interaction(A, E) )
%   | | | then return 0.2717090553329039;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3021648899925257;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.31817650872866216;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.20744139253813665;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12780388233324866;  // std dev = 2.009, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.2748320446112886;  // std dev = 2.040, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.09832660528119733;  // std dev = 4.537, 86.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   else if ( complex(A, L) )
%   | then return -0.08518475138839689;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.08518475138839683;  // std dev = 4.66e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.15438305772008185;  // std dev = 1.424, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.019663508731485747;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.3872928586903362;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.0978884891448121;  // std dev = 3.897, 66.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, K), phenotype(K, L) )
%   | | | then return 0.5048269537195443;  // std dev = 0.298, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.062131963988682266;  // std dev = 1.426, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.1153322440686757;  // std dev = 1.964, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.007247148648472101;  // std dev = 2.420, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   else return -0.07877675473109157;  // std dev = 6.11e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(D, B) )
%   | | then if ( complex(D, G), complex(F, G) )
%   | | | then return 0.171418922306118;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22522842670571527;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(D, H) )
%   | | | then return -0.18590800683283484;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.006346649539334355;  // std dev = 3.565, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.2626889566045936;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1546709277111261;  // std dev = 1.096, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.5388379777032236;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1795903847380746;  // std dev = 3.428, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   else return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.18369501272636737;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2808650505079686;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.01704078395850328;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H) )
%   | | | then return -0.005465374688092268;  // std dev = 3.479, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.1982240539824251;  // std dev = 1.607, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.11960026144226735;  // std dev = 3.329, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.021948967812348254;  // std dev = 2.567, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else if ( interaction(A, J) )
%   | then return -0.0684269778442027;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.0710635681228269;  // std dev = 1.596, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.10209592757500145;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( enzyme(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.452183634658316;  // std dev = 0.152, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.5079319193499209;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.1474637637991767;  // std dev = 1.411, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.22101904058629962;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.03536041878688459;  // std dev = 2.042, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.15210636222083518;  // std dev = 3.138, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   else return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
Inference time using transfer learning 11.864466667175293
Refined model CLL: -0.289419


******************************************
Best model found
******************************************
Results 

CLL : -0.29759 

AUC ROC : 0.890034 

AUC PR : 0.078762 

Precision : 0.02675 

Recall : 0.784452 

F1 : 0.051736 

Total Learning Time : 5.4119391441345215 

Total Inference Time : 2.6023311614990234 

Total revision time: 11.479922533035278
Best scored revision CLL: -0.289419


Results 

CLL : -0.29759 

AUC ROC : 0.890034 

AUC PR : 0.078762 

Precision : 0.02675 

Recall : 0.784452 

F1 : 0.051736 

Total Learning Time : 11.505866765975952 

Total Inference Time : 2.6023311614990234 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.3238189220428467
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.47082499143753825;  // std dev = 0.487, 142.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5049898530724791;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   | else return 0.3749738017081132;  // std dev = 4.650, 89.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3030254015032882;  // std dev = 0.492, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.23e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24962386209534065;  // std dev = 5.868, 144.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=87 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.12302548081607116;  // std dev = 3.944, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | else return 0.18333013690364372;  // std dev = 4.650, 89.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926094;  // std dev = 5.10e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2042028979223613;  // std dev = 3.690, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | | else return 0.034366814626364484;  // std dev = 4.911, 95.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839687;  // std dev = 1.49e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06447854760696628;  // std dev = 0.497, 160.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.06266539822464688;  // std dev = 4.078, 70.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | else return 0.05534526980491662;  // std dev = 4.688, 87.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=46 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04846767989940954;  // std dev = 6.176, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.19e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.047294930113160535;  // std dev = 6.099, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 8.657187461853027
Parameter learned model CLL:-0.322 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.487, 55, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 99, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.162, 14, 35], 'true,false': [4.65, 37, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 60, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.23e-09, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.868, 57, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 40, 0], 'false,false,false,false': [4.71e-08, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.944, 28, 35], 'true,false': [4.65, 37, 52], 'false,true': [0.0, 0, 0], 'false,false': [5.1e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.69, 21, 41], 'true,true,false': [4.911, 49, 46], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.49e-08, 37, 0], 'false,false,false': [3.65e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.497, 73, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 40, 0], 'false,false,false': [3.25e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.078, 29, 41], 'true,false': [4.688, 41, 46], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.176, 69, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.099, 66, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 107, 0]}]
{'': [0.23730410632811158, 8.074349270001139e-17], 'false': [nan, 8.074349270001139e-17]}
{'': [0.2329867674858207, -5.792467954566034e-18], 'true': [0.20408163265306087, 0.24289862391112083], 'false': [nan, -5.792467954566034e-18], 'false,false': [nan, -5.792467954566034e-18], 'false,false,false': [nan, -5.792467954566034e-18]}
{'': [0.24170923596015662, 6.679390554655414e-17], 'false': [nan, 6.679390554655414e-17], 'false,false': [nan, 6.679390554655414e-17]}
{'': [0.23912923163548616, 4.270088556250602e-18], 'true': [nan, 0.23912923163548616], 'false': [nan, 4.270088556250602e-18], 'false,false': [nan, 4.270088556250602e-18], 'false,false,false': [2.7755575615628915e-18, 3.469446951953614e-17]}
{'': [0.24544527934260837, 2.5869274360197823e-17], 'true': [0.24691358024691348, 0.24289862391112305], 'false': [nan, 2.5869274360197823e-17]}
{'': [0.24724330810193149, 3.172065784643304e-17], 'true': [0.24724330810193149, nan], 'true,true': [0.2196557783010711, 0.253857060459723], 'false': [nan, 3.172065784643304e-17], 'false,false': [6.00120553851436e-18, 2.1840452943445702e-17]}
{'': [0.2467666023740533, 3.631570641297241e-17], 'true': [0.2467666023740533, nan], 'false': [nan, 3.631570641297241e-17], 'false,false': [-6.938893903907229e-19, 1.5741968259610428e-17]}
{'': [0.24590763956757145, -3.142140635731575e-18], 'true': [0.23755704857094037, 0.2526026148064094], 'false': [nan, -3.142140635731575e-18], 'false,false': [nan, -3.142140635731575e-18]}
{'': [0.24448156362869164, 2.7300566179307128e-17], 'true': [0.24448156362869164, nan], 'false': [nan, 2.7300566179307128e-17], 'false,false': [nan, 2.7300566179307128e-17]}
{'': [0.24312383030772772, -1.6601465788787386e-17], 'true': [0.24312383030772772, nan], 'false': [nan, -1.6601465788787386e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 16.851343870162964
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.23024195835532632;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.49080199632400107;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | | | else return 0.36926004621062253;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7852697184725005;  // std dev = 0.178, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.19446667877857435;  // std dev = 0.073, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.5194685334539242;  // std dev = 1.224, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2140343572204912;  // std dev = 4.162, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.2389178326230681;  // std dev = 2.004, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.46218899674909164;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   else return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, G) )
%   | | | then return 0.6225135969883482;  // std dev = 1.630, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0.3508779485661143;  // std dev = 3.882, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | | else return -0.24006103737716702;  // std dev = 0.259, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.09199955351966284;  // std dev = 1.087, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.15998120334944896;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then return 0.39849029329294466;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5308118397724745;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5041454471488337;  // std dev = 0.805, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.08597322323669657;  // std dev = 2.877, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.21017408373140392;  // std dev = 3.174, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return 0.38942092614147933;  // std dev = 2.137, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   else if ( complex(A, L) )
%   | then return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.31811984318163883;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4328515970268297;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return -0.4406844876761095;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06301471820898559;  // std dev = 1.895, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.4508211633942517;  // std dev = 0.739, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.615784147194414;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.39474531211613784;  // std dev = 1.367, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.14710452252317394;  // std dev = 4.151, 86.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   else return -0.092691276189261;  // std dev = 4.17e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), location(A, G) )
%   | | then if ( interaction(A, H), interaction(I, E) )
%   | | | then return 0.1244809224174741;  // std dev = 1.107, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.5124355500033511;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.09798440713977492;  // std dev = 1.284, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08963678254002311;  // std dev = 2.501, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L), interaction(M, J) )
%   | | | then return -0.04252331330149698;  // std dev = 1.119, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1508571071950777;  // std dev = 1.595, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.370603957855124;  // std dev = 0.306, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.2298405925274583;  // std dev = 2.843, 47.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), phenotype(A, H) )
%   | | | then return 0.34090511327101836;  // std dev = 0.270, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.47749383022360575;  // std dev = 0.404, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( location(I, E), interaction(I, A) )
%   | | | then return -0.44490630033042683;  // std dev = 0.530, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.34527697570421984;  // std dev = 0.226, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2343872929608262;  // std dev = 0.867, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.06244404748850723;  // std dev = 1.866, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.22877564756659205;  // std dev = 2.586, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return -0.05835650513390002;  // std dev = 1.345, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.07877675473109158;  // std dev = 5.89e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), location(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.18329783302338998;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(F, D), recursion_proteinclass(F, B) )
%   | | | then return -0.32369642701119344;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.17935712478787727;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(A, I), complex(A, H) )
%   | | | then return 6.656406866584232E-4;  // std dev = 0.766, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17599314145843764;  // std dev = 1.769, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.36277617290485115;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03231110869155241;  // std dev = 4.065, 96.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=52 */
%   else return -0.07324622576333709;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(E, G), location(E, H) )
%   | | | then return -0.0024243898190580474;  // std dev = 1.303, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.1599172660436719;  // std dev = 1.643, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | else if ( interaction(I, E), interaction(E, I) )
%   | | | then return -0.08012848576443508;  // std dev = 3.881, 91.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=42 */
%   | | | else return 0.10814986805279346;  // std dev = 1.340, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.49033600158483875;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.18345994980953553;  // std dev = 0.580, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.022162450224710972;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( enzyme(A, M) )
%   | then return -0.06842697784420271;  // std dev = 1.61e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.0684269778442027;  // std dev = 2.28e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, D) )
%   | | | then return 0.24643121008962648;  // std dev = 0.295, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.01966549595069522;  // std dev = 3.967, 103.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=56 */
%   | | else if ( interaction(H, E), interaction(H, A) )
%   | | | then return -0.24948762446132172;  // std dev = 1.075, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.04963044597942005;  // std dev = 1.379, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.03127440825836466;  // std dev = 0.823, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.29322765562401587;  // std dev = 0.802, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
Inference time using transfer learning 30.945966958999634
Refined model CLL: -0.235138


******************************************
Best model found
******************************************
Results 

CLL : -0.246886 

AUC ROC : 0.963404 

AUC PR : 0.272166 

Precision : 0.054601 

Recall : 0.890071 

F1 : 0.10289 

Total Learning Time : 16.851343870162964 

Total Inference Time : 8.17243504524231 

Total revision time: 28.333173274993896
Best scored revision CLL: -0.235138


Results 

CLL : -0.246886 

AUC ROC : 0.963404 

AUC PR : 0.272166 

Precision : 0.054601 

Recall : 0.890071 

F1 : 0.10289 

Total Learning Time : 28.358949422836304 

Total Inference Time : 8.17243504524231 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6592378616333008
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41134042446121144;  // std dev = 0.497, 188.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048788;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4311473965669982;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return 0.39471778843927663;  // std dev = 5.055, 106.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839105;  // std dev = 8.43e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32486146199192295;  // std dev = 0.490, 174.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360626;  // std dev = 7.33e-09, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2262845568364276;  // std dev = 6.702, 183.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1326837654576508;  // std dev = 4.378, 77.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | else return 0.14738654281998087;  // std dev = 5.392, 117.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=63 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926083;  // std dev = 6.59e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24991304759913963;  // std dev = 4.029, 75.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   | | else return 0.14853892903861304;  // std dev = 4.750, 92.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839682;  // std dev = 4.83e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.055944330291348564;  // std dev = 0.499, 195.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.07877675473109158;  // std dev = 5.87e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1478223338274269;  // std dev = 4.190, 78.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=51 */
%   | else return 0.09815440253836266;  // std dev = 4.747, 92.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333725;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0580519798832299;  // std dev = 6.590, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03721423731561152;  // std dev = 6.641, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
Inference time using transfer learning 8.388853549957275
Parameter learned model CLL:-0.325989 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 84, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 131, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.891, 24, 41], 'true,false': [5.055, 43, 63], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.43e-08, 128, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 70, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.33e-09, 151, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.702, 79, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.34e-08, 60, 0], 'false,false,false,false': [4.21e-08, 97, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.378, 36, 41], 'true,false': [5.392, 54, 63], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.029, 24, 51], 'true,true,false': [4.75, 39, 53], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.33e-08, 56, 0], 'false,false,false': [4.83e-08, 80, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.499, 91, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.79e-08, 63, 0], 'false,false,false': [5.87e-08, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.19, 27, 51], 'true,false': [4.747, 39, 53], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 137, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.59, 76, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.641, 78, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 136, 0]}]
{'': [0.247170665459487, -4.0679927619853064e-17], 'false': [nan, -4.0679927619853064e-17]}
{'': [0.23829554392804492, 5.551115123125783e-17], 'true': [0.2328994082840255, 0.24110003559985926], 'false': [nan, 5.551115123125783e-17], 'false,false': [nan, 5.551115123125783e-17], 'false,false,false': [nan, 5.551115123125783e-17]}
{'': [0.24028782960168918, 5.2937786604643225e-17], 'false': [nan, 5.2937786604643225e-17], 'false,false': [nan, 5.2937786604643225e-17]}
{'': [0.24544510596191066, -6.364335809953126e-17], 'true': [nan, 0.24544510596191066], 'false': [nan, -6.364335809953126e-17], 'false,false': [nan, -6.364335809953126e-17], 'false,false,false': [3.14563190310461e-17, 1.8312957107219077e-17]}
{'': [0.24874120029176197, 4.332577657073782e-17], 'true': [0.24894585933547037, 0.2485207100591718], 'false': [nan, 4.332577657073782e-17]}
{'': [0.2348253785874102, 3.591898020846095e-17], 'true': [0.2348253785874102, nan], 'true,true': [0.21641981464056093, 0.24521462463194493], 'false': [nan, 3.591898020846095e-17], 'false,false': [1.9825411154020653e-17, 2.914335439641036e-17]}
{'': [0.24855373710569262, 5.00954291599156e-17], 'true': [0.24855373710569262, nan], 'false': [nan, 5.00954291599156e-17], 'false,false': [1.2335811384723961e-17, 3.407615224097015e-17]}
{'': [0.2364563599532002, -1.2155726546990766e-17], 'true': [0.22509028985785137, 0.24496093736217892], 'false': [nan, -1.2155726546990766e-17], 'false,false': [nan, -1.2155726546990766e-17]}
{'': [0.2412600161686096, 2.921639538487254e-17], 'true': [0.2412600161686096, nan], 'false': [nan, 2.921639538487254e-17], 'false,false': [nan, 2.921639538487254e-17]}
{'': [0.24228891803821034, -1.3877787807814457e-17], 'true': [0.24228891803821034, nan], 'false': [nan, -1.3877787807814457e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.048462390899658
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( complex(A, E), location(A, F) )
%   | | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3262340414824902;  // std dev = 3.421, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.4206489350995112;  // std dev = 3.969, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   else return -0.14185106490048785;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.7571356947049418;  // std dev = 0.146, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.18637088155407694;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3242629828949471;  // std dev = 2.505, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | else if ( phenotype(A, G), location(A, H) )
%   | | then if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.4026291431836998;  // std dev = 1.157, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.5927296176045967;  // std dev = 2.626, 47.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7430123387696966;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3696653530635916;  // std dev = 3.474, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   else return -0.12544463852839122;  // std dev = 6.99e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.6010469938855603;  // std dev = 0.169, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5817598056528588;  // std dev = 2.121, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | | else return -0.24303302759017845;  // std dev = 0.306, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6050587396549207;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1757967075371643;  // std dev = 3.752, 62.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   else return -0.11231637819360617;  // std dev = 1.00e-07, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.2007650352422163;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4650673968230648;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), interaction(E, H) )
%   | | | then return 0.05780829306348465;  // std dev = 2.052, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.14811385750548217;  // std dev = 1.862, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5087257962037489;  // std dev = 1.217, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.3188958927391348;  // std dev = 0.309, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.1513756468535131;  // std dev = 1.076, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3177153679837308;  // std dev = 3.345, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   else return -0.10159632948783637;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3409186092246354;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.054132263018986944;  // std dev = 1.030, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.06431041330793599;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.070865791289016;  // std dev = 1.039, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4354201761814055;  // std dev = 0.474, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.2531183561920019;  // std dev = 0.626, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.358468321715413;  // std dev = 1.468, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.18217373416972985;  // std dev = 3.492, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   else return -0.09269127618926075;  // std dev = 8.16e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then return 0.2539706631254953;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.37199532457059975;  // std dev = 0.215, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.29493379002685094;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16923503470068446;  // std dev = 3.993, 128.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=81 */
%   | | | else return -0.2529815278303439;  // std dev = 0.438, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.3732267855045708;  // std dev = 0.780, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10549507283633941;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, L) )
%   | then return -0.08518475138839686;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.08518475138839682;  // std dev = 4.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(E, E) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32763957261652205;  // std dev = 0.176, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.44831264811991023;  // std dev = 0.429, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(E, H) )
%   | | | then return 0.16016824090497112;  // std dev = 1.493, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.05194539089585044;  // std dev = 2.456, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(J, I), location(I, K) )
%   | | | then return 0.22417753662869064;  // std dev = 0.888, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.0768905633114623;  // std dev = 1.769, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.08053746051517201;  // std dev = 0.906, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.32019034934186996;  // std dev = 1.793, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.07877675473109153;  // std dev = 6.65e-09, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.275010512144782;  // std dev = 1.189, 52.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else return 0.014113880688155578;  // std dev = 3.588, 91.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=47 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.15233925424493086;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.3500398636567094;  // std dev = 0.347, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then return 0.2140259664235158;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4036469331751385;  // std dev = 0.225, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333732;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.22274936726094294;  // std dev = 1.694, 69.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | | else return 0.031099777211077758;  // std dev = 2.875, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.13140287233862658;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.25873089731040944;  // std dev = 0.313, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.11361029533064551;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.5924072782594524;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.10848198977458932;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09890809368769637;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420264;  // std dev = 5.27e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then if ( interaction(E, A), enzyme(E, H) )
%   | | | then return -0.1646083777351495;  // std dev = 0.689, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.03438741614214276;  // std dev = 1.414, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | else if ( phenotype(E, I), interaction(J, A) )
%   | | | then return -0.17983800208225936;  // std dev = 1.082, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.006840197668448451;  // std dev = 0.483, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( phenotype(A, M), interaction(N, L) )
%   | | | then return 0.03791262066623252;  // std dev = 2.152, 46.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=27 */
%   | | | else return 0.15279484725084158;  // std dev = 2.123, 49.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=34 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.08815203440793065;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10781953117941234;  // std dev = 1.405, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
Inference time using transfer learning 57.548569440841675
Refined model CLL: -0.198102


******************************************
Best model found
******************************************
Results 

CLL : -0.194263 

AUC ROC : 0.9911 

AUC PR : 0.547861 

Precision : 0.10554 

Recall : 0.984906 

F1 : 0.19065 

Total Learning Time : 11.048462390899658 

Total Inference Time : 6.886976957321167 

Total revision time: 22.12938690185547
Best scored revision CLL: -0.198102


Results 

CLL : -0.194263 

AUC ROC : 0.9911 

AUC PR : 0.547861 

Precision : 0.10554 

Recall : 0.984906 

F1 : 0.19065 

Total Learning Time : 22.155163049697876 

Total Inference Time : 6.886976957321167 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4521517753601074
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45945612464199354;  // std dev = 0.490, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.33e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4036904784272262;  // std dev = 4.137, 72.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=44 */
%   | else return 0.29257936731611517;  // std dev = 4.899, 96.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839127;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3266839871414066;  // std dev = 0.491, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.54e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2327137066464664;  // std dev = 6.277, 161.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=92 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.19599902922741935;  // std dev = 4.181, 73.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=44 */
%   | else return 0.21976875233783993;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11526199693673565;  // std dev = 4.781, 94.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   | | else return 0.11870522192601568;  // std dev = 4.205, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08518475138839685;  // std dev = 3.07e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1023122680813511;  // std dev = 0.495, 160.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07877675473109172;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.06861074155245588;  // std dev = 4.731, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   | else return -0.013044324688827751;  // std dev = 4.554, 81.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=39 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0415976826366768;  // std dev = 6.449, 168.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13036060776346045;  // std dev = 5.706, 142.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
Inference time using transfer learning 8.143877267837524
Parameter learned model CLL:-0.331783 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 61, 92], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [4.137, 28, 44], 'true,false': [4.899, 48, 48], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 62, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.54e-09, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.277, 69, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.65e-08, 54, 0], 'false,false,false,false': [4.34e-08, 60, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.181, 29, 44], 'true,false': [4.382, 32, 48], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [4.781, 41, 53], 'true,true,false': [4.205, 31, 39], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.34e-08, 73, 0], 'false,false,false': [3.07e-08, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.495, 68, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 46, 0], 'false,false,false': [3.07e-08, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.731, 40, 53], 'true,false': [4.554, 42, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 96, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.449, 76, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.706, 50, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 122, 0]}]
{'': [0.23973685334700573, 7.190015778524824e-17], 'false': [nan, 7.190015778524824e-17]}
{'': [0.24773242630385792, -1.7763568394002505e-18], 'true': [0.2376543209876535, 0.24999999999999925], 'false': [nan, -1.7763568394002505e-18], 'false,false': [nan, -1.7763568394002505e-18], 'false,false,false': [nan, -1.7763568394002505e-18]}
{'': [0.2413722614868886, 7.19299424405031e-17], 'false': [nan, 7.19299424405031e-17], 'false,false': [nan, 7.19299424405031e-17]}
{'': [0.24469871614211058, -1.1686558153949016e-17], 'true': [nan, 0.24469871614211058], 'false': [nan, -1.1686558153949016e-17], 'false,false': [nan, -1.1686558153949016e-17], 'false,false,false': [2.4671622769447922e-17, 3.14563190310461e-17]}
{'': [0.23987593501841828, 4.306899664494142e-17], 'true': [0.23944454869581536, 0.23999999999999985], 'false': [nan, 4.306899664494142e-17]}
{'': [0.2472188468648102, 3.52451753849256e-17], 'true': [0.2472188468648102, nan], 'true,true': [0.24316638652491304, 0.25265392678178467], 'false': [nan, 3.52451753849256e-17], 'false,false': [2.585450879264063e-17, 1.7805463602478925e-17]}
{'': [0.24474625475339132, 3.700743415417188e-17], 'true': [0.24474625475339132, nan], 'false': [nan, 3.700743415417188e-17], 'false,false': [0.0, 1.4518301091252048e-17]}
{'': [0.24943191681465512, -1.1564823173178713e-18], 'true': [0.24062006306685754, 0.2559855399436842], 'false': [nan, -1.1564823173178713e-18], 'false,false': [nan, -1.1564823173178713e-18]}
{'': [0.24754080763548206, 2.5403408190575616e-17], 'true': [0.24754080763548206, nan], 'false': [nan, 2.5403408190575616e-17], 'false,false': [nan, 2.5403408190575616e-17]}
{'': [0.22930992515427442, -4.550094363217854e-18], 'true': [0.22930992515427442, nan], 'false': [nan, -4.550094363217854e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.95895528793335
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), location(E, F) )
%   | | then if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.40943098638156283;  // std dev = 4.393, 78.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=43 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.48314893509951234;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, E) )
%   | | | then return -0.029313317472213062;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.33863933351061765;  // std dev = 1.511, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.4552450372769368;  // std dev = 3.133, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.30713581710531074;  // std dev = 4.557, 83.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=43 */
%   else return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.31386988892586865;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7122764912820418;  // std dev = 0.191, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, G), enzyme(F, H) )
%   | | | then return -0.12236465823313009;  // std dev = 0.971, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.19018417942277535;  // std dev = 3.612, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.694192447769572;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3423648166380032;  // std dev = 4.224, 79.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=49 */
%   else return -0.11231637819360622;  // std dev = 8.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(D, D), location(F, H) )
%   | | | then return 0.3458255316749115;  // std dev = 1.292, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.5988089645665631;  // std dev = 0.429, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, E), interaction(D, D) )
%   | | | then return -0.0859433374714283;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21163569917352457;  // std dev = 2.911, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.09077769782883523;  // std dev = 1.552, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.16090962277774157;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.4700391457247636;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1692049620130534;  // std dev = 4.503, 82.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=42 */
%   else return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.3137357000681284;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.46745408334261235;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5200917272219119;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, H), interaction(G, G) )
%   | | | then return -0.20699617973028941;  // std dev = 0.866, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1356763404444127;  // std dev = 3.286, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.33928045229435466;  // std dev = 1.497, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.1612051629997937;  // std dev = 4.459, 84.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=47 */
%   else return -0.09269127618926076;  // std dev = 8.02e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.26857309402726426;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.33102013673811187;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41868351297771655;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.20979573843132338;  // std dev = 5.172, 119.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=76 */
%   | | | else return -0.4110489506199328;  // std dev = 0.204, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1785459827205174;  // std dev = 0.437, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( complex(A, I) )
%   | then return -0.08518475138839685;  // std dev = 2.58e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), location(F, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(H, F) )
%   | | | then return 0.2960509620730384;  // std dev = 0.458, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1053618033119455;  // std dev = 2.682, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(D, D), complex(D, I) )
%   | | | then return 0.22322824624249682;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.46524892921312855;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4958633261446719;  // std dev = 0.435, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.3986704904994637;  // std dev = 0.282, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.4492126538835901;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22652544602035582;  // std dev = 2.983, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   else return -0.07877675473109154;  // std dev = 6.45e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(A, F), complex(E, G) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.21601438784748184;  // std dev = 0.308, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.08381827648209103;  // std dev = 2.800, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( enzyme(A, H), complex(E, I) )
%   | | | then return 0.4656857204014662;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11218924611727744;  // std dev = 2.754, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.15380399671726852;  // std dev = 1.034, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.4027981253851879;  // std dev = 0.388, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.13442479670088062;  // std dev = 1.973, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return -0.035713987752325906;  // std dev = 2.637, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   else return -0.07324622576333718;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.1407743841495276;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.15201340577798414;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2903043561136197;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(A, H), enzyme(F, H) )
%   | | | then return -0.2090478426051507;  // std dev = 1.398, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.06058302061070792;  // std dev = 3.115, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.03905705048826655;  // std dev = 2.757, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return -0.002003456522833739;  // std dev = 3.383, 65.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=33 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420265;  // std dev = 4.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.05136174885541226;  // std dev = 1.555, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.24479816503231283;  // std dev = 1.511, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2066392362377753;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05063781766483177;  // std dev = 2.144, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3427053678395875;  // std dev = 0.703, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.43087564396556544;  // std dev = 0.306, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06370420680186735;  // std dev = 1.669, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.05395650747013387;  // std dev = 3.192, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   else return -0.06419184008202626;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
Inference time using transfer learning 29.406007289886475
Refined model CLL: -0.235382


******************************************
Best model found
******************************************
Results 

CLL : -0.266617 

AUC ROC : 0.935669 

AUC PR : 0.14079 

Precision : 0.046434 

Recall : 0.801444 

F1 : 0.087782 

Total Learning Time : 5.95895528793335 

Total Inference Time : 3.266819715499878 

Total revision time: 12.840364694595337
Best scored revision CLL: -0.235382


Results 

CLL : -0.266617 

AUC ROC : 0.935669 

AUC PR : 0.14079 

Precision : 0.046434 

Recall : 0.801444 

F1 : 0.087782 

Total Learning Time : 12.866140842437744 

Total Inference Time : 3.266819715499878 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.3813824653625488
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4637827379164115;  // std dev = 0.489, 142.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.90e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4140894055111325;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | else return 0.3777257691474944;  // std dev = 4.901, 99.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.27188905011333325;  // std dev = 0.497, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24747381917701813;  // std dev = 5.976, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1826851297060865;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | else return 0.1939099654873689;  // std dev = 4.901, 99.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.45e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18419514556712646;  // std dev = 3.442, 51.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | | else return 0.12253049850634949;  // std dev = 4.871, 96.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839686;  // std dev = 1.83e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839683;  // std dev = 4.01e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1239254102884839;  // std dev = 0.490, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07877675473109169;  // std dev = 3.41e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return -0.011569112556358977;  // std dev = 3.954, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | else return 0.023230378495771906;  // std dev = 5.076, 103.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=54 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09055406003312459;  // std dev = 5.858, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.66e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return -0.009047678533521572;  // std dev = 6.398, 164.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
Inference time using transfer learning 8.816555976867676
Parameter learned model CLL:-0.319559 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.489, 56, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [3.252, 17, 28], 'true,false': [4.901, 41, 58], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 70, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.976, 61, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 34, 0], 'false,false,false,false': [5.27e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.416, 20, 28], 'true,false': [4.901, 41, 58], 'false,true': [0.0, 0, 0], 'false,false': [6.45e-09, 116, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [3.442, 19, 32], 'true,true,false': [4.871, 42, 54], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.83e-08, 39, 0], 'false,false,false': [4.01e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.49, 57, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 32, 0], 'false,false,false': [3.41e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [3.954, 31, 32], 'true,false': [5.076, 49, 54], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 107, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.858, 57, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.66e-09, 92, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.398, 78, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 122, 0]}]
{'': [0.238841499702442, 6.055761952500853e-17], 'false': [nan, 6.055761952500853e-17]}
{'': [0.2405478395061723, -8.458842092382146e-18], 'true': [0.2350617283950613, 0.24262830323436457], 'false': [nan, -8.458842092382146e-18], 'false,false': [nan, -8.458842092382146e-18], 'false,false,false': [nan, -8.458842092382146e-18]}
{'': [0.24718474279974442, 6.5953843047039e-17], 'false': [nan, 6.5953843047039e-17], 'false,false': [nan, 6.5953843047039e-17]}
{'': [0.24292284463892067, 6.467318590049456e-18], 'true': [nan, 0.24292284463892067], 'false': [nan, 6.467318590049456e-18], 'false,false': [nan, 6.467318590049456e-18], 'false,false,false': [0.0, 4.022547190670857e-17]}
{'': [0.24279552197790671, 4.2111907830609384e-17], 'true': [0.24305555555555536, 0.2426283032343639], 'false': [nan, 4.2111907830609384e-17]}
{'': [0.2428834365545378, 3.2468786569226275e-17], 'true': [0.2428834365545378, nan], 'true,true': [0.23229608534619742, 0.24718872223394397], 'false': [nan, 3.2468786569226275e-17], 'false,false': [8.540177112501205e-18, 2.4027214712036968e-17]}
{'': [0.24021198704309296, 3.407615224097015e-17], 'true': [0.24021198704309296, nan], 'false': [nan, 3.407615224097015e-17], 'false,false': [0.0, 1.68946982008176e-17]}
{'': [0.24972047621569274, -2.0751832235984233e-18], 'true': [0.24821347262191404, 0.2501826375726015], 'false': [nan, -2.0751832235984233e-18], 'false,false': [nan, -2.0751832235984233e-18]}
{'': [0.2399695810376576, 2.1118372751022e-17], 'true': [0.2399695810376576, nan], 'false': [nan, 2.1118372751022e-17], 'false,false': [nan, 2.1118372751022e-17]}
{'': [0.249635177969177, -1.8200377452871417e-17], 'true': [0.249635177969177, nan], 'false': [nan, -1.8200377452871417e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.623227596282959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3914822684328456;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.38592671287729;  // std dev = 2.995, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.5052077586289245;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=44 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7517695271192918;  // std dev = 0.149, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.12282670333367106;  // std dev = 1.789, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.24385859654936404;  // std dev = 3.615, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.4070096427215992;  // std dev = 3.937, 66.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=41 */
%   else return -0.12544463852839127;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then return 0.6039127880965343;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.5754777912686162;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2140444863086677;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.3703147938334695;  // std dev = 3.157, 44.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | | else return 0.20428885688820786;  // std dev = 4.646, 88.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=42 */
%   else return -0.11231637819360624;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.3477087634300222;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5366177389395992;  // std dev = 0.499, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, H), interaction(H, E) )
%   | | | then return -0.07476629540299286;  // std dev = 1.242, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.16274429659811815;  // std dev = 4.828, 97.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=49 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.1580305555132131;  // std dev = 1.855, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.5377104630232443;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.49768264280698044;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( complex(A, L) )
%   | then return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.30395705564342945;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4571589592643658;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, G), enzyme(D, H) )
%   | | | then return 0.05357652887708151;  // std dev = 2.527, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.17881638536891573;  // std dev = 3.174, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.39796978224951585;  // std dev = 2.651, 42.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | | else return -0.37707374639095026;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.5955350581564176;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, K) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.2219383633280546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2616552605884247;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.347942502591783;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4217626701486723;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5632947728028007;  // std dev = 0.280, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.3720943810851462;  // std dev = 0.444, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10080500353213491;  // std dev = 3.805, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | | else return 0.31813309692833486;  // std dev = 1.851, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.0851847513883968;  // std dev = 5.82e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.18598020989657116;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21453324357578712;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3994867492434782;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1510102855467587;  // std dev = 4.472, 107.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=68 */
%   | | | else return -0.34157286621780714;  // std dev = 0.575, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.12433744346103837;  // std dev = 1.325, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, I) )
%   | then return -0.0787767547310918;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D) )
%   | | then return 0.1156328793801668;  // std dev = 0.759, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(E, F) )
%   | | | then return 0.41556812092060136;  // std dev = 0.955, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.1130311510344506;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.17011861528756866;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.27176071099130256;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.08050623234820133;  // std dev = 3.096, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return -0.025663864853724554;  // std dev = 3.064, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   else if ( interaction(J, A) )
%   | then return -0.07324622576333706;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.07324622576333706;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( enzyme(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.16431503268011122;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.5017100983818364;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.26853460675122376;  // std dev = 0.240, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.027326494443418115;  // std dev = 2.462, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(A, L) )
%   | | | then return 0.06775913863404674;  // std dev = 1.232, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.4070832193529007;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.03752691012697987;  // std dev = 2.878, 54.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   | | | else return 0.16623205922243184;  // std dev = 1.608, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.06842697784420265;  // std dev = 4.75e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.13354517721244752;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1464663224923092;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25255093290192115;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return -0.10542114690030793;  // std dev = 2.270, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.04676520620673706;  // std dev = 2.558, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.397571911768731;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03526398250127413;  // std dev = 3.310, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 17.65478205680847
Refined model CLL: -0.255761


******************************************
Best model found
******************************************
Results 

CLL : -0.263976 

AUC ROC : 0.94838 

AUC PR : 0.129611 

Precision : 0.046403 

Recall : 0.95053 

F1 : 0.088487 

Total Learning Time : 5.623227596282959 

Total Inference Time : 2.9507994651794434 

Total revision time: 12.086591482162476
Best scored revision CLL: -0.255761


Results 

CLL : -0.263976 

AUC ROC : 0.94838 

AUC PR : 0.129611 

Precision : 0.046403 

Recall : 0.95053 

F1 : 0.088487 

Total Learning Time : 12.112367630004883 

Total Inference Time : 2.9507994651794434 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.4653513431549072
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46654054349111845;  // std dev = 0.488, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.12e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3569295350904299;  // std dev = 5.969, 145.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=82 */
%   | else return 0.5056980079968352;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2684513865175274;  // std dev = 0.498, 160.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 8.01e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5067111412105503;  // std dev = 3.659, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | else return -0.2498450523845696;  // std dev = 2.072, 59.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.21381295974566555;  // std dev = 4.884, 135.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=82 */
%   | else return 0.4062151493666572;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 5.59e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1399143268851318;  // std dev = 5.245, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | | else return -0.09173098488210751;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11514730689519315;  // std dev = 0.421, 149.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.58e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.05608983924574363;  // std dev = 5.376, 154.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=86 */
%   | else return -0.17374039099330685;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11326493484354846;  // std dev = 4.847, 138.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04064743451557595;  // std dev = 5.204, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning 19.2903995513916
Parameter learned model CLL:-0.275607 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.488, 56, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.969, 63, 82], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 114, 0], 'false,false,false,false': [5.27e-09, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.498, 73, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.659, 16, 82], 'true,false': [2.072, 54, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 114, 0], 'false,false,false,false': [0.0, 1, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.884, 53, 82], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false': [5.59e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.245, 61, 86], 'true,true,false': [0.798, 3, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 100, 0], 'false,false,false': [3.73e-09, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.421, 62, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 95, 0], 'false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.376, 68, 86], 'true,false': [0.841, 5, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.847, 51, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.204, 63, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 112, 0]}]
{'': [0.23825125923028226, 6.579099405186112e-17], 'false': [nan, 6.579099405186112e-17]}
{'': [0.24476281163435076, -3.670158759091427e-18], 'true': [0.24570749108204695, 0.20408163265306117], 'false': [nan, -3.670158759091427e-18], 'false,false': [nan, -3.670158759091427e-18], 'false,false,false': [-5.843279076974508e-18, 3.96508223080413e-18]}
{'': [0.24809488504927577, 6.586068790149233e-17], 'false': [nan, 6.586068790149233e-17], 'false,false': [nan, 6.586068790149233e-17]}
{'': [0.24688047175458205, -1.544658121217609e-17], 'true': [0.13660974593919295, 0.07276193442751526], 'false': [nan, -1.544658121217609e-17], 'false,false': [nan, -1.544658121217609e-17], 'false,false,false': [-1.1686558153949016e-17, 0.0]}
{'': [0.1797759035347053, 2.9890619893754213e-17], 'true': [0.17669074577919147, 0.2040816326530613], 'false': [nan, 2.9890619893754213e-17]}
{'': [0.18777892771016108, 3.2593703475233955e-17], 'true': [0.18777892771016108, nan], 'true,true': [0.1871346554267573, 0.15921782870690435], 'false': [nan, 3.2593703475233955e-17], 'false,false': [3.1086244689504386e-17, 1.5419764230904951e-18]}
{'': [0.17721359219120242, 3.285353848380565e-17], 'true': [0.17721359219120242, nan], 'false': [nan, 3.285353848380565e-17], 'false,false': [3.272236283105724e-17, 0.0]}
{'': [0.18695473649914332, 0.0], 'true': [0.18766783279612595, 0.1178108193639596], 'false': [nan, 0.0], 'false,false': [nan, 0.0]}
{'': [0.17023262769616537, 2.4019248128909638e-17], 'true': [0.17023262769616537, nan], 'false': [nan, 2.4019248128909638e-17], 'false,false': [nan, 2.4019248128909638e-17]}
{'': [0.18056102552065773, -1.734723475976807e-17], 'true': [0.18056102552065773, nan], 'false': [nan, -1.734723475976807e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.448556184768677
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3516554286060046;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.38939893509951234;  // std dev = 2.823, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8008193539743513;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.17206533210451638;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, F), interaction(G, A) )
%   | | | then return 0.31553442715240754;  // std dev = 5.721, 134.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=69 */
%   | | | else return 0.18430156575219098;  // std dev = 2.130, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( interaction(H, A) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G), phenotype(A, G) )
%   | | | then return 0.27226374346083476;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6411539817965929;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, D), complex(D, I) )
%   | | | then return 0.5054645230508829;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10914877354784328;  // std dev = 2.837, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.771839271389847;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2445472390033199;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.6237258229391796;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3711656277555267;  // std dev = 4.195, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
%   else return -0.11231637819360622;  // std dev = 7.57e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.39313807451966415;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5384710321539143;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, E), phenotype(E, D) )
%   | | | then return -0.0055588232625434055;  // std dev = 1.191, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1977725741733766;  // std dev = 3.466, 55.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H) )
%   | | | then return 0.2628276709975996;  // std dev = 2.751, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return 0.6997021718067428;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.3098648479915758;  // std dev = 1.444, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.46129521561327047;  // std dev = 1.959, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else return -0.10159632948783617;  // std dev = 6.18e-09, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.3331781717346182;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3914092252470793;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(D, F) )
%   | | | then return -0.11172553606079713;  // std dev = 0.886, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07336502981729065;  // std dev = 2.147, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.2745646448307103;  // std dev = 1.230, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.6323998515912439;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07629197094012367;  // std dev = 3.076, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.2596834755967756;  // std dev = 3.543, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   else return -0.0926912761892609;  // std dev = 6.18e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( enzyme(D, H), phenotype(D, I) )
%   | | | then return 0.19414877861597193;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5412308609927444;  // std dev = 0.142, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, D) )
%   | | | then return 0.1858144315812992;  // std dev = 3.302, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | | | else return 0.052340382270335335;  // std dev = 1.380, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.09719272359955698;  // std dev = 1.042, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.08969033720082302;  // std dev = 1.306, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.08637563771890515;  // std dev = 3.506, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return 0.3334802888427348;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.0851847513883968;  // std dev = 5.74e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3938374819858268;  // std dev = 0.571, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1378759627918624;  // std dev = 1.428, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.5353974210414045;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19759198882640697;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3848651707149874;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.022592940955128524;  // std dev = 3.219, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.13683410571767005;  // std dev = 3.442, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   else if ( interaction(K, A) )
%   | then return -0.07877675473109162;  // std dev = 5.35e-09, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), interaction(E, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.05440505368352444;  // std dev = 0.953, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4472880011468641;  // std dev = 0.181, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3647814771451588;  // std dev = 0.445, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.037590792658887213;  // std dev = 2.111, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return -0.022739814702502876;  // std dev = 2.213, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.17272901184237974;  // std dev = 3.426, 56.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3809231904960297;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.499973095235849;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333716;  // std dev = 3.09e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(D, D), complex(F, H) )
%   | | | then return -0.19279602822983896;  // std dev = 1.005, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.010512212366255814;  // std dev = 1.574, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.18936026904904554;  // std dev = 2.053, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.060531040465611155;  // std dev = 2.771, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then return 0.21885173666630536;  // std dev = 0.722, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.14271500229178044;  // std dev = 1.925, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.011560717470559964;  // std dev = 2.778, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   else if ( interaction(A, M) )
%   | then return -0.06842697784420271;  // std dev = 2.46e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06842697784420274;  // std dev = 2.08e-09, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.32409952339871656;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.02657580080782267;  // std dev = 3.549, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.32699919807016253;  // std dev = 0.621, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( location(I, J), interaction(K, I) )
%   | | | then return 0.3761903072169183;  // std dev = 0.710, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.0810063885324996;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.015093134678226367;  // std dev = 1.734, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.1138098152993828;  // std dev = 2.196, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning 11.75047492980957
Refined model CLL: -0.307828


******************************************
Best model found
******************************************
Results 

CLL : -0.266303 

AUC ROC : 0.968809 

AUC PR : 0.136701 

Precision : 0.075404 

Recall : 0.975177 

F1 : 0.139985 

Total Learning Time : 8.448556184768677 

Total Inference Time : 4.117762327194214 

Total revision time: 20.052058458328247
Best scored revision CLL: -0.275607


Results 

CLL : -0.266303 

AUC ROC : 0.968809 

AUC PR : 0.136701 

Precision : 0.075404 

Recall : 0.975177 

F1 : 0.139985 

Total Learning Time : 20.068651914596558 

Total Inference Time : 4.117762327194214 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.1124584674835205
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43592671287728724;  // std dev = 0.494, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004881;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3822197326730506;  // std dev = 6.404, 169.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=99 */
%   | else return 0.5107066303907147;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839105;  // std dev = 7.88e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31356607607464165;  // std dev = 0.493, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5450481623972864;  // std dev = 3.390, 112.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=99 */
%   | else return -0.265118485205356;  // std dev = 2.088, 65.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783638;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17204988747446281;  // std dev = 5.538, 171.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=99 */
%   | else return 0.19102573250245036;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926075;  // std dev = 6.84e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14194734617910476;  // std dev = 5.547, 174.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=102 */
%   | | else return 0.6488284116852896;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.67e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11337731535418488;  // std dev = 0.420, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109154;  // std dev = 7.30e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.059899618634808104;  // std dev = 5.649, 183.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=102 */
%   | else return 0.14192234130259349;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333725;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1090239044339976;  // std dev = 5.195, 164.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.008793242508538341;  // std dev = 5.809, 190.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
Inference time using transfer learning 21.52008032798767
Parameter learned model CLL:-0.270295 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 76, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 153, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.404, 70, 99], 'true,false': [1.195, 2, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.88e-08, 129, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 73, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.39, 13, 99], 'true,false': [2.088, 60, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 124, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.538, 72, 99], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 138, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.547, 72, 102], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.67e-08, 104, 0], 'false,false,false': [3.73e-09, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.42, 71, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 128, 0], 'false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.649, 81, 102], 'true,false': [0.786, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 143, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.195, 60, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.809, 86, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 128, 0]}]
{'': [0.2439506172839537, -1.248093857748542e-16], 'false': [nan, -1.248093857748542e-16]}
{'': [0.24173553719007976, 3.947459643111668e-17], 'true': [0.2426385630755198, 0.2040816326530611], 'false': [nan, 3.947459643111668e-17], 'false,false': [nan, 3.947459643111668e-17], 'false,false,false': [4.819572820078199e-17, 0.0]}
{'': [0.2426272631431356, 7.51535585900106e-17], 'false': [nan, 7.51535585900106e-17], 'false,false': [nan, 7.51535585900106e-17]}
{'': [0.24206991357957763, -3.586874387250506e-17], 'true': [0.10259885204081488, 0.06705911363189894], 'false': [nan, -3.586874387250506e-17], 'false,false': [nan, -3.586874387250506e-17], 'false,false,false': [-2.865091676452017e-17, 0.0]}
{'': [0.1832856337888569, 4.666154741178194e-17], 'true': [0.17936431479270784, 0.25], 'false': [nan, 4.666154741178194e-17]}
{'': [0.17771544883093202, 3.172065784643304e-17], 'true': [0.17771544883093202, nan], 'true,true': [0.17683851406468948, 0.0], 'false': [nan, 3.172065784643304e-17], 'false,false': [3.0958142032816866e-17, 1.734723475976807e-18]}
{'': [0.17679920400061003, 4.2764146133709734e-17], 'true': [0.17679920400061003, nan], 'false': [nan, 4.2764146133709734e-17], 'false,false': [4.163336342344337e-17, -2.9738116731030977e-18]}
{'': [0.17499572303837413, -2.0962252912502955e-17], 'true': [0.17437618183458167, 0.20616852116222104], 'false': [nan, -2.0962252912502955e-17], 'false,false': [nan, -2.0962252912502955e-17]}
{'': [0.16456624695080949, 2.400482215405744e-17], 'true': [0.16456624695080949, nan], 'false': [nan, 2.400482215405744e-17], 'false,false': [nan, 2.400482215405744e-17]}
{'': [0.17760067235354537, -1.5612511283791264e-17], 'true': [0.17760067235354537, nan], 'false': [nan, -1.5612511283791264e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 12.397184371948242
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.3258908705833821;  // std dev = 3.929, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   | | | else return 0.4877785647291424;  // std dev = 4.346, 81.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=51 */
%   else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.6415772811925275;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.18962235612905573;  // std dev = 1.945, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( phenotype(D, H), phenotype(A, I) )
%   | | | then return 0.7115063999254545;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5236797357821935;  // std dev = 1.442, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2177560129141756;  // std dev = 3.536, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | | | else return 0.3734136242087135;  // std dev = 4.014, 66.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839113;  // std dev = 7.60e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.5735399489847136;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5526073823932007;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6140860586845656;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), interaction(H, H) )
%   | | | then return -0.33076499543497107;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.20727512845133497;  // std dev = 3.555, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.29977216927473865;  // std dev = 4.602, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
%   | | | else return 0.5857749659430083;  // std dev = 1.303, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, K) )
%   | then return -0.11231637819360626;  // std dev = 6.18e-09, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.11231637819360625;  // std dev = 6.59e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.421486077462936;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15308966052658646;  // std dev = 0.637, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, F), interaction(G, A) )
%   | | | then return 0.605328422532815;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5031867282677127;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( complex(A, J), complex(I, J) )
%   | | | then return -0.10582991586486346;  // std dev = 1.929, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.07292051287205045;  // std dev = 3.464, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.1321611361028308;  // std dev = 3.028, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.23969156194970323;  // std dev = 4.117, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   else return -0.10159632948783638;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), location(E, F) )
%   | | | then return 0.585959963986705;  // std dev = 0.487, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.30154676481931225;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.28855070836319396;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3862254199464972;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( complex(A, K), interaction(J, J) )
%   | | | then return 0.16976487723794115;  // std dev = 1.955, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.3814893658429815;  // std dev = 1.687, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.10709162316440676;  // std dev = 4.167, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return -0.02817320327670473;  // std dev = 2.064, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   else return -0.09269127618926074;  // std dev = 6.84e-09, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4622079910686169;  // std dev = 0.647, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.3712446175717677;  // std dev = 0.385, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.21069820948021042;  // std dev = 1.673, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.06946045995196319;  // std dev = 5.272, 127.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(J, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.08518475138839686;  // std dev = 2.47e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.08518475138839683;  // std dev = 4.01e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), location(F, E) )
%   | | | then return 0.41469057903817447;  // std dev = 0.995, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.05735114799555281;  // std dev = 1.269, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3205364452702677;  // std dev = 0.336, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.024927600063435907;  // std dev = 2.403, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), interaction(G, H) )
%   | | | then return 0.22426698615713767;  // std dev = 3.051, 51.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | | | else return 0.06873711020454368;  // std dev = 2.125, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else return 0.3758605654879883;  // std dev = 0.784, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(J, A) )
%   | then return -0.07877675473109155;  // std dev = 6.25e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(G, F) )
%   | | | then return 0.3716130799448082;  // std dev = 0.405, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06660371318387208;  // std dev = 1.973, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(H, D), phenotype(A, I) )
%   | | | then return 0.5160172816600787;  // std dev = 0.169, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.23819442203948674;  // std dev = 1.463, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.18336280332452237;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3546259129984395;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.12917013684036424;  // std dev = 1.122, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.006805573812785141;  // std dev = 4.188, 92.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   else return -0.07324622576333725;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.06975615739286929;  // std dev = 2.829, 63.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | | | else return 0.22047745552905795;  // std dev = 3.134, 74.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.2810849538435531;  // std dev = 0.193, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.4344441826530946;  // std dev = 0.420, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.3984509924594368;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5093216719228093;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J) )
%   | | then return -0.06842697784420268;  // std dev = 3.23e-09, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.06842697784420268;  // std dev = 3.09e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.26742199497456476;  // std dev = 2.694, 100.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=92 */
%   | | | else return -0.33443741958082324;  // std dev = 1.881, 49.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.21566890494011773;  // std dev = 0.194, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.3405404923494186;  // std dev = 0.178, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J) )
%   | | | then return -0.09974886921880306;  // std dev = 1.097, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.16220906296427415;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.25199641661552785;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.06419184008202626;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
Inference time using transfer learning 46.432618141174316
Refined model CLL: -0.212888


******************************************
Best model found
******************************************
Results 

CLL : -0.201002 

AUC ROC : 0.987928 

AUC PR : 0.513524 

Precision : 0.159596 

Recall : 0.89434 

F1 : 0.270857 

Total Learning Time : 12.397184371948242 

Total Inference Time : 7.5467002391815186 

Total revision time: 26.485446453094482
Best scored revision CLL: -0.212888


Results 

CLL : -0.201002 

AUC ROC : 0.987928 

AUC PR : 0.513524 

Precision : 0.159596 

Recall : 0.89434 

F1 : 0.270857 

Total Learning Time : 26.502039909362793 

Total Inference Time : 7.5467002391815186 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8214058876037598
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4225661130136201;  // std dev = 0.496, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.12e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.33292970007345923;  // std dev = 5.709, 131.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=70 */
%   | else return 0.4096896661464015;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29373699318425733;  // std dev = 0.497, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6793458438634091;  // std dev = 2.06e-07, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.05658076492177356;  // std dev = 3.952, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.22711127529502043;  // std dev = 4.101, 108.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=70 */
%   | else return 0.28604540135251916;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.72e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.18468499782192077;  // std dev = 4.632, 128.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=83 */
%   | | else return 0.0015555920422940194;  // std dev = 2.307, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08360313449565031;  // std dev = 0.430, 162.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08107338982435085;  // std dev = 4.932, 137.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=83 */
%   | else return 0.04861447507681873;  // std dev = 2.186, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.021687094861083066;  // std dev = 5.643, 170.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.031718838734680475;  // std dev = 5.530, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.08e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 25.672459363937378
Parameter learned model CLL:-0.265065 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 71, 92], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.709, 61, 70], 'true,false': [2.925, 14, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 98, 0], 'false,false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 73, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.06e-07, 0, 70], 'true,false': [3.952, 59, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.05e-08, 90, 0], 'false,false,false,false': [0.0, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.101, 38, 70], 'true,false': [2.925, 14, 22], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.632, 45, 83], 'true,true,false': [2.307, 15, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 93, 0], 'false,false,false': [0.0, 22, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.43, 70, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-08, 92, 0], 'false,false,false': [0.0, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.932, 54, 83], 'true,false': [2.186, 11, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.643, 78, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.53, 73, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.08e-09, 116, 0]}]
{'': [0.24585042718958433, 6.579099405186112e-17], 'false': [nan, 6.579099405186112e-17]}
{'': [0.2474093728710228, -1.76225876924628e-18], 'true': [0.24881999883456518, 0.2376543209876542], 'false': [nan, -1.76225876924628e-18], 'false,false': [nan, -1.76225876924628e-18], 'false,false,false': [-1.3594567648471304e-17, -7.93016446160826e-18]}
{'': [0.2466794761495969, 6.817158923136926e-17], 'false': [nan, 6.817158923136926e-17], 'false,false': [nan, 6.817158923136926e-17]}
{'': [0.23809701104037584, -1.1686558153949016e-17], 'true': [6.0903663065151445e-16, 0.1927925875957972], 'false': [nan, -1.1686558153949016e-17], 'false,false': [nan, -1.1686558153949016e-17], 'false,false,false': [2.837236618486511e-17, -2.3129646346357427e-18]}
{'': [0.1768464998015394, 4.297637514678025e-17], 'true': [0.15570891826929414, 0.23765432098765413], 'false': [nan, 4.297637514678025e-17]}
{'': [0.18060406504083973, 3.2823985075874195e-17], 'true': [0.18060406504083973, nan], 'true,true': [0.16760059592346208, 0.22171473885040496], 'false': [nan, 3.2823985075874195e-17], 'false,false': [3.1038493161563513e-17, -5.046468293750712e-18]}
{'': [0.18528166033005222, 3.9715295189843e-17], 'true': [0.18528166033005222, nan], 'false': [nan, 3.9715295189843e-17], 'false,false': [3.0169103930031426e-17, 0.0]}
{'': [0.18552177199381603, 0.0], 'true': [0.17758493822386054, 0.23896971633022318], 'false': [nan, 0.0], 'false,false': [nan, 0.0]}
{'': [0.1873264728339985, 2.5232341468753557e-17], 'true': [0.1873264728339985, nan], 'false': [nan, 2.5232341468753557e-17], 'false,false': [nan, 2.5232341468753557e-17]}
{'': [0.18532590170405908, 3.3498108501621104e-18], 'true': [0.18532590170405908, nan], 'false': [nan, 3.3498108501621104e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.37441086769104
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.8081489350995117;  // std dev = 1.378, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(G, A), enzyme(A, H) )
%   | | then if ( interaction(A, I), phenotype(G, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41747096899781744;  // std dev = 3.813, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.4444873786532198;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7405394977971689;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7472436741579629;  // std dev = 0.177, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.17831737247944254;  // std dev = 0.335, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.2780151342840928;  // std dev = 2.266, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.5208803551649419;  // std dev = 2.862, 42.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then if ( enzyme(A, F), interaction(A, D) )
%   | | | then return 0.5889055747765856;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5618082487604549;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6113175508091244;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14343922796494857;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.16831790646480008;  // std dev = 4.124, 94.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=43 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.4572088917520626;  // std dev = 1.411, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.27727837557814244;  // std dev = 2.762, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   else if ( interaction(A, J) )
%   | then return -0.11231637819360628;  // std dev = 5.59e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.11231637819360633;  // std dev = 3.48e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, E), location(A, F) )
%   | | | then return 0.46302664891945416;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4287284107338695;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5279654880579869;  // std dev = 0.233, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.6145951993833898;  // std dev = 0.287, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.14842685426913554;  // std dev = 0.241, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.32519415562531057;  // std dev = 0.434, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.3563510897132183;  // std dev = 1.439, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.1796293060180096;  // std dev = 2.080, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.334383995366155;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3684963054645933;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.1835036174132583;  // std dev = 1.149, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.03957464056938431;  // std dev = 2.335, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return 0.13638556926999645;  // std dev = 1.484, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.28047255941091775;  // std dev = 1.666, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2134973221857755;  // std dev = 1.545, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.1121496832740223;  // std dev = 2.017, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   else return -0.09269127618926079;  // std dev = 6.84e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.25666364793049984;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.30414719517209904;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.364824024710307;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.38827281356316085;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2057351856185259;  // std dev = 0.267, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.28513212154970174;  // std dev = 1.225, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.11123141963949085;  // std dev = 3.750, 109.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=62 */
%   else if ( interaction(J, A) )
%   | then return -0.0851847513883968;  // std dev = 4.27e-09, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.08518475138839687;  // std dev = 1.86e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B), complex(F, G) )
%   | | | then return 0.21187590580358992;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.28015916555866915;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14888149846670087;  // std dev = 0.239, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0573033389726029;  // std dev = 1.769, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.22901856192952308;  // std dev = 0.621, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4624844988927266;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1682190093752999;  // std dev = 1.602, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return 0.07590009683708246;  // std dev = 2.961, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   else return -0.07877675473109155;  // std dev = 6.11e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), interaction(G, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2090842213268334;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06963914437911704;  // std dev = 1.530, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( phenotype(D, H), phenotype(E, I) )
%   | | | then return 0.18043042782765156;  // std dev = 1.211, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.07552794048657745;  // std dev = 1.945, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return -0.062303447948216975;  // std dev = 1.842, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.3795318607119074;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return -0.044414001657350655;  // std dev = 2.514, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.26461096672897205;  // std dev = 0.713, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07324622576333716;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then if ( complex(F, E), interaction(D, G) )
%   | | | then return 0.15317850495246763;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.179835189850113;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25495559901948983;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.045974775048773425;  // std dev = 1.088, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.09964988217483535;  // std dev = 1.665, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.17600830815776203;  // std dev = 1.252, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.04382845909772254;  // std dev = 3.378, 91.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=52 */
%   else if ( interaction(A, A) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06842697784420265;  // std dev = 4.75e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(E, D), complex(G, H) )
%   | | | then return -0.02382708921577233;  // std dev = 0.458, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11300277568170426;  // std dev = 0.745, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( location(A, I), complex(E, J) )
%   | | | then return -0.10057008193810212;  // std dev = 1.431, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.012062275971386704;  // std dev = 0.981, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.12479928705928453;  // std dev = 0.752, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.01079972194087016;  // std dev = 2.183, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.17740795582850735;  // std dev = 1.777, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.12056860137450587;  // std dev = 1.608, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   else return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
Inference time using transfer learning 42.79577040672302
Refined model CLL: -0.195031


******************************************
Best model found
******************************************
Results 

CLL : -0.197568 

AUC ROC : 0.991219 

AUC PR : 0.380917 

Precision : 0.133946 

Recall : 1.0 

F1 : 0.236247 

Total Learning Time : 8.37441086769104 

Total Inference Time : 4.139008045196533 

Total revision time: 17.20574116706848
Best scored revision CLL: -0.195031


Results 

CLL : -0.197568 

AUC ROC : 0.991219 

AUC PR : 0.380917 

Precision : 0.133946 

Recall : 1.0 

F1 : 0.236247 

Total Learning Time : 17.222334623336792 

Total Inference Time : 4.139008045196533 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6931178569793701
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4512523833753721;  // std dev = 0.491, 145.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 8.33e-09, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3758920165357241;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=71 */
%   | else return 0.44609871646444693;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32450604838805547;  // std dev = 0.490, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6160979010604419;  // std dev = 1.697, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | else return -0.18309738696632136;  // std dev = 3.491, 91.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1493886105298213;  // std dev = 4.585, 126.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=71 */
%   | else return 0.28162294245710506;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.11955865181131296;  // std dev = 4.909, 138.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=78 */
%   | | else return 0.06565459716128784;  // std dev = 2.052, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11856972452366935;  // std dev = 0.418, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109162;  // std dev = 5.05e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.059056429606551296;  // std dev = 4.914, 139.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=78 */
%   | else return 0.06965169838877103;  // std dev = 1.958, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10703361051239861;  // std dev = 4.837, 138.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.041542217497855284;  // std dev = 5.139, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning 27.365485429763794
Parameter learned model CLL:-0.268116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 59, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 83, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.448, 51, 71], 'true,false': [2.284, 8, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 79, 0], 'false,false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 57, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.697, 3, 71], 'true,false': [3.491, 76, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.21e-08, 97, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.585, 55, 71], 'true,false': [2.449, 10, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.909, 60, 78], 'true,true,false': [2.052, 11, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 98, 0], 'false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.418, 61, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.05e-08, 88, 0], 'false,false,false': [0.0, 17, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.914, 61, 78], 'true,false': [1.958, 9, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 91, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.837, 52, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.139, 63, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 120, 0]}]
{'': [0.2413317479191459, 7.490661370964911e-17], 'false': [nan, 7.490661370964911e-17]}
{'': [0.2413317479191443, -8.540177112501205e-18], 'true': [0.24328137597420016, 0.2268431001890358], 'false': [nan, -8.540177112501205e-18], 'false,false': [nan, -8.540177112501205e-18], 'false,false,false': [-2.5296220814244072e-17, -6.661338147750939e-18]}
{'': [0.23987463367451087, 7.51535585900106e-17], 'false': [nan, 7.51535585900106e-17], 'false,false': [nan, 7.51535585900106e-17]}
{'': [0.24930313079535718, -3.172065784643304e-17], 'true': [0.03889700511322177, 0.13394946596586058], 'false': [nan, -3.172065784643304e-17], 'false,false': [nan, -3.172065784643304e-17], 'false,false,false': [1.8312957107219077e-17, 0.0]}
{'': [0.1813949638377117, 4.1876833384983976e-17], 'true': [0.16687196084630837, 0.23999999999999982], 'false': [nan, 4.1876833384983976e-17]}
{'': [0.18063679918204212, 3.3404940563942766e-17], 'true': [0.18063679918204212, nan], 'true,true': [0.17464457786735807, 0.22160524044503974], 'false': [nan, 3.3404940563942766e-17], 'false,false': [3.172065784643304e-17, -1.8503717077085942e-18]}
{'': [0.17489460533288056, 3.595007889262412e-17], 'true': [0.17489460533288056, nan], 'false': [nan, 3.595007889262412e-17], 'false,false': [2.901719268906659e-17, -8.163404592832033e-19]}
{'': [0.17934448665471128, -8.540177112501205e-18], 'true': [0.17368840680040915, 0.22549123093864376], 'false': [nan, -8.540177112501205e-18], 'false,false': [nan, -8.540177112501205e-18]}
{'': [0.16953761405056667, 2.4671622769447922e-17], 'true': [0.16953761405056667, nan], 'false': [nan, 2.4671622769447922e-17], 'false,false': [nan, 2.4671622769447922e-17]}
{'': [0.17723128047504286, -1.850371707708594e-17], 'true': [0.17723128047504286, nan], 'false': [nan, -1.850371707708594e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 6.990731716156006
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, D) )
%   | | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.48972788246793336;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.33866841561899214;  // std dev = 4.384, 77.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=37 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7237287419118104;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8031238706556285;  // std dev = 0.054, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.20277028647941017;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15796944017775422;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.33361362799414135;  // std dev = 4.930, 98.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=52 */
%   else if ( interaction(H, A) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.6670309850771114;  // std dev = 0.254, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.2631009252935533;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.1690738331183204;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.25745930113848436;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4648324934750462;  // std dev = 0.759, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.7327684970940964;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13634846925499902;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.36020469710774633;  // std dev = 4.076, 75.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   else return -0.1123163781936062;  // std dev = 8.01e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.44560411336109707;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5313304770400358;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23091380609250556;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(G, H) )
%   | | | then return 0.5435191084382169;  // std dev = 0.321, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10263262530027861;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.2747386315450091;  // std dev = 3.137, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | | | else return 0.688080573075696;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(K, A) )
%   | then return -0.10159632948783626;  // std dev = 4.56e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(E, F) )
%   | | | then return 0.34503391449019183;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.33038909347033213;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.45803947797914135;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(A, I) )
%   | | | then return -0.0025905002992825227;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3059603091032068;  // std dev = 2.254, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.044834357604619936;  // std dev = 1.419, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.12687562363958726;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926097;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.09269127618926094;  // std dev = 5.27e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.34172559996141344;  // std dev = 0.308, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.04762804105908474;  // std dev = 2.329, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(D, H), phenotype(D, I) )
%   | | | then return 0.5348368580830893;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2665963249823078;  // std dev = 1.164, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.04252652983912821;  // std dev = 0.413, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07361853838329575;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.31494248323907703;  // std dev = 2.027, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | | | else return 0.15659186416782825;  // std dev = 2.537, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   else return -0.08518475138839682;  // std dev = 5.59e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2530151402168168;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.00346729520514813;  // std dev = 1.826, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.13363353783412593;  // std dev = 1.824, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.3934434092305341;  // std dev = 1.182, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.21324730671424458;  // std dev = 1.343, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.0018564720442299455;  // std dev = 3.128, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.13870759918023742;  // std dev = 1.324, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.3008324754582071;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.0787767547310916;  // std dev = 5.74e-09, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(E, F), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), interaction(E, G) )
%   | | | then return 0.1839544615888338;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3088038168842474;  // std dev = 0.244, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(E, H), phenotype(A, I) )
%   | | | then return -0.05111328836672817;  // std dev = 1.758, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.11715945293151252;  // std dev = 2.547, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(K, L), interaction(M, K) )
%   | | | then return -0.14710000520739272;  // std dev = 2.121, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.06644249441275034;  // std dev = 2.198, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.06946496604557359;  // std dev = 1.909, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.320726673452835;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.17270193999493663;  // std dev = 0.639, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4922795218556596;  // std dev = 0.238, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.021690818981979703;  // std dev = 1.134, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1570879584612079;  // std dev = 1.342, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.09240308145738271;  // std dev = 2.335, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return -0.06158702418794109;  // std dev = 3.730, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   else if ( interaction(A, L) )
%   | then if ( interaction(L, L) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06842697784420272;  // std dev = 9.31e-10, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.0684269778442027;  // std dev = 2.08e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F), enzyme(D, G) )
%   | | | then return -0.012047463378417259;  // std dev = 0.371, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20931866030209295;  // std dev = 0.341, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(E, H), complex(D, I) )
%   | | | then return 0.13413783200455975;  // std dev = 1.688, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return -0.10661470020043677;  // std dev = 3.045, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.28681739105465565;  // std dev = 0.212, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.018300550971434317;  // std dev = 1.873, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.3350539309109489;  // std dev = 1.240, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.02631435259028651;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning 17.467450380325317
Refined model CLL: -0.265612


******************************************
Best model found
******************************************
Results 

CLL : -0.292873 

AUC ROC : 0.932348 

AUC PR : 0.194477 

Precision : 0.0342 

Recall : 0.869258 

F1 : 0.065811 

Total Learning Time : 6.990731716156006 

Total Inference Time : 2.7553157806396484 

Total revision time: 14.028220415115356
Best scored revision CLL: -0.265612


Results 

CLL : -0.292873 

AUC ROC : 0.932348 

AUC PR : 0.194477 

Precision : 0.0342 

Recall : 0.869258 

F1 : 0.065811 

Total Learning Time : 14.044813871383667 

Total Inference Time : 2.7553157806396484 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.695936441421509
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43051735615214143;  // std dev = 0.495, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.43295546876788804;  // std dev = 5.466, 129.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=82 */
%   | else return 0.3528521095947601;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.280509532441338;  // std dev = 0.496, 155.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.54e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5496695883886186;  // std dev = 2.985, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | else return -0.2622495865937026;  // std dev = 2.184, 65.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2016792352095895;  // std dev = 4.745, 134.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=82 */
%   | else return 0.08788095342187167;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.092691276189261;  // std dev = 3.95e-09, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1284068728488207;  // std dev = 5.145, 150.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=86 */
%   | | else return 0.19247778741375937;  // std dev = 0.736, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0784852550071614;  // std dev = 0.425, 158.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.0787767547310916;  // std dev = 5.67e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.10868676445625193;  // std dev = 4.989, 139.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=86 */
%   | else return -0.042052170613303796;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02732383953433622;  // std dev = 5.343, 162.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.02e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.018403156499038245;  // std dev = 5.430, 160.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
Inference time using transfer learning 18.895787715911865
Parameter learned model CLL:-0.261327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 65, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 96, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.466, 47, 82], 'true,false': [1.491, 4, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 97, 0], 'false,false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 68, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.54e-09, 122, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.985, 10, 82], 'true,false': [2.184, 60, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 112, 0], 'false,false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.745, 52, 82], 'true,false': [1.793, 9, 5], 'false,true': [0.0, 0, 0], 'false,false': [3.95e-09, 95, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.145, 64, 86], 'true,true,false': [0.736, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.87e-08, 108, 0], 'false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.425, 71, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.67e-08, 98, 0], 'false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.989, 53, 86], 'true,false': [0.853, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.343, 75, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.43, 73, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 130, 0]}]
{'': [0.2447628116343512, 7.864079757761526e-17], 'false': [nan, 7.864079757761526e-17]}
{'': [0.23298676748582112, -8.3790416952842e-18], 'true': [0.231596658854635, 0.2469135802469136], 'false': [nan, -8.3790416952842e-18], 'false,false': [nan, -8.3790416952842e-18], 'false,false,false': [-1.1445598192011922e-17, 0.0]}
{'': [0.24636058461726124, 7.098147206619854e-17], 'false': [nan, 7.098147206619854e-17], 'false,false': [nan, 7.098147206619854e-17]}
{'': [0.24708881884419917, -1.8978171361113787e-17], 'true': [0.09688090737240096, 0.07340051389651564], 'false': [nan, -1.8978171361113787e-17], 'false,false': [nan, -1.8978171361113787e-17], 'false,false,false': [-7.93016446160826e-18, 0.0]}
{'': [0.17497366239210732, 1.636118141552862e-17], 'true': [0.168042281339, 0.229591836734694], 'false': [nan, 1.636118141552862e-17]}
{'': [0.17776560296322558, 3.3404940563942766e-17], 'true': [0.17776560296322558, nan], 'true,true': [0.17646782544060519, 0.27104784930464026], 'false': [nan, 3.3404940563942766e-17], 'false,false': [3.1867512743870234e-17, -1.3877787807814458e-18]}
{'': [0.18093240400101185, 3.489272363107635e-17], 'true': [0.18093240400101185, nan], 'false': [nan, 3.489272363107635e-17], 'false,false': [3.285353848380565e-17, -2.9738116731030977e-18]}
{'': [0.1809039006144871, -4.270088556250602e-18], 'true': [0.1790902440366938, 0.24269447587937634], 'false': [nan, -4.270088556250602e-18], 'false,false': [nan, -4.270088556250602e-18]}
{'': [0.17625032912735716, 2.5544954548897407e-17], 'true': [0.17625032912735716, nan], 'false': [nan, 2.5544954548897407e-17], 'false,false': [nan, 2.5544954548897407e-17]}
{'': [0.18431299978431137, -1.4518301091252048e-17], 'true': [0.18431299978431137, nan], 'false': [nan, -1.4518301091252048e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.248347282409668
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, E), complex(E, F) )
%   | | | then return 0.3697768420762556;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.541693238896981;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=54 */
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), complex(D, E) )
%   | | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.739227104282257;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6012957648647105;  // std dev = 1.539, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.17267499454224847;  // std dev = 3.390, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.6537344884248623;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3080393286621537;  // std dev = 4.229, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839108;  // std dev = 7.88e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(E, G) )
%   | | then return 0.7438695792000859;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5765991734358659;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.29650847844318934;  // std dev = 1.734, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.550483385763415;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6269325341253444;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16329451739843207;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.27591693407364565;  // std dev = 5.058, 106.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360642;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360622;  // std dev = 7.68e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.5309391921672778;  // std dev = 2.793, 86.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=78 */
%   | | | else return -0.17044355630830268;  // std dev = 1.914, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return -0.2702618977131077;  // std dev = 0.253, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.369286186144828;  // std dev = 0.131, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.5980340045705974;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(I, A) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, E), phenotype(D, G) )
%   | | | then return 0.3174111531035141;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0026310674070937584;  // std dev = 2.144, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( location(A, H), interaction(D, D) )
%   | | | then return 0.28457736124311045;  // std dev = 1.643, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.16730726020537098;  // std dev = 3.802, 85.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   | else return 0.474348817363996;  // std dev = 0.936, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( location(A, I) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.09269127618926108;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.09269127618926108;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(A, E) )
%   | | then if ( phenotype(A, F), complex(D, G) )
%   | | | then return 0.10279253716998539;  // std dev = 1.069, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.025488813460939917;  // std dev = 1.714, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return -0.10009295735562215;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.3453587245307685;  // std dev = 1.029, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.053077318777188784;  // std dev = 3.331, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.38629010938384795;  // std dev = 0.735, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14895407182425977;  // std dev = 2.574, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   else if ( interaction(N, A) )
%   | then return -0.0851847513883968;  // std dev = 5.82e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.29943881223378294;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.27021453195726947;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, F) )
%   | | | then return 0.12387070850854048;  // std dev = 1.932, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.0037516624321630417;  // std dev = 2.752, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.31925055806260516;  // std dev = 1.071, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.11797646436179304;  // std dev = 2.964, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109164;  // std dev = 5.10e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.36973082482088565;  // std dev = 0.244, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4627666760251664;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.4891305114189643;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.4210376420165332;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( interaction(L, M), complex(M, N) )
%   | | | then return 0.14545556011541128;  // std dev = 1.099, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.43192610206788;  // std dev = 0.223, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.040747584684678755;  // std dev = 1.500, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.13535310827976138;  // std dev = 3.405, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   else return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.28727867083993147;  // std dev = 0.158, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11667450528096616;  // std dev = 0.490, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, G), interaction(H, A) )
%   | | | then return -0.23491920207546033;  // std dev = 1.209, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.059584344334900265;  // std dev = 1.319, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.044634733162272185;  // std dev = 1.397, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.27922924657671283;  // std dev = 0.938, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.11672421618939537;  // std dev = 1.606, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return -9.735763455741406E-4;  // std dev = 3.146, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.16068268185316786;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.003723262407058884;  // std dev = 1.637, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.3306147319560394;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1589692011932364;  // std dev = 1.784, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.298961757492065;  // std dev = 0.995, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.41096441575386095;  // std dev = 0.157, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.12205989653658493;  // std dev = 1.533, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.015569777825886822;  // std dev = 2.463, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   else return -0.06419184008202626;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
Inference time using transfer learning 32.494014501571655
Refined model CLL: -0.243647


******************************************
Best model found
******************************************
Results 

CLL : -0.248914 

AUC ROC : 0.98103 

AUC PR : 0.252535 

Precision : 0.073002 

Recall : 0.975177 

F1 : 0.135836 

Total Learning Time : 9.248347282409668 

Total Inference Time : 5.90521764755249 

Total revision time: 22.734838247299194
Best scored revision CLL: -0.243647


Results 

CLL : -0.248914 

AUC ROC : 0.98103 

AUC PR : 0.252535 

Precision : 0.073002 

Recall : 0.975177 

F1 : 0.135836 

Total Learning Time : 22.752267837524414 

Total Inference Time : 5.90521764755249 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.7707929611206055
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40265155290055643;  // std dev = 0.498, 191.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.44373809863905994;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=52 */
%   | else return 0.37954056777486245;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839105;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2841049685605997;  // std dev = 0.497, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360624;  // std dev = 7.79e-09, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5768269931675103;  // std dev = 3.024, 109.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=99 */
%   | else return -0.2572462682193555;  // std dev = 2.137, 66.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.10159632948783617;  // std dev = 5.05e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16678966761789163;  // std dev = 4.184, 91.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=52 */
%   | else return 0.1981812349613452;  // std dev = 3.822, 89.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926086;  // std dev = 6.59e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21432920765206892;  // std dev = 4.152, 103.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=69 */
%   | | else return 0.03507652380998136;  // std dev = 3.669, 77.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839683;  // std dev = 3.49e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839683;  // std dev = 4.01e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09578639756967848;  // std dev = 0.414, 185.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109177;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.0787767547310917;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.04383017843006688;  // std dev = 4.778, 124.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=69 */
%   | else return 0.020382560333464042;  // std dev = 3.614, 73.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1305004132637147;  // std dev = 5.143, 160.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04359737215814623;  // std dev = 5.582, 179.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
Inference time using transfer learning 28.6298348903656
Parameter learned model CLL:-0.26769 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 87, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 125, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.315, 29, 52], 'true,false': [4.686, 38, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.16e-08, 121, 0], 'false,false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 83, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.79e-09, 148, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.024, 10, 99], 'true,false': [2.137, 61, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.69e-08, 47, 0], 'false,false,false,false': [5.05e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.184, 39, 52], 'true,false': [3.822, 37, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.152, 34, 69], 'true,true,false': [3.669, 42, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.49e-08, 63, 0], 'false,false,false': [4.01e-08, 67, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.414, 81, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.83e-08, 56, 0], 'false,false,false': [3.16e-08, 66, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.778, 55, 69], 'true,false': [3.614, 38, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.143, 56, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.582, 75, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 134, 0]}]
{'': [0.24801951700885697, -1.4210854715202004e-17], 'false': [nan, -1.4210854715202004e-17]}
{'': [0.2382955439280445, 5.551115123125783e-17], 'true': [0.22984301173601682, 0.2439506172839516], 'false': [nan, 5.551115123125783e-17], 'false,false': [nan, 5.551115123125783e-17], 'false,false,false': [5.50523813863714e-17, 0.0]}
{'': [0.2471519957040878, 5.8511754000515e-17], 'false': [nan, 5.8511754000515e-17], 'false,false': [nan, 5.8511754000515e-17]}
{'': [0.24178849907540984, -1.1686558153949016e-17], 'true': [0.08391089074825178, 0.06921762197384793], 'false': [nan, -1.1686558153949016e-17], 'false,false': [nan, -1.1686558153949016e-17], 'false,false,false': [1.5354148212901102e-17, 3.811213368116209e-17]}
{'': [0.17865449204244027, 4.327988062098068e-17], 'true': [0.19235324524186162, 0.16414971182844074], 'false': [nan, 4.327988062098068e-17]}
{'': [0.1784467667453673, 3.5014726161254936e-17], 'true': [0.1784467667453673, nan], 'true,true': [0.16737427840227592, 0.17487164493916574], 'false': [nan, 3.5014726161254936e-17], 'false,false': [1.938484646170908e-17, 2.4027214712036968e-17]}
{'': [0.17109599255565158, 4.0950849268960694e-17], 'true': [0.17109599255565158, nan], 'false': [nan, 4.0950849268960694e-17], 'false,false': [5.9476233462061954e-18, 1.5139404881252134e-17]}
{'': [0.18231741003681204, -1.0262565773845985e-17], 'true': [0.1841148455673411, 0.17891817066467477], 'false': [nan, -1.0262565773845985e-17], 'false,false': [nan, -1.0262565773845985e-17]}
{'': [0.16531974263045085, 2.819614030794048e-17], 'true': [0.16531974263045085, nan], 'false': [nan, 2.819614030794048e-17], 'false,false': [nan, 2.819614030794048e-17]}
{'': [0.17406611122893917, -1.408491896912512e-17], 'true': [0.17406611122893917, nan], 'false': [nan, -1.408491896912512e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.42084527015686
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.3500844189704811;  // std dev = 5.567, 124.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=61 */
%   | | | else return 0.561852638803216;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(A, E) )
%   | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 2.98e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.19001455851683746;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.43369889912073484;  // std dev = 4.479, 87.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=55 */
%   | | | else return 0.2677872684896815;  // std dev = 4.120, 69.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   else if ( interaction(G, A) )
%   | then return -0.1254446385283911;  // std dev = 7.88e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(G, A) )
%   | | | then return 0.464608912335122;  // std dev = 2.717, 44.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   | | | else return 0.7197984151738717;  // std dev = 0.112, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.2691981811422755;  // std dev = 0.108, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.3090747547529059;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.571594978180196;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6624125131299382;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.16231806039475336;  // std dev = 2.221, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.40439497726400203;  // std dev = 2.647, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   else return -0.11231637819360615;  // std dev = 8.84e-09, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.4827739985723973;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4310151203888273;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.18581674924487224;  // std dev = 2.670, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.4449971564782033;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.04076854767370359;  // std dev = 1.573, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.1773195175298171;  // std dev = 4.507, 98.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=51 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.575316726057042;  // std dev = 0.184, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18022915436750078;  // std dev = 1.811, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   else return -0.10159632948783642;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, A) )
%   | | | then return 0.5338560301410475;  // std dev = 0.524, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.049195795724323005;  // std dev = 1.320, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.2544089626921816;  // std dev = 0.939, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.06404495102397557;  // std dev = 2.354, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then return 0.5182187577099292;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4117545463230905;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16082795730755292;  // std dev = 4.327, 94.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=51 */
%   else if ( interaction(A, K) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2486183078070873;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2618127930449882;  // std dev = 0.604, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.4575812625883138;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.317527834692729;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2714468163374423;  // std dev = 1.908, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return 0.06668454217464907;  // std dev = 4.605, 117.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=52 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.13337071847441317;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.0476857879824306;  // std dev = 2.053, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return -0.08518475138839678;  // std dev = 5.02e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, E), enzyme(D, F) )
%   | | | then return -0.22865843289091684;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.23409303955161628;  // std dev = 1.010, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.01533498587035727;  // std dev = 3.492, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   | | | else return -0.16961956080833726;  // std dev = 0.892, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.0031515606894708726;  // std dev = 1.832, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.18769253628996913;  // std dev = 3.247, 59.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | | else return 0.5368139920548136;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, K) )
%   | then return -0.0787767547310917;  // std dev = 3.61e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( phenotype(E, D), interaction(H, A) )
%   | | | then return 0.38820901294551535;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29458948934605134;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, A), phenotype(E, D) )
%   | | | then return -0.004358173700814146;  // std dev = 1.572, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.1547429887627325;  // std dev = 1.824, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.07464076080380948;  // std dev = 4.023, 86.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | else return -0.09188934272631516;  // std dev = 1.377, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.1050310618509613;  // std dev = 1.555, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.02079924406146439;  // std dev = 2.075, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return -0.07324622576333693;  // std dev = 4.47e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), complex(F, E) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.05145429376077552;  // std dev = 2.527, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.1688141750213108;  // std dev = 3.350, 81.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.1177458356409941;  // std dev = 0.468, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2168917113817504;  // std dev = 1.000, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( enzyme(A, L), interaction(K, K) )
%   | | | then return -0.28628780395665854;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3084415087105718;  // std dev = 0.215, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.011288089705928848;  // std dev = 1.978, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.12190913042528467;  // std dev = 1.635, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.06842697784420264;  // std dev = 5.35e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then if ( interaction(G, A), interaction(E, G) )
%   | | | then return -0.1401939202891123;  // std dev = 2.583, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.21006530899530812;  // std dev = 0.862, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.2184339315037567;  // std dev = 1.287, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.030676221125016785;  // std dev = 1.507, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.37384483728679;  // std dev = 0.370, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.43698577166410857;  // std dev = 0.196, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.21339252744434734;  // std dev = 2.750, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | | | else return 0.0488548835390219;  // std dev = 1.281, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
Inference time using transfer learning 10.103888034820557
Refined model CLL: -0.258343


******************************************
Best model found
******************************************
Results 

CLL : -0.263681 

AUC ROC : 0.940055 

AUC PR : 0.175868 

Precision : 0.048441 

Recall : 0.815094 

F1 : 0.091448 

Total Learning Time : 8.42084527015686 

Total Inference Time : 4.416137456893921 

Total revision time: 21.355005502700806
Best scored revision CLL: -0.258343


Results 

CLL : -0.263681 

AUC ROC : 0.940055 

AUC PR : 0.175868 

Precision : 0.048441 

Recall : 0.815094 

F1 : 0.091448 

Total Learning Time : 21.372435092926025 

Total Inference Time : 4.416137456893921 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7449462413787842
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41236580256938915;  // std dev = 0.497, 166.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 6.18e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3265300771182338;  // std dev = 5.758, 133.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=70 */
%   | else return 0.3948088822391426;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3412629273665278;  // std dev = 0.489, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6584875386709566;  // std dev = 0.993, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | else return -0.09151955442613903;  // std dev = 4.034, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.14598517964523045;  // std dev = 4.613, 127.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=70 */
%   | else return 0.30624085276634616;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 6.84e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.13590961331516638;  // std dev = 5.106, 144.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=83 */
%   | | else return 0.08133844251385995;  // std dev = 2.130, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.96e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return -0.0851847513883969;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09053741978319711;  // std dev = 0.431, 167.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109161;  // std dev = 5.58e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.11989764194159293;  // std dev = 4.796, 134.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=83 */
%   | else return 0.08421448243901548;  // std dev = 2.045, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 3.48e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05412190415340775;  // std dev = 5.477, 162.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.10e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07000206401091953;  // std dev = 5.231, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 1.61e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning 26.155286073684692
Parameter learned model CLL:-0.269112 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 74, 92], 'false,true': [0.0, 0, 0], 'false,false': [6.18e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.758, 63, 70], 'true,false': [2.986, 15, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 92, 0], 'false,false,false,false': [0.0, 33, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 61, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 109, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.993, 1, 70], 'true,false': [4.034, 69, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.33e-08, 101, 0], 'false,false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.613, 57, 70], 'true,false': [2.859, 13, 22], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.106, 61, 83], 'true,true,false': [2.13, 11, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 109, 0], 'false,false,false': [5.27e-09, 30, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.431, 75, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 95, 0], 'false,false,false': [5.27e-09, 37, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.796, 51, 83], 'true,false': [2.045, 9, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.48e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.477, 70, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 115, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.231, 62, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.61e-09, 114, 0]}]
{'': [0.24706053128175595, 3.8616453030440226e-17], 'false': [nan, 3.8616453030440226e-17]}
{'': [0.24830449826989706, -1.7763568394002505e-18], 'true': [0.24930747922437774, 0.2410518626734847], 'false': [nan, -1.7763568394002505e-18], 'false,false': [nan, -1.7763568394002505e-18], 'false,false,false': [-1.68946982008176e-17, -1.3457248783335231e-17]}
{'': [0.239497678663141, 6.926161988487215e-17], 'false': [nan, 6.926161988487215e-17], 'false,false': [nan, 6.926161988487215e-17]}
{'': [0.24502987622907135, -3.4425520143415706e-17], 'true': [0.013886133703631, 0.17884035536704712], 'false': [nan, -3.4425520143415706e-17], 'false,false': [nan, -3.4425520143415706e-17], 'false,false,false': [1.0992307174506501e-17, -1.982541115402065e-18]}
{'': [0.186126893270096, 4.5876984488642834e-17], 'true': [0.1675311946338788, 0.2334693877551028], 'false': [nan, 4.5876984488642834e-17]}
{'': [0.18696746430736536, 3.5143750419789125e-17], 'true': [0.18696746430736536, nan], 'true,true': [0.1810796254233348, 0.22674506386812915], 'false': [nan, 3.5143750419789125e-17], 'false,false': [3.2593703475233955e-17, 9.251858538542971e-19]}
{'': [0.18580058401693153, 4.2053902447922596e-17], 'true': [0.18580058401693153, nan], 'false': [nan, 4.2053902447922596e-17], 'false,false': [3.272236283105724e-17, 7.50150692314295e-19]}
{'': [0.1789628106519334, 1.209153789195715e-17], 'true': [0.17164517861652648, 0.23231601202243693], 'false': [nan, 1.209153789195715e-17], 'false,false': [nan, 1.209153789195715e-17]}
{'': [0.18517465694495272, 2.6066105795547154e-17], 'true': [0.18517465694495272, nan], 'false': [nan, 2.6066105795547154e-17], 'false,false': [nan, 2.6066105795547154e-17]}
{'': [0.1777029772164488, 1.947759692324836e-18], 'true': [0.1777029772164488, nan], 'false': [nan, 1.947759692324836e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.033967971801758
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( phenotype(F, G), complex(E, H) )
%   | | | then return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.16584124279182;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.34703782398840033;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.5423594614153014;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=39 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.2072058164229512;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.7915934991126393;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35443305892774707;  // std dev = 5.635, 129.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=72 */
%   else if ( interaction(F, A) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7304162528687553;  // std dev = 0.187, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( complex(G, D), interaction(G, G) )
%   | | | then return -0.19640972247995736;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2637756947298016;  // std dev = 0.106, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6858835322404585;  // std dev = 0.268, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.2883918055659867;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.4115451015529586;  // std dev = 1.606, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.2601409704195282;  // std dev = 4.341, 78.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=42 */
%   else return -0.11231637819360621;  // std dev = 7.57e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.4018340230944512;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46108110418099607;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5319873953544427;  // std dev = 0.958, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.20293142946093817;  // std dev = 0.223, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, G), interaction(I, A) )
%   | | | then return -0.00991873723826472;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1762119775858827;  // std dev = 1.716, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.6534648556976584;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32274815692394915;  // std dev = 3.626, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3101810923793552;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35069728265585204;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.40472882453292897;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46669682447583455;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.3065563910251514;  // std dev = 0.457, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2067757871082485;  // std dev = 1.310, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.22908709442717656;  // std dev = 2.748, 56.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   | | | else return 0.12393311565330714;  // std dev = 3.769, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   else return -0.09269127618926089;  // std dev = 6.18e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.2656287741288951;  // std dev = 1.865, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return -0.19971260429535476;  // std dev = 0.225, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.26846097227332566;  // std dev = 0.275, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( complex(A, G), interaction(A, A) )
%   | | then return -0.11540415561331001;  // std dev = 0.513, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.12285546717391037;  // std dev = 1.800, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.20466938691629957;  // std dev = 3.683, 65.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839682;  // std dev = 5.43e-09, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return -0.08518475138839691;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20427694426225626;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22599707614101094;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.28234680058474404;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3322175123190046;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.1064075775462359;  // std dev = 0.989, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.2559814485238006;  // std dev = 1.170, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.04647903909467196;  // std dev = 3.050, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.13821731645435184;  // std dev = 3.434, 63.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   else return -0.07877675473109155;  // std dev = 6.18e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1756100639550758;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22882846160126583;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G), complex(D, G) )
%   | | | then return -0.242048933577763;  // std dev = 1.066, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.07139918562897696;  // std dev = 1.059, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), location(J, K) )
%   | | | then return 0.3179202255188317;  // std dev = 0.829, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.11553175193463092;  // std dev = 1.341, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2173862273198536;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09487438408356427;  // std dev = 3.855, 93.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else return -0.07324622576333709;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.146734189455588;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.159768530703448;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19099080832183482;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2232096487400168;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.10252380992667952;  // std dev = 4.288, 119.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=76 */
%   | | | else return -0.4171675968194245;  // std dev = 0.727, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.23180270279959717;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( complex(A, I) )
%   | then return -0.0684269778442027;  // std dev = 2.46e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06842697784420271;  // std dev = 1.61e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.12930316557905658;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15694752174450052;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16866339516085294;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2415819419963073;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), phenotype(G, J) )
%   | | | then return 0.007836013900364428;  // std dev = 2.348, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return -0.11723964318518384;  // std dev = 2.358, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.34814478792565884;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03759547011214937;  // std dev = 3.202, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
Inference time using transfer learning 35.51524233818054
Refined model CLL: -0.224576


******************************************
Best model found
******************************************
Results 

CLL : -0.242282 

AUC ROC : 0.964946 

AUC PR : 0.188106 

Precision : 0.047875 

Recall : 0.963899 

F1 : 0.09122 

Total Learning Time : 8.033967971801758 

Total Inference Time : 4.578510522842407 

Total revision time: 17.5208957195282
Best scored revision CLL: -0.224576


Results 

CLL : -0.242282 

AUC ROC : 0.964946 

AUC PR : 0.188106 

Precision : 0.047875 

Recall : 0.963899 

F1 : 0.09122 

Total Learning Time : 17.538325309753418 

Total Inference Time : 4.578510522842407 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7061450481414795
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4595475364981115;  // std dev = 0.490, 143.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3842310057172595;  // std dev = 5.384, 120.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=71 */
%   | else return 0.5068500533363084;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.1254446385283914;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29514006324797293;  // std dev = 0.494, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360621;  // std dev = 7.68e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6061699335473357;  // std dev = 1.946, 75.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=71 */
%   | else return -0.1591444148055755;  // std dev = 3.403, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.20595799356441902;  // std dev = 4.261, 113.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=71 */
%   | else return 0.34947512884064014;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926092;  // std dev = 5.74e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1474399800469465;  // std dev = 4.658, 127.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=78 */
%   | | else return 0.08259061441562972;  // std dev = 1.959, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0618974339445048;  // std dev = 0.426, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 5.96e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09034793666450745;  // std dev = 4.712, 128.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=78 */
%   | else return 0.04792224730793876;  // std dev = 1.956, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0445293549273624;  // std dev = 5.227, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.84e-09, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0765248930683897;  // std dev = 4.935, 139.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning 26.76533317565918
Parameter learned model CLL:-0.275377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 57, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.384, 49, 71], 'true,false': [2.07, 6, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 85, 0], 'false,false,false,false': [7.45e-09, 13, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 63, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.68e-09, 93, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.946, 4, 71], 'true,false': [3.403, 64, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.58e-08, 103, 0], 'false,false,false,false': [0.0, 14, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.261, 42, 71], 'true,false': [2.185, 7, 15], 'false,true': [0.0, 0, 0], 'false,false': [5.74e-09, 106, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.658, 49, 78], 'true,true,false': [1.959, 9, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 88, 0], 'false,false,false': [0.0, 19, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.426, 72, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 102, 0], 'false,false,false': [0.0, 16, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.712, 50, 78], 'true,false': [1.956, 9, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 113, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.227, 66, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.84e-09, 102, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.935, 53, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 106, 0]}]
{'': [0.23971832363440954, 6.00120553851436e-17], 'false': [nan, 6.00120553851436e-17]}
{'': [0.23791559780695268, -1.3594567648471304e-17], 'true': [0.24159722222222452, 0.204081632653061], 'false': [nan, -1.3594567648471304e-17], 'false,false': [nan, -1.3594567648471304e-17], 'false,false,false': [-2.0898315757650005e-17, 4.270088556250602e-18]}
{'': [0.244137164364651, 5.968940992608368e-17], 'false': [nan, 5.968940992608368e-17], 'false,false': [nan, 5.968940992608368e-17]}
{'': [0.24610620094347965, -1.8978171361113787e-17], 'true': [0.05048888888888802, 0.1465723851738017], 'false': [nan, -1.8978171361113787e-17], 'false,false': [nan, -1.8978171361113787e-17], 'false,false,false': [6.467318590049456e-18, -7.93016446160826e-18]}
{'': [0.1726513115065877, 3.2468786569226275e-17], 'true': [0.16067174109788884, 0.21694214876033113], 'false': [nan, 3.2468786569226275e-17]}
{'': [0.1777340132768513, 3.112774835397635e-17], 'true': [0.1777340132768513, nan], 'true,true': [0.17080744428995923, 0.22577059342035175], 'false': [nan, 3.112774835397635e-17], 'false,false': [3.027880976250427e-17, -4.382459307730881e-18]}
{'': [0.181071765332412, 3.763467880085276e-17], 'true': [0.181071765332412, nan], 'false': [nan, 3.763467880085276e-17], 'false,false': [3.483052626275001e-17, -8.673617379884035e-19]}
{'': [0.17970150512166283, -4.9124912594033475e-18], 'true': [0.17345941007740065, 0.225111897211759], 'false': [nan, -4.9124912594033475e-18], 'false,false': [nan, -4.9124912594033475e-18]}
{'': [0.17976231276399512, 2.3401759832785162e-17], 'true': [0.17976231276399512, nan], 'false': [nan, 2.3401759832785162e-17], 'false,false': [nan, 2.3401759832785162e-17]}
{'': [0.17519160351478466, -1.6234393284613138e-17], 'true': [0.17519160351478466, nan], 'false': [nan, -1.6234393284613138e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 6.203020811080933
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4406732069441714;  // std dev = 5.005, 103.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=60 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7243468492708405;  // std dev = 0.075, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.367078833591913;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11457841688685196;  // std dev = 2.163, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.2682560822371756;  // std dev = 3.214, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.4642478832351696;  // std dev = 3.555, 58.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=39 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(E, A), interaction(D, E) )
%   | | | then return 0.5541626943043378;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6293223564579541;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2988903836787292;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7384218826616097;  // std dev = 0.103, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.25993656037362756;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.07987571297489243;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.27077918831842407;  // std dev = 4.214, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1123163781936062;  // std dev = 8.01e-09, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), phenotype(D, G) )
%   | | | then return 0.410573015241884;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41662140020356486;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.4834328816835332;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4866844060639359;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5203055837605638;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.09460962240764689;  // std dev = 3.234, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.23169732356888656;  // std dev = 4.061, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   else if ( interaction(L, A) )
%   | then return -0.1015963294878363;  // std dev = 1.86e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), complex(A, G) )
%   | | then if ( interaction(A, H), enzyme(D, I) )
%   | | | then return 0.12305406903173925;  // std dev = 0.798, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5267771775070217;  // std dev = 0.421, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, D), enzyme(J, K) )
%   | | | then return 0.3391369234330202;  // std dev = 1.077, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.16612602145685038;  // std dev = 2.244, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( interaction(L, A), interaction(A, M) )
%   | | then if ( complex(M, N), phenotype(A, P) )
%   | | | then return 0.11354598013656907;  // std dev = 1.167, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.40657903482555935;  // std dev = 1.152, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( interaction(Q, A), interaction(Q, Q) )
%   | | | then return 0.39187370813572375;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09939406285479893;  // std dev = 3.628, 64.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else return -0.09269127618926104;  // std dev = 2.95e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.26808327330729825;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4946361796208554;  // std dev = 0.324, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.35257027600235763;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.4732395621596927;  // std dev = 0.201, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.34379190221762057;  // std dev = 1.668, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.062407866885955066;  // std dev = 1.097, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.21372012177541078;  // std dev = 1.623, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.10594680530237313;  // std dev = 3.520, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   else return -0.0851847513883968;  // std dev = 5.67e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.260236805024343;  // std dev = 0.616, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.03593388320039073;  // std dev = 2.933, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | else if ( interaction(A, H), complex(H, E) )
%   | | | then return -0.1808678595531506;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11996648804559977;  // std dev = 0.600, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), enzyme(I, L) )
%   | | | then return -0.025942371561977894;  // std dev = 1.339, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3218812987206093;  // std dev = 1.536, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.07653210072082092;  // std dev = 2.557, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.03927372296329108;  // std dev = 1.800, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return -0.07877675473109157;  // std dev = 6.04e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.29370960016145536;  // std dev = 1.191, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.39390508748419173;  // std dev = 0.440, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(G, A), location(G, D) )
%   | | | then return -0.39200048476533134;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.29592496745532465;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.2051847615700368;  // std dev = 1.335, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.041956383683512385;  // std dev = 3.609, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.11474795379010179;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.47889819076511714;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333707;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( interaction(A, A), phenotype(A, F) )
%   | | | then return -0.015125208625996617;  // std dev = 0.249, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2462447529063457;  // std dev = 0.313, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.32007598889567196;  // std dev = 0.369, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.25288056463532205;  // std dev = 0.183, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.18033811723606016;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30279061971612575;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.07584049616037349;  // std dev = 3.629, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
%   | | | else return -0.018256208691448998;  // std dev = 2.906, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   else return -0.06842697784420264;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.1086152360550488;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14904118097747715;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.1799656147158095;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2283927266843148;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.01929593537946122;  // std dev = 1.851, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return -0.1834608178731717;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.23867869457901741;  // std dev = 0.841, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.028215810333151264;  // std dev = 3.884, 81.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning 22.43983483314514
Refined model CLL: -0.239906


******************************************
Best model found
******************************************
Results 

CLL : -0.229114 

AUC ROC : 0.960362 

AUC PR : 0.244996 

Precision : 0.061891 

Recall : 0.830389 

F1 : 0.115196 

Total Learning Time : 6.203020811080933 

Total Inference Time : 3.4575936794281006 

Total revision time: 14.267032861709595
Best scored revision CLL: -0.239906


Results 

CLL : -0.229114 

AUC ROC : 0.960362 

AUC PR : 0.244996 

Precision : 0.061891 

Recall : 0.830389 

F1 : 0.115196 

Total Learning Time : 14.284462451934814 

Total Inference Time : 3.4575936794281006 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.5911810398101807
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3985216059069631;  // std dev = 0.498, 161.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.93e-09, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.40095852855691816;  // std dev = 5.738, 137.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=82 */
%   | else return 0.3579739381270712;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31160690339402186;  // std dev = 0.494, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5768361772680186;  // std dev = 2.700, 90.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return -0.25370395313523514;  // std dev = 2.165, 63.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.15199796089590276;  // std dev = 5.238, 144.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=82 */
%   | else return 0.5615515957994693;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926089;  // std dev = 6.32e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.13368816522360247;  // std dev = 5.204, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   | | else return 0.14620808353415637;  // std dev = 0.648, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11506088442133339;  // std dev = 0.419, 148.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 6.14e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07789801127055027;  // std dev = 5.063, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   | else return 0.08496855310057794;  // std dev = 0.644, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 3.95e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07878765667315941;  // std dev = 4.983, 146.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.10e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05679956249814736;  // std dev = 5.035, 146.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 2.79e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning 18.332441329956055
Parameter learned model CLL:-0.27168 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 74, 87], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 91, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.738, 55, 82], 'true,false': [1.491, 4, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 98, 0], 'false,false,false,false': [0.0, 4, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 63, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 129, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [2.7, 8, 82], 'true,false': [2.165, 58, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.65e-08, 100, 0], 'false,false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.238, 62, 82], 'true,false': [0.913, 1, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.32e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.204, 63, 86], 'true,true,false': [0.648, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 96, 0], 'false,false,false': [0.0, 5, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.419, 61, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.14e-08, 106, 0], 'false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.063, 65, 86], 'true,false': [0.644, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.95e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.983, 59, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.035, 59, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.79e-09, 107, 0]}]
{'': [0.2483700474518752, 7.564156871072495e-17], 'false': [nan, 7.564156871072495e-17]}
{'': [0.2408050290861312, -1.0884539457109378e-17], 'true': [0.2402898396291745, 0.24691358024691348], 'false': [nan, -1.0884539457109378e-17], 'false,false': [nan, -1.0884539457109378e-17], 'false,false,false': [-1.3594567648471304e-17, 0.0]}
{'': [0.24364368401744016, 7.401486830834377e-17], 'false': [nan, 7.401486830834377e-17], 'false,false': [nan, 7.401486830834377e-17]}
{'': [0.24535072517259465, -4.0742129344042444e-18], 'true': [0.08098765432098642, 0.07439222492095947], 'false': [nan, -4.0742129344042444e-18], 'false,false': [nan, -4.0742129344042444e-18], 'false,false,false': [1.3322676295501878e-17, -6.1679056923619804e-18]}
{'': [0.19489080729752062, 3.865955175034027e-17], 'true': [0.19051485337003793, 0.13888888888888887], 'false': [nan, 3.865955175034027e-17]}
{'': [0.18210557825819193, 3.0778460088618204e-17], 'true': [0.18210557825819193, nan], 'true,true': [0.18172924892251857, 0.2099874415485034], 'false': [nan, 3.0778460088618204e-17], 'false,false': [3.0068540250264654e-17, -1.3877787807814458e-18]}
{'': [0.17572155881405077, 3.8616453030440226e-17], 'true': [0.17572155881405077, nan], 'false': [nan, 3.8616453030440226e-17], 'false,false': [3.561092720495785e-17, -7.709882115452476e-19]}
{'': [0.1702548936207835, 1.586032892321652e-17], 'true': [0.169759535008969, 0.20760512974854628], 'false': [nan, 1.586032892321652e-17], 'false,false': [nan, 1.586032892321652e-17]}
{'': [0.17005543091761513, 2.676430505792788e-17], 'true': [0.17005543091761513, nan], 'false': [nan, 2.676430505792788e-17], 'false,false': [nan, 2.676430505792788e-17]}
{'': [0.17362141234437753, 7.263141282594481e-18], 'true': [0.17362141234437753, nan], 'false': [nan, 7.263141282594481e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.909568786621094
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), location(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.2285193054698827;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.4331489350995114;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return 0.588918165868743;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, A), complex(D, F) )
%   | | then if ( interaction(D, D), location(A, E) )
%   | | | then return 0.189531970559238;  // std dev = 1.584, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3775964048227892;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7457996554823153;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.48952659639938406;  // std dev = 2.690, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7775215425189309;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.218608582127204;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.32668683820380645;  // std dev = 2.734, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.39129227438595027;  // std dev = 2.821, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.6728859329084582;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.13026488385215088;  // std dev = 2.454, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.29919899263087374;  // std dev = 3.232, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.6682419578308593;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41379235994458896;  // std dev = 2.537, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.4135302667818747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23369561700067418;  // std dev = 1.719, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.5189960671532086;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5540716993974637;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(D, F) )
%   | | | then return -0.20694802046504585;  // std dev = 1.103, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.12248557375006759;  // std dev = 1.766, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.4796380747556504;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08035352395222123;  // std dev = 2.280, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.4232985073044402;  // std dev = 2.150, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.2664787057189653;  // std dev = 3.338, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   else return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), interaction(A, A) )
%   | | then return 0.010152596987024176;  // std dev = 0.697, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.45369290189453;  // std dev = 0.162, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1598620300415134;  // std dev = 3.870, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return 0.06193113990102309;  // std dev = 1.594, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3808469428922392;  // std dev = 1.236, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.07152631820400135;  // std dev = 1.520, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.11601608192195781;  // std dev = 2.790, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 4.47e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( enzyme(E, G), interaction(E, A) )
%   | | | then return 0.272421822799296;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3597480629328971;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3725620010336461;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, H), phenotype(I, J) )
%   | | | then return 0.2346824251198113;  // std dev = 1.458, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.03440968018286091;  // std dev = 3.331, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.05256360067776434;  // std dev = 2.709, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.19046149922814773;  // std dev = 3.168, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   else if ( interaction(L, A) )
%   | then return -0.08518475138839682;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return -0.0851847513883969;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, A) )
%   | | | then return -0.07692251371132718;  // std dev = 0.639, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.21314773124421105;  // std dev = 2.696, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | | else return 0.5528506930657276;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), complex(J, I) )
%   | | | then return -0.012891909353009337;  // std dev = 1.428, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.23961649538562552;  // std dev = 1.325, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10986894215796082;  // std dev = 2.061, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.006435027370535394;  // std dev = 3.205, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   else if ( interaction(L, A) )
%   | then return -0.07877675473109155;  // std dev = 6.32e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.4002000279989133;  // std dev = 0.626, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.038976381828247184;  // std dev = 4.497, 90.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=43 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.40108153812656033;  // std dev = 0.164, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.5417117081013408;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.19021027330026893;  // std dev = 1.061, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333707;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(E, G) )
%   | | | then return 0.3025660751981209;  // std dev = 0.348, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.45182140327658465;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( complex(H, D), interaction(H, I) )
%   | | | then return -0.34998637276032535;  // std dev = 0.342, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.2561236897875446;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.21021578981223832;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16510018944161542;  // std dev = 1.427, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.13544541250023423;  // std dev = 2.453, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return -0.012366651913763788;  // std dev = 3.003, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   else return -0.06842697784420264;  // std dev = 5.10e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.18952382734099707;  // std dev = 0.165, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3088211352948806;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(E, A) )
%   | | | then return -0.14738808276409385;  // std dev = 1.472, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.03525357061643192;  // std dev = 4.110, 92.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=52 */
%   | else if ( interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.06006031985035661;  // std dev = 0.500, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2061492676758562;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.45881144432089394;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning 32.686278104782104
Refined model CLL: -0.2429


******************************************
Best model found
******************************************
Results 

CLL : -0.255878 

AUC ROC : 0.969144 

AUC PR : 0.264489 

Precision : 0.054174 

Recall : 0.950355 

F1 : 0.102505 

Total Learning Time : 8.909568786621094 

Total Inference Time : 5.191192865371704 

Total revision time: 21.610111474990845
Best scored revision CLL: -0.2429


Results 

CLL : -0.255878 

AUC ROC : 0.969144 

AUC PR : 0.264489 

Precision : 0.054174 

Recall : 0.950355 

F1 : 0.102505 

Total Learning Time : 21.627156734466553 

Total Inference Time : 5.191192865371704 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.088226318359375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4490580260086004;  // std dev = 0.492, 176.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004881;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.31809311056060124;  // std dev = 6.866, 189.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=99 */
%   | else return 0.29428358675107574;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839105;  // std dev = 8.02e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3757296066319786;  // std dev = 0.481, 163.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5425415443005928;  // std dev = 3.390, 112.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=99 */
%   | else return -0.26612338686455816;  // std dev = 2.162, 67.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17640601092101585;  // std dev = 5.481, 169.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=99 */
%   | else return 0.5538552921853478;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926071;  // std dev = 6.97e-09, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15222234174207117;  // std dev = 5.393, 170.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=102 */
%   | | else return 0.5970520444771095;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 7.15e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return -0.08518475138839689;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11074991122467998;  // std dev = 0.420, 173.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109154;  // std dev = 7.30e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.0625683499429318;  // std dev = 5.709, 174.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=102 */
%   | else return -0.034125739429625435;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333717;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05010923347028603;  // std dev = 5.662, 180.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.27e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03304067717459443;  // std dev = 5.652, 184.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
Inference time using transfer learning 20.949552059173584
Parameter learned model CLL:-0.269525 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 72, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 152, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.866, 90, 99], 'true,false': [1.581, 5, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.02e-08, 120, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.481, 59, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.39, 13, 99], 'true,false': [2.162, 62, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 121, 0], 'false,false,false,false': [3.73e-09, 8, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.481, 70, 99], 'true,false': [0.913, 1, 5], 'false,true': [0.0, 0, 0], 'false,false': [6.97e-09, 149, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [5.393, 68, 102], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.15e-08, 143, 0], 'false,false,false': [3.73e-09, 11, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.42, 69, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 128, 0], 'false,false,false': [0.0, 3, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.709, 72, 102], 'true,false': [0.912, 2, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.662, 76, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 124, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.652, 80, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 129, 0]}]
{'': [0.24173553719008575, -1.2270886061646468e-16], 'false': [nan, -1.2270886061646468e-16]}
{'': [0.24948864927653455, 5.245148147835385e-17], 'true': [0.24943310657596346, 0.25], 'false': [nan, 5.245148147835385e-17], 'false,false': [nan, 5.245148147835385e-17], 'false,false,false': [5.3660779523549233e-17, -1.982541115402065e-18]}
{'': [0.2309409540853867, 7.67973821545221e-17], 'false': [nan, 7.67973821545221e-17], 'false,false': [nan, 7.67973821545221e-17]}
{'': [0.24346028099427172, -3.4425520143415706e-17], 'true': [0.10259885204081831, 0.0697616142764134], 'false': [nan, -3.4425520143415706e-17], 'false,false': [nan, -3.4425520143415706e-17], 'false,false,false': [-2.3856031934094273e-17, 1.734723475976807e-18]}
{'': [0.18114598742265917, 4.917766417802707e-17], 'true': [0.17776162367268564, 0.13888888888888887], 'false': [nan, 4.917766417802707e-17]}
{'': [0.17137547305494452, 3.7488050182148143e-17], 'true': [0.17137547305494452, nan], 'true,true': [0.17109080085326467, 0.0], 'false': [nan, 3.7488050182148143e-17], 'false,false': [3.5713467925005034e-17, 1.261617073437678e-18]}
{'': [0.17621314509974467, 4.152742611193334e-17], 'true': [0.17621314509974467, nan], 'false': [nan, 4.152742611193334e-17], 'false,false': [4.163336342344337e-17, 0.0]}
{'': [0.1880088154638891, -1.2335811384723961e-17], 'true': [0.18733816287525712, 0.20804256282214087], 'false': [nan, -1.2335811384723961e-17], 'false,false': [nan, -1.2335811384723961e-17]}
{'': [0.17812280185949037, 2.7755575615628914e-17], 'true': [0.17812280185949037, nan], 'false': [nan, 2.7755575615628914e-17], 'false,false': [nan, 2.7755575615628914e-17]}
{'': [0.17362021097413716, -1.5491484064537068e-17], 'true': [0.17362021097413716, nan], 'false': [nan, -1.5491484064537068e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;true;recursion_proteinclass(E, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.081643342971802
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.2732432747221531;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.421255731216018;  // std dev = 5.034, 103.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=58 */
%   else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(A, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3838375060858087;  // std dev = 3.458, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return -0.17973215793569736;  // std dev = 0.022, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2154559152589007;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.39365920593791426;  // std dev = 4.626, 89.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283911;  // std dev = 7.88e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.635574884534875;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.22740014534521916;  // std dev = 0.978, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.24054662397529494;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16720712222107967;  // std dev = 3.188, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( location(A, G) )
%   | | | then return 0.3106965876265238;  // std dev = 5.038, 109.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=63 */
%   | | | else return 0.10897961807166176;  // std dev = 2.032, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( complex(A, H) )
%   | then return -0.11231637819360646;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.11231637819360625;  // std dev = 7.21e-09, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.5403917093942125;  // std dev = 0.946, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.6728512440735167;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( enzyme(H, D), complex(H, I) )
%   | | | then return -0.29984936403869755;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.39832837990295994;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), interaction(A, J) )
%   | | | then return 0.47760217913761377;  // std dev = 1.911, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.12618858181201753;  // std dev = 4.637, 95.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=44 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.18075120225733;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6387833865109978;  // std dev = 0.186, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3688681901506473;  // std dev = 0.161, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09824139526625142;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20769271223831617;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09634726963273806;  // std dev = 2.869, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.384252911576632;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.13756273391251586;  // std dev = 1.956, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2412255779535199;  // std dev = 4.383, 97.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=61 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926079;  // std dev = 6.72e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.47502126993157046;  // std dev = 0.373, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.024313891898598155;  // std dev = 3.701, 73.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=32 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3507897955376392;  // std dev = 0.194, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16589121382230806;  // std dev = 4.178, 96.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(I, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0851847513883969;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.08518475138839682;  // std dev = 4.47e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(D, F), interaction(D, A) )
%   | | | then return 0.08715791632523301;  // std dev = 0.950, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.20896703191915256;  // std dev = 1.750, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0.38346013821744995;  // std dev = 0.318, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.1326268103486969;  // std dev = 1.064, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.06639907966578272;  // std dev = 1.556, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.3399374455434424;  // std dev = 0.158, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.08888773160322662;  // std dev = 4.822, 119.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=63 */
%   else if ( interaction(J, A) )
%   | then return -0.07877675473109154;  // std dev = 6.45e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), location(A, G) )
%   | | then if ( interaction(D, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3521043648402518;  // std dev = 0.304, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.043758330502468704;  // std dev = 1.775, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( location(A, H), complex(A, I) )
%   | | | then return 0.2336205640455145;  // std dev = 0.660, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5917130852321838;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), interaction(A, J) )
%   | | | then return 0.4140221631075138;  // std dev = 0.482, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.013338046470458578;  // std dev = 4.801, 116.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=57 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.11500627105531545;  // std dev = 1.635, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.007713477488808018;  // std dev = 1.027, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333716;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), interaction(D, A) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.0193020407348464;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3028125320415152;  // std dev = 1.059, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3826823247377655;  // std dev = 0.436, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.03613603341767341;  // std dev = 2.742, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( location(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3967088117355614;  // std dev = 0.292, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.3541403628367108;  // std dev = 0.297, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.21865915548728898;  // std dev = 2.898, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | | | else return 0.3419359416211562;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420264;  // std dev = 5.35e-09, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1857450715502163;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(E, F) )
%   | | | then return -0.1360500013935314;  // std dev = 1.304, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.051006552967435795;  // std dev = 0.942, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), complex(G, I) )
%   | | | then return 0.26673999440860613;  // std dev = 1.022, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.035461875328827414;  // std dev = 4.284, 109.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=60 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return -0.18682086613540172;  // std dev = 1.286, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0052248191046462755;  // std dev = 1.280, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
Inference time using transfer learning 11.989145994186401
Refined model CLL: -0.244608


******************************************
Best model found
******************************************
Results 

CLL : -0.249824 

AUC ROC : 0.948595 

AUC PR : 0.233536 

Precision : 0.045746 

Recall : 0.860377 

F1 : 0.086874 

Total Learning Time : 9.081643342971802 

Total Inference Time : 4.679480791091919 

Total revision time: 20.241155862808228
Best scored revision CLL: -0.244608


Results 

CLL : -0.249824 

AUC ROC : 0.948595 

AUC PR : 0.233536 

Precision : 0.045746 

Recall : 0.860377 

F1 : 0.086874 

Total Learning Time : 20.258201122283936 

Total Inference Time : 4.679480791091919 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.7245845794677734
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44789252484309955;  // std dev = 0.492, 156.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.68e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3778072943595321;  // std dev = 5.401, 120.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=70 */
%   | else return 0.29447396102619705;  // std dev = 3.317, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.33100309969570807;  // std dev = 0.490, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.33e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6414138824889066;  // std dev = 0.993, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | else return -0.11205452215253246;  // std dev = 4.188, 98.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.12056694700772563;  // std dev = 4.682, 130.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=70 */
%   | else return 0.26229074028498395;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926096;  // std dev = 4.93e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.16010988454577607;  // std dev = 4.927, 137.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=83 */
%   | | else return 0.2446827182090979;  // std dev = 1.876, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 6.23e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11729743508823298;  // std dev = 0.426, 156.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109162;  // std dev = 4.94e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08757952637622628;  // std dev = 4.940, 139.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=83 */
%   | else return -0.012550553736562225;  // std dev = 2.246, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 3.36e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.004282101505152428;  // std dev = 5.803, 179.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.19e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.033331934590097756;  // std dev = 5.612, 167.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 1.86e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning 26.116576433181763
Parameter learned model CLL:-0.258024 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 64, 92], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 111, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.401, 50, 70], 'true,false': [3.317, 22, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 90, 0], 'false,false,false,false': [0.0, 36, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 61, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 112, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.993, 1, 70], 'true,false': [4.188, 76, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.58e-08, 73, 0], 'false,false,false,false': [0.0, 38, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.682, 60, 70], 'true,false': [3.097, 17, 22], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.927, 54, 83], 'true,true,false': [1.876, 6, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.23e-08, 116, 0], 'false,false,false': [1.18e-08, 18, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.426, 64, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 87, 0], 'false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.94, 56, 83], 'true,false': [2.246, 12, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 120, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.803, 87, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.19e-09, 123, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.612, 75, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.86e-09, 120, 0]}]
{'': [0.24194608809993667, 6.00120553851436e-17], 'false': [nan, 6.00120553851436e-17]}
{'': [0.24628197501487184, -1.76225876924628e-18], 'true': [0.24305555555555494, 0.25000000000000006], 'false': [nan, -1.76225876924628e-18], 'false,false': [nan, -1.76225876924628e-18], 'false,false,false': [-1.7270135938613546e-17, -1.850371707708594e-17]}
{'': [0.23998636444338253, 6.740639792367021e-17], 'false': [nan, 6.740639792367021e-17], 'false,false': [nan, 6.740639792367021e-17]}
{'': [0.24790508886122548, -8.001607384685813e-18], 'true': [0.0138861337036288, 0.1789421013072429], 'false': [nan, -8.001607384685813e-18], 'false,false': [nan, -8.001607384685813e-18], 'false,false,false': [4.258389683493751e-17, -1.460819769243627e-18]}
{'': [0.19002197086230588, 2.41830757839143e-17], 'true': [0.1686261575273773, 0.24589086127547688], 'false': [nan, 2.41830757839143e-17]}
{'': [0.18350061848076257, 3.4798035100191475e-17], 'true': [0.18350061848076257, nan], 'true,true': [0.17718845316265094, 0.2347050093430479], 'false': [nan, 3.4798035100191475e-17], 'false,false': [3.34981085016211e-17, 7.709882115452476e-18]}
{'': [0.18158046415326726, 3.532527805625498e-17], 'true': [0.18158046415326726, nan], 'false': [nan, 3.532527805625498e-17], 'false,false': [2.807460522040626e-17, 0.0]}
{'': [0.18517457665933373, 1.0177044392397268e-17], 'true': [0.1755378345972891, 0.24025051514091342], 'false': [nan, 1.0177044392397268e-17], 'false,false': [nan, 1.0177044392397268e-17]}
{'': [0.18814807861716548, 2.617599001148743e-17], 'true': [0.18814807861716548, nan], 'false': [nan, 2.617599001148743e-17], 'false,false': [nan, 2.617599001148743e-17]}
{'': [0.1886052325317778, 3.23815048849004e-18], 'true': [0.1886052325317778, nan], 'false': [nan, 3.23815048849004e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 9.065211296081543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.3412950025152429;  // std dev = 4.714, 89.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=43 */
%   | | | else return 0.518526293590078;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.5445499411290778;  // std dev = 0.853, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7921265167130418;  // std dev = 0.123, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1970170551859921;  // std dev = 0.064, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7695941610617526;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.34684985155910786;  // std dev = 2.006, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.22714497388167473;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.3773895490449336;  // std dev = 4.199, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   else if ( interaction(K, A) )
%   | then return -0.1254446385283911;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( recursion_proteinclass(D, B), location(D, E) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0.6236986868496541;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5762351913035771;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(D, G), enzyme(A, G) )
%   | | | then return -0.16311853919292565;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2675199810843297;  // std dev = 4.943, 109.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=58 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return 0.16974524900644086;  // std dev = 1.296, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.40827193456044525;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.6509259225915133;  // std dev = 0.948, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.41958056991611914;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1123163781936062;  // std dev = 8.12e-09, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.4711244803229928;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41306537508500435;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, F) )
%   | | | then return 0.6130708085295606;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5559752250410744;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), phenotype(I, G) )
%   | | | then return -0.023944445970059004;  // std dev = 1.601, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.27300874634793165;  // std dev = 1.977, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5072924909798919;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2152179199859745;  // std dev = 4.789, 104.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=56 */
%   else return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.5140401032635543;  // std dev = 0.697, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.14006410711888545;  // std dev = 4.155, 81.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=41 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.2446813260304948;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3745426382524985;  // std dev = 0.215, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06117884809154185;  // std dev = 0.438, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(A, H) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B), interaction(G, A) )
%   | | | then return 0.25001020145793124;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4637974346933447;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.19880335842013722;  // std dev = 0.147, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0642866491678838;  // std dev = 3.238, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), location(J, K) )
%   | | | then return 0.15185198875009134;  // std dev = 2.893, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return 0.45278732473580613;  // std dev = 0.936, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.22297287123248347;  // std dev = 1.417, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.5698605318219486;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0851847513883968;  // std dev = 5.67e-09, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F), complex(A, F) )
%   | | | then return 0.41353031808127566;  // std dev = 0.525, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.23319301449959645;  // std dev = 1.452, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.1827207325411634;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.36539623692784734;  // std dev = 0.333, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(L, I) )
%   | | | then return 0.04040705158319108;  // std dev = 1.540, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.175797026190943;  // std dev = 1.968, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.10621076709818139;  // std dev = 1.668, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return -0.05036784470933779;  // std dev = 2.890, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   else return -0.07877675473109158;  // std dev = 5.82e-09, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then return 0.16586431531991622;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.21202821246531023;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2516162718662197;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.340186360767305;  // std dev = 0.705, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.2844338097136668;  // std dev = 0.643, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12813256273203621;  // std dev = 2.820, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | | else return 0.04112041115562822;  // std dev = 2.580, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else return -0.07324622576333713;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.009810016566355856;  // std dev = 0.534, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.18504724601707148;  // std dev = 0.653, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(I, A), interaction(I, D) )
%   | | | then return -0.10063923376110975;  // std dev = 1.027, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.02686198415227209;  // std dev = 1.812, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.16924454870360148;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2619681432940775;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.07449517065698999;  // std dev = 3.383, 69.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   | | | else return 0.15973640813771406;  // std dev = 1.256, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(D, F), phenotype(F, G) )
%   | | | then return 0.12022674094145178;  // std dev = 1.212, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | else return -0.024127460416071927;  // std dev = 1.848, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.151134155365641;  // std dev = 1.886, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.05549126256059153;  // std dev = 1.121, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.342933792068744;  // std dev = 0.932, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.4141082175512994;  // std dev = 0.374, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.19397370031374078;  // std dev = 1.591, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.0844728234064073;  // std dev = 1.229, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning 37.74843096733093
Refined model CLL: -0.205607


******************************************
Best model found
******************************************
Results 

CLL : -0.219413 

AUC ROC : 0.983922 

AUC PR : 0.28587 

Precision : 0.092517 

Recall : 0.981949 

F1 : 0.169102 

Total Learning Time : 9.065211296081543 

Total Inference Time : 4.095455169677734 

Total revision time: 17.879040002822876
Best scored revision CLL: -0.205607


Results 

CLL : -0.219413 

AUC ROC : 0.983922 

AUC PR : 0.28587 

Precision : 0.092517 

Recall : 0.981949 

F1 : 0.169102 

Total Learning Time : 17.896085262298584 

Total Inference Time : 4.095455169677734 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6580774784088135
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4202404383674837;  // std dev = 0.496, 153.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 8.33e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.37618815437579545;  // std dev = 5.479, 123.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=71 */
%   | else return 0.29895238201807045;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.1254446385283914;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2998022200185695;  // std dev = 0.496, 152.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.01e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6156895857529623;  // std dev = 1.946, 75.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=71 */
%   | else return -0.13820403521783578;  // std dev = 3.541, 80.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2285624802643865;  // std dev = 4.156, 110.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=71 */
%   | else return 0.314880905530412;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926078;  // std dev = 6.84e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15556158815970034;  // std dev = 4.664, 127.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=78 */
%   | | else return 0.06878933518705051;  // std dev = 2.148, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08392713840852055;  // std dev = 0.428, 154.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109158;  // std dev = 5.96e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07219997485926885;  // std dev = 4.852, 133.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=78 */
%   | else return -0.0242630340412632;  // std dev = 2.252, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 2.28e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06425808201779361;  // std dev = 5.209, 149.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.10e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05679949791578645;  // std dev = 5.143, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning 27.153685569763184
Parameter learned model CLL:-0.268016 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 67, 86], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 105, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.479, 52, 71], 'true,false': [2.739, 15, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 95, 0], 'false,false,false,false': [7.45e-09, 14, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 66, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.01e-09, 103, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [1.946, 4, 71], 'true,false': [3.541, 65, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 107, 0], 'false,false,false,false': [0.0, 22, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.156, 39, 71], 'true,false': [2.449, 10, 15], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 130, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.664, 49, 78], 'true,true,false': [2.148, 11, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 84, 0], 'false,false,false': [0.0, 21, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 68, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 103, 0], 'false,false,false': [0.0, 9, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.852, 55, 78], 'true,false': [2.252, 14, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.28e-09, 127, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.209, 63, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 114, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.143, 61, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 113, 0]}]
{'': [0.24614464522192528, 7.190015778524824e-17], 'false': [nan, 7.190015778524824e-17]}
{'': [0.24614464522192217, -8.148425868808489e-18], 'true': [0.24403463546830484, 0.2500000000000002], 'false': [nan, -8.148425868808489e-18], 'false,false': [nan, -8.148425868808489e-18], 'false,false,false': [-1.402386978473882e-17, 3.96508223080413e-18]}
{'': [0.24608937730235478, 6.467318590049455e-17], 'false': [nan, 6.467318590049455e-17], 'false,false': [nan, 6.467318590049455e-17]}
{'': [0.24727705148563947, -3.4425520143415706e-17], 'true': [0.05048888888888977, 0.15675518372309447], 'false': [nan, -3.4425520143415706e-17], 'false,false': [nan, -3.4425520143415706e-17], 'false,false,false': [0.0, -1.261617073437678e-18]}
{'': [0.17352681885929988, 4.7824991830006746e-17], 'true': [0.15703948685014305, 0.2399999999999998], 'false': [nan, 4.7824991830006746e-17]}
{'': [0.18141802902433304, 3.172065784643304e-17], 'true': [0.18141802902433304, nan], 'true,true': [0.1712475933039773, 0.24284979517070582], 'false': [nan, 3.172065784643304e-17], 'false,false': [2.9077269692563625e-17, -5.28677630773884e-18]}
{'': [0.18308816920294832, 3.766828119263924e-17], 'true': [0.18308816920294832, nan], 'false': [nan, 3.766828119263924e-17], 'false,false': [3.4492365813597093e-17, -7.709882115452476e-19]}
{'': [0.18572980875159198, 5.245148147835385e-18], 'true': [0.1769833184627, 0.23062193172562456], 'false': [nan, 5.245148147835385e-18], 'false,false': [nan, 5.245148147835385e-18]}
{'': [0.18208239519042269, 2.6294755846385285e-17], 'true': [0.18208239519042269, nan], 'false': [nan, 2.6294755846385285e-17], 'false,false': [nan, 2.6294755846385285e-17]}
{'': [0.17990901051309835, -1.7193719407911715e-17], 'true': [0.17990901051309835, nan], 'false': [nan, -1.7193719407911715e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.9681196212768555
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.4735335504841266;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   | | | else return 0.33507201202258846;  // std dev = 4.027, 65.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.136832517440075;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7902555434157746;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3704105877458821;  // std dev = 5.270, 113.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=64 */
%   else if ( interaction(G, A) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6309305385249951;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.01637089666322336;  // std dev = 2.461, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.29054003165527587;  // std dev = 0.957, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.19875298668034688;  // std dev = 3.112, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.3435131849086952;  // std dev = 3.960, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, K) )
%   | | then return -0.1123163781936063;  // std dev = 4.93e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.530655132424808;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6762942182467737;  // std dev = 0.216, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.30298539597851976;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.04755322592801978;  // std dev = 1.445, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.1991629223727763;  // std dev = 4.822, 97.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=51 */
%   else if ( interaction(K, A) )
%   | then return -0.10159632948783621;  // std dev = 5.59e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, F) )
%   | | | then return 0.36085609356551224;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5963955086836774;  // std dev = 0.323, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11817094998645199;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.28496910698794203;  // std dev = 0.194, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.17400359387203915;  // std dev = 1.735, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.39151903882244454;  // std dev = 1.876, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.049564503865690314;  // std dev = 1.688, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.2403207752661802;  // std dev = 3.179, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   else return -0.09269127618926101;  // std dev = 3.48e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.14783370008961447;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4509790933480592;  // std dev = 0.360, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.027613364590715558;  // std dev = 1.178, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.17592901625801244;  // std dev = 1.809, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.18081814322793413;  // std dev = 0.487, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3350106340947281;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(M, A) )
%   | | | then return -0.006589530781123612;  // std dev = 4.231, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   | | | else return 0.17239118527845604;  // std dev = 1.951, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else return -0.08518475138839678;  // std dev = 4.66e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(D, F) )
%   | | then if ( recursion_proteinclass(E, B), phenotype(D, G) )
%   | | | then return 0.3744699578521412;  // std dev = 0.652, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.11694527220318322;  // std dev = 3.516, 68.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | else return -0.2834810481886978;  // std dev = 0.754, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2928254687696706;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.1418638428833109;  // std dev = 1.130, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.051573831899596925;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   else if ( interaction(K, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109165;  // std dev = 4.75e-09, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.0454137011268857;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1799501032034835;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3015053841653251;  // std dev = 0.206, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), interaction(H, J) )
%   | | | then return -0.15134822646470333;  // std dev = 1.200, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.01428158793356634;  // std dev = 1.740, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.04046877772833345;  // std dev = 4.512, 99.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=49 */
%   | | | else return 0.28466440497176765;  // std dev = 1.219, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(A, F), interaction(D, E) )
%   | | then if ( phenotype(A, G), complex(D, F) )
%   | | | then return -0.12146632382619774;  // std dev = 1.246, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.02225695941420254;  // std dev = 1.660, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, H), phenotype(E, I) )
%   | | | then return 0.01633329061839988;  // std dev = 2.679, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.1356551519602644;  // std dev = 2.389, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.34753239467389674;  // std dev = 1.337, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.3778177507433878;  // std dev = 0.312, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.24226559850648463;  // std dev = 0.823, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5305598399083353;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420265;  // std dev = 4.66e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( complex(F, E), enzyme(D, G) )
%   | | | then return 0.09978102321997995;  // std dev = 0.550, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18207039509600417;  // std dev = 2.235, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( phenotype(D, H), enzyme(A, I) )
%   | | | then return 0.3518831110485856;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.025734528276481816;  // std dev = 1.377, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.37867198546816583;  // std dev = 0.373, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.4855130589309585;  // std dev = 0.365, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.4763032787354043;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.07683777402992999;  // std dev = 2.897, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   else return -0.06419184008202626;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
Inference time using transfer learning 12.26871395111084
Refined model CLL: -0.247507


******************************************
Best model found
******************************************
Results 

CLL : -0.256247 

AUC ROC : 0.938029 

AUC PR : 0.193384 

Precision : 0.041542 

Recall : 0.833922 

F1 : 0.079142 

Total Learning Time : 5.9681196212768555 

Total Inference Time : 2.583465576171875 

Total revision time: 12.800140380859375
Best scored revision CLL: -0.247507


Results 

CLL : -0.256247 

AUC ROC : 0.938029 

AUC PR : 0.193384 

Precision : 0.041542 

Recall : 0.833922 

F1 : 0.079142 

Total Learning Time : 12.817185640335083 

Total Inference Time : 2.583465576171875 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.1087493896484375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4499856697933875;  // std dev = 0.491, 147.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3887265655971785;  // std dev = 4.223, 74.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=44 */
%   | else return 0.4359230157787033;  // std dev = 3.925, 67.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839105;  // std dev = 8.02e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32689961035869564;  // std dev = 0.488, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936062;  // std dev = 8.33e-09, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5588545001819748;  // std dev = 2.703, 90.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return -0.2739410114838031;  // std dev = 2.160, 64.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783644;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.10159632948783652;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21342019867266238;  // std dev = 3.517, 72.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=44 */
%   | else return 0.18011357017758436;  // std dev = 3.478, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926094;  // std dev = 5.27e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19411681809523307;  // std dev = 3.916, 96.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=63 */
%   | | else return 0.06353553402064742;  // std dev = 2.847, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839685;  // std dev = 3.07e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.08518475138839683;  // std dev = 3.49e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07703228564626491;  // std dev = 0.421, 152.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109176;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.07877675473109182;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07593592493602185;  // std dev = 4.300, 105.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=63 */
%   | else return 0.11688188680454537;  // std dev = 2.461, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03829032283348564;  // std dev = 5.147, 153.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 4.66e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.018410573064081212;  // std dev = 5.185, 158.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
Inference time using transfer learning 26.523991107940674
Parameter learned model CLL:-0.270201 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 60, 87], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.223, 30, 44], 'true,false': [3.925, 24, 43], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.02e-08, 117, 0], 'false,false,false,false': [0.0, 6, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.488, 56, 87], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.33e-09, 129, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [2.703, 8, 82], 'true,false': [2.16, 59, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 60, 0], 'false,false,false,false': [0.0, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [3.517, 28, 44], 'true,false': [3.478, 27, 43], 'false,true': [0.0, 0, 0], 'false,false': [5.27e-09, 101, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [3.916, 33, 63], 'true,true,false': [2.847, 22, 24], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.07e-08, 54, 0], 'false,false,false': [3.49e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.421, 65, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.97e-08, 58, 0], 'false,false,false': [0.0, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.3, 42, 63], 'true,false': [2.461, 15, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 104, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.147, 66, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.66e-09, 93, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.185, 71, 87], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 95, 0]}]
{'': [0.24156601416076845, 2.258080728051166e-17], 'false': [nan, 2.258080728051166e-17]}
{'': [0.23630602082390006, 5.415722071342227e-17], 'true': [0.2410518626734843, 0.22989529962129646], 'false': [nan, 5.415722071342227e-17], 'false,false': [nan, 5.415722071342227e-17], 'false,false,false': [5.5036696947229984e-17, -2.3129646346357427e-18]}
{'': [0.23846255044836953, 6.712976427966062e-17], 'false': [nan, 6.712976427966062e-17], 'false,false': [nan, 6.712976427966062e-17]}
{'': [0.24619808490349077, -4.139814668093804e-17], 'true': [0.08119188887730834, 0.0729175754512861], 'false': [nan, -4.139814668093804e-17], 'false,false': [nan, -4.139814668093804e-17], 'false,false,false': [-1.4802973661668754e-17, -2.6798486801296883e-17]}
{'': [0.17257986098127373, 2.63815372188156e-17], 'true': [0.17179997759249177, 0.17281954880806302], 'false': [nan, 2.63815372188156e-17]}
{'': [0.16880226847434587, 3.3404940563942766e-17], 'true': [0.16880226847434587, nan], 'true,true': [0.15972941350771566, 0.17620916676806903], 'false': [nan, 3.3404940563942766e-17], 'false,false': [1.7475732795025613e-17, 2.069907334046902e-17]}
{'': [0.1768789003383255, 3.564936317603714e-17], 'true': [0.1768789003383255, nan], 'false': [nan, 3.564936317603714e-17], 'false,false': [6.699621700324221e-18, -1.0884539457109378e-18]}
{'': [0.17077515798161017, -4.270088556250602e-18], 'true': [0.17606008398463593, 0.15532401078441077], 'false': [nan, -4.270088556250602e-18], 'false,false': [nan, -4.270088556250602e-18]}
{'': [0.1731363100488836, 2.1488187573390126e-17], 'true': [0.1731363100488836, nan], 'false': [nan, 2.1488187573390126e-17], 'false,false': [nan, 2.1488187573390126e-17]}
{'': [0.1701859752589637, -1.3439541877041369e-17], 'true': [0.1701859752589637, nan], 'false': [nan, -1.3439541877041369e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 8.234878301620483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.35814893509951107;  // std dev = 4.123, 68.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | | else return 0.5581489350995125;  // std dev = 3.550, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.717544460581404;  // std dev = 0.947, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.3598920138602758;  // std dev = 1.120, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.19332541260224542;  // std dev = 2.293, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.4036548149344769;  // std dev = 4.355, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.795599103290148;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2044008967098519;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.058741135785635216;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.025886054546917475;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.603197784007563;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7203826383971439;  // std dev = 0.192, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.21794309712074225;  // std dev = 0.161, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.661436135277696;  // std dev = 0.950, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.2536731973998918;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.14128740019572472;  // std dev = 2.337, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.3493902646120262;  // std dev = 3.359, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   else return -0.11231637819360618;  // std dev = 8.69e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then return 0.4225297695531112;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5657146190731803;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.07657565029386303;  // std dev = 1.956, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.2826451681496028;  // std dev = 4.302, 93.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=60 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.13127069317555856;  // std dev = 0.975, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.03284132360695404;  // std dev = 1.170, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(A, I) )
%   | then return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.44612006910405927;  // std dev = 0.243, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.28408381294804447;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.1409871540175019;  // std dev = 1.205, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3770953313097913;  // std dev = 0.738, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.18271876331436362;  // std dev = 2.473, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | | else return 0.024511517637265553;  // std dev = 4.340, 79.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=36 */
%   | | else return 0.505132098266484;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926101;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.09269127618926108;  // std dev = 1.49e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(D, F) )
%   | | then return 0.1369569209066573;  // std dev = 0.550, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), phenotype(G, H) )
%   | | | then return 0.28649885420439536;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.349826821169169;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4772174284738895;  // std dev = 0.477, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.33236952275885967;  // std dev = 0.337, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.08398552990080527;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=43 */
%   | | | else return 0.3822126247735146;  // std dev = 0.701, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, M) )
%   | then return -0.08518475138839683;  // std dev = 4.84e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.08518475138839683;  // std dev = 4.66e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.05238848872557997;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2816907457082877;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return -0.04906929404589524;  // std dev = 2.390, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.06547239788362096;  // std dev = 2.742, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42051049877093527;  // std dev = 0.419, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.3045205293225868;  // std dev = 0.398, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.39664958994306215;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.040436315138962606;  // std dev = 2.756, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else return -0.07877675473109157;  // std dev = 5.89e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( enzyme(A, H), interaction(D, D) )
%   | | | then return 0.3380148599464258;  // std dev = 0.674, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11034347728299422;  // std dev = 2.740, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return 0.13615801363170715;  // std dev = 0.434, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.46690801685731;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.33308976645839616;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06202201644941678;  // std dev = 1.336, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.08586012052676073;  // std dev = 1.119, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.08362771910034508;  // std dev = 2.993, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   else return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(D, G), interaction(H, D) )
%   | | | then return 0.04569579691639772;  // std dev = 1.899, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.18095351285806366;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.22769375689585222;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.037851624333607614;  // std dev = 3.120, 55.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=25 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.056778068149695604;  // std dev = 0.303, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27408535977357984;  // std dev = 0.757, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.2172442432752913;  // std dev = 0.855, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.046919079214907455;  // std dev = 2.458, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else return -0.06842697784420264;  // std dev = 5.19e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.15490334396834998;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3353051182483111;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), enzyme(G, E) )
%   | | | then return -0.29456791606357285;  // std dev = 0.808, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.003542319052665052;  // std dev = 1.394, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.30142856700495996;  // std dev = 0.720, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.050395250796789866;  // std dev = 2.256, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.037192698714497055;  // std dev = 1.215, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.14791338381698546;  // std dev = 2.973, 51.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 11.544123649597168
Refined model CLL: -0.232156


******************************************
Best model found
******************************************
Results 

CLL : -0.235707 

AUC ROC : 0.977738 

AUC PR : 0.40152 

Precision : 0.065586 

Recall : 0.91844 

F1 : 0.12243 

Total Learning Time : 8.234878301620483 

Total Inference Time : 3.546190023422241 

Total revision time: 21.714662313461304
Best scored revision CLL: -0.232156


Results 

CLL : -0.235707 

AUC ROC : 0.977738 

AUC PR : 0.40152 

Precision : 0.065586 

Recall : 0.91844 

F1 : 0.12243 

Total Learning Time : 21.731936931610107 

Total Inference Time : 3.546190023422241 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.7187323570251465
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44571955656843604;  // std dev = 0.492, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.141851064900488;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.36625711873387157;  // std dev = 4.721, 91.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=52 */
%   | else return 0.32544079220325933;  // std dev = 4.940, 98.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.88e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3270940037144543;  // std dev = 0.491, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.74e-09, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4891736633779266;  // std dev = 4.164, 120.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=99 */
%   | else return -0.23982425004132996;  // std dev = 2.115, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.10159632948783621;  // std dev = 4.08e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1343746378516028;  // std dev = 4.488, 99.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=52 */
%   | else return 0.1688268322386926;  // std dev = 4.228, 92.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=52 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926075;  // std dev = 6.84e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15637455562007105;  // std dev = 4.760, 118.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=69 */
%   | | else return 0.09908196891750709;  // std dev = 3.513, 68.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08518475138839683;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07232662883169881;  // std dev = 0.435, 199.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109166;  // std dev = 3.94e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.07877675473109168;  // std dev = 3.65e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15941301876504677;  // std dev = 4.391, 105.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=69 */
%   | else return 0.030777075675651397;  // std dev = 3.661, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333722;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.060447889140084886;  // std dev = 5.949, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.43e-09, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06915906128223762;  // std dev = 5.648, 178.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
Inference time using transfer learning 28.553208112716675
Parameter learned model CLL:-0.263973 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 73, 104], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 141, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.721, 39, 52], 'true,false': [4.94, 46, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.88e-08, 132, 0], 'false,false,false,false': [0.0, 7, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 71, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.74e-09, 144, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.164, 21, 99], 'true,false': [2.115, 47, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.58e-08, 73, 0], 'false,false,false,false': [4.08e-08, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.488, 47, 52], 'true,false': [4.228, 40, 52], 'false,true': [0.0, 0, 0], 'false,false': [6.84e-09, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.76, 49, 69], 'true,true,false': [3.513, 33, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.34e-08, 73, 0], 'false,false,false': [4.08e-08, 69, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.435, 95, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.94e-08, 75, 0], 'false,false,false': [3.65e-08, 71, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.391, 36, 69], 'true,false': [3.661, 36, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 133, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.949, 78, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 143, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.648, 74, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 117, 0]}]
{'': [0.2423313862555491, -8.188879046880587e-17], 'false': [nan, -8.188879046880587e-17]}
{'': [0.24747347498670355, 3.5143750419789125e-17], 'true': [0.24489795918367144, 0.24906289046230526], 'false': [nan, 3.5143750419789125e-17], 'false,false': [nan, 3.5143750419789125e-17], 'false,false,false': [4.710037074167331e-17, -1.982541115402065e-18]}
{'': [0.24099043789303154, 7.555684473143427e-17], 'false': [nan, 7.555684473143427e-17], 'false,false': [nan, 7.555684473143427e-17]}
{'': [0.2389408113423389, -3.7289933651531976e-17], 'true': [0.1445247004773959, 0.08605347589622109], 'false': [nan, -3.7289933651531976e-17], 'false,false': [nan, -3.7289933651531976e-17], 'false,false,false': [4.258389683493751e-17, 2.871266442996095e-17]}
{'': [0.1993754684998705, 4.6910832026415064e-17], 'true': [0.20348324333151413, 0.1943399182737325], 'false': [nan, 4.6910832026415064e-17]}
{'': [0.18893149104986723, 3.596497122025155e-17], 'true': [0.18893149104986723, nan], 'true,true': [0.19203696202064174, 0.18146017705817596], 'false': [nan, 3.596497122025155e-17], 'false,false': [2.585450879264063e-17, 2.413528314402514e-17]}
{'': [0.1890089233523158, 4.486517702252345e-17], 'true': [0.1890089233523158, nan], 'false': [nan, 4.486517702252345e-17], 'false,false': [2.0724163126336256e-17, 1.8764332810566026e-17]}
{'': [0.18966823626207108, -1.9199345538630526e-17], 'true': [0.18362140474385627, 0.1887388209940907], 'false': [nan, -1.9199345538630526e-17], 'false,false': [nan, -1.9199345538630526e-17]}
{'': [0.19446044202457843, 3.027880976250427e-17], 'true': [0.19446044202457843, nan], 'false': [nan, 3.027880976250427e-17], 'false,false': [nan, 3.027880976250427e-17]}
{'': [0.1792220191133928, -1.8029262793058098e-17], 'true': [0.1792220191133928, nan], 'false': [nan, -1.8029262793058098e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 11.931318759918213
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), enzyme(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.30457750652808263;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | | else return 0.41370449065506865;  // std dev = 4.944, 99.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=55 */
%   else return -0.14185106490048807;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), location(F, E) )
%   | | | then return 0.79920375065884;  // std dev = 0.197, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.5668907646185048;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18310923538149518;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.7321103098799092;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6021213332322917;  // std dev = 0.861, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2583335170492776;  // std dev = 5.458, 120.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=55 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839124;  // std dev = 5.58e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.6633967713706952;  // std dev = 0.473, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.039635333176509475;  // std dev = 1.770, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.2240086007898275;  // std dev = 0.153, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.23039476245449153;  // std dev = 2.669, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.5916926647492383;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24029958823102046;  // std dev = 2.863, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.6905997370351815;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3485248097483223;  // std dev = 3.237, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   else return -0.11231637819360615;  // std dev = 8.84e-09, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), phenotype(F, D) )
%   | | | then return 0.4010080499294137;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5967462745231363;  // std dev = 0.428, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.319332162832204;  // std dev = 0.207, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.24669164413543757;  // std dev = 0.220, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.2748714034483073;  // std dev = 1.225, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.11457399060731699;  // std dev = 1.603, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.3459308134670633;  // std dev = 3.757, 76.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   | | | else return 0.20328528129106999;  // std dev = 2.115, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.24318519310452208;  // std dev = 0.516, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5513183404507016;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.28310576298679585;  // std dev = 0.310, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.13558813536781508;  // std dev = 2.095, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return 0.1618317847939969;  // std dev = 1.222, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.38020040646785386;  // std dev = 1.446, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.34277446325818145;  // std dev = 0.609, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.15562306728057015;  // std dev = 4.234, 87.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=47 */
%   else return -0.09269127618926075;  // std dev = 6.04e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.2635601117826256;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3802144102510619;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31162623453520066;  // std dev = 1.354, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return -0.08982380975046729;  // std dev = 2.526, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42991716504105876;  // std dev = 1.639, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return -0.3672176922244037;  // std dev = 0.453, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.17402381633801245;  // std dev = 2.165, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return 0.05920764512628671;  // std dev = 1.945, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else return -0.08518475138839678;  // std dev = 4.84e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.23320579233534558;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.3452307244475503;  // std dev = 0.403, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.005082168164402902;  // std dev = 2.255, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.21330488586814864;  // std dev = 1.653, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.451425957946181;  // std dev = 0.450, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(A, H), phenotype(A, I) )
%   | | | then return 0.0652594448117975;  // std dev = 2.717, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.178254743203384;  // std dev = 2.491, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   else if ( interaction(A, J) )
%   | then return -0.07877675473109168;  // std dev = 4.37e-09, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.07877675473109173;  // std dev = 3.09e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(E, G), location(F, D) )
%   | | | then return 0.24722842823980343;  // std dev = 1.037, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.03487013636485909;  // std dev = 1.400, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.06710697544908843;  // std dev = 2.018, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.251365592463196;  // std dev = 0.808, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( phenotype(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.3063913653613439;  // std dev = 1.353, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.2973000998406011;  // std dev = 0.408, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.25782672988955885;  // std dev = 1.929, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.10203966643042693;  // std dev = 1.166, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07324622576333699;  // std dev = 3.36e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.15191430374754508;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.22346419221208558;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.25881149103057416;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, H) )
%   | | | then return 0.09307728653937887;  // std dev = 1.561, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.09766934901931547;  // std dev = 2.454, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.014828663023899433;  // std dev = 1.858, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.1103173095889903;  // std dev = 3.002, 60.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=38 */
%   else if ( complex(A, L) )
%   | then return -0.0684269778442027;  // std dev = 2.28e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.06842697784420268;  // std dev = 3.48e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.1334054106597779;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.16968155742005278;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.203746785436006;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, G), complex(H, I) )
%   | | | then return -0.01970294535396845;  // std dev = 2.391, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | | else return 0.1209723086641468;  // std dev = 2.063, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return -0.12437142110237072;  // std dev = 3.243, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | | else return 0.02512970976850264;  // std dev = 1.829, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
Inference time using transfer learning 16.856138944625854
Refined model CLL: -0.216925


******************************************
Best model found
******************************************
Results 

CLL : -0.22902 

AUC ROC : 0.973365 

AUC PR : 0.404984 

Precision : 0.06097 

Recall : 0.939623 

F1 : 0.114509 

Total Learning Time : 11.931318759918213 

Total Inference Time : 7.512526988983154 

Total revision time: 27.96509337425232
Best scored revision CLL: -0.216925


Results 

CLL : -0.22902 

AUC ROC : 0.973365 

AUC PR : 0.404984 

Precision : 0.06097 

Recall : 0.939623 

F1 : 0.114509 

Total Learning Time : 27.982367992401123 

Total Inference Time : 7.512526988983154 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.8330161571502686
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45945612464199354;  // std dev = 0.490, 153.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004877;  // std dev = 4.93e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4300793673161151;  // std dev = 4.300, 80.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=51 */
%   | else return 0.3542232029325535;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283911;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3131436853154054;  // std dev = 0.492, 155.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=92 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360618;  // std dev = 8.43e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6272817879951896;  // std dev = 1.398, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.0914870698422661;  // std dev = 4.013, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783637;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.1015963294878365;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20661286537914386;  // std dev = 4.118, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else return 0.16114518361083124;  // std dev = 3.451, 71.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926085;  // std dev = 6.72e-09, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12503161283248487;  // std dev = 4.935, 127.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=72 */
%   | | else return 0.044543562249640546;  // std dev = 2.705, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08518475138839685;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0942003873998634;  // std dev = 0.432, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 2.89e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.08792261690119778;  // std dev = 4.829, 123.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=72 */
%   | else return 0.015302302041734606;  // std dev = 2.667, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04725160805395238;  // std dev = 5.595, 164.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420264;  // std dev = 5.10e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06636435950687432;  // std dev = 5.351, 155.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 34.541049003601074
Parameter learned model CLL:-0.26748 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 61, 92], 'false,true': [0.0, 0, 0], 'false,false': [4.93e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.3, 29, 51], 'true,false': [4.239, 32, 41], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.45e-08, 93, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 63, 92], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.43e-09, 128, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [1.398, 2, 70], 'true,false': [4.013, 63, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 69, 0], 'false,false,false,false': [0.0, 55, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.118, 34, 51], 'true,false': [3.451, 30, 41], 'false,true': [0.0, 0, 0], 'false,false': [6.72e-09, 117, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [4.935, 55, 72], 'true,true,false': [2.705, 20, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.34e-08, 73, 0], 'false,false,false': [2.98e-08, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.432, 71, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.89e-08, 64, 0], 'false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.829, 51, 72], 'true,false': [2.667, 20, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.86e-09, 119, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.595, 72, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.1e-09, 118, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.351, 63, 92], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 115, 0]}]
{'': [0.23973685334700573, 2.258080728051166e-17], 'false': [nan, 2.258080728051166e-17]}
{'': [0.23973685334700667, 5.4601132358614255e-17], 'true': [0.2310937500000004, 0.24620003753049266], 'false': [nan, 5.4601132358614255e-17], 'false,false': [nan, 5.4601132358614255e-17], 'false,false,false': [5.968940992608368e-17, -5.742532885992189e-18]}
{'': [0.24166530801443098, 7.112366251504909e-17], 'false': [nan, 7.112366251504909e-17], 'false,false': [nan, 7.112366251504909e-17]}
{'': [0.24331443565260902, -2.865091676452017e-17], 'true': [0.02715733228384782, 0.1894869669361684], 'false': [nan, -2.865091676452017e-17], 'false,false': [nan, -2.865091676452017e-17], 'false,false,false': [0.0, -2.4223047810003414e-17]}
{'': [0.18553717559474242, 4.554761126667309e-17], 'true': [0.19947112972535053, 0.16772926225624984], 'false': [nan, 4.554761126667309e-17]}
{'': [0.1908221761993538, 3.4638958368304884e-17], 'true': [0.1908221761993538, nan], 'true,true': [0.19174807489798623, 0.18295581646352174], 'false': [nan, 3.4638958368304884e-17], 'false,false': [2.585450879264063e-17, 1.708035422500241e-17]}
{'': [0.186355005035604, 3.895519384649672e-17], 'true': [0.186355005035604, nan], 'false': [nan, 3.895519384649672e-17], 'false,false': [1.3010426069826053e-17, 0.0]}
{'': [0.1876436134275348, 2.7988815746852687e-18], 'true': [0.1895559451298139, 0.1777836453079019], 'false': [nan, 2.7988815746852687e-18], 'false,false': [nan, 2.7988815746852687e-18]}
{'': [0.1908872382857368, 2.6344275160596936e-17], 'true': [0.1908872382857368, nan], 'false': [nan, 2.6344275160596936e-17], 'false,false': [nan, 2.6344275160596936e-17]}
{'': [0.18472679616196747, -1.7860109526578604e-17], 'true': [0.18472679616196747, nan], 'false': [nan, -1.7860109526578604e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.28778862953186
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E), phenotype(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3581489350995123;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.42336632640386046;  // std dev = 5.316, 115.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=65 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7374136979345914;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4140225878276452;  // std dev = 5.351, 123.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=76 */
%   | | | else return -0.2015501907197986;  // std dev = 3.94e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.0950363167361166;  // std dev = 0.446, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(G, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5509320745542357;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6046332471411074;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.1588539093421102;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1955266866885236;  // std dev = 1.369, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.40282090527392095;  // std dev = 2.777, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.27735535846122333;  // std dev = 4.582, 91.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=49 */
%   else if ( interaction(A, K) )
%   | then if ( interaction(K, K) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.11231637819360625;  // std dev = 6.59e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.4142327026531083;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.4922184068496493;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5595291218420142;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6342051314269315;  // std dev = 0.384, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.29870391312355243;  // std dev = 0.351, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.35289346524394605;  // std dev = 2.323, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.24716781540028074;  // std dev = 3.063, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   else if ( interaction(A, K) )
%   | then return -0.10159632948783615;  // std dev = 6.59e-09, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.1015963294878362;  // std dev = 5.59e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.4270993478022045;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09187538692517505;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.28482435544389617;  // std dev = 0.824, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.480377804529064;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(A, K), location(A, L) )
%   | | | then return -0.006752876476445573;  // std dev = 2.064, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.19575897348568216;  // std dev = 1.729, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.13811458723394723;  // std dev = 3.447, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   | | | else return 0.2721034239135716;  // std dev = 2.255, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   else return -0.09269127618926085;  // std dev = 6.72e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.2518488295071125;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.3086925789042924;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.38150064058832206;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5463427898889465;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.041252567783129475;  // std dev = 2.392, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.24220661043073088;  // std dev = 1.683, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.13075406838667794;  // std dev = 3.949, 83.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=46 */
%   else if ( interaction(A, M) )
%   | then return -0.08518475138839682;  // std dev = 5.10e-09, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.08518475138839685;  // std dev = 4.47e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.2088510108558825;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22735369556988572;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.22681277663809507;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3032792543122211;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), complex(A, J) )
%   | | | then return 0.08493254980712932;  // std dev = 1.239, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.061607184633872145;  // std dev = 1.825, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.0012975155660825606;  // std dev = 1.575, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1248885498324438;  // std dev = 4.174, 94.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   else return -0.07877675473109158;  // std dev = 5.89e-09, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19934368943232758;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.12025586918335077;  // std dev = 1.278, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.15741336415590815;  // std dev = 1.097, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.18279424428985044;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23475093601355462;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.14081853541641917;  // std dev = 2.369, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | | else return 0.07385562415107129;  // std dev = 3.962, 84.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=48 */
%   else if ( interaction(A, A) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.15422079630493238;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.397886976147012;  // std dev = 0.230, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.28146651039840304;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), location(A, I) )
%   | | | then return 0.19798137769460078;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16055172949928656;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A) )
%   | | | then return -7.221629387719843E-4;  // std dev = 4.057, 97.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=46 */
%   | | | else return 0.09524882617268578;  // std dev = 2.238, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   else if ( interaction(A, K) )
%   | then return -0.06842697784420268;  // std dev = 3.09e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.0684269778442027;  // std dev = 2.28e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12896594747479465;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13798040817900223;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22875532545176624;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return 0.016290646383960217;  // std dev = 1.140, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1764583719136844;  // std dev = 1.113, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.049925444242994096;  // std dev = 2.701, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return -0.06378606907685168;  // std dev = 3.890, 73.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=34 */
%   else return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
Inference time using transfer learning 16.61210298538208
Refined model CLL: -0.231465


******************************************
Best model found
******************************************
Results 

CLL : -0.239296 

AUC ROC : 0.960118 

AUC PR : 0.178003 

Precision : 0.059192 

Recall : 0.851986 

F1 : 0.110694 

Total Learning Time : 5.28778862953186 

Total Inference Time : 3.110212564468384 

Total revision time: 13.40645432472229
Best scored revision CLL: -0.231465


Results 

CLL : -0.239296 

AUC ROC : 0.960118 

AUC PR : 0.178003 

Precision : 0.059192 

Recall : 0.851986 

F1 : 0.110694 

Total Learning Time : 13.423728942871094 

Total Inference Time : 3.110212564468384 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.6827754974365234
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4724346493852244;  // std dev = 0.487, 140.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 7.90e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3630182752267166;  // std dev = 5.509, 124.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=71 */
%   | else return 0.41543763006542606;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.24609559171035256;  // std dev = 0.500, 164.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=86 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360617;  // std dev = 8.64e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6583770432287862;  // std dev = 0.993, 72.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=71 */
%   | else return -0.12073332378683152;  // std dev = 3.408, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.14702259365608839;  // std dev = 4.657, 128.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=71 */
%   | else return 0.17100735667617203;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 4.37e-09, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.19797300472460314;  // std dev = 4.445, 120.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=78 */
%   | | else return 0.07845060755145213;  // std dev = 2.122, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06275424309197788;  // std dev = 0.426, 163.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109164;  // std dev = 4.71e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.05082967919021592;  // std dev = 5.045, 141.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=78 */
%   | else return 0.026304119258288083;  // std dev = 2.155, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 3.61e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10665161452286198;  // std dev = 4.969, 140.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420265;  // std dev = 5.02e-09, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05922334611923853;  // std dev = 5.100, 147.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 1.61e-09, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning 26.769264221191406
Parameter learned model CLL:-0.265461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.487, 54, 86], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.509, 53, 71], 'true,false': [2.372, 9, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 96, 0], 'false,false,false,false': [0.0, 21, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.5, 78, 86], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.64e-09, 121, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.993, 1, 71], 'true,false': [3.408, 56, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.77e-08, 82, 0], 'false,false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [4.657, 57, 71], 'true,false': [2.782, 16, 15], 'false,true': [0.0, 0, 0], 'false,false': [4.37e-09, 98, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [4.445, 42, 78], 'true,true,false': [2.122, 11, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 93, 0], 'false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.426, 77, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.71e-08, 83, 0], 'false,false,false': [0.0, 12, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [5.045, 63, 78], 'true,false': [2.155, 12, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 108, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [4.969, 54, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.02e-09, 110, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.1, 61, 86], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.61e-09, 114, 0]}]
{'': [0.23693877551020606, 6.055761952500853e-17], 'false': [nan, 6.055761952500853e-17]}
{'': [0.24342585829072425, -3.795634272222758e-18], 'true': [0.24473204994797174, 0.23437499999999975], 'false': [nan, -3.795634272222758e-18], 'false,false': [nan, -3.795634272222758e-18], 'false,false,false': [-1.3877787807814457e-17, -5.28677630773884e-18]}
{'': [0.24992546714386088, 7.340317518182853e-17], 'false': [nan, 7.340317518182853e-17], 'false,false': [nan, 7.340317518182853e-17]}
{'': [0.23984222341569547, -4.0742129344042444e-18], 'true': [0.013695987654320833, 0.16354471248060692], 'false': [nan, -4.0742129344042444e-18], 'false,false': [nan, -4.0742129344042444e-18], 'false,false,false': [4.06179155350667e-17, -2.05596856412066e-18]}
{'': [0.18517344158863178, 2.0391851472706958e-17], 'true': [0.16942410416871162, 0.24973985431841836], 'false': [nan, 2.0391851472706958e-17]}
{'': [0.1762512258520919, 3.358657889622322e-17], 'true': [0.1762512258520919, nan], 'true,true': [0.16468277260667794, 0.23698224604224105], 'false': [nan, 3.358657889622322e-17], 'false,false': [3.1038493161563513e-17, -3.2025664171879517e-18]}
{'': [0.18164353605906855, 3.1553707015662343e-17], 'true': [0.18164353605906855, nan], 'false': [nan, 3.1553707015662343e-17], 'false,false': [2.6752362039160398e-17, -1.1564823173178713e-18]}
{'': [0.18702590812325764, 1.3363795666784291e-17], 'true': [0.18054285048190227, 0.23220468228558017], 'false': [nan, 1.3363795666784291e-17], 'false,false': [nan, 1.3363795666784291e-17]}
{'': [0.17633286573623688, 2.5232341468753557e-17], 'true': [0.17633286573623688, nan], 'false': [nan, 2.5232341468753557e-17], 'false,false': [nan, 2.5232341468753557e-17]}
{'': [0.17697272608243236, 1.947759692324836e-18], 'true': [0.17697272608243236, nan], 'false': [nan, 1.947759692324836e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 5.393152952194214
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return 0.5618526388032159;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.39981560176617814;  // std dev = 4.228, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.2789425434002573;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.5475662267698927;  // std dev = 2.619, 37.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=28 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.21860290195470594;  // std dev = 3.566, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.4262204933567175;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( interaction(K, A) )
%   | then return -0.1254446385283911;  // std dev = 7.30e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.666096190527669;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6964107510194519;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( enzyme(A, I), interaction(G, J) )
%   | | | then return 0.2965656747583484;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.03298291670054996;  // std dev = 2.239, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12998537526702966;  // std dev = 2.552, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.32453376565177144;  // std dev = 4.042, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360642;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1123163781936062;  // std dev = 8.12e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.11787313287517177;  // std dev = 3.383, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.2723297732406882;  // std dev = 2.725, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | else if ( interaction(D, H) )
%   | | | then return -0.15275103541061508;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.037630447340364324;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6235059521731925;  // std dev = 1.018, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.29999773779134403;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.15663401992523804;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.5519515539968073;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.11416522312725925;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), interaction(D, F) )
%   | | | then return 0.37564534937570615;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.46922599498046336;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.16480613819724343;  // std dev = 1.189, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.10238905878197865;  // std dev = 2.763, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.12516700259887747;  // std dev = 2.170, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.21854986163903367;  // std dev = 3.655, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.092691276189261;  // std dev = 3.73e-09, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.4085258847057766;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07476041602716424;  // std dev = 0.728, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.5093430905792538;  // std dev = 0.869, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.04703351859137979;  // std dev = 1.094, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.3237951927119629;  // std dev = 0.174, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.10429861651951561;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.19797581458888563;  // std dev = 1.811, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.034496741177996997;  // std dev = 4.541, 100.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=46 */
%   else return -0.08518475138839679;  // std dev = 5.96e-09, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( complex(E, F), interaction(E, A) )
%   | | | then return 0.22888892710897632;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.26329559456939633;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3274100806308697;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I), complex(G, J) )
%   | | | then return 0.08964072448299937;  // std dev = 1.474, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.4117982450497816;  // std dev = 0.811, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.011088963082377841;  // std dev = 3.122, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.09498198870096909;  // std dev = 3.660, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   else if ( interaction(M, A) )
%   | then return -0.07877675473109161;  // std dev = 5.59e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.1892997304499318;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19857123998821224;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.32519603301943456;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.27563361793362756;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.08468001609608272;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3204707158531696;  // std dev = 1.080, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1887365601907663;  // std dev = 2.473, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return 0.06573500745436452;  // std dev = 3.853, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   else return -0.07324622576333706;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( interaction(A, H), interaction(D, H) )
%   | | | then return -0.13576377970855275;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.36859624591069423;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), interaction(D, D) )
%   | | | then return 0.03669832336959335;  // std dev = 0.761, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.19029765971677026;  // std dev = 2.774, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then return 0.5011568797645612;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12310242419330561;  // std dev = 2.504, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | | else return 0.003336439761567602;  // std dev = 3.506, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   else if ( phenotype(A, N) )
%   | then return -0.06842697784420268;  // std dev = 3.09e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1802536184632474;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.40891649893697546;  // std dev = 0.418, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.2603986099450293;  // std dev = 0.212, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.43257782973206377;  // std dev = 0.310, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.017052978235427917;  // std dev = 1.632, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.11913934404729698;  // std dev = 3.247, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2645081080324892;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.47852831238605836;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning 9.246229648590088
Refined model CLL: -0.279047


******************************************
Best model found
******************************************
Results 

CLL : -0.277978 

AUC ROC : 0.968226 

AUC PR : 0.111742 

Precision : 0.115243 

Recall : 0.886926 

F1 : 0.203982 

Total Learning Time : 5.393152952194214 

Total Inference Time : 2.4462802410125732 

Total revision time: 12.220185041427612
Best scored revision CLL: -0.265461


Results 

CLL : -0.277978 

AUC ROC : 0.968226 

AUC PR : 0.111742 

Precision : 0.115243 

Recall : 0.886926 

F1 : 0.203982 

Total Learning Time : 12.237459659576416 

Total Inference Time : 2.4462802410125732 

